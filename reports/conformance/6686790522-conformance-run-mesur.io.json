{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "8c7faa65-ccca-4d29-ad50-ebea7bab2d89",
        "name": "Clear Cache",
        "item": [
          {
            "id": "1d904f15-4422-41a0-a771-793dd0284569",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "63d8ceba-169c-4096-b5d9-4fd15c34febf",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f452ffd7-aa06-44b6-aea1-06825807838a"
                }
              }
            ]
          },
          {
            "id": "7fd947d2-e524-451c-ba09-064e3ba850da",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4ebd7965-a0c4-4fb8-91e2-e98d74852c29",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "78e725c2-cf1f-4b1e-8137-190e17ba5bdb"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "08df6c01-18a0-4438-9fbc-5380ba442864",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "8f73b0cb-0d5d-45ab-b3c1-3cf78e381205",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4a350692-cb3c-4a7e-9b2d-fd0569202b30",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f31c5239-d68c-4330-a57c-10103c954b2a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c81a8528-a7dd-4062-84c7-b9c352f46637"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "789c185c-7f78-4562-9100-9f5b38d33fc9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "81c21447-0341-4e29-ba68-7f49bac46d9b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e6d4c055-52eb-4944-9c75-9e299f2da8fe",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6e8874f4-6e39-4e0e-bcfc-de957a6d7118"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ad5c9a3b-924c-441b-8557-d5b4a1e3da02",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "f294207a-505a-4664-9cac-886604691612"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "64486163-e9fa-4d9d-bbd3-3646153383d1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dc7d4063-f5c7-43d5-9c89-98074b56358f"
            }
          }
        ]
      },
      {
        "id": "2fb4e5c5-e209-4e78-a930-016b26bd4367",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "af7246b0-d2e1-4ffe-bcc3-d6601ba4d303",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d9d1bd1c-d272-4f8c-8140-ab634d0814f1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "996fadd4-99a4-46e1-91e8-7fd0731c4dbb",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45748967-1f0e-4b38-9531-4b2505465c0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "302bd91c-645a-4d23-a098-d56d3259658e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "767d1ff1-c0d4-4693-8f42-4667f13c4e57",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a63cc837-e215-43a2-a60c-389f9600dd06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f311d527-870b-4c75-be05-ed49807a1f21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3652329e-8dd1-45b9-b22b-551dbf450dce",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c4b4845-c481-401b-91e5-9507f2406584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a1fc9674-4252-4d86-96cf-d447d89b072d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c5dfe969-c1b7-4067-a0d9-6b6e4bb919f7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "944b2745-d563-4451-822c-4c034e3c8551",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56139583-15eb-49ee-86d6-91ce974dc365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1033140b-cafa-4bba-bbd4-a178081dfd70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d8812ab-88a2-4385-9b88-5c6bfadacf98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fcae08e-b4a8-4bc2-ab22-870f99addeca"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ea412548-0cbd-41e3-8e4d-217530a6ef25",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5e711dcf-7b24-49ce-a827-3954727f90e5",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "34e172b5-da1b-4812-b522-4e85a2be5902",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "fb771759-3710-4e90-a450-d4c493c083d8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dea3c239-b05e-4746-8f5b-754c7d1d62f2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "9964ed8c-7c41-42da-9862-cbaa8aeeb1e7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4c58d730-197d-46cb-91a2-32a31bf4bab2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "59ac89f9-0a82-4de2-a57d-288279a12c17"
            }
          }
        ]
      },
      {
        "id": "fbb8c01e-a87e-4331-a323-e7df8f6fd67b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "c9677e30-65e4-46de-8066-bbee9641161e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8132ae23-63aa-4264-95ad-ceb01bf3b86a",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "57e54e5f-c630-4147-bfdb-8e22c1ebb534",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "807a35a9-10a7-487c-89da-f5dab39d6c07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea469d00-8076-49fd-b2c3-e1b5752bc67b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b85dd706-2157-4701-aef5-f3ede2ec216a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "50e36112-1ccf-4413-aaf1-895d529975e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09434702-ce15-45e6-906a-7c4e944bdbd9",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0023378-4303-498a-86d2-4f9d7f53b274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bda4517b-1e40-4b41-a50c-c6b188a6a73a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d6e16ad-8a62-4d2c-939a-9b46f3a539af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c87f55a-ef6f-4709-aecc-d8be76f348c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd8973ce-dac9-4e23-9fce-cebe666ad50b",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8383176-5c65-462c-a92f-8862bd38d855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73ab1ad2-e34b-46d5-aa7b-f4d213e7f734"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c06cbfd-da7d-47c2-be56-e616199a2753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51948103-a1aa-4ad9-890b-49471a0a5219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c330dc06-7d2e-4ce7-be1c-bfab039cb610",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef4db8b9-5888-4a5f-aa86-afc0d90762ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0883de64-89da-4a98-991c-3ec295a52200"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e071f2-a509-4839-8908-0390891bc23b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc56a22c-1a72-48ca-840c-6bbc2ae8e5b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aed647ed-b487-4bc9-a8de-22d6a1f3b0cc",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eff31912-2a2f-47dc-a3e5-9df7f08f22b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2498f1e-6fb8-458a-ab6a-e75ffc1f0f2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2754d74-9cd0-4420-b6e9-e11f4a796ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "63b6a68d-2fef-426d-958b-8aa09c473cca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0db5e0c3-c89e-4493-8b16-a0924e12b1c5",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a61a94f0-51a9-4bd6-9f3e-ca6c4966a1b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d67ee214-6a97-41e4-8b8e-73f0423fe9c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e97ed283-f4b3-46a1-86cf-11438f87110c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1aa9564-30f0-4639-8ad7-4f2f6769c2e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f2096e4-9845-42b6-b377-02ea486e651f",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6014390-da64-49a8-9dfe-f702208b32ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53f111fd-434a-4e4a-a7ce-299f15a4c0fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c198fd8-3e82-4471-8ed0-f00bcec28ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d8273434-0455-457d-94e3-838384b4559e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ec58cf2-1e84-4c68-a6c2-6777f014213f",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bb36c0e-bdfe-4839-8073-7be7b20c43f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a81682e-f1dc-419f-9803-8e42a113ff34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae881aff-6009-4990-a28d-914117fb6d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "16c5067f-b89f-4db2-8421-4204d2d8720e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f4886e4-bee9-4bb5-8072-7956b8bd334e",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18410be3-978d-403d-ad61-f04e12bc0e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ca58408-7274-4286-8014-5da92bd57c64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26b405b9-23eb-4dba-8419-f50c3956ab5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e8e6c7cb-0814-4d3c-a7bf-00f5766e4dfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa0cf57f-6539-4e90-9cf5-a93d62ff597f",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f3d604b-e3e8-4542-be1a-678425259c61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4030750-b165-4f16-bdaa-9f2c1ceaf9e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "911371dd-d7c2-421d-8887-92d2d8d3a04a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a20b4fc-b060-4fdc-b15b-f5730415a9e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96758dd4-b4e0-4269-8c88-44c09b166b56",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b433471d-809e-4538-912c-449ac021be77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad5538ad-d094-4882-b653-f2cbb0bbad34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5081ed3-5036-40fe-b903-77194d822124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73975764-8a20-4c3c-bd70-b9ed07772b8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "761977f6-2e8f-4497-8388-86702918ea86",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d830a426-cc72-475e-803c-5ad84578829f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d1bef1a-e0e1-4347-8c66-6d7e5ac9ab4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e512ba12-ba64-4fc9-b4ea-ded6eeeb5160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5fa8c157-b260-4da9-8829-54d787e1afda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72d77469-d171-4e6b-bf46-a0036acc000e",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b093cee2-4a00-419f-92a8-655af4bc1ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2005d2e7-bab9-4b0b-a792-560a72266c19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ea1d1e3-9f78-4c71-81d5-dd5de923f341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e06611be-b023-41b5-ac4d-93ceb5658bb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b38bb0bb-070d-431d-949c-16a8f13d5413",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01e42a63-458d-48d9-8bfe-1e607e49c5cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65e8b25f-7461-4db0-a8ed-221cccdccf97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2537904c-3b63-4c3e-907d-e23e80657512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "42027f59-af47-4be5-910c-86e7ccbde8ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3715287e-6f27-4a56-a643-8ecbefc00889",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "460b98f6-93a4-4788-864f-89670c585921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1be7399f-bc4a-458e-8a91-cb24b2dcb2f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cdefc24-aa70-46cf-b7ac-92f0d52987e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5bc74d8d-2933-412f-8ae8-a61fbbcea931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c80b2e45-bf8b-4d87-818b-47390eb28033",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5089e20c-9ef2-462a-a838-e23f9c412126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1a4292d-0ea1-4901-9b42-975ff6df4f0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee462dbe-5e50-4fd1-8f8e-70feb2e9395c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2fd7f33f-45ba-4b81-802e-14dfa9a81026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b714254-dfbd-484f-8a50-adb4e54273e4",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afa0dbb1-5b34-4eb4-b8fe-670706836dc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61bfec25-f11e-48a1-943c-4b4ee643339f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc46bc33-ed59-43f1-819b-08fcf706d148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "75b72aad-f18b-49d6-a59e-96ad34d2f619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b947629-44e7-4e19-b782-18a74e22c578",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c16a98f2-b762-4828-a890-6fd8acf46b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f27c95b5-4ccd-4bc8-b02a-2c165aad03b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1f51d1e-2771-45ce-a460-4bb264a83f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea7ee171-922e-4c49-90b6-098f3c98bc0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4cd3c32-77ab-478e-a378-0626f10f7647",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9986684-6a56-4d18-902b-c69334fc2609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0912549-3556-45db-9f10-145fe7b2b5e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee014d2a-770c-4545-a4a1-2abe650ba4ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5101d00a-9884-4b52-93fa-e7007ca0c468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fe70442-2af8-4f22-8be8-4a007fef53c2",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "551b2e0d-7cfb-4819-968b-cd5af892d607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56409c46-8e08-464c-8d42-0361e866814c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a1c37ab-cdbd-4a33-bc6a-bcdd5d1a01dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "080d334d-1141-47be-9ad0-45666466e532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcc6ebaa-1ca3-4450-9f3a-3f195375591d",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65839d9b-2327-47d0-a6cb-da384e7428aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "283844dc-d296-4072-90ac-afc77a4ec6a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93940bee-61c0-4b0e-a49e-ab8543cf81de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c69433ff-659e-43f4-983e-86fd9b10406e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed61197e-deaf-44c6-a2ca-f52415bde8e6",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d116c5e-a8e1-44f3-aa27-2c1f0fd81d50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35ba59cc-4fa5-4d57-9639-aca5ff0cc15b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4809e93e-928b-44e0-8a76-f03c251e5b87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "11044963-97b4-440b-83c9-794acb70d91d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36cc57bd-172b-4c91-b195-e093e3d46ec1",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "401f5499-b500-4254-8816-59543859c499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4ad9ff1-d349-4bd6-8b08-587a01ee507e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a02226b1-4915-4c77-af38-e0b9f31622f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b0179348-2617-4d12-ac2d-88270e94ea7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b85f7c4-b7a4-4c6d-a43a-7fea5284d2ab",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a067f3d-e452-45a6-a068-ba13a5fc9c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a456f3c-4fe2-422a-a755-428c2d87157d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97dd6f4e-3936-4b94-b325-328a1f945985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8c68746-d1ba-4491-a924-6c56e687f2d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61088044-9f86-4673-95f3-af0524866777",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce550f9-f11c-4b46-a1a8-e396c638ad0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8e8f2e9-be3f-4926-a2ea-26c7aa25d069"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1ebb040-a831-4bd8-9238-f1730eb908fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "74882f88-6f5d-4a06-8697-0538aabd0f9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "616cd8b5-6da3-4429-b333-5709e67e65f9",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5234f49c-dac3-45bb-bad1-7986540179a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10bda2fd-ea7e-4bc5-8061-673169b5db5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "179777be-6236-42b5-a915-220108a371ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b629d38a-cbc6-4441-ab8b-38a76ebf5362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4175660a-68c0-4252-82e8-cdc3cd474d47",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eae217f7-61d7-453f-9be3-3ed51f7cab7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b4fd694-634f-4230-a9e5-2433f0ac674d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f13a5d-eeae-42ec-8476-bad707f61d5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "43a2d295-18cf-4f9b-8f55-277c0e629835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e650eea-1a47-4ad1-b429-67da6ead0c69",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0588234b-18f6-49e5-8b98-7a0d056eeef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0487aee1-2c1c-40d4-894e-647d5ceeffc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cd10891-9069-4714-bf08-f5e97d14b85c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f91cda69-4bd3-41ec-bbd0-09bc380810b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e225600-7119-4bed-b02e-e23325af5377",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8082cc4e-10f8-4897-b8b8-1687e48f134b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06863761-20b0-4266-8715-3149e0b8e219"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcfaebb8-3713-4083-b2bb-ee43e06a740a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b11fe9ea-e292-4032-a8e1-13f2390958ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb30ba0a-2a6d-49da-a643-0d40fffaa58e",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed580224-429d-48d5-b6fc-01a765b3af2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24bd16a2-ae23-4136-be44-fd2f51a755b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f80fc165-c1bf-4f6a-b390-657e2cc3b88a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a27aced-11b6-45ad-acb5-9f003b6890b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ddcff5e-a644-426d-8ebb-e25275612414",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24e4788b-4e91-41b9-bff2-bbfa1fa98f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51b0bf21-2543-446b-a116-81bffe38925c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43d53f41-c02e-4a7b-90ee-7b4293578a00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e7d0bb0-6ac5-4b24-9f57-d83fa959159a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85f0ab6d-8ab3-4e06-9068-45369091bfcc",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "654bedbe-daf0-49c6-a03d-85f7bf220d6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4240b37-d3f8-4098-920f-e981a90b88bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d65eb41-1616-48a7-ac10-c27b1b6195b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3db0f79c-5bc9-414b-8058-7a5191276b70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be8fe248-d144-44f2-86ca-6396c0655283",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9164981e-e1d0-4bef-bbc5-4669a9ea3405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ab36a40-ee74-484f-9c95-9f52c40e409a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84c44c2d-d20b-4189-bb7d-bc84a04ea645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "68565f1d-0399-488f-a10f-7cd8a24205f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c40b72f-8ac8-43b3-aec1-5d778fbbb51c",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7da7704-4d65-412f-9dbb-0c83ffb7feb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba6d1917-c717-432c-aaae-34482cb8106e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a4c6111-794f-4cb7-b067-60e8c15aea0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b702645c-becc-4447-9159-fe502f572a1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c073b8fd-3adb-465f-b483-dc1d46d46aa0",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01e7b07b-e6c4-4a02-a4ad-9e589d2d0960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f881d2c-1f6b-456d-809c-36d08b2e21b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa24cfd7-576c-493b-bfb4-bf64fae6f66b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "8b9e362e-1e10-45bd-a3f1-2d10bc837b50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d22e4189-651a-4078-a7a9-ea8ee4e9f87e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f4c3d2b-6080-4bf4-b973-adc1731058ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c25c68e5-445d-4cee-b9ff-fa68eace5d08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44cd78fa-91c2-4ec6-8926-58ed3977a72f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5f31f1d5-81fa-433f-ab6e-710463275895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68543ac6-b931-4fcf-9754-6b15f482686a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cee06bd0-49bb-414d-bd40-fa8ec3a345ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59271d49-66ec-4f2e-b22a-79e8a8a66760"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "debd8e5e-24db-4771-aadd-121686796573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d74c1992-6df8-42e0-be8f-666e8dc7cb04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97231f40-0436-4143-92fc-479170e41a61",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd2bbb16-9b59-4e59-86de-61cc45d11fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3abaeec9-de7c-4e9b-b55c-7ac5c0cf58a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b78b6dd-a03f-4e04-a794-bd4df9e861b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ddb5d1f0-0970-493b-a3b9-0f148dafcebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c971647c-d421-4e1a-a372-12602304ff35",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "764fc858-84e2-4a52-8a94-1c1598be055f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5eccf04-f72c-466a-a93b-f756342d7613"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8314cd25-f1cf-47ef-bf85-bac597dbd662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7aab8857-e429-4f43-9e9b-fdfd25634750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcb51ec6-a006-46b0-b0ca-90d9133095ef",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b868573-2205-4fe5-be49-295065e879c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "487ac2d3-7a86-401a-9567-f7f426881eba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6377bce7-58d0-4311-9c1a-cad7a1b7e2b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e8bfba8-c698-4a48-85e5-e4a705130aeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e6ae9c0-75d1-43ab-ad4c-e51cb962c3bd",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e541ed85-6d50-444f-bb7a-dc707905371d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d00a777-472d-48ed-8304-e793691ec983"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f0c1aaf-01f0-4cd2-ba53-697b420ddffb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a15c8521-ea92-4f1f-b708-69e38f0d8249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e033d8cc-1c59-4310-893b-88d9977a3504",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7346f90f-9597-4371-b7a8-d5dddc56a115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "794ceb8e-5486-4a91-935c-16d2e4fd2cbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad3096a-9173-4350-a68c-75b2458319b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "0d1152d2-6726-497d-a837-9332eea87d02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8847badd-d264-46e2-8583-ce7ffd07dffd",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83bc88e7-ac41-4de5-9551-cd0bf3c1b6d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "423e7ef3-d935-47fa-9b9d-e69f8e0a727c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d9ad829-52d3-4870-9d0e-eadb6d647bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8e9b25b-ed15-4675-b11e-0b5ac1abd10b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bd3a89c-0a65-45ce-8d93-5dac62ed52c3",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d709b5df-63cc-4644-879c-676ffbcd7969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "321d84e0-41c4-49aa-9d7e-6a5e5f2f55e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75d3a64d-5db3-4e4a-bdfc-cf29c78a76c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "82308a33-514c-432e-82f0-c7cd6fdabf07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "548795b8-c2ab-4b4d-838f-4ee9cdca298f",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85eea707-9ff0-4a37-bde8-c0dacf02d56d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39cd5445-a361-4326-9c51-c811d4c0dd24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e36958dd-79b5-46be-8d37-a313d902e5d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "da25d341-919b-4e4d-a2aa-16c5e05e0e34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e89414aa-f333-4114-aa10-1b2e87bd4292",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07076c62-1434-4713-a328-9c54e64136aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2be270c2-a425-4065-b283-75aaf2428a0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7fd3b18-6e1f-41ab-92b8-848cb9eeba52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a63d8e64-ee7f-40c8-a239-10a58491186d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89a6eabc-bc9f-4ded-8cf6-22139674c7ab",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b2a11d5-5124-432c-a4f7-d29ce365d2d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc25e1e0-df5a-4b03-860d-56dd3d0bdac9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "def31507-e3a3-4077-b8a0-eada27fad42f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "83d4ebbd-227a-45c8-8313-56a6a050dc94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f02b1b3-0efd-4185-94a7-556911aae4ac",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1ec5218-dcc3-4de5-b579-e18e5fb01cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "620257a0-150f-4f26-a490-99b9049e9947"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92a0dd3b-9e7f-4949-a0e4-aa2d145b2176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd969d3d-72b1-4797-a4b7-17bff783aaab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "898621af-eef5-4f47-b5cf-596975872188",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25e8c86f-0a19-4ceb-a095-9931a235d067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e199342-8e40-4ef8-b759-7d3d28fdef96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d53138e2-b5e8-4f16-93a1-af1d1f41bac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "37bdd003-0340-42cb-8f34-58de49046ba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21d59264-480a-4fca-b5cc-e13054ee4cc7",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e73707d-11ec-403c-bb5a-ce25fdb983b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adfd61a9-2b25-4499-a075-8398162a19b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6222bcbb-b2b3-415f-900d-b3dfbd74ee61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9e212419-40da-49cf-bdee-ca819e0dc6a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e995edf-dc23-436c-bd5d-d4b24fa76b03",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8b662b7-7b26-451b-9d18-cd85c4e90124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bc7168e-1818-42bb-847d-eb92f95e8f62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5a28d60-0607-4d0e-8db5-b98975736bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3fb005a-54cb-4cab-8714-adc459f0f9ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "678fdfd5-48ee-485a-a61a-8c99c710559e",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f4919e-197f-47c8-ac74-be8bee018dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f6b9b1f-beb7-4b62-a7d9-fed298861d1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63c1d8d9-28af-4123-a918-af731b0ae2c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "71299e89-f37e-45ef-bd1f-e8b3eba0a32e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f6befe-50a7-4424-813c-526f15d19fbe",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b727f5-4942-4aa5-9beb-47ddf38afb51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4c16621-cc97-47c9-8050-d38ee21ccabf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "212f36fb-fd23-402b-a86a-8eddb0ba2561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f30e087c-be9b-4630-a61c-b566616aa559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3935956b-68e0-4a9b-ba69-5b8d15775512",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dc41e0f-dd0c-44e2-a12f-a6c33dc54202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45b63e2c-e80e-4df6-b772-eaa9c7a01724"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7da2aed3-99df-4cac-9f1f-c0ebbe700be0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dab80921-2813-497a-ade6-c1ca53848266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bcf7e49-d585-4b90-9f9a-2925a0fe40e1",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1204f741-84ba-4366-9d0a-992bd47ba753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6873f7c2-cf5d-46c5-bf28-094ca5a66e77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99d6865c-3b07-42ce-bb19-578bac59346c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "30880490-5259-4115-ae22-37d50c446d23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7ac9710-eae8-4400-9da1-169260277aff",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee72769a-d515-422b-ab98-5b84fd748f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d4ac934-cdef-4580-a35d-54c64e4efc4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a4b98cc-b29d-438b-80c2-358d68ce1143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "4e6e71c6-f143-49dd-aad0-c3115759752f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23bbfa15-2e6a-42ae-843f-b63d7b4b9eff",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a70c1d61-8da3-4cf3-b3d0-b179275c9ca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4255952-2077-4934-887d-f318147234ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14d858af-665d-4b0e-a2d1-8ee7143a73dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fabc7791-96a5-4f2a-8c0b-bb87fbe53888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3d8a27a-5c20-4768-9316-512a9cb1346b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ede35afc-ada2-4d26-99c2-9cc7e31f5f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "068f3c5b-30fd-4c68-b914-1c69da9906bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f04fe62f-48fa-4d16-88ef-e0db303af45c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c7941f7-0fb6-41dc-b7bd-4116f7c38086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "427ca202-b468-4b51-a39a-940ac830e429",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38bc561a-a3af-4c2b-a5b1-5dfa8590541a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f995e6f-b418-482f-8834-0089f0f98dc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c8cac38-ca3b-4d0f-9a08-e8f08a11f7f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0e20fef-d446-4c61-ae64-157beba68d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "425eb05a-48ff-407c-87ab-0c18252ce11e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59cb032e-2e6c-47fd-beb4-8419a5519c68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c85b751-a598-44f4-be8e-8d9f7c9542bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f23820-3e96-4e28-91aa-a569d01ba51d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "41acac62-cc9b-45d4-b33e-6fb664b723d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73ce3b15-0986-470c-9e96-19650c225ee3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bd3f760-6953-4ed7-b9da-105c0f613a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f6f080c-361d-45ea-afdd-512b4bca7d4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "444a3e57-250b-4e9d-9f75-a56811f0fbc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a481d4f9-de44-40b4-8e53-a5baf007e5a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "129cf0d7-59cd-41c8-b554-0fba4f229254",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1390178b-87e7-476a-b808-9f8077e88929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db52eb8c-a8a0-4ed3-a402-20ab9341336d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "457f9812-c087-4241-9045-2816efe88928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "5719ab25-c2cb-4360-9d1b-661874d738ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2ddb5eb-30d7-4243-b5a9-a898dfd48c69",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03875263-68c0-4f25-b9b4-42ad1b03fdab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d1f20cb-bcfc-4009-bf9f-8ecfaf57e4d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dabea80-cb92-4cb0-a7f6-33d98340b8b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "892557a9-5921-4d6a-9e01-6655a000a997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e95df90d-11e1-4d75-9fea-d30679cebba5",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc300892-e7af-4d31-9bae-d54cf67efde4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36448e76-c751-4e87-a18d-4ff2fb278da8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef559aae-7cd7-44c0-b207-20df382e21cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c41f45ef-1b47-49c1-bb79-36aecbc099e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b118bda-1221-4f7b-b2f8-268f595ef65b",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97d73ad0-d519-4cf1-ab71-78d320353167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f77095d-ca37-443c-95af-fd47c24dbb7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "307e8ed6-35a8-4cbe-ba15-ac00a690c6dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8eec4a83-7c61-4a72-a85e-fc4833ca4914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf531825-f6f1-4267-953b-894e2e231b76",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e27c5e4-645b-4daf-99db-4dc36f6bd74c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d648b16-9407-41f6-8c78-6aecb4823f0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "048f5cda-0745-4d52-8744-b5b06b84d2fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "88637777-65b2-40dd-8f99-163a5ab4e16a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf5a7856-40e7-409c-884f-dea8a7578e5d",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f69227-a003-43c5-98c7-98ecf54ab908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d322312-0876-4656-bfb2-78b241d911aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "348c4a2c-073e-40ec-806d-9206e9491f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cd84b93f-e35f-4538-8e5f-e17b886bcd94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0f5a6f5-07bd-4795-9c31-3401dee3d702",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d18093e7-84ee-4575-883b-c637aa9dd093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35884ee6-c0f8-4c77-8c99-fa00e2b1030e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b87b31f9-bb54-415d-966b-ee0516bbe34b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fd60251-9f7f-404d-8cc2-3b399acd9532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "395f7d37-f916-4b71-83e3-99b4bbb5bc9c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7df81dd-0aa6-4afb-a8d2-7943332bc530",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09b4b443-3396-49fd-8ce8-4f627672da95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0001ded0-a60f-407c-bb2e-00cdc2881e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4e562f7-052d-4930-afd8-e2bd9101a0ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9676a1ed-b968-476e-9457-550b1c15c255",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58303010-3dc4-4a22-babd-67f6bd32766a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd681295-ba0b-459c-96dd-4a3acd8aa677"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71fd4968-a68f-4297-a690-a8a0018f815f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9a27d84-87e2-4304-b06e-62139113c3b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2697fbc-2278-492d-a595-f496e41d05cd",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f235cf8-ac27-4ca4-8785-4f1b07fffe09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4befdf1-43bf-41c1-b849-c3944cd26881"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f40adf23-5b40-4cca-85ff-8d6e06d69036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "282c63f0-ab6f-4ab0-88f0-86805cc5636f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddae16ff-2dfb-476f-baa9-1a4fb5e7ec8f",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9614e1b4-4e8d-4155-8c06-3d57fb7c3cf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb969d49-6373-4551-bfe5-78a1c95f5d46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14d03d46-008f-4790-93d9-c73cd080cfd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "317ad0f4-e4d1-4a83-a803-7a8389f93525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "511dc68f-40b7-4abb-a5f1-c073b07b8284",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cdc585d-3c5f-483c-9dfa-53b604af43cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f24830b9-1a55-4998-b38e-548f7ac8bdcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ba3950f-733e-43dc-be67-32bc86e3085b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "85dedd7c-6ef6-4c77-b278-742eb0baf06d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4e5f72d-e705-498d-8325-d061642193ef",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7590499e-b7e6-4524-8581-f3165e074a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b41ae5a4-fcd8-4685-92bb-61321375e52b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5285e45-3c18-46fa-8e88-c3d85efada27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "db7b41e4-7451-459a-88fd-8f174281c560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29544494-4f4b-41c7-8e0c-3787751971d2",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23a48448-242c-482a-8417-e7655280730d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9d299c1-f6bc-4ad5-9c27-a49b0600d72a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc7f51c2-f328-4cf2-9bde-38d052723bf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "83b96290-2d7f-4dc4-8d53-bd9f75c4ff7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db499432-3a1d-440f-a19f-902798441668",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "651023d0-382c-45a8-a18e-fd00b540cb2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfaca8b1-fef7-4b88-8593-626aef5ab370"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c3b8814-6320-4490-b3c8-ab2fb383fe2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c013a0c-95e1-42e7-bd9e-694dd64e5756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adcd77f1-09cf-48c0-aa3e-828e10ac1ec4",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "341ba9f1-7cf7-4f37-81a3-c30e23736c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ec170c6-57c1-4db5-b25c-453dcf4717ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c27eaf9-e5e2-422f-bc9b-f1b73deb6634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ed010f8-ca5b-4d13-91a1-497360725468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6f36b3a-e55a-4f18-b549-022a08cabf4a",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d0b8ab-c860-4ee4-999a-40e5a21679e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c76925cb-ee5d-4a0e-8590-46061d9e1edd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0df4d40d-9a7a-4e2a-a0e9-ce24baa08db9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a59da23-4271-4024-9390-54cf495ccff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e01689c7-9ecb-49f2-83d2-388b490fc642",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "964198af-9553-4ab3-ad0e-8d39bc7bc058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88edca16-b0ff-4b7e-8a04-af233efd30c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b428434-a206-4e47-85e1-4f49d87971d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d6e0598b-35b9-4041-93a0-faa76a98a586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ef150a9-daaf-45e3-89d4-03c9c526dbdd",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eafa701-d0a8-4ed6-96d5-e44411b2bbdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c834312d-1ee7-42be-a7fa-6343b3fb671c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8085e4a-c334-4ee7-817c-635f2f404ac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3c2205c9-20b7-45bc-8ae6-96efdf978836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e402e6c1-8d8d-4f2b-a507-834a5da25875",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "420e2802-465d-449a-8ba9-36aa2cdf04f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10781c7c-9b3c-4f4c-8ad6-2143917f60a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "622c4280-4063-48b2-a38c-4302d34116e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3eced365-84fd-46eb-86cf-deec41c9f01d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "088f2ad6-844a-449f-a698-8afdb15facc4",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3223d12a-0d69-450d-90a1-0c778c2e4d92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37fff515-89fe-421c-ace1-f5610111ec52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a45278d-5a27-4905-8edf-7f7f02437ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a70fc563-6852-4139-ada2-6fe8b14e726e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90b21911-3f4a-49ca-a83e-9816b6636757",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c34ccae1-2c7e-415b-a4c2-9bc14f2c09be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6a3df38-4c75-44d8-baba-423b92162dc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c21e143-4203-41e0-b57d-77df93c65e04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd21637c-750e-4972-9979-442214d67a44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "196220a2-a40e-4ca5-b4d5-88e5ab63d23c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e21ac9d-2598-44fb-8e36-4484217a6cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67c74f95-7600-4610-87fa-fed4cf9c6a62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d8be847-ac50-40da-bcdf-57895a98b291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c1c5313-ec01-4e2f-b6d8-0e9a600c7b02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94970d34-101b-4361-b6b1-31e2289fa344",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1440a7c-9238-4217-a18a-561a5e092afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "339af40f-2caf-471a-a01b-647cf2b78d64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3364dda5-2c0b-413c-91a9-08a707426429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "92cd24fe-672b-4e4a-830b-427749ee3e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48dae6e4-2532-4734-b9a8-54534a536ed7",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ca3570e-47a9-44e6-8814-c4f4c01f074b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d25f552-6828-499a-9132-e9047f065a83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d0bb732-0090-47d7-a512-2529156fe4f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c448537-c10b-4c6c-ba55-b7ad3961af24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57695a13-bfcf-4319-a6fa-b83f20d4011b",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aab3593-9948-4b7e-bdc9-ee1d77a66e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7945dc36-a87c-496b-9eb2-c5f4530fc2c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf4f525d-9fbd-4757-8389-c325015fa151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a465826-39c6-4a4d-ba77-390c57668049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5c7a300-5a22-496d-b631-46d64508121c",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42d42c44-41ef-4164-b80e-79098e183010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a311f17-5498-4b94-b800-108af5017352"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a18d24f3-83e0-441f-b198-1b1d34d08bc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ee5b0b2-8476-4dd4-ac4d-3b9121e44d86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08fc3add-19aa-46be-a892-bdd24be4684a",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90eb59a6-aa2e-456f-b6f9-2657023ca90f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1f9a0a4-3b3b-43b0-bb31-74600164a727"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dda73d7-e8d2-43c7-8f0e-bddf58b7f2a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a82780e-8e53-4c78-8f9e-641a89e05a3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47347ef1-ce80-4ffb-a724-d7965260a51f",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd3a15ac-0646-4467-8c5f-a33afc033139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90eb168b-ff6d-4f49-be37-d7dd9545b2fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9f32e10-03ba-402a-914c-1c7a28c5edd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e59a6e5-39b3-4d9e-8305-6fe514c4d8a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae10ff70-c752-4b76-8c64-8a4194b9fa35",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e039883f-9baa-4824-8051-699abbbd1490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27a903b2-bcbb-48d7-8273-ebadedf0e66d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fc25603-2757-410a-bb0e-740f01d8ff12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "269a3d9b-394e-4511-a80b-eba48267f126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f7944a0-49ab-40b1-bb6e-297330c4fb42",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c611261d-bc3e-4ae6-b916-f8fb279964cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2377a476-6f8f-4ff7-8392-b536348be820"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2b1eeff-31f7-4041-a93c-499c1ae1f5d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3fdd6adc-f9a0-4aac-b4ed-0f802791b59c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "60e7983c-1170-4f85-a0cb-170c82f9ba12",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d9f0f1ad-d3e5-4cca-a6a6-b037db051f8d",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2c12744-85ae-4e3b-acca-522b6f0a8c93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "375ca939-dbf4-432b-be3f-18f07d567bec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "633dd3fb-7375-432f-b2c3-797ce77baf32",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "69e5588a-7b4d-4719-b687-d171c6449460"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f7b82793-5d6b-40a0-af61-616c06bebb0c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eeaef9cd-b0f1-4a04-ad16-ffbe9be66022"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9981ca79-a689-49f8-88f0-d73c7f013691",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2099658b-9da0-431d-806f-450671150235"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "65fd5bca-f736-4ce3-b24e-ed85ace235be",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0a90d6ff-6687-4823-96aa-aa93622d6854"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "aed6b740-1170-400e-82fa-11815b5b818e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "aba86ff6-cb40-4767-af6c-e9ddc6f04562"
                }
              }
            ]
          },
          {
            "id": "e0aa0f9c-4934-4bd3-9023-2bfd4b83041e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "83e15ced-1468-4540-989e-9a7e64fb53c3",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "7e4b425c-e348-4d28-b9a2-72abe58f453b",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c562c5c-5f1b-489c-96e2-36fe5a8a3085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "eed3aed2-9329-4c38-a126-5031cedc4e8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d5cbf39-9119-4462-8fa9-509dc51df838",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c402766-6a00-49de-b8cd-75e00e7955f8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7acdb497-4dca-4faa-a90c-c39e6a2f8955",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5f3b95b0-aea9-4087-90d4-e4ee7b505ba5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a90a4a4c-e697-425d-bcdf-e57007fa39e2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "43db7c06-eb88-4dfa-b194-bb53141015ff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bd6cace8-2f86-4bb1-b936-f78bb58ef0ee"
                    }
                  }
                ]
              },
              {
                "id": "b9277921-57d2-4d9f-b24b-5b8740bd6b59",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b7683d4-d868-4526-9b5b-275faa34f9ea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "757aad41-a2b0-48c4-bb7d-90270b74cdd0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e86450a9-9cca-4820-a6f8-168dbd68be96",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "59ad35d8-7ac1-471a-b779-40cc585b93fb"
                    }
                  }
                ]
              },
              {
                "id": "65351f33-4a37-4d02-80a7-5890441e7876",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "21be1fe2-6cc1-4e63-8e78-8586518731c4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9c9cc13f-de95-417a-95b7-ddec2ea6d88e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3a612b0a-8336-4768-93a8-ebaf17c00f0a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d3242086-a1b7-484f-a575-92977b73c941"
                    }
                  }
                ]
              },
              {
                "id": "bc9e303e-501a-49f0-b132-053f53898af8",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "90f4be8c-cfaa-42cd-a3ab-14c18e8b2048",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ae5ceeb8-de60-4bf6-9b5c-5f2f02458550"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8e159d60-6c1f-4af4-b4bb-6a5f8ae454c6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "e7828704-c983-4cac-8492-50a341b77ce9"
                    }
                  }
                ]
              },
              {
                "id": "4cb5809b-855e-47f1-8254-79e5e44d58ef",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7e98e8ba-f553-4561-aca5-085e2dbcbb9a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "aaf8f84e-54e9-4ea6-a8b2-4f09962cd240"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a48796fb-3a53-4875-8ae4-80a35b0078ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "9fb2dc58-667c-443e-9ffd-862ae06b267a"
                    }
                  }
                ]
              },
              {
                "id": "4fd3c9b6-ecf9-4925-9166-06be3fdacab3",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "67fa0e8f-481b-457e-9eaa-b5fce281c9bc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "50608019-d2ec-4cfa-87cc-ee4ab0317959"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "38a65ab8-5d92-4bd3-a72c-8471a901f580",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "57835722-779e-43a2-ae25-6f37d507270a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7266463c-0885-47ae-876b-68d905571459",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ce5378f3-04f3-4da6-8839-66bf03fc7036"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4b1f6c95-5bfc-4724-aa50-6d51f45ef55d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8d06dbca-0d47-4501-a290-e51e36f85335"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "afd9735d-1c97-4da7-be5c-f54980754452",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "8d7becb2-f71b-4ce6-9839-84273738b7cc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4bf93c23-28a5-4d47-a4cb-53ba5650619c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6fe1e4ed-6fe8-4d93-b649-9d64c889eb9d"
            }
          }
        ]
      },
      {
        "id": "da19e902-f407-4501-b16e-e697ccc73cb3",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "9b8fec90-3dd4-4162-942f-0a7e22207341",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b8156da6-4324-4fac-b5bf-67c7f01b75a2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4ce900c8-edce-4c32-bd07-7f33bbb19fb8",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1791c51d-a8b9-44ee-8a2b-d536e6a48180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a608962-0338-4118-ae9d-f786c0725f1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85dac88d-8aba-4ca0-a4d8-ed2d78204f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9c04072-b4c1-452c-88af-05ac31e6b021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "138c90e7-f42e-4ca2-9ec9-c4418765fc17",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d067ae6b-081d-488e-a276-0ffcb766e146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61c269ea-5ea3-448b-a600-a99968a7f3ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b74366cf-05dc-4859-9af8-05d31d4fb00b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "58edc3a7-4efd-4117-94e3-36395813ef79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b53e3fdf-cbce-48f8-b215-c71d5a5fe6c5",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d7c25a1-0eee-4432-98d1-94b98ffb76ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54d45515-0862-451d-b56a-7a7858f237a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9090612d-6420-41d8-aa3c-66528b5f33ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "345c41ae-63be-4fdb-9f6a-ccc50df8cba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7ae0fe5-297c-4e16-8ef5-d1f3d02631ab",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1af5654c-b177-497b-81e2-8f0ac0ea69c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cc62265-0857-4d4f-b1c9-f4a146aa2a44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c3b9d47-e9ac-451c-840a-e97f554c690c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8b101ab-d513-443d-80d1-a1a224fe7bb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d679f1e-0b1b-404c-9574-fce5b0b70413",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a605884-19fd-4c16-b2c2-1f86aa18b5e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d9bbce4-e3bf-449e-af35-34a929168f03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66d29221-f43c-4540-b498-328a9a7a4a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "745ad682-60aa-4c1a-ba66-691f12eeeced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38e1b52b-77a0-47b7-8ae8-e14feb6fa1e5",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00bf8d10-5eac-4297-b540-df877a3e384c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2350aa7a-afd4-4330-8f71-61a40e9244aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4422038a-468f-4c7b-9c94-5c30d2441686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca194109-4868-4313-a0f8-b9b0ceae8395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60e10efe-87f9-42ef-9f1d-c8a61e2828a4",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "094e039f-c82e-4e92-af24-f068dd4a3e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20956eba-bc90-47ab-acf1-6497611ce528"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "542be5e4-ee00-4535-ac4c-379f0886adce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6f88242-e826-4997-a80b-62e428a7645e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ac6dbfd-c239-4b5e-88d0-49bf77304bda",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "745f6f9d-4fa5-4572-8dc9-ec3e0fd3f87c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c19512aa-b176-43e5-8ba6-176f26081d35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfdbffba-39c3-4561-aba7-2f2c0c7f5e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb3f00da-038a-4616-8770-be18678a7759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a318cf4-73d7-4090-a24b-9a4d93176f73",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "234089dc-fa69-45e3-b70c-e0b29983b4c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "815838e3-447c-449f-92db-b2b62efe6b7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "787033a2-7943-4f43-9fac-fcf241e7785f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "75595aa9-d5b3-4403-80c6-0fbc875b49cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5795bea-6613-4deb-ba4a-301e55c58f6b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db9c9bd6-1ba0-4a6c-a2cb-5eafe6823d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3add331-b08b-42b9-b323-0747ece0a265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0244a7d-8905-4c65-857d-349f95e4edc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "78144be5-c77d-409f-a09e-bd421ddaa4fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b651a45-97a1-4c25-b7a8-dc0f641ceac0",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2c2617d-91a3-4bbe-b264-14c080131742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e05a5cb-e6d2-499f-8125-38bde69da33b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "265f7ed0-487b-46b8-b8d4-62dd502a91d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "366774cd-8c50-46ed-9873-4fe01a8becc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b484d05-47d8-4b53-a651-607fed068f2f",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73cc1c75-7752-4739-9f8d-5c352ada2ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19d91854-3fba-4c64-ad53-2ccec9be4f45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe7960b8-8943-4ad7-8924-5b8b78f23ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5dd2e813-61ce-4977-9733-3f7e867e622d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14b8e2d8-5512-4296-a8a4-83d84e3fabf5",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4403fc8-4e6a-4799-94d4-9d6d8fc440f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33b9b791-53c7-473a-a88c-e149259f7da4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8ef6158-dc38-440a-b740-0ec569fd51ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "55a6bd15-31c2-470b-8899-abe98e555e0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7376778-32c1-41c4-b204-c02a9ab3027d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "573dc534-fe13-4c3b-aab5-36ea2e90f092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "174a422a-3447-464b-95ff-51d0da21b132"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a317e3c2-ec0a-4cc2-9056-67db040763d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "281d018e-d4dd-49ae-bdbe-a5ab9bb990be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8d88d96-73c1-4809-8dc9-ef67240f5174",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "214819c9-b4a8-48cb-af49-bea05bc2937c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3012e1b8-c594-419c-b6b2-d22461e1ce26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71ff3459-7366-4c8f-975c-ea30fcdd6cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c8cb0a8-2220-4d6a-8715-5ec26ac5d070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26bda9fd-2df2-4218-849b-6b9d5dc12d35",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3434f5e3-116e-4904-acdd-77b0a665e362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51cb9b4f-6f81-4dd7-b24b-8c10b480e3f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dc4c3aa-9997-44db-a00c-37206668157e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "39784ca9-edab-41a4-b6ca-36776f456858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "574500cf-9ac1-4ae6-8200-e7d2f127c687",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76f6d143-3565-4baf-a476-7612a9ef9ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78aaaf04-b914-4bd3-b069-b34c0ab6b109"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4030bfab-5a91-41cd-82be-9fa6c80e76bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f25f0247-12ec-429b-bce0-2b66fbef143d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc3b7401-f2e6-4607-bdab-0330b3341698",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f62e7ab-7904-44ed-9c92-6003e9b6445e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3578b1e8-ac4e-4c6f-846c-8948cf2fffa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d132d53-568e-4242-9e05-6bba319d6843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e1244a6-a6f4-4bba-921b-21a781e45352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73954475-57bd-4acd-8804-1543a0422e0b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c2ed361-e757-45fb-bf0d-110d9be6a5fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adc22ab9-9482-4c2e-8294-39862f62303d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de9d7a78-bb75-491a-af8a-8ffaf46cceab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2afa1e1b-7f60-4df3-b614-0ce8c2138dd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35e07de2-c7c3-4501-8030-3dc9c7f07aed",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "055e9100-c2f1-47f2-8118-ac3179b1e6be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6adec38a-1085-4ae1-a84b-acacb19dc4a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c06bc75a-d6e0-458f-947a-bd02c034a888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1448d56b-1de2-4f10-be62-7134b8262147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66cf53bd-5eae-466e-adc9-5f785edb3a83",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19239b83-ac36-471b-a644-17a274b997a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09122177-b692-4402-919a-e9ff901ec7de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5329abdb-0348-4f69-97e5-b2f9f6e9643f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "972c8771-f7a8-413a-88f8-b3dba535524b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "431bcb54-6650-4a7c-8f43-c7b3a753f880",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df064227-83da-414e-bf43-3fb0420ca8bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35316f08-54ab-4262-ae3e-ee58a5fb37d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f075de1-9337-4744-af3f-856af67351f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db058ae7-d3e8-4108-b263-9ef5f9846cde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "841bcede-55fb-433b-b404-db900acf368b",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f8a44e2-147c-46c3-8356-40d34f408f98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f175ce37-4cac-47f5-9041-c63f6135b155"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d714c8e-3945-4ab9-ac8f-1282aa942bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6dca2a4-e083-409c-99d3-a3ead84f0ac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f924bba-7554-45cb-86ab-cb692eb9593d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c6feb5-d065-4512-a76c-90355722588c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e186a480-91ae-48ee-95aa-a4e548cfa9fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9af7b69b-5dfe-4593-8562-2edee3eb3899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ff4e13e-00a6-494e-8239-72037eb26c81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c94a1e5-4503-4ab9-a4b1-b3c0fe9bdf34",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bcc7c16-fc15-4d49-8db8-228051520d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eabe17b-3cac-4677-ad29-7afcdc711eb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3538d9eb-2df1-4329-96fe-b16c0887c2cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a3b5416-c10b-45b8-8d4b-9462beb358e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1339adf9-51e4-467e-98d0-c11532ded50e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8112576e-d40a-4085-bafd-caaf6b66dce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10b5bedf-d846-4c71-b9ce-e1bdc417ea99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b08f8b9-a20c-4229-a4a6-4c962f51dab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ff32000-b206-46ac-b3c5-b21665f86f26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2546969-9f73-4a44-8914-a1bac674b59b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f4bd9ea-9c62-4b90-942b-e028064fa046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6c92e1b-a022-48a6-8e1c-44574ef2e7be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "448c9e44-919c-4998-a25a-7a9a32481dd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1c4a379-ef9c-4483-80ba-fc134ab52d65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60226af8-ba3c-4deb-a291-928cb4d152c7",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec36373b-9808-4360-b8dc-7eb7af31829e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51dc5692-f586-41a3-98fc-5a95af25049c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "408898a3-0174-453c-b4b1-cd0b92098815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fc17ede-4337-4527-a78b-2fabf385a3c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f41c8c38-3922-437c-9088-876226293159",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dce28ead-b3f3-4f30-94a5-fda68e176b75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0deab67a-309a-430e-b963-46260003bcf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ca6e80c-c0a2-44ba-aded-15ce29340221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fb5e256-0d9c-43a4-87b4-c7d1be1a2229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eeb8b20-aac8-460f-ad0c-8374321dc5b6",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef53b8b3-e7c7-48fb-94d7-a1f2a70c88eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d774008b-ef1d-4979-8799-bbd15fe54406"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3f22154-941a-4ffe-9590-eb41f30d3429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27340ddd-5bc4-4ace-b4fb-77ea33cb9dbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8777242-250e-4e67-8eb2-6437b527aa94",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94d0b047-400e-466f-b7c4-b4e2a1639799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db096743-4657-41a6-9d53-2ea1bbb4095d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c0cea18-fb3a-432e-94d2-fbd8f34bb8f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "67c7c2df-c5d0-4b02-a111-d19f18acdf7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77f992ec-021c-46f7-8ac4-34ad35aa0f59",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88f9918e-d50c-44cc-8890-a902157282bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33c2fffd-01c3-42e1-8eb6-6fb59a84ddb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bba162b-21bb-4fe7-b03b-db93e0961614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9280a7f8-4967-401a-a8a6-4e2a125b8f9c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1900b93c-c77c-4f94-9269-f7ffd24472fb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b3c49a38-793b-4ba8-80bd-8bd54abadd9e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "685ddb30-d389-45d1-ad26-922a4144fdd7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4e4850be-dbb0-4b94-8bdc-601a0dfbcb01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd9b640b-d655-4996-9a6f-c134469a267a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "58eec5f2-1e2e-405e-b540-d5e6be727928"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f95b1ccd-f30d-4b60-bec7-919745c16d3c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "21f9d13d-9519-4d92-b35f-a5ac6ab95ff5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "93b2d90f-66c1-4f9a-832d-1fd085ca8fbf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "47162991-849e-487b-96c4-99fe246273a3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e59ee8ad-2c10-497f-b459-96c91c24b8cf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9eec5a1a-c0e8-49b7-8445-0c8cb3bf7149"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9b44269e-b5e6-4e72-b7c0-d5a0f1b7e2e7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ba29865b-18a5-437b-b119-e004073909b7"
            }
          }
        ]
      },
      {
        "id": "e3d267bf-ed98-4430-a380-36226954a078",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "57182cb6-228b-41dc-92d8-c6db1f20ed91",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cbf1e6b9-c2cb-43c7-82b0-eb75a9816aa2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cde27b55-1773-4652-8017-5ca56bc4438b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea861781-0e48-4433-96c1-4b7e4ace107f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e71333a-4da1-4a05-8965-7a3e9db3c22b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f3b9aed-6804-430a-91d3-c43854a3b435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "18edaa83-bab8-4018-82cf-c3b3e3732d16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30d3d930-5a59-46ee-960f-ebc42f3f3709",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffc32f5e-16cc-48b1-ad77-83fee9f44c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "647a1cc8-5eb1-4073-9cf1-14f7ecf1dd47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa190ae3-926f-445d-be10-db2a6c951f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f7fde57-cae5-4ec0-91b2-5fe5a7fd5f8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af51ae51-500d-46b0-9226-a6e5b1c59858",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72cff570-c1db-441e-8c67-b96b004256fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "834b7751-a024-4d9a-a700-378c708f5301"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0214e52d-1b95-4d83-b5cd-1dcfedcae3cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7c578fb-365c-48b3-896f-d6a9ad4fed9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ada105f0-39ed-476c-bf9f-60c04903699c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc2a3b16-ef0b-433c-948f-3cfe907fcff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a1cc997-baca-4dba-a35a-e30f5223bb09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0514d5af-2383-46a8-b5d1-805d43720be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3808787c-2f5d-4bca-be49-de8f84744795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9b9f4a6-9a24-4ea4-9fd8-554238054c17",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3a18d4a-b4bd-40d9-8323-63822086fd54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfddd46d-8f46-4c7c-9c5f-fa44d92408a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f613e182-e8e1-44f8-ab80-5eb9f02b263f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3faa230-b8f5-4374-9861-ecac3aae1223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2eae8e7-414b-4d0f-9d4d-da18683eb5b8",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec94186c-da3a-4639-97ae-21ff71acbd8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdd6145e-3564-43a1-abcc-9c41406f104c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "567af781-6b97-46d9-b4bc-167f1af05fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "765589b1-c204-4f48-b03b-3fdc0be9a256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8276f6f3-a404-46b4-b916-53fb15d46d85",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b6f4206-5854-4e02-8214-ef78f285885a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94f9303a-d8bb-45a0-ba10-f484e3ee9be1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b11464d6-41cd-48e7-8b28-9d30171d3af2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1098c4f-007d-450f-85a1-9fabc58181b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "104b6ddd-71a2-4bfd-ac3c-29649923f48c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe4ae90-bd42-4b5c-8da7-e41c88502d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "614d59d7-7f05-4a75-a2d0-e20e1e22eb5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77f730d2-5090-4dda-9262-918ea7ba9af6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d62b7e2-3be4-4cbe-83fb-cfafb52a5810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84baac8d-1551-44d1-a0b6-f7ba3c0a4c8a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc63abf-06db-451f-a441-8ca6c784beff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75ba070e-930a-4621-b669-037e8b8b5a5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ca1c570-ba96-4d89-9fa1-7c31ef94f58b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6bd9e4e-f3a9-4a8b-8689-0571c7e47024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81f4f3ee-855e-4826-b61c-83333f7ed2f8",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2004d648-d032-4cbf-ad52-ff9f7e7395c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a657bbb0-38ea-4d1e-85e6-d0dd2458dec7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4057c1d-5bda-4d50-8029-f6853ad3216b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "09995e00-75f0-4e48-8693-ebaf5c20de49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8dc0394-d893-4e96-9793-9c77ac4ed982",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c12986f-4a46-4e16-b9d1-0495aee952de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f560adf-5311-4a0e-93d2-20e85c57003d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99d901fd-029f-4f2a-a148-ee9b1535822a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "012b795f-c368-4df4-a21a-c50db06ae43f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53db2e39-e82c-4b08-ba7c-2eec6b04e7ce",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8695598d-f75f-48d9-9d6e-011f09f53e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc195d21-f02b-418d-aa51-0327c97b7ce1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3026a123-b735-4c14-a3a4-956979c74b7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8f6e03e9-b296-4bbb-b0f7-3f62e04b1384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30311959-a466-4503-a25b-e9b3fecfd536",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a4a5451-8af1-4099-9c85-edb2761ca3f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bce2119f-7c12-47b9-adaf-35866ea61357"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce3d22bf-3419-4646-a2da-20c24c139b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "11c1c5bf-61a7-4fdf-a76e-036035ad0c48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1cc54c7-5d70-4a45-9b4b-c85da5f24582",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fb6dc9f-50a9-4f09-be0c-cc935711424d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d969944f-44c0-4f5f-9ad6-b10b5cf000b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb8ee04f-277c-46f5-bda5-e23fe82d8787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f455c764-97ce-4ca8-a641-f52300fe8922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7905f839-9f17-4f97-be67-156db5058f3f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af3676a8-c6fa-48b8-b80a-18f00661d7e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8091b338-f8a0-462e-9e0c-d4943352ad4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26eb4493-c3e7-47bd-9fed-f87b1bd68271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e3968ad-6fbc-4f87-a7ee-5d072714d0f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "476d6287-235a-49e0-b199-f3f440ff0a8b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17840d8f-ca9a-410d-8cf8-f40bcf9844e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3514c8c2-b062-4afe-8109-032240041b32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cbc8753-343d-42cc-b1e9-760955815a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d3bc95b-6237-469d-8c4f-a3282dba726b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b89c7713-3471-47b1-9f92-8190e5a9ca57",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a07269b6-62d4-4f44-a217-4b19bad255d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a8179d6-8b42-44ab-a235-8e6677ec0b2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d8d2ecb-f063-4d31-8c2c-1016ece7a463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d43526b-852e-467e-9fdb-9bd6db24a020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a97e71e0-9612-466b-8135-750d198920ab",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9216c2fc-0a3b-49f8-b11f-1c5882bea499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b51d3b1-f265-46f6-97be-67a82ebef28c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2e7a271-c84a-4c2c-941f-ae66d586d79f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "37ac7c5c-f271-4bd3-b164-15703ee25b05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "289bd307-8102-496d-b7c9-1e82dc7ecaf0",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50510405-1463-4fde-b138-f35d2ef4ab6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "966dc2cd-9fed-47fa-8e50-13e81ef3fd39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ec799f9-c169-42e3-a0e2-4ab76f900458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b99782f5-803d-4cbb-87f4-1fab041e7f78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "218606db-b048-4b65-883d-50328b36a2d2",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76235622-87c5-410d-8dd2-359248c42191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82221fd4-ae73-4c75-9119-a925055f6340"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7979d245-84cc-43a3-ab3f-e8259a08ef29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f901b203-5c06-4a31-93e2-733c3bcb9da8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95bad7d8-de0e-480e-b54f-17a53c203b33",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bba951ec-3248-44f9-b1c0-3fc2f6315a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c74fa8ef-53d9-4f88-aafa-b4ac7212892f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e89a931-b4e9-4df6-9ff2-d8ec018f7ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "281dca95-dc7d-4f3b-a106-ffe9235fab43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "817f39e9-8866-4114-bbe6-1f6a9c9892c2",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ddac919-282f-4f25-91bd-44ef5d8a3f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41ca1dd3-0766-4eaf-a01c-49790e5579a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84c69a65-00c8-4ea9-868b-527c56ed55db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77bba319-fa49-4b38-87fe-66939fd828f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ced68b7b-ba5d-4641-a7c6-4dd857159b0f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8587fb00-f68c-4913-b41c-56a5afe19d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e66eb70-c5f7-447d-a3e4-f92b520ba55f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8944c9fc-dc17-4c1c-a964-c3fde1586c5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c074a52-40d5-46b1-bcc0-8b5bbbccdbf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca12d12a-62ff-46ae-b4db-d8a6ad3a0a05",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81ce8c1b-fdce-45de-84f7-133570edf553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f768635-d617-4447-b7d4-8e5c904da040"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbc18207-448e-49ef-b55f-7be868ec1a02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fdf7d67-3d19-4d1a-90cb-82a88f3e6677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20879792-4fa3-4c5c-b211-8e767a981767",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e35a2787-de20-4b08-b489-2949db147b62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23723d77-bbf8-4c9a-b3ec-fb87001d562a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c1699c-2083-4786-8230-af3d2be8ed60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87e85e32-18a4-41f8-b693-858622f0b283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "217125e2-3c5e-4054-94fc-150a8ef4c6ee",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1241784d-db6e-4a62-9a17-4b01b4031bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e64a901-bbc2-42c5-b1b1-8846c80ad29f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11c8c607-aa85-4542-b69f-545368f2be3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df6987ed-317c-4d67-833a-0148453f0a5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a8b760c-ec2b-4f5a-aef4-e03d14dcf208",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb1b40b-2227-4a71-9fcb-69ae2cd79d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32ba1a47-e133-435e-8ba6-fc352defb41e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef1bcf4c-4b11-4d77-a516-51d7ca3a982f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "08641020-03a7-4251-a940-020114ce729e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f75f71f1-b46e-48d0-a205-d6262c9d35d3",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79dc5c7e-57d1-4fa7-8cba-545963b155c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1637b42-8ae7-461d-bf80-9f9fd077e0eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f7c70c3-88d3-4891-a5df-82c887cc6d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ab85cf3-ddc7-4d03-954f-e51914bf0b3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a643704f-ea8f-41ac-8fdb-f79ee5b7e6b5",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf021805-f8a1-4f00-9c84-be5f75e283e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e945ad5-fee7-4fca-9206-ad4058144ace"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abeeaed1-183e-4053-9e4a-131ceb58a737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92cc7241-d4c5-4635-b03b-615ffa18dd53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b105ca6-d3f2-4f11-b0c9-02bafde0192e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba6713d-3fe0-496b-9daf-af2f66f4ad96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52faa2a0-1756-48c9-9e11-bc18203037ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09ac54db-b6db-4024-9b4d-efc6455e0e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "011f0001-6bb9-4eb9-845f-d5da1241164c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b964e2c5-d6bb-4e87-8a05-91b94189310e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc2852ee-a3ec-4e3e-b0ce-6244a9cdbaa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "399446a1-da77-4e05-b5c1-0b88515fcbfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eca0ba1f-6892-4348-9f86-153a0e687e90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f0dbf58-036e-4fa4-a052-a691d52983b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4300afa3-8ff5-4e71-b098-41734b4b525d",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cae0f227-87f5-41a3-929f-866d0662d002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c46c9ac-ffd5-49d8-b704-a61c57799aa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c756262-d0f0-458a-805e-0226f46dfd41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fcac9e1-6a68-4364-87d3-24160f347abc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bb0dc11-19a4-4399-815a-2aaaa78e1207",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3996b2fe-20b0-41c0-84cc-0a5e9966067a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25773c8d-e6a9-47f5-ba01-69af8d0b1c6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64910329-a5a4-448c-9b0b-fad868d1ecb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3664625e-ead4-4177-a7b1-32018f0d14bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d2a9eb8-47b1-4f07-b32d-24258697b5fe",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7899f27-ea89-4d40-849c-ea74ee3f450c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb567261-c281-49ca-8de9-97334ac7aae0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cff53c6-4f22-4b88-b330-e32c2deab856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddaa42f4-93a9-4a80-b6e2-8c47856749ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b0d5633-a715-4f8b-a257-39c51c1a8193",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56672554-1b09-4670-ad99-a6f90c5c88c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22330cea-1f26-4640-8b30-37480c89d59c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e719b8b0-0a08-4e39-ac23-741269d0c5a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a20a5d7c-190a-4f86-9aba-81cfc9f85ad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f0d458f-605f-4005-8de5-db50edcf42d6",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f540a355-4a23-4212-987a-760efd72625a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89b19549-2a0e-4bda-a6d5-2b4b58765d49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc032067-57b8-42a6-8852-073d5f817345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d8f820c-a644-4310-8330-afa65a1cc2cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1234c71-7715-478d-accb-4e3666f8f752",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4b26721-5c08-48a1-8c3a-e6f641dcb14a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "682b9b7c-3e3c-426e-a6ce-e7390e57f51c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4ac2970-74a8-4e21-bcb3-c24064235e32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59627094-77b1-4ef3-a21e-25ca199fc038"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6e78e3df-95e2-4bf3-af25-b7a77639037a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c5c811f5-8e02-47c9-aca4-9c8a89757887",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fccf76b9-3dc5-4c90-a899-66c119ec20b9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c4c4f2e1-608d-44dd-a2a2-401fc066f2c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b4fd6b6-f933-4a9c-97b6-1b0b00208c71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b180214c-20ee-4f1d-adc1-22adccd3c9d8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "58f2fec3-122d-4d27-bd08-12885b612caf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "96386e00-5e7f-42c6-95a9-ce4a0eb57be0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f8bc0dcd-097b-418b-b8cb-78ea925cb849",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "516b303e-144c-4301-8706-5bea67d59b3c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b2c0e583-df3a-409b-a940-27a786c81cfa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8e4c780c-c865-4c0e-9407-098e6e775f64"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "27dfa53c-e700-4468-b98f-e0eee58dd7cb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0904f75e-710b-4328-b363-cb261a711ac2"
            }
          }
        ]
      },
      {
        "id": "c0b963c6-32a0-49d6-bf98-1d4cc98a7250",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "352c138d-9598-469f-b90e-4c3aa25132dd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2d4c83ca-2dbb-4ac2-b853-e7b0297e1ed5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b7c3599e-4c63-40d3-9193-f59b185f2f48",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ab08181-aa92-4e8b-8dbf-d0e86c442d68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "769391fc-7da9-42c7-b33e-fb10e8185539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9b010f8-fb66-4d27-86a5-73f9d71c7dee",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e07e0172-3f36-4cb1-87d6-36496c0d0c15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad0f03e7-044a-4160-bc38-644b46f3f4dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2aa062c-9e24-410a-93d4-d65169cb49c9",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44b1ae59-f1d2-43f2-9e56-78fc8a2766ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ad33668-7e02-4670-b587-aad1a750fe3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ecca819-eff1-452e-9a4b-56a71bcf4486",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "078f862b-27fa-421f-93a6-e2aa74dd528a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c34c99b-a753-4f19-aab9-eefceeb193b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72095432-0975-4dd2-8824-6bdc29ce6673",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca9d79a5-a142-4d14-a2bb-ce455e731739",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea3609c4-d661-467c-89da-2dee36cf2525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e78048c-47aa-44f9-a8c3-b7c1cc9cb36b",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f082d903-37e4-4aef-a20d-82358ff64489",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f7a7127-e240-4f50-94d7-695d018cbd22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47bcda51-1eae-486d-a787-4bfdc8d92045",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "107e1dc4-a64f-4e8f-9064-69458a99f62b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f246efe3-fe5e-4d6b-a495-7edaf761997f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9662e7cd-02b7-4d3a-b03a-69fc81ec2f59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "153b01ae-f3b1-4a1f-8ebc-15093460e911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45bfe730-76b4-4004-a33d-209c73680ddd",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d59dc288-a507-420e-a75a-69d0a5c67bda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40090386-07c6-4a84-81e5-188b9d7f7151"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e8f7599-7956-47b4-ab97-9199bb7f1b7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e348356a-0a48-4a60-baaa-1bfc49250005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6ddcab6-64be-43a2-8c9f-e56524b7d061",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b0dc19a-38c5-4edb-9617-56a6aa3846cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a2b459d-1d62-4173-a425-f356f8c6d527"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "983623bc-c3e6-45c9-aab4-bfa650acc48f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c71675c1-86cd-4452-85f7-c020501afd87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b55166b-a031-4d9d-ade8-d2bd43597c8d",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ace00abb-15cd-4ab1-9277-4c10871d8954",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8769c1c3-7403-4253-bc57-7da97abf7afe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e63c1d37-547a-46a8-9f32-fa05bcae73ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "700044d0-a7ec-4aba-9ae3-3e259462f283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fc37d3f-82ec-48b3-82ea-df1cbd9e4e42",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e31442d-2010-431b-bd46-efd50a2ec426",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e3175d6-0137-4b00-8727-9f6ae006bf7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c386843-ae57-49a1-b71a-febd781bed2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73eb6f13-e0f2-4c54-b911-e76edea7fb3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d6fafc2-058a-488b-9bc3-189fa5d2595f",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8483d4df-fcc3-4b00-8b91-6366741fb9b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dd5ff79-125a-4190-b8bd-6d65a0d82281"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f063e95b-7354-4990-9f03-eaaf0cf6c05d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b609889-a223-494c-a281-154dcc0aee78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "add52686-c01f-479f-b415-dbcf11921723",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bf1d696-0ee8-4bea-950e-6977d56d2c86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b929ce9f-0630-4250-8704-196a7ed3b6c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a50f42e-179a-4aba-8ae2-8355efffa8d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0e78a9c-7f84-45e6-8f12-30375f990511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2038fc35-c6d0-49e7-882e-bd45fe93a1d5",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b730c694-4272-411f-a0c5-b963213e2ac0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3355d857-01b1-4069-a505-7504e438babd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e67fefbb-2505-4ce1-b43b-61eea033413b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cebeb327-1983-40ae-b8c0-c59351f4e81e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab5bc59e-53b4-4324-b0cc-c4121c1a5099",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8a4bd00-d7f7-45e6-b856-4142c95c5074",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a059ebcd-c9f0-46e8-9db8-4f940a4a0688"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "316b3c67-2d43-453c-b274-6c7e2683d5b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e0e61d9-2483-484b-b5a8-ddffeedbad09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeb27cab-f146-4eda-ace7-00349befe9cf",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fddf7c3-5b25-48f4-9227-dc7204d594da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85b348c3-1e12-4fb4-aed8-5225677fa405"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c88a3c5-346b-4548-8a63-8bdb8f561d67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60d503f5-511f-4715-bf86-92a770f53d55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca719fe3-8c9c-46e5-b05c-5c1e0c6aa47b",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a8e077b-3139-4cbd-a416-2993beb83472",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8bc6bca-80f7-4898-a46f-74c3a650a29a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31a01c9d-780b-4da4-bf35-a15ad9cc3d5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1be9c8b0-9c29-48cc-9adf-e7d74380c615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "433e34fa-6800-48e7-8a31-38eb6dda9d87",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca0c9d4c-027e-4d21-8fdc-d03858531e73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d52890d5-487c-452c-b4d2-5f1d21487477"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d10ee1-894d-4577-8af5-7f1edb5905b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71f8d8a2-5875-4319-86d8-67a0a4e1597a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "146c447a-eccf-4640-b349-06f20e2669f2",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "143189ed-87aa-4f83-978a-6a65699e85ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "857cbd73-f08f-4c7e-823e-041840c705e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72c8cce4-48c0-4479-afab-0e21f404179c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3f97a4b-b605-4ebe-9323-3dbe0207490c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f3d186d-11b3-46da-912b-96545b378dfa",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60c4ef2c-3052-4acf-98a4-847aa0d7a8d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2599ac3c-ea63-4bff-8a97-37e5af4f1e1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "096329b7-1048-4bd9-949f-950ec5169115",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6506721-aabb-44ba-a880-29bac626cc93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06748e02-0d08-4652-8386-7a1109daaa81",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdfc130c-0332-4e86-9065-79b53aab842d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c950cef-d80a-4e2e-a6aa-177cba1e51bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00353afe-0439-4ce3-a442-c3e78631f526",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "546fc21a-6d8e-47b0-a4c2-afc5cb866e00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fa0ea4b-9c92-4112-a3df-003c74533dfc",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ab4f0ac-5828-40e5-a20f-c4a3241c0654",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c620281-f5f4-4d21-b36c-2b00a268ce12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27b1488e-7fed-47a6-8da5-33ae37a99674",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0478768-b221-4953-b70c-f96dcb275953"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46640735-465e-4a07-99c6-cd56c0d2b9ff",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c2fb14-a5c3-4b44-9487-6670512cc900",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12ab4ced-fed6-4c39-bb9a-66fbec9fa938"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "424daca1-d8a7-4f7f-9715-115c1f5c8457",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "612934b0-14f8-4926-9f36-f325b3b0af0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af64d5de-7572-48d3-8b4c-efb9fb8bef74",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0427187-9042-4837-aeef-7d6a8dd41b89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "480dc756-f25f-4d13-946c-f3ee46a068cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "113dac1f-a607-4065-8291-4ed080ba351e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3884e3d-96b2-4429-8f72-7a6c98e972ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2790ec4d-eb61-4df1-a2ca-ff93903fe0bc",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fdfaf29-74d7-44df-82bf-f3b3e0a8ebdb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cea04cb-0717-48df-bcbc-3ff8fe58916f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6adbbd88-3718-49ab-83fe-5074b93f1998",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bb0ad01-f04a-418d-b80a-0c8215b4ec0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c46b932a-d7b0-467f-a871-e2eb40755e30",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d50c30e0-5a14-485c-a198-21bdbc47b27d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e55c702f-8f2b-4d0a-a10f-896805a644cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34f38e0c-66b4-4aaf-9da1-9334712eb368",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca3ebbe7-4e3b-4608-b0bd-d5f000c4eda0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51eaf9ab-8f93-4262-875b-e93ef2455fff",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb5aed45-aaed-4b19-8bfe-3b381de1cee1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fa444a3-19cc-4b87-b0f4-cbe1326202fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70890074-3dc0-4496-9777-9cc934c6933d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f93ac27a-3868-4f5c-bdea-8fc0ae9a3efa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f426b490-4e88-42c4-a299-16b7ac4e6a84",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47d8355b-8270-4e90-8081-377585a8b7f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52f6c938-e012-4479-bf62-de218b0730d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea23219a-2f0a-49b9-841c-94f0343e3396",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bae3412-ce5f-4d02-863a-7a3bb7319287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb10973a-687a-4469-9a62-c6babe16e8e3",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64863314-e120-468a-accb-e439af933864",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "766ced71-9713-4f5a-aa54-69a7ee129c54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac0e4766-bb9f-4a44-83a8-f0b234f98a75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13e033b5-5984-4ad6-b46f-c343cf81571b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c15b566b-eb00-408d-8913-5f99a84e7fd7",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9334946e-64b8-46bf-83aa-930964509222",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "109dafb1-eaaa-4948-b6ee-8db28dde165c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e1ada9a-f460-45a7-b752-d17f4ce31a32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea113b85-bb80-448f-8613-d1aaf3962d6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e08a9f5-7f2b-48ca-ae1a-09fc7bcf5892",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3324f10-526c-4e9c-8035-c77a36112746",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "028b917b-298d-4736-99eb-d3b118c7f65a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81cf1d5e-5887-4b28-9d7d-0c1468e43617",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3588377b-66f6-40fd-8fc5-0c72780e7587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "997d7bc9-3516-41e7-b3de-660e15f0e413",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "623e4460-ef64-4ec1-984d-4ed5b31ad5be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd2bef58-4bd7-4a52-9d27-e30d9b7cfbb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82ba3c57-8d77-488b-929c-300d2c29f90b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20e12cb1-ec8c-47ff-bb89-829d79bd82b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c03b2a24-4fbc-4a87-89bc-3546e8fa52ca",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96269792-529a-4033-a216-733c1e3fd5fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd31857b-9940-4171-826f-f2cfd5fe6744"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55094376-989a-4d69-afc6-302a181f68a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "246a29c6-1aa5-4934-b415-65e28f514c32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a33d2bce-97a1-48c3-907e-835eeba8ee63",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d74b5f1c-c002-4191-a45c-a6c4d2bbf19e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea0b558e-8223-4b30-91a5-bf31a03dbb4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d30e0e94-d650-45c4-895a-f2801a116ab0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "995dd923-5f01-4bf1-aff4-34e2b147c69e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c187bd9-b8a8-4cba-8e2a-2b4e9a4e7c4d",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25174fb2-3c8a-425b-afcd-2f05b331cf73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b095e112-533d-465a-b31d-d94acbc233f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b758dd19-4d08-4903-9387-9120ed28dbb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "975053db-696e-4877-8def-873ae5abaace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74c93a55-82f6-4e5b-a1c4-9602103b7deb",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4dcc378-31f1-48c7-bcfa-e3577d6ace3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67edd75e-0469-46b7-8c8f-97130fc2c940"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea8d7ecc-b614-4beb-a6c6-f91cd03d7499",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf39b9cc-fdfd-4367-a57f-de3ca21a51d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44f66164-2096-4609-b761-d225b0ff479c",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9ef4a55-e9dc-4fff-b246-707af4f6a874",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c5bf069-5092-43a3-802b-4747aadb4ca9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c31deb7-4b66-4749-ae77-145df2c87abd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a6e9749-c2fd-474e-be58-8cb538a51217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7822b9d9-5597-4138-bff0-b8025ca4aff8",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5374ea0b-a141-45c5-bb36-077eaa5f8bff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ebfb27e-b79c-444d-8a89-1ca5c293f9b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d1d8479-71f2-4c8e-b941-854732d48e6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c04bb38b-be49-4437-9402-127d335c34f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9398791f-d0a4-42a5-ba67-6f7c219f8fcf",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5591a092-0023-422a-b532-d759ebbf05a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f879fa7-ad8f-43ee-b226-13b83a180cc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "472377a6-a998-41e0-8121-cbe0fa54ff90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea4e3159-a4aa-4337-bb2c-e22cc3148d23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca5db5c3-f0c7-4e0c-a9c5-9ef0cdabf0be",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "470de64f-1002-4fdd-9327-cc33ca9dfed3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "525eff38-0328-4bd9-a52d-a56aa4ca2dbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1c4f103-01ff-4f26-8257-93c21d85e91b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b4b0ae5-a6ca-4f35-af50-2fd45578ffd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f4b11dd-c6d8-4577-b0d5-afffcb9de62f",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bb035e0-d7fb-4df2-a7c2-1ae368fbf14a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdb01056-4ae3-4e51-b8a2-655badb84d1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1b5ed28-e8ad-4605-b5d2-6413e10c8857",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8c25749-4d65-437d-b518-e200f09f41d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d66f44ba-c74b-446e-984e-405283981699",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27b96a1c-08d7-4289-91fd-ec00945b7cfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "078a675d-f090-4106-b1b8-ff4a56b5d7d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec21be3-e79c-47d3-a10e-2e3c6344926d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c78d4d7-e858-42ef-8577-6e6567801f2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61193d99-1bbd-4688-90b6-c6fde23e5d7e",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69f2a151-c472-473e-b221-34c4ad320a93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81a12f66-1baa-4cd5-beb4-45766f7265e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3035ce4-b333-41a2-9fd7-d2d5ef2f25a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38bee349-8404-425b-b92b-98712cf31222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e53facc4-f67c-4ce7-92ae-edc4ff43e78d",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "500f909d-665f-43b5-8bee-a92df86752e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e06b6f88-8b1e-44ce-b9ad-5457b594c323"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d07ca0fa-36e3-4c08-ad7c-01f68c702746",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b944891-e515-4ccb-867b-488749ae349f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f68bc34e-25a3-4246-a39f-fa06850f3378",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb2deca3-5d2a-406a-840c-852339bdf86d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c24d4ecb-22ae-482f-80df-973a06bad8f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ab8b992-2507-4e37-b548-57e13d4fb175",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f279c571-d1b6-4b8c-92fa-aae9ab430d55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b44cd818-2a62-42ad-b85f-0d901bb6905d",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "292f019d-1bb1-4842-9581-a974ec92e516",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad13d9f5-e4fb-4266-b9b3-cbdc88e8e3fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22210d20-b9ac-46f1-a660-aa26607beb33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4a1bb40-a2fc-477e-b1b5-2c6ab5da7d86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a78fc82-95eb-4c3c-8e63-cb1ac68d8126",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a87a6b63-3c1a-405e-8e9b-62d61a7c14d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e45b5e30-ff3b-4bbf-ba0f-7c9f9c6a8802"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c75dec6d-ad94-44f8-9d87-2a6ffec5f334",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f04d7af8-c61c-4ab8-aea2-fde2a70ac38e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28660612-aab7-4de1-a21d-c1a27ba6aa9a",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "340af235-a906-4805-b4a7-6d8dd01b6e18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "134c7dd0-8e7d-4490-bcbf-b41f790aae4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c1f83cc-8155-4735-bce9-d22aab03ddec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8870d0a-c8d4-4682-9028-315cb2d932bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf42ee6e-7cbe-4b71-a693-1e84389c353d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e57309a-fdaa-4641-93db-7fca0fc3e72c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fd70d01-204f-4661-9cb6-08ea991e7dbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b203580b-0b3c-4c45-ac45-914f6afde7d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec24a6f0-1d8c-4d96-84d8-274b5f339817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9301012-4e1e-4f2e-9525-5e1f307a29cc",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a01c74d0-2eb4-4d89-9c0f-8cbfe31a7fe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efa784c0-141a-4b89-bf4b-b0eb659175a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a560a069-e4d8-401b-80da-2b86d168a43c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20668648-3aff-4ccd-ae2f-b3b0dba23b59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "686071df-db85-4706-99ff-255c9e922137",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed4bb3cc-e185-4e76-a0b8-c2b9b6de919e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0796a7b6-2ff0-4b09-b859-465e97bb6280"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "339575f8-b06f-4c75-8535-90616a1754fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00583a23-c59d-4b19-9527-6da9b768b996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53ea7f84-784c-4b5a-872d-aae80d6387d1",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ec1a350-d10d-46e0-8a67-2058a4ce9cc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3297055b-c31c-4646-8286-9c2ae15bb6d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "987fd06f-9d36-4a57-9043-08e9902ff7ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46185a36-88d0-468b-b082-08f5d80dc7d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2eb5602-2e13-4727-b7ae-581a9152f361",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3acefb9a-f64d-4967-84dc-746413a30543",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e29751e-cd59-4eb3-89df-d526717109a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30524250-7d06-482d-9b1a-39dc2c34c65a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e91f834-406c-4d7d-a4ac-a3bb960c616e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71ba23ec-1c78-45a6-a495-1261d99b3661",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9729c2e-b358-4f11-9e2e-842397f223cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1475955-2397-45f5-90f9-6808cda62a4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1ad896f-51d4-4fb9-992b-d6f43492da5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "623fcca4-83d3-434d-b277-509542e07ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20349199-1606-4fc8-9c45-7afad1c6242a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af7bec38-8445-4c3f-b84a-5bc4d9c2bf6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5c3572c-aa16-45f6-9365-655ad41a5d3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae222c05-43cd-4850-b712-755960598d6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72f02c45-0882-4a28-8eb8-79e1073e2a34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fce8364-a7fd-4339-a6b4-fc8563d811c3",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab8ebe50-12e5-4ff2-a798-553ffcc55cf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "982ec0fe-50eb-4dc2-ba2e-1351e056f1d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8d62a4b-d8f1-4037-90b9-133afbc159e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7493fe8-8efa-464d-811b-ade9acadbcd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7b42a86-7f1c-443a-8314-17b27549c268",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cacb0060-7bb9-4c2a-8ffa-205a8c0fcd6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7f709ef-bdbf-4232-b70f-1cb6872ff9e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bff0f5c8-3685-4877-87aa-1c4183617d0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "164871ef-8d3f-4f9a-a28f-829c4701704e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07e3cba6-1b91-413b-98d2-c1a1a94357cb",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5f3cdd1-4e34-456d-bef0-81ef923c1958",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7220fa19-4820-4257-aa2f-677067e98c25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5b71081-5063-4bde-b504-b6ec55c4692a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03ff828a-707c-428a-bfb0-032008e3f533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d301c32-9cbb-4d12-af8a-dcafc5d6f96b",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0870bdc-ff55-4594-9c33-e893588c9b73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "903977c5-3e3c-42e7-afff-17e13375058b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f586d52d-c710-4d3d-9b40-a4d68f21ac9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48ba342a-f518-4322-900e-08f1a3c12303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32266ed3-8a0c-4568-8ddd-10326e1e8cac",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c18405a-c478-488c-9b9f-7deae3a87ac9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00d6d3fb-7d46-48d8-a653-0a9aad0f250b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "027cdd9f-1178-42ae-bc3f-a82eb820719b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4691fa29-82bc-4552-b7bf-3aa9eeae3da9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c20b14c1-d442-4d92-8af4-a483b2e9f8c0",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aa8215e-1410-4801-90c8-435f5b1bf80f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13835f1c-0a41-40da-9022-68c8f8c0f576"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ece73669-1b81-4610-b33b-ba40f807add6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "972f0095-5bd1-48be-8a2f-f72efbecd5fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "975e923a-427a-4903-a6e4-d4332890ed30",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b69ecd8c-2c7e-4e7f-abd9-53b1f5cda88b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "911b4853-1f74-44f9-8f7a-6e9c5a4e64be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4e3b792-f4f7-487e-a106-5a58901ab0c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fdb0ba3-129a-49f9-9410-3fa03d4a4f02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55d2b960-683b-4265-bcbf-0e101a64abad",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2efbfd00-8b1d-45d6-aaa3-8cc4d05d4c37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bd63dc5-c6aa-48a5-a782-1c7d72d13d6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22e2528c-407f-415e-a54a-3a786e0eb67c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee11cec4-af2a-4751-b7c5-1fca238f8e7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "258f2ab1-cdcf-48b2-8c20-32edacd60534",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73ccf350-22c7-47d3-8539-8f5b18db1b4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "593bf2f4-dfc0-4f1e-95c6-166b4b156cb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4b0dca6-d37f-4c3f-86c0-85dd42b81409",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "531235ef-98c4-4816-940b-ecec54aa6547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4302e44a-6313-409a-9a9e-473335f7a019",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a529fc32-a1b0-46d2-9fe1-840d00663c9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02aba691-3180-407a-ba3e-45956bd4785a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3333b61c-ad68-42d8-a174-b667e4e61c6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "778a8508-cb46-4d0e-be4b-e3bc210a9e97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8847f71-00d5-4c72-b7e9-3a0c5d8f5ae0",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c7f1589-be32-4dd7-8eba-f49b0aff0416",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "685ea39e-6de9-461a-8747-de4bef3c5654"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f40ede3-fdad-4aa4-a22c-d9f0635d8518",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c52f0132-2169-4a5c-864a-612c195b7044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d437a02-3c97-4559-bb61-eecc3af98483",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a661622-8460-4d0b-a060-c7f7178aa33c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "036b77be-3145-401c-8acf-90ee018373e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0b36ab4-8630-4c6d-a39a-9873c28576c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d649ab8f-785d-4b8c-94e7-e62b692b36c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49cc3e82-501e-47e9-9e61-7bcfa60e94ef",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3c97945-5719-4694-87bc-fe6a408d76b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2570c8a-30b6-421b-9b5c-9c27948a6cd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0ae8c92-fd84-41e8-bf42-351e10e7a8c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "489b759c-53ff-43fa-9d73-957f04ba12ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b104674-8428-41d9-837f-f70b9c3fa69e",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2113df67-56a1-4484-af5f-01fdd057b405",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0cecd9f-92b4-402a-9282-3cf4491cb3ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2fdbb66-dcd3-47ab-8442-ef68b84801ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf12533f-aaa9-44f7-b09b-270ca42bd072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57357eb9-712b-41e1-b734-8f9b50228f61",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6771b87-c4da-46c2-9f7e-a33c97b147ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfd6e299-3f46-4f11-b70b-2ad8a08734ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb6709f3-e7ba-4225-96d0-ac3b409e48af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7efa544-744c-4a56-bcf5-a4990054dcea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eddb3f20-77af-4b2d-912d-18678cd78839",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0a91e17-5f95-4f6d-b7f7-2faa8a8d7c31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bd1a392-122a-4bba-a4a3-c88448340135"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74efd10b-63be-4c81-b9a0-47e7f4b5a6fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75d60bad-12a5-4613-8a06-eca5259155bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f957889f-fd2e-4f70-b220-56ad17bbec94",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04a6cd2d-9237-44d0-b1a4-2e0b711cdc49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11b33d67-386b-4bc7-b107-abcb7e69f454"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82b223c2-bd27-4e2c-ac1e-4a0d6d4fa312",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab182a24-fc16-4220-9eca-b24fe921ab0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54aa27cf-e485-413e-a8bd-09234475fd79",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bea95ba5-d0f4-45ce-b1f4-f08b1f7f7821",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50e16853-414b-40af-9ae1-9064a95acd4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbcc8aa4-a991-45c9-80a1-b2247aa51f4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "391e05f8-1104-4d2f-99a9-b6bb7b1fe861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "028fcf67-3a7a-4feb-8347-c2f3ecb79a48",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad721081-c1fc-453f-bb36-4dba95e986ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e2119f0-70ff-4f22-8fa4-8d0a0b68e176"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c68b261c-48ae-4735-a430-ab9cf899f4e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d43a5c09-145d-486e-8f35-cf9d7a12df82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85c0c0cf-5320-4ba8-8753-ebdf2560ad33",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58075761-307b-4f35-bc97-4c6ac7972fe3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34d76e84-cc0b-4f43-a0f4-980dee2cd6c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c91206c-05c8-414d-adaa-ee9c7db65163",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50303b23-9a07-4545-b9e0-8f5a0eb98af7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27083f62-6676-4da4-9e13-ac44d9c4397b",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f327a9e-58f5-467c-8cd1-49dc0ec94425",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "daa84238-b145-4fb3-b37e-85ea6dac5ed6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2700cd8c-ee78-44cf-b907-de3c3dee0c99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b92abce-373e-484d-be7e-b43e24709721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa846b84-3864-4004-94c2-17f2ecbddcf4",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bcb2c5e-0038-4f8c-99de-ab7fe1349d47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58f60400-901c-4eb0-9637-5c95b83ab372"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a7200a8-f050-4c8d-9764-3c98fabc3752",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d3a7ee6-c5fa-4b36-987d-f1eaa56cd65e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31297f61-69f1-4cee-bd97-f7bd1bfdd87a",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a9dcdd8-80b3-41fd-97b3-353f3f1de136",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eef47a53-ad88-4f7e-9ffa-15de9b04638f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbbf285a-250b-4b0b-a174-b3fd4781cf15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35a52a5d-8fd8-4de0-a351-5504f698edd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f294c040-13ee-44ad-a87a-4507265910cd",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab2b7c14-e5a8-4809-8c79-57a51611e210",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa72bb19-6c3d-4b97-aa16-00d2f0eed24f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "027e33ff-4739-4f36-8a41-9c5ea2f5799a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7860af87-ffda-4f23-9fbd-98887a6c9b14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d34cd1a8-c4af-464e-aafa-92112ba68cd2",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6465b53c-9a8f-4fbe-a480-325b3b3f789e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c826528-9dab-420a-82ca-608d6286e862"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d818215-8cd9-440d-8742-96d429270c22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a6d5afb-f6f2-4a1c-a677-4ac701e44bee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92835860-13ff-48cd-bdfd-18ea69ed2827",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f0c2fc-acd9-4301-96ef-f62bf75d4e05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "028db4ab-7833-436b-9c90-b4489ac8ba0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "296f5c86-621c-4acd-8cbf-9b2903e0be05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "595fe5cb-3d1a-4ef2-a4ca-83c38d31a65d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a3e34c2-145f-4cda-ab88-645707e6cc3b",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1973fe3-b418-4882-916c-34425291d224",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90c44486-b8f1-4d1b-892f-18c2eca3c8da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e624211-645f-4a89-8467-ca6fe21bbafc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c02b754-dba6-4f93-b16f-9dd0665fb31d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a9b0958-88cf-405d-bf13-1a06f77cef8a",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58f3cf4d-d8cb-48a3-b607-b16ba1264e8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f143cf2e-7be2-4334-979d-dd84d6eb8431"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c23d1cd3-bb1a-4094-a49c-dca2532888b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aa04943-d5b3-4739-bd67-6d02ebcefd32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad03273b-d5c5-4c5e-b239-58be55c4024b",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abcd1b1b-0d77-457d-8bec-0eea09c47098",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28be264d-aff9-4c06-9559-c8d29ed4779b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cc4737a-bb0b-452a-96c8-e48ab052ecde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91b54e9a-1015-4f9f-8753-f5412f852b47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "298c4fb0-a011-452d-9a8c-ac1afdda9d54",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52791998-4a9b-4e11-9a90-26e85225d64c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e70d736e-979e-4c2e-aa64-4d1b7c682430"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a2f7d1b-3785-448e-88da-b2ecce2cb81d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "841222b1-2c17-4b29-b390-99c2e03861b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7fdba5a-8270-4b6b-843e-dbf529e9811f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77e3456b-ad9d-41c3-bbe4-d822eba68eed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23b6aa16-b74d-45b5-9ab4-74d9b57c8aba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f466aa1-9594-44da-8a33-e18f7a8d5646",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d62a78e6-d441-465a-b8e4-595520613802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47d661c7-19d9-4096-bf97-ff1e00c222cb",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a2a544b-259a-45b0-8b82-12213b54f9cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb5e03a3-bb08-4a8b-a52d-fd4224180511"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4762ccb8-91d0-4fd8-8cbc-c2156ff0a6e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caa7c0b6-eb7b-4478-b287-59e5fa513ede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "574de3e8-51ac-48b0-b57c-b537a5984ddb",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a82caae-e8fc-447f-a214-f1e9503395f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97da9754-6459-48d6-8c95-a37c0228c772"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "931f015d-4426-411c-9fb0-933bc7c2d700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a028142-9a4d-4e56-af65-04e2f8b5ebc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e7275d7-4e5c-4e10-9ae2-d8b734ed8546",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d6322a8-ca14-43f2-9b4b-31a16b646c8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eeeef1d4-bad1-45a5-98f3-508a359375c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58eab9d9-c859-4f23-aa32-5a9bfc84ffc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdf422f6-6b4a-4b81-9ded-e6002ecf1582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "229760cc-e9eb-4c2d-8fa7-ddea428a6506",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "583f8991-a2b8-4012-9e79-fa644b23f5d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e768da85-1790-422b-b0e2-0a4060990df5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "565b7340-2f34-422d-8075-9ccf13e9395b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bfa1e68-bdc6-4cd0-b10f-9ad22dfabbbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51f53113-a24e-48ac-bea0-35d5592b944d",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eac20dcc-e3d0-4b77-8797-1277a22a3d63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2730d7a-4e02-493a-84b7-458644f1b2ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45708e84-606e-4733-95dd-11ef2a4a7dd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb728ca2-6c61-4cef-a872-93eade021b32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b7f4345-104d-4326-b461-bcf77f5a4fbe",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a4dcb75-5425-4694-9e1a-118faa63f7a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "850912a7-9354-4ae9-afef-1791642fc6d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "096c758b-57f9-4b0e-b2ed-9777767d92d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe9ba6db-db3c-4fb6-b777-cf2fcde821ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62b11da4-619e-4ee4-ae3f-c439697634f7",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa235daa-8fd7-4f1d-8f1a-081ee151883d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "847a6c39-ff50-457c-8120-6e1c33d02c82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48355922-eae7-4790-80d8-4cceec48c2bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d073ab9-2324-4328-b2bf-90e2765988f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4cd2c12-1a38-4807-b96a-0e2f30122299",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "279981be-60f9-43a5-9a59-66ef67390161",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be5e0bdb-8781-446c-b3d2-8baddcc33d82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f9f5d48-d58d-46fe-8c73-fb3eeb381fad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a76b6481-1ba2-4f94-b2df-0ff0a10cf017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a2fe651-4cb3-4b4a-936f-c925cca41b1f",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73950578-b4ab-4e12-b8ba-341504d94676",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d306e218-24ff-4bf3-9803-ba7d403372f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02112030-40ae-419f-b847-50beabfeb924",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "090b16b3-261f-45ea-8585-ddb144535091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "417b4584-50c5-4ea2-9abf-8642391137f7",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47ef8142-5e9c-41da-9981-ecd9140eb453",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b2e887d-1dce-48ab-9269-3c98694e827f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81291318-c5b5-4b3d-9a95-70e447212cbe",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aeee192-b88b-43e8-8850-93f2d2f306bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ddc4b10-04cb-4c6e-9bf3-cbf91daaec33",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9109a89-560a-4bd1-bc44-f16dba3bf29a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06a06d66-d9d1-496b-852c-2c1cab10222d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50dd5d9c-c3ed-4e28-9990-8d48c95bc26c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1139cda2-b422-4943-8f39-d4483b3ed4ea"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "33a46865-b69d-4ef2-b15b-4491a2996591",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3d873370-0283-4fb9-8293-cea486381069"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0823dcd5-1145-474c-89e2-4aedb15c48f1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d6f5dab4-7b38-4a55-9a00-4676d6e4369a"
                    }
                  }
                ]
              },
              {
                "id": "532e8c0e-2055-4c86-9f88-ab042950953d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "988fa6af-237b-490c-b467-283cd1427108",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0134a4bd-78f0-44e2-8244-99151bcf5120",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c5495ba8-84d6-4b21-b959-889095a9fca4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bff5e8a6-b722-4e7d-9280-3138e0e8f127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bd7e1050-8122-4d44-9b8f-ff349af3f617"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e2017fcf-90c9-4e20-9985-69616bcff74a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1181391d-0558-4788-8297-df01fc67ff9f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c683da06-0ea4-4e69-b576-1f75e23cdc72",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7be01907-1d68-4f10-a165-f4be029c0c8f"
                    }
                  }
                ]
              },
              {
                "id": "5d204590-9be6-44d8-81ca-d88915e0bf24",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "1ee062e9-f22a-4bcd-80b7-cee403f6943c",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a4db405-b9b3-4b0c-aed8-a3b6729fa213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "71dd084f-0914-4363-b9f9-0cc1412545fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6a64484-5d87-4b36-958b-16777e7b5f42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e59319c-1230-4ef1-876a-86ea6181e4ea"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c4f208ff-e5f1-4466-bac6-4e893a94b57e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8eed0aec-60fd-46db-a3a8-517718205622",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce910f58-c0ff-4837-a3a0-fc00ce1166f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3575f09f-3745-4eda-a8fe-98daff758998"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8ebf6c18-d347-4e1d-b366-80cf4f0481ee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f1467af7-65e3-4576-8648-b8ba2b072716"
                    }
                  }
                ]
              },
              {
                "id": "e3390076-5ab9-4275-938d-8bc1a33b36a8",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4dfd53bd-dd50-4072-8c70-0d30b3b4fd71",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e4b81ae8-7efd-4bdb-8cd3-5bae0e0490c6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "433df219-df33-4638-9c7f-7ccfd68d63e6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db762e58-6f1e-43ac-9539-76d961e8c762"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a8d1bbc9-88e5-43c3-8451-102dc1990c23",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "d1a4ef8d-5211-4d5c-b48b-2c82628e302c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bb008da5-d877-4e05-8c35-c2a3fdbb2f36",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "643c498f-d144-4519-b9bf-f2c89858b72c"
            }
          }
        ]
      },
      {
        "id": "6b27c56e-1be2-4a05-acc8-8712c9d06665",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "2d331ccf-29a7-4ea1-bd4c-ebd0c83e4ad2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e34c4947-f9d6-4021-91a4-103555e3cb50",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ad6cb093-6789-4e7b-b42e-fae1ec09600f",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "661110e1-9b76-44e3-b48d-45a51281fa5d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "4184225a-5d35-4a33-b6ea-17f886dcb9e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df9ce5d4-8d0e-4ec8-8bb0-14e186c061c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2c85d2c1-139d-41ce-abaf-8cccca15c54f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "21a6ddfa-d38e-4fd2-ad1a-160e0dfd5251",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "efc790c0-61e3-47e8-a564-7d98e0231cf4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e1147124-bfa9-45fc-a938-119f84b9f1e2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8ab08daf-f821-4a2b-b258-9dc48748e098"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "66c839af-81ad-46d8-873f-5cd187e175db",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "d42e64fa-f1a9-4c5c-8ce8-e93728bbbcad"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a493567b-3e1e-41e0-83af-57e13568e802",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6ef53e48-f5cf-4a68-b438-0b74a3f98853"
            }
          }
        ]
      },
      {
        "id": "ef06a38b-ee9f-4335-b949-93f578bdda4b",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "9b119340-adda-4ff6-86dc-662c43600da4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e3dcc2d5-c11e-4807-b390-c9d4158f85a0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ff1d77bc-6498-4dd5-8c47-39c8448292b1",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd04913b-894b-4257-87ff-01bfdab5462a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4df7508d-ca0d-41d3-9b56-c4af49d707f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cbfda96-a9b0-4e8f-b9e4-1121f318fc30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a75d6154-4504-4b23-b3d6-effb04dc78a5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2d4ff41f-2643-4383-b00d-8aa7a3648428",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b2e83c54-ced4-470a-a028-7d765d9ce679"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6754eb9-7ab3-4ce9-b95b-5e277c197df9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7724c44f-7685-4586-9a71-d0bfd01fa950"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cda2c012-d95d-4b09-a2ad-cf9a6834ff73",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e6653d65-0efe-4c3b-b264-9b1948ca3be3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d319995d-730d-42ca-aa05-08cd6e969e54",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d8bb5240-0b99-4217-9d42-39da728d1eae"
            }
          }
        ]
      },
      {
        "id": "65f5611e-b8e6-42ce-b434-67fe9e17f981",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "0d8ec11e-5b39-40cc-99de-1894208c7f38",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e6a9f492-91a6-4e07-96d1-93831a5d9d2c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9529f4b1-a95c-45c1-95f8-441114212c4c",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39b2daf6-4830-4d84-a939-222415e6d253",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "70430bf6-61b8-4e05-8331-676b43742b5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ab29984-5960-4be1-973c-275258a284ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "992e9e21-dec0-4732-b062-0cc3cb81d0f3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "47d547af-48a9-4ecc-a9a6-6d6d7278485e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d420bd1c-dd22-4c1a-a640-986c16f6215b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "863797b9-a94c-4e27-b5e5-cccddb691475",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "03bb932c-e511-43c1-971a-6fdfdcfc3499"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "04e3fd8d-b443-4581-8b9c-2cac387e4a42",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "59b2d36b-3a49-455e-a431-71f0fe4458fc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ad25dc3d-b02d-4dc5-86d2-02f6ab13ff79",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6b1aba58-7f34-4d3d-9893-39c3b49cbc21"
            }
          }
        ]
      },
      {
        "id": "620426b8-46ae-4c5e-88a7-b983e307fa77",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9134acbd-2ed3-47d5-953d-a87399531a42",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0018bef0-7fb6-4be1-a03f-1aa9c3b7ddcf",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "7a3157af-559d-4597-9c6a-bfd68d97c3c2",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d4301de8-2df0-4fc1-8a3d-27b6b852060e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e3b33351-8b62-41e6-bdb1-2a779c9eb11d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 13.508771929824563,
      "responseMin": 8,
      "responseMax": 246,
      "responseSd": 22.893439500783945,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1698626065348,
      "completed": 1698626080584
    },
    "executions": [
      {
        "id": "1d904f15-4422-41a0-a771-793dd0284569",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "8c03ff42-27f7-434b-a2c4-4e2fb1b175eb",
          "httpRequestId": "096d4a6d-be1e-43db-b3e9-b9336815cfa4"
        },
        "item": {
          "id": "1d904f15-4422-41a0-a771-793dd0284569",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "e11ef823-5f6b-4a31-b1fd-9512d3668210",
          "status": "OK",
          "code": 200,
          "responseTime": 63,
          "responseSize": 0
        }
      },
      {
        "id": "7fd947d2-e524-451c-ba09-064e3ba850da",
        "cursor": {
          "ref": "7e0cecad-d709-4ee7-8e88-4ee41aaccde4",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "5d96d6db-394a-4adb-893d-38f37e389112"
        },
        "item": {
          "id": "7fd947d2-e524-451c-ba09-064e3ba850da",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "bcb2b54e-2609-4557-a570-ae604075388a",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "4a350692-cb3c-4a7e-9b2d-fd0569202b30",
        "cursor": {
          "ref": "95c01563-1675-4a40-bed6-ec057d621756",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e78c8c87-cff3-4529-a126-56c897744387"
        },
        "item": {
          "id": "4a350692-cb3c-4a7e-9b2d-fd0569202b30",
          "name": "did_json"
        },
        "response": {
          "id": "8f1de150-5a72-4c9b-9a56-df7a7d5e6739",
          "status": "OK",
          "code": 200,
          "responseTime": 169,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "996fadd4-99a4-46e1-91e8-7fd0731c4dbb",
        "cursor": {
          "ref": "e6f62267-fc52-43f6-979c-33acade27303",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "7bf1e58f-e139-4412-aeaa-2bd01380a711"
        },
        "item": {
          "id": "996fadd4-99a4-46e1-91e8-7fd0731c4dbb",
          "name": "did:invalid"
        },
        "response": {
          "id": "32b9fe1a-b7cf-4cd8-b2cf-0f930d70102c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "996fadd4-99a4-46e1-91e8-7fd0731c4dbb",
        "cursor": {
          "ref": "e6f62267-fc52-43f6-979c-33acade27303",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "7bf1e58f-e139-4412-aeaa-2bd01380a711"
        },
        "item": {
          "id": "996fadd4-99a4-46e1-91e8-7fd0731c4dbb",
          "name": "did:invalid"
        },
        "response": {
          "id": "32b9fe1a-b7cf-4cd8-b2cf-0f930d70102c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "767d1ff1-c0d4-4693-8f42-4667f13c4e57",
        "cursor": {
          "ref": "dea6b000-71b9-4de7-9580-a753154bb883",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "49461cd7-4294-451c-a7dd-bc8b4ebdebf8"
        },
        "item": {
          "id": "767d1ff1-c0d4-4693-8f42-4667f13c4e57",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "1d1e48b0-6b7e-49a7-929d-0546b8d04895",
          "status": "Not Found",
          "code": 404,
          "responseTime": 47,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3652329e-8dd1-45b9-b22b-551dbf450dce",
        "cursor": {
          "ref": "4fd94b17-c222-4018-96db-18dbf6e44a9f",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "128a52f9-1783-48d7-ba71-8f01ff28c8d5"
        },
        "item": {
          "id": "3652329e-8dd1-45b9-b22b-551dbf450dce",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "5c38014d-05d1-4557-b7ce-9ec92cd86177",
          "status": "Not Found",
          "code": 404,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "944b2745-d563-4451-822c-4c034e3c8551",
        "cursor": {
          "ref": "134c2a4c-0c39-4e96-a960-50ef070c4bbb",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "01e4cb5c-5a44-4be6-9d6f-479b7bfdaba9"
        },
        "item": {
          "id": "944b2745-d563-4451-822c-4c034e3c8551",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "28774393-e3db-4881-aeb8-17eb6af48c2f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e711dcf-7b24-49ce-a827-3954727f90e5",
        "cursor": {
          "ref": "e1a6d88b-907f-4171-9c6c-0fd4d09192ed",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "31e2d875-4ea4-4ebc-ba21-41ba8e185d59"
        },
        "item": {
          "id": "5e711dcf-7b24-49ce-a827-3954727f90e5",
          "name": "identifiers"
        },
        "response": {
          "id": "0a977085-cac5-4ea9-aa34-b9a7996e52be",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57e54e5f-c630-4147-bfdb-8e22c1ebb534",
        "cursor": {
          "ref": "3d2bd063-90de-470b-be85-89a904ccec71",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "e8e57a37-0915-485e-836b-4e6daed5c961"
        },
        "item": {
          "id": "57e54e5f-c630-4147-bfdb-8e22c1ebb534",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "eebec28b-3303-414a-a101-4b1fc96049b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09434702-ce15-45e6-906a-7c4e944bdbd9",
        "cursor": {
          "ref": "74a0302d-ae70-4210-b4f2-4135bfb2e845",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "f4f58c0e-f401-4ec0-869e-3ec6ff392810"
        },
        "item": {
          "id": "09434702-ce15-45e6-906a-7c4e944bdbd9",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "0d11e9bc-fa8a-499b-b247-36657c0baab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd8973ce-dac9-4e23-9fce-cebe666ad50b",
        "cursor": {
          "ref": "93c328b1-49f6-48f6-a9fb-6cbe4bf4e238",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a58e1656-ba8d-437c-8f4a-38dc36254d48"
        },
        "item": {
          "id": "fd8973ce-dac9-4e23-9fce-cebe666ad50b",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "3def6536-2d00-4bf6-bbb9-253875a67ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c330dc06-7d2e-4ce7-be1c-bfab039cb610",
        "cursor": {
          "ref": "2f84548e-f8e6-492d-b431-09aa45a427e9",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "b7842eb4-3b6a-4491-933b-52f194b45bd9"
        },
        "item": {
          "id": "c330dc06-7d2e-4ce7-be1c-bfab039cb610",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "0aa6c9a6-8f32-4a74-ba92-a9444de37048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aed647ed-b487-4bc9-a8de-22d6a1f3b0cc",
        "cursor": {
          "ref": "c69fcfbb-2cf2-4b1e-8fe2-bb4d4cece260",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "44437fe6-8a19-46d4-b465-7b6fc6fd2940"
        },
        "item": {
          "id": "aed647ed-b487-4bc9-a8de-22d6a1f3b0cc",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "ed4b7575-063b-4f96-b6ef-ea0c8bc892fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0db5e0c3-c89e-4493-8b16-a0924e12b1c5",
        "cursor": {
          "ref": "5fe2dc9b-de5a-449a-bea4-d837c797c8a3",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "f42a82f9-03ee-42cf-8c11-57deccb8d681"
        },
        "item": {
          "id": "0db5e0c3-c89e-4493-8b16-a0924e12b1c5",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d836b8e9-70fc-44d0-88f4-0b20d25ce529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f2096e4-9845-42b6-b377-02ea486e651f",
        "cursor": {
          "ref": "2bbe5f6d-d9c1-4087-8900-258243c8c2ca",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e726cd35-f739-45f5-b976-ec5029f10ed8"
        },
        "item": {
          "id": "6f2096e4-9845-42b6-b377-02ea486e651f",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "e52d567a-b77e-4240-9456-cc99c004d3b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ec58cf2-1e84-4c68-a6c2-6777f014213f",
        "cursor": {
          "ref": "89cf17b7-17cd-472f-8166-1cb1dc7f3928",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "8ce0786a-bc4f-4e68-944c-543de9ece263"
        },
        "item": {
          "id": "1ec58cf2-1e84-4c68-a6c2-6777f014213f",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "320a7b85-443f-4478-8f43-6a02977931c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f4886e4-bee9-4bb5-8072-7956b8bd334e",
        "cursor": {
          "ref": "3f88a42a-3142-43c1-915c-993c5e1b41f2",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "0bbae7d5-7a00-4f71-9469-609f045a541c"
        },
        "item": {
          "id": "5f4886e4-bee9-4bb5-8072-7956b8bd334e",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "885e88a2-7407-4e92-867e-650441da6068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa0cf57f-6539-4e90-9cf5-a93d62ff597f",
        "cursor": {
          "ref": "8e381bb1-19ae-4772-bd5b-7171463bd91b",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "811c64cb-01bf-4410-9508-100e4a4cf09a"
        },
        "item": {
          "id": "fa0cf57f-6539-4e90-9cf5-a93d62ff597f",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "05a17496-1ca5-430c-bdaa-a8b85a406f2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96758dd4-b4e0-4269-8c88-44c09b166b56",
        "cursor": {
          "ref": "7a6e23f3-7c5f-44c4-9d5d-654e19ab0123",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "de3540e2-9b50-457d-aa19-ff75b3221b65"
        },
        "item": {
          "id": "96758dd4-b4e0-4269-8c88-44c09b166b56",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "6121eaf1-4380-4f96-90a4-5face7250a71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "761977f6-2e8f-4497-8388-86702918ea86",
        "cursor": {
          "ref": "e1a3ced7-46e2-454a-b6ac-527f3227c07a",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "deb31f73-3f30-47ef-919c-d47562847363"
        },
        "item": {
          "id": "761977f6-2e8f-4497-8388-86702918ea86",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "677a818d-87c9-4a0d-91b2-efb044daad82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72d77469-d171-4e6b-bf46-a0036acc000e",
        "cursor": {
          "ref": "9be90069-49ba-4f0b-86dd-0358e3743416",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "342c2166-8259-4cb6-8669-19217f443b23"
        },
        "item": {
          "id": "72d77469-d171-4e6b-bf46-a0036acc000e",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "55d2accc-2b1e-49c7-871d-c375b220cbeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b38bb0bb-070d-431d-949c-16a8f13d5413",
        "cursor": {
          "ref": "e5b0d393-e0cd-4b12-b13f-d430449a4e83",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "866b8676-e447-4fc0-bb36-683d44739eb7"
        },
        "item": {
          "id": "b38bb0bb-070d-431d-949c-16a8f13d5413",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "fb2d6f16-21c1-463f-8aaa-6a801fb11d9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3715287e-6f27-4a56-a643-8ecbefc00889",
        "cursor": {
          "ref": "e98e847a-d613-4918-9b7b-a48f32c46fd0",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "67348e15-0ce5-4524-a227-70c32f46459c"
        },
        "item": {
          "id": "3715287e-6f27-4a56-a643-8ecbefc00889",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "e4021ff4-3bc7-4d7b-999d-19b177e91b61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c80b2e45-bf8b-4d87-818b-47390eb28033",
        "cursor": {
          "ref": "2eae843d-f7bd-4f7b-bbe3-2aee89bedfa1",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "dc9e16d1-a7c8-48c8-a2bc-82ec41760869"
        },
        "item": {
          "id": "c80b2e45-bf8b-4d87-818b-47390eb28033",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "8daf43c1-65b4-4369-9a14-47160cbf2400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b714254-dfbd-484f-8a50-adb4e54273e4",
        "cursor": {
          "ref": "a833e5c2-3280-47e8-a333-c307827a8a8a",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "9585205c-cdca-451f-ae1f-33c8cd5c6d13"
        },
        "item": {
          "id": "9b714254-dfbd-484f-8a50-adb4e54273e4",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "4251687e-20dd-4468-96e4-12992d84b5c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b947629-44e7-4e19-b782-18a74e22c578",
        "cursor": {
          "ref": "8ce96eb7-817c-4dda-b138-954e0b9d4468",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "728245a9-b89e-4f61-b7e8-603f852a379c"
        },
        "item": {
          "id": "6b947629-44e7-4e19-b782-18a74e22c578",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "23d5b514-8c0f-4726-8f92-3f4fb9740da2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4cd3c32-77ab-478e-a378-0626f10f7647",
        "cursor": {
          "ref": "e127f023-ec86-406e-933a-b8e2729b5bab",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "40d7e92f-e8b2-4727-9080-3e35f6ac360f"
        },
        "item": {
          "id": "b4cd3c32-77ab-478e-a378-0626f10f7647",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "d8d0db92-515d-4d7f-9468-cb473eb77d94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fe70442-2af8-4f22-8be8-4a007fef53c2",
        "cursor": {
          "ref": "7c52ccb0-2726-435b-b89f-027bbd43cb3f",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "ea8f9991-e1c1-466b-bd65-4d4f3a4c3cd2"
        },
        "item": {
          "id": "8fe70442-2af8-4f22-8be8-4a007fef53c2",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "a945846b-b2fc-4aa9-bd9b-c836b623e7ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcc6ebaa-1ca3-4450-9f3a-3f195375591d",
        "cursor": {
          "ref": "cdaa9945-456f-4e2f-9744-34d9a2431344",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "da7bdea9-5490-463b-a325-dbeec18659c3"
        },
        "item": {
          "id": "bcc6ebaa-1ca3-4450-9f3a-3f195375591d",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "1bc60697-e893-41e7-90ff-147d85bf81cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed61197e-deaf-44c6-a2ca-f52415bde8e6",
        "cursor": {
          "ref": "13acae7b-0998-4b9e-87cc-67043d77ff09",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "d24853ed-0668-4342-a99c-f02f545125a3"
        },
        "item": {
          "id": "ed61197e-deaf-44c6-a2ca-f52415bde8e6",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "15cd01d2-5c42-468f-9ee3-405ae4e1b635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36cc57bd-172b-4c91-b195-e093e3d46ec1",
        "cursor": {
          "ref": "60358bc2-4c22-4ae3-b636-24ed1884ac00",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "2b4af339-3b37-4580-8884-997032edbdff"
        },
        "item": {
          "id": "36cc57bd-172b-4c91-b195-e093e3d46ec1",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "bf5a7488-0441-47cd-99ae-a1a3a5475ca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b85f7c4-b7a4-4c6d-a43a-7fea5284d2ab",
        "cursor": {
          "ref": "dd219a8e-9aeb-4399-aa02-19b4f7dfa489",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "fabc3285-41f7-4b83-ab5b-cbc44e15b5d1"
        },
        "item": {
          "id": "3b85f7c4-b7a4-4c6d-a43a-7fea5284d2ab",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e16ac66f-b2e3-4290-b1a5-063a35fa7d68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61088044-9f86-4673-95f3-af0524866777",
        "cursor": {
          "ref": "ea4afdf1-f44e-4157-ae4a-2db9fd652034",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "23aaa66a-f9be-4375-94e2-ef199a107b51"
        },
        "item": {
          "id": "61088044-9f86-4673-95f3-af0524866777",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "ca1ce731-a851-40e1-97fa-e9ee7d4b724a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "616cd8b5-6da3-4429-b333-5709e67e65f9",
        "cursor": {
          "ref": "cdc2b5b4-313d-4a79-a245-407cd3897fd3",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "355679e0-f0a6-4868-8099-04014579e1a4"
        },
        "item": {
          "id": "616cd8b5-6da3-4429-b333-5709e67e65f9",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "654f9abd-963e-4822-bab8-c4da78903dcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4175660a-68c0-4252-82e8-cdc3cd474d47",
        "cursor": {
          "ref": "30132a51-c1c1-480a-add7-bc8436bfc359",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "803deb07-b626-4829-9b81-7824fba455ae"
        },
        "item": {
          "id": "4175660a-68c0-4252-82e8-cdc3cd474d47",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "d1481c2d-8b84-479c-8edf-3ed92d58fe7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e650eea-1a47-4ad1-b429-67da6ead0c69",
        "cursor": {
          "ref": "9d6a8db2-b87f-4722-a98c-17379a1a6120",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "23bedd61-40af-4755-bad0-d03b8bd4be1e"
        },
        "item": {
          "id": "1e650eea-1a47-4ad1-b429-67da6ead0c69",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "0066d452-6b61-4507-8155-6ba4c8258857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e225600-7119-4bed-b02e-e23325af5377",
        "cursor": {
          "ref": "7eab014b-7c11-437f-ab36-28638b95859c",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "23d16509-1f84-4bf4-85d9-cefb459b1a4b"
        },
        "item": {
          "id": "3e225600-7119-4bed-b02e-e23325af5377",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "2697bb24-9367-403a-b7ee-236be3c8d2ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb30ba0a-2a6d-49da-a643-0d40fffaa58e",
        "cursor": {
          "ref": "45677ea2-baa0-4a96-8c23-7d61db98c233",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "46faa368-3075-4037-bc01-aa505af64dba"
        },
        "item": {
          "id": "bb30ba0a-2a6d-49da-a643-0d40fffaa58e",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "978762df-4bd0-402d-81d2-c82b52d296ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ddcff5e-a644-426d-8ebb-e25275612414",
        "cursor": {
          "ref": "31f7c2cd-cb64-4641-9f89-b73382a6dd48",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5659c690-5e2d-4b60-baf5-211b078a0637"
        },
        "item": {
          "id": "9ddcff5e-a644-426d-8ebb-e25275612414",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "54624d00-6946-493c-a02a-60d13c62ae92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85f0ab6d-8ab3-4e06-9068-45369091bfcc",
        "cursor": {
          "ref": "41b296be-71c1-4a05-9e1f-9e4d275a807b",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "76940f01-be8f-4bba-bc63-2158318dbe6c"
        },
        "item": {
          "id": "85f0ab6d-8ab3-4e06-9068-45369091bfcc",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "49e70346-4ed0-4c8e-af10-f88ff6ee031f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be8fe248-d144-44f2-86ca-6396c0655283",
        "cursor": {
          "ref": "e9eba037-3742-462f-95e9-b4f46a4cf6ce",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "8cea2fd8-3b01-43b5-a683-2d61d2838585"
        },
        "item": {
          "id": "be8fe248-d144-44f2-86ca-6396c0655283",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "1b0822f5-6e71-4744-bb67-c68b3b89fbbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c40b72f-8ac8-43b3-aec1-5d778fbbb51c",
        "cursor": {
          "ref": "d2305380-119c-4755-9cc9-f47a38da4a3c",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "44f4b9af-36d5-48fc-ba10-fb68ca181dfd"
        },
        "item": {
          "id": "4c40b72f-8ac8-43b3-aec1-5d778fbbb51c",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "0dcdf9c8-3ab7-4b03-8a09-761a46be07ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c073b8fd-3adb-465f-b483-dc1d46d46aa0",
        "cursor": {
          "ref": "ec1f4788-a118-47e5-9417-a85f3396031d",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "fcf1779f-2c1a-4195-a7a9-266883329f1b"
        },
        "item": {
          "id": "c073b8fd-3adb-465f-b483-dc1d46d46aa0",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "3ea69265-215a-4589-8a15-038966efb9b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d22e4189-651a-4078-a7a9-ea8ee4e9f87e",
        "cursor": {
          "ref": "bd87a2a4-1042-4eae-b7bd-46d2dea78708",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "a8118d3c-6276-4cbf-934a-af230943ca27"
        },
        "item": {
          "id": "d22e4189-651a-4078-a7a9-ea8ee4e9f87e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "01dd17db-5142-4433-9bbf-053d48472010",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 33,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68543ac6-b931-4fcf-9754-6b15f482686a",
        "cursor": {
          "ref": "535d2c2c-01d0-4df0-a299-b330aad9064b",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "35e4a1a4-89dc-4caa-8503-47c349258e1d"
        },
        "item": {
          "id": "68543ac6-b931-4fcf-9754-6b15f482686a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "43549b17-6d45-4406-ad0b-7cd12f7debe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97231f40-0436-4143-92fc-479170e41a61",
        "cursor": {
          "ref": "3eb1cf82-b620-4647-995c-ec0dd1fcaf9c",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "29bbae0d-8bd8-448f-8af0-55bdcf45c4aa"
        },
        "item": {
          "id": "97231f40-0436-4143-92fc-479170e41a61",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "af3c116c-5652-4f22-a4d8-b848b5cac38c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c971647c-d421-4e1a-a372-12602304ff35",
        "cursor": {
          "ref": "5b3b915a-5566-4bf6-aeab-1610efa679da",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "685a89c6-7300-49af-8167-8c6a45161235"
        },
        "item": {
          "id": "c971647c-d421-4e1a-a372-12602304ff35",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "15b1bada-7e1d-403e-8469-bdc2e9eacaff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcb51ec6-a006-46b0-b0ca-90d9133095ef",
        "cursor": {
          "ref": "3313387e-875d-4e66-b4bb-8d7a7f506a76",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "edb4437d-c802-4cd6-a44f-989cd4309a1a"
        },
        "item": {
          "id": "dcb51ec6-a006-46b0-b0ca-90d9133095ef",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "b466ee33-a6c9-430a-be1e-866e7650f185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e6ae9c0-75d1-43ab-ad4c-e51cb962c3bd",
        "cursor": {
          "ref": "ea50fc72-5f3c-4e6c-a7c7-eff239845565",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "b66afa1b-9d3b-4e4e-8173-22d03665d0d3"
        },
        "item": {
          "id": "2e6ae9c0-75d1-43ab-ad4c-e51cb962c3bd",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "92856c13-af93-4384-81e2-5b03ce0de4a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e033d8cc-1c59-4310-893b-88d9977a3504",
        "cursor": {
          "ref": "556caf33-ef59-45d5-a9b4-62ef299e2c2e",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "b6ca771e-1ec0-4595-ae87-1d02ef238126"
        },
        "item": {
          "id": "e033d8cc-1c59-4310-893b-88d9977a3504",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "46c96033-dd68-455c-b692-c44f7ca48360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8847badd-d264-46e2-8583-ce7ffd07dffd",
        "cursor": {
          "ref": "3e92f7d7-35ee-4877-9f6d-1feb50b55a2e",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "9606cab3-858e-4d42-b42a-0de45fb0d0e5"
        },
        "item": {
          "id": "8847badd-d264-46e2-8583-ce7ffd07dffd",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "77dc50e2-1fec-499a-a771-65b2049cb18f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 23,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bd3a89c-0a65-45ce-8d93-5dac62ed52c3",
        "cursor": {
          "ref": "2f8112c3-e906-4abb-864e-a9665df5c993",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "87d8611d-3dbd-41e6-8fc1-872d3e47f9a8"
        },
        "item": {
          "id": "4bd3a89c-0a65-45ce-8d93-5dac62ed52c3",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e178beef-6c25-4f94-a76c-d38be419a2d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "548795b8-c2ab-4b4d-838f-4ee9cdca298f",
        "cursor": {
          "ref": "0d2dad90-d36d-45e7-835c-6efffadabf0f",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "08537184-95c0-4c77-9452-c7707304f3e0"
        },
        "item": {
          "id": "548795b8-c2ab-4b4d-838f-4ee9cdca298f",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "300d16a9-1ba7-49cb-b6f0-524432500d94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e89414aa-f333-4114-aa10-1b2e87bd4292",
        "cursor": {
          "ref": "05150619-6407-4a9e-944a-7f6c75c3c9b3",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "21e8458c-4ded-4a3e-afc1-74d29b748265"
        },
        "item": {
          "id": "e89414aa-f333-4114-aa10-1b2e87bd4292",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "d985c1d8-8c4f-407f-9bbc-7beacdc396c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89a6eabc-bc9f-4ded-8cf6-22139674c7ab",
        "cursor": {
          "ref": "d4b9299a-bf12-4262-bbc6-8d589d45c56a",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "f18db4ca-259f-4024-bcd3-e0413e7144d9"
        },
        "item": {
          "id": "89a6eabc-bc9f-4ded-8cf6-22139674c7ab",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "fdb00e94-f879-4dc3-b5bd-2bba842124e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f02b1b3-0efd-4185-94a7-556911aae4ac",
        "cursor": {
          "ref": "a18799df-26c8-4705-88fe-5471f7d148e7",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "98a08129-5c82-499d-a367-9f83e606406c"
        },
        "item": {
          "id": "6f02b1b3-0efd-4185-94a7-556911aae4ac",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "85523dc9-aa01-4c7b-a6de-63395ba224b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "898621af-eef5-4f47-b5cf-596975872188",
        "cursor": {
          "ref": "78fe8133-e4a8-4f0a-a157-42659a28bacb",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d7bbad60-22f5-4ce5-8cdc-bf57abf102d2"
        },
        "item": {
          "id": "898621af-eef5-4f47-b5cf-596975872188",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "3b7b7444-a22d-4b0a-a6ac-b0b104dee8f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d59264-480a-4fca-b5cc-e13054ee4cc7",
        "cursor": {
          "ref": "ae3fe53d-c48c-45e5-95dc-f22b186a80ed",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "24447214-c9e7-4cc4-ae41-14746515758e"
        },
        "item": {
          "id": "21d59264-480a-4fca-b5cc-e13054ee4cc7",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "13a6142e-c69c-442e-be80-b07fcccc3f25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e995edf-dc23-436c-bd5d-d4b24fa76b03",
        "cursor": {
          "ref": "c2c7776d-62bd-4b54-a105-1ff03fa2bd72",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "6d52deca-b953-470c-9957-28f9c99bf31f"
        },
        "item": {
          "id": "4e995edf-dc23-436c-bd5d-d4b24fa76b03",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "ecf0053a-6730-41c3-b1e3-efd051bfa77c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "678fdfd5-48ee-485a-a61a-8c99c710559e",
        "cursor": {
          "ref": "c83e3c11-2449-4d81-a0eb-797f0c71676d",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "c787a032-cb41-4561-bf08-215c76d494f4"
        },
        "item": {
          "id": "678fdfd5-48ee-485a-a61a-8c99c710559e",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "f599cea8-6ba9-4dfc-8fde-fb5b9f1ae860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f6befe-50a7-4424-813c-526f15d19fbe",
        "cursor": {
          "ref": "821b1a71-410b-4d4e-9191-227da0643805",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "4d8c1fd2-f277-42e3-8e9f-75b96c43e8f0"
        },
        "item": {
          "id": "92f6befe-50a7-4424-813c-526f15d19fbe",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "cb52fa80-4a57-49ed-af75-2482cc2fb5ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3935956b-68e0-4a9b-ba69-5b8d15775512",
        "cursor": {
          "ref": "fe5ed2a8-dd67-4817-a354-4ade77323420",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "4d954519-3cc9-4a5f-bfee-5f4dbb439dc8"
        },
        "item": {
          "id": "3935956b-68e0-4a9b-ba69-5b8d15775512",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "9de568c0-ba02-47f4-bf15-cff4c1ad123b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bcf7e49-d585-4b90-9f9a-2925a0fe40e1",
        "cursor": {
          "ref": "45036cc1-6d89-4740-8c00-dc616bc446ad",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "47452bc8-ea7f-4cbf-b04e-336f0b2d1631"
        },
        "item": {
          "id": "2bcf7e49-d585-4b90-9f9a-2925a0fe40e1",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "d634dc39-b237-457f-9eaa-a6bba42d634a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7ac9710-eae8-4400-9da1-169260277aff",
        "cursor": {
          "ref": "9b6c0f15-1b7a-4ec2-9887-94aac2cdca7b",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "473f08bf-5c56-44f9-9680-07a098f1b7b5"
        },
        "item": {
          "id": "c7ac9710-eae8-4400-9da1-169260277aff",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "17e35830-9eb2-49f6-8a12-969720457df1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23bbfa15-2e6a-42ae-843f-b63d7b4b9eff",
        "cursor": {
          "ref": "e4b12475-5564-4fb4-aa67-295cb07a2751",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "fcb47820-bb88-4566-9883-9efa0510c011"
        },
        "item": {
          "id": "23bbfa15-2e6a-42ae-843f-b63d7b4b9eff",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "249f86fe-eb56-45ab-ba20-9952986dd2da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3d8a27a-5c20-4768-9316-512a9cb1346b",
        "cursor": {
          "ref": "385c28e7-625c-4eca-9436-071d765f1ee0",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "25addbe1-58a8-4711-b650-687183fedf4f"
        },
        "item": {
          "id": "d3d8a27a-5c20-4768-9316-512a9cb1346b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "6209cd2c-a885-4b40-8fa5-9cdf79bebaae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "427ca202-b468-4b51-a39a-940ac830e429",
        "cursor": {
          "ref": "af224b09-d4bb-4e5b-b418-01f4b0635737",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "1034acd8-b2a4-4da5-b2e5-e2b1415cd6ec"
        },
        "item": {
          "id": "427ca202-b468-4b51-a39a-940ac830e429",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "63ba6322-52d5-4359-92e3-ded33bdd4d18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "425eb05a-48ff-407c-87ab-0c18252ce11e",
        "cursor": {
          "ref": "e4bb45a4-47ec-4f11-87d1-26ab76015491",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "65d42f9c-c7fd-4d06-b442-8abb313bab85"
        },
        "item": {
          "id": "425eb05a-48ff-407c-87ab-0c18252ce11e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "1b0d212d-5341-4427-853c-77783e028778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73ce3b15-0986-470c-9e96-19650c225ee3",
        "cursor": {
          "ref": "9d143756-becb-4f8d-a7d3-4be4232e0b67",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "27f74db3-565c-497b-98dc-80d96975adbd"
        },
        "item": {
          "id": "73ce3b15-0986-470c-9e96-19650c225ee3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "ab581f5e-5668-4f23-a4ce-a1349b5fead8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "129cf0d7-59cd-41c8-b554-0fba4f229254",
        "cursor": {
          "ref": "1b8fc7ed-db70-4195-8940-76f192e69773",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "0b267f4a-41d2-4074-888d-c524effe628f"
        },
        "item": {
          "id": "129cf0d7-59cd-41c8-b554-0fba4f229254",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "72a74225-1ad0-47df-8cdf-babba86903e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2ddb5eb-30d7-4243-b5a9-a898dfd48c69",
        "cursor": {
          "ref": "bb661918-d6ca-4d59-92e2-b569fd3242d4",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "d5e45f54-4781-425a-a392-fd334cb8a1fd"
        },
        "item": {
          "id": "b2ddb5eb-30d7-4243-b5a9-a898dfd48c69",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "e2e063a5-5f5d-4f45-81d7-3008d0090350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e95df90d-11e1-4d75-9fea-d30679cebba5",
        "cursor": {
          "ref": "3b655043-5a3a-4aaf-a119-c76f58167be0",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "612e6475-86f5-472e-b794-c7f61b8236e4"
        },
        "item": {
          "id": "e95df90d-11e1-4d75-9fea-d30679cebba5",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "fa05ced0-422c-48fc-9bdc-691b9eaaf36f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b118bda-1221-4f7b-b2f8-268f595ef65b",
        "cursor": {
          "ref": "b30c53b7-718f-45d3-a660-91c317b61f9e",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "854d51ad-e13f-4782-8ed9-851a0a478f9a"
        },
        "item": {
          "id": "2b118bda-1221-4f7b-b2f8-268f595ef65b",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "5cde3244-d1a2-496c-b5ee-698fec329b76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf531825-f6f1-4267-953b-894e2e231b76",
        "cursor": {
          "ref": "de9a7d67-1ff0-42aa-91c6-8e6d9fe670eb",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "5ab7ca0d-9de5-4be1-b6dc-e18caded0ef2"
        },
        "item": {
          "id": "cf531825-f6f1-4267-953b-894e2e231b76",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "462f68b6-d133-4ad8-b2cb-5aa390f18929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf5a7856-40e7-409c-884f-dea8a7578e5d",
        "cursor": {
          "ref": "ff965e1f-2f3f-484b-bad8-e4fd35b928bc",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "f886eacd-6fc2-49b3-a2f1-31a3a0d2be6c"
        },
        "item": {
          "id": "bf5a7856-40e7-409c-884f-dea8a7578e5d",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "f7d8defc-0c4d-45c1-83ce-aca8671b0cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0f5a6f5-07bd-4795-9c31-3401dee3d702",
        "cursor": {
          "ref": "f4f177fc-98e9-47c2-bd64-ae455ace3d48",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "8b202501-ed5e-4727-985b-532dcf4aec65"
        },
        "item": {
          "id": "d0f5a6f5-07bd-4795-9c31-3401dee3d702",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "e2a96512-261f-49aa-a31d-6a0a0e93fcb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "395f7d37-f916-4b71-83e3-99b4bbb5bc9c",
        "cursor": {
          "ref": "3f8a3cc6-27d4-4f62-961e-92bf38fbab29",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "834de32c-ce95-425c-8005-2ecaa0746b36"
        },
        "item": {
          "id": "395f7d37-f916-4b71-83e3-99b4bbb5bc9c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "5077cbef-8818-49b7-a18b-39cdddcbae8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9676a1ed-b968-476e-9457-550b1c15c255",
        "cursor": {
          "ref": "7fc9a795-c4be-4061-b7bb-6699723b3c31",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "3b48f352-fde4-451e-b9cd-caee6e5fe88c"
        },
        "item": {
          "id": "9676a1ed-b968-476e-9457-550b1c15c255",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "ae787817-a851-49db-a83c-b6265ff53f32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2697fbc-2278-492d-a595-f496e41d05cd",
        "cursor": {
          "ref": "b18499f3-e0b0-4df5-814a-00e8fac97f12",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "4a976926-fd84-4560-901a-1d78cdb2b3c4"
        },
        "item": {
          "id": "c2697fbc-2278-492d-a595-f496e41d05cd",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "f624813d-d8e2-4ce2-b8b1-7d17df17b166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddae16ff-2dfb-476f-baa9-1a4fb5e7ec8f",
        "cursor": {
          "ref": "26a33e12-6b4d-4a61-8cac-1ac32185d0bf",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "76e26d93-2a9e-402f-85fe-8c3d1c1d63f0"
        },
        "item": {
          "id": "ddae16ff-2dfb-476f-baa9-1a4fb5e7ec8f",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "26436c84-5bf7-4bc0-8c72-0556b5e8837e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "511dc68f-40b7-4abb-a5f1-c073b07b8284",
        "cursor": {
          "ref": "27d5d953-6892-4ac2-9d79-bf27b02e6324",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "88347e54-8d93-4fbe-b7f3-6c2490e31deb"
        },
        "item": {
          "id": "511dc68f-40b7-4abb-a5f1-c073b07b8284",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "b83b5bce-03bc-4a3a-a71e-91f3670d119e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4e5f72d-e705-498d-8325-d061642193ef",
        "cursor": {
          "ref": "6d2e85fa-fc8c-4e2b-8b13-47643c8cf036",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "bd0555eb-e864-49ce-a037-e79a7bd8e474"
        },
        "item": {
          "id": "e4e5f72d-e705-498d-8325-d061642193ef",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "8cdc3784-2ec2-4be0-afe6-01dbf2c91b1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29544494-4f4b-41c7-8e0c-3787751971d2",
        "cursor": {
          "ref": "018bc14a-0b73-41a6-afcf-37742d8b13ab",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "93396d13-f4f4-491e-a525-db528790de48"
        },
        "item": {
          "id": "29544494-4f4b-41c7-8e0c-3787751971d2",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "e9a1b135-c481-435e-9c46-5799b43bd2a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db499432-3a1d-440f-a19f-902798441668",
        "cursor": {
          "ref": "15b3bd3d-b469-442c-a5a0-084d57011122",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "94cd75e9-88f9-4eb4-b3ff-3a1d08a61812"
        },
        "item": {
          "id": "db499432-3a1d-440f-a19f-902798441668",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "fd2a32ad-bc56-4c35-9b7a-a1515f6815ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adcd77f1-09cf-48c0-aa3e-828e10ac1ec4",
        "cursor": {
          "ref": "3ece250c-6408-4abf-8b18-5be7230fe4ad",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "8b0ceb43-9ab9-46d4-8af6-67e3625efe01"
        },
        "item": {
          "id": "adcd77f1-09cf-48c0-aa3e-828e10ac1ec4",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "77487000-8761-4598-af89-7cc348e1f722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6f36b3a-e55a-4f18-b549-022a08cabf4a",
        "cursor": {
          "ref": "d76642ef-ce64-4e12-82b4-611dde874567",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "13f34b98-f458-4a24-a6cf-51879edd7088"
        },
        "item": {
          "id": "e6f36b3a-e55a-4f18-b549-022a08cabf4a",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "d12bcfac-12ce-4fc4-a432-b46db5c3f01e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e01689c7-9ecb-49f2-83d2-388b490fc642",
        "cursor": {
          "ref": "b2b55bf3-1291-4d90-887b-25f5a82e8d29",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "65e14dec-3ea9-4a44-bafd-18a4a5305e12"
        },
        "item": {
          "id": "e01689c7-9ecb-49f2-83d2-388b490fc642",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "5d8aa636-8505-40d3-abf1-1d989d63f20e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ef150a9-daaf-45e3-89d4-03c9c526dbdd",
        "cursor": {
          "ref": "ed5ca2db-e89c-4051-951a-af2c9803c173",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "2394dd7f-dcc6-42c6-81a8-125307a41e2d"
        },
        "item": {
          "id": "9ef150a9-daaf-45e3-89d4-03c9c526dbdd",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "95b49641-3c29-46c4-87f0-da6cc6fc6737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e402e6c1-8d8d-4f2b-a507-834a5da25875",
        "cursor": {
          "ref": "9e301312-ab28-4e53-b2f3-8a8d7b8d66b7",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "92ab1287-f09b-49e2-bd85-9f3bd87d6c38"
        },
        "item": {
          "id": "e402e6c1-8d8d-4f2b-a507-834a5da25875",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "32972ddc-0b13-4367-823d-88aec55a8e0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "088f2ad6-844a-449f-a698-8afdb15facc4",
        "cursor": {
          "ref": "ed4f7892-6392-49fa-b3fd-2b190baf0902",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "02f02a1a-10fc-4ec7-966e-42f95c936399"
        },
        "item": {
          "id": "088f2ad6-844a-449f-a698-8afdb15facc4",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c118fb46-1957-40b4-a43f-65706cfe974a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90b21911-3f4a-49ca-a83e-9816b6636757",
        "cursor": {
          "ref": "20d24ce8-70be-49cf-883a-501586bfecd5",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "c2e3c39a-8725-48c0-9068-8b90bd450caa"
        },
        "item": {
          "id": "90b21911-3f4a-49ca-a83e-9816b6636757",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "0352cd11-2706-4e8e-9954-0df61c494db1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "196220a2-a40e-4ca5-b4d5-88e5ab63d23c",
        "cursor": {
          "ref": "dbe49b0a-a0f8-40f6-b7bb-701993a9f966",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "988536d9-8eff-4e4e-9f01-f8721fc295e3"
        },
        "item": {
          "id": "196220a2-a40e-4ca5-b4d5-88e5ab63d23c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "5fd413a4-f6ad-48c6-a87e-6370fe16f425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94970d34-101b-4361-b6b1-31e2289fa344",
        "cursor": {
          "ref": "82dd5430-0998-432b-bcd5-14506018f787",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "386604c3-0a66-40ad-88b5-cb0b4fb245bc"
        },
        "item": {
          "id": "94970d34-101b-4361-b6b1-31e2289fa344",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "24362ace-2f4b-405c-aadb-2f2a8c9f62f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48dae6e4-2532-4734-b9a8-54534a536ed7",
        "cursor": {
          "ref": "516534f3-7be3-421e-83b7-9229d97dd804",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "61952774-f020-4225-b632-4247251fcc89"
        },
        "item": {
          "id": "48dae6e4-2532-4734-b9a8-54534a536ed7",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "889dedee-7277-4451-b9b5-f7d7cc991340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57695a13-bfcf-4319-a6fa-b83f20d4011b",
        "cursor": {
          "ref": "8d887fc3-a838-4544-a20e-1869da5e5776",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "ee24a9ca-fac6-4433-b851-5da641450eeb"
        },
        "item": {
          "id": "57695a13-bfcf-4319-a6fa-b83f20d4011b",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "c0c39002-914f-4e4e-a12d-567062b5dcd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5c7a300-5a22-496d-b631-46d64508121c",
        "cursor": {
          "ref": "b2bea2ab-734f-4244-884c-80fd9d98d2c2",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "02712e68-9aa4-408a-a97b-7d5e874e0944"
        },
        "item": {
          "id": "e5c7a300-5a22-496d-b631-46d64508121c",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "75ca2796-3e65-4fa7-8dfa-0568eee48873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08fc3add-19aa-46be-a892-bdd24be4684a",
        "cursor": {
          "ref": "f624210d-c7cb-4b1b-8ec2-7548587b0579",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "7dc8fa98-3056-4418-ba5c-33dda80fdcb2"
        },
        "item": {
          "id": "08fc3add-19aa-46be-a892-bdd24be4684a",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "b79c6878-42ce-4e3c-8dd2-117b656967b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47347ef1-ce80-4ffb-a724-d7965260a51f",
        "cursor": {
          "ref": "a520ece5-43d4-4502-8afa-3147258c5859",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "029394cd-1917-4d1e-818c-14d5a64b6cef"
        },
        "item": {
          "id": "47347ef1-ce80-4ffb-a724-d7965260a51f",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "d47ca29d-87c3-4bd9-be90-7feb090a760a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae10ff70-c752-4b76-8c64-8a4194b9fa35",
        "cursor": {
          "ref": "7e5e0d1c-2922-49d5-ab0a-470dfa8f6b01",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "9f62527d-d6ba-4ab5-8477-519ca4c626ae"
        },
        "item": {
          "id": "ae10ff70-c752-4b76-8c64-8a4194b9fa35",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "80f472d1-60c8-4679-8532-65d6cccd0bdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f7944a0-49ab-40b1-bb6e-297330c4fb42",
        "cursor": {
          "ref": "139c2da3-14a1-4102-acd4-c1905fe98510",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "7441a451-aa48-4b55-a047-7236c1a275d3"
        },
        "item": {
          "id": "4f7944a0-49ab-40b1-bb6e-297330c4fb42",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "18132bae-6f61-4504-99de-7ab91782342c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9f0f1ad-d3e5-4cca-a6a6-b037db051f8d",
        "cursor": {
          "ref": "6e64854b-1242-43c0-8b19-5d2098da7eaa",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "1501289b-c600-4b28-82a7-b8bade1c07a7"
        },
        "item": {
          "id": "d9f0f1ad-d3e5-4cca-a6a6-b037db051f8d",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "973d1baa-d190-45bf-abf2-43e82b838ffb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e4b425c-e348-4d28-b9a2-72abe58f453b",
        "cursor": {
          "ref": "33bb9ad5-e491-4d7d-8485-72a0d203d428",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "22860e03-883c-4e21-b9bc-2aaa7280fa8e"
        },
        "item": {
          "id": "7e4b425c-e348-4d28-b9a2-72abe58f453b",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "70dfea66-cdb8-44b8-957f-9535df873e39",
          "status": "Created",
          "code": 201,
          "responseTime": 62,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7acdb497-4dca-4faa-a90c-c39e6a2f8955",
        "cursor": {
          "ref": "0f72679b-9986-4fc3-b349-0af6ada80b86",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "906de471-ceef-4e9f-b068-40558765bd93"
        },
        "item": {
          "id": "7acdb497-4dca-4faa-a90c-c39e6a2f8955",
          "name": "credentials_issue"
        },
        "response": {
          "id": "d461e408-35dc-49fe-bc7a-4030322c447d",
          "status": "Created",
          "code": 201,
          "responseTime": 246,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9277921-57d2-4d9f-b24b-5b8740bd6b59",
        "cursor": {
          "ref": "6eb1a894-2c83-4824-a232-a0a5cfb73d82",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "1c7374df-8ebb-4e8d-a210-5250ec89019c"
        },
        "item": {
          "id": "b9277921-57d2-4d9f-b24b-5b8740bd6b59",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "cfed365f-54e3-4a5e-b634-4180aaa2a1f5",
          "status": "Created",
          "code": 201,
          "responseTime": 71,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "65351f33-4a37-4d02-80a7-5890441e7876",
        "cursor": {
          "ref": "b2a4430d-4b4d-40d6-a756-176f762def4f",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "8c24785c-fc25-4fa5-bcc0-33ef88901029"
        },
        "item": {
          "id": "65351f33-4a37-4d02-80a7-5890441e7876",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "7292929f-23c0-465b-aee5-70989693a640",
          "status": "Created",
          "code": 201,
          "responseTime": 43,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc9e303e-501a-49f0-b132-053f53898af8",
        "cursor": {
          "ref": "33fdb73a-96a1-470f-9204-91d993c7e428",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "b134ec34-5504-4375-b445-7097c40f1eed"
        },
        "item": {
          "id": "bc9e303e-501a-49f0-b132-053f53898af8",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "b76f9d80-7113-408c-9bb5-e9859951504b",
          "status": "Created",
          "code": 201,
          "responseTime": 33,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cb5809b-855e-47f1-8254-79e5e44d58ef",
        "cursor": {
          "ref": "137813ca-2e6b-40ea-8a44-525253d9d85c",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "d4f5b152-1161-4140-ad01-d532edb73f2f"
        },
        "item": {
          "id": "4cb5809b-855e-47f1-8254-79e5e44d58ef",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "7f3e988e-6612-4e7d-a49d-a9fb2d37c07c",
          "status": "Created",
          "code": 201,
          "responseTime": 34,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fd3c9b6-ecf9-4925-9166-06be3fdacab3",
        "cursor": {
          "ref": "af046663-bb51-4af1-ae8f-a827dcc81b8f",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "de8ec2d7-5a2f-4882-a99c-811a20f0ddc1"
        },
        "item": {
          "id": "4fd3c9b6-ecf9-4925-9166-06be3fdacab3",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "25233568-4f03-4ee9-8680-c451af31609b",
          "status": "Created",
          "code": 201,
          "responseTime": 37,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce900c8-edce-4c32-bd07-7f33bbb19fb8",
        "cursor": {
          "ref": "b721d7a9-ad8e-4677-ab98-65aa5c08d4ca",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "1061070f-db9f-4d90-9316-a7b47bdebebe"
        },
        "item": {
          "id": "4ce900c8-edce-4c32-bd07-7f33bbb19fb8",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4c3228c1-f77c-4592-a98b-b765d075a892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "138c90e7-f42e-4ca2-9ec9-c4418765fc17",
        "cursor": {
          "ref": "d5a0281b-e586-456d-bdf2-88eeb2d51dc8",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "96f87497-a7d5-4937-9367-ea8a23fcf867"
        },
        "item": {
          "id": "138c90e7-f42e-4ca2-9ec9-c4418765fc17",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "71f1b102-c69c-42aa-ad4b-c1bc3661a173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b53e3fdf-cbce-48f8-b215-c71d5a5fe6c5",
        "cursor": {
          "ref": "22ccc66b-dc26-430f-87b5-8d44b4a5285b",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f2ffeaa2-76c8-479d-a9e1-fb9777bbd2f6"
        },
        "item": {
          "id": "b53e3fdf-cbce-48f8-b215-c71d5a5fe6c5",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "de7b552e-ffbf-48c5-a414-50a3fabcb152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ae0fe5-297c-4e16-8ef5-d1f3d02631ab",
        "cursor": {
          "ref": "4e622978-2df0-4a21-9986-6391e6c41bbc",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "8bfcef1a-0e3b-4b8a-b7a9-f9200b219b04"
        },
        "item": {
          "id": "b7ae0fe5-297c-4e16-8ef5-d1f3d02631ab",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "621eeca5-0b04-4783-b623-6b4fa7414f35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d679f1e-0b1b-404c-9574-fce5b0b70413",
        "cursor": {
          "ref": "504e7f30-d592-4673-bfdc-889b61db69f5",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e6db9b00-c4e9-45b7-8120-a78460beac55"
        },
        "item": {
          "id": "8d679f1e-0b1b-404c-9574-fce5b0b70413",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "985f7472-2e8e-4364-be06-587d1ab64555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38e1b52b-77a0-47b7-8ae8-e14feb6fa1e5",
        "cursor": {
          "ref": "a54bb6a8-91fe-4bbf-804d-6ef5bfb0148e",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ec4ca189-610a-4b46-864f-466dae1f2cc7"
        },
        "item": {
          "id": "38e1b52b-77a0-47b7-8ae8-e14feb6fa1e5",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "46d8c89c-9ddd-448b-af35-0c1aa93cf44b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60e10efe-87f9-42ef-9f1d-c8a61e2828a4",
        "cursor": {
          "ref": "e48c3a64-c12c-4602-9572-12b07c0c497f",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "6008dfd3-fd95-46dd-ab1d-f614b0f08e8f"
        },
        "item": {
          "id": "60e10efe-87f9-42ef-9f1d-c8a61e2828a4",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f24d1ddf-8b55-4cf5-a7b9-584b2f1b2ae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ac6dbfd-c239-4b5e-88d0-49bf77304bda",
        "cursor": {
          "ref": "67cf7344-b8cb-4d4e-b4ad-1de6026086e9",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "25174f53-8452-4695-96e9-d4ab3b2533aa"
        },
        "item": {
          "id": "4ac6dbfd-c239-4b5e-88d0-49bf77304bda",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8c90f11e-bb4f-4055-ac75-24ba26c21ca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a318cf4-73d7-4090-a24b-9a4d93176f73",
        "cursor": {
          "ref": "fed870ed-5355-4a8e-86a5-bb62047b3a6f",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "bc628e44-32e8-434c-bb6c-967cd10b4c5f"
        },
        "item": {
          "id": "9a318cf4-73d7-4090-a24b-9a4d93176f73",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3580486f-78ba-4231-a279-10c1cb88e4ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5795bea-6613-4deb-ba4a-301e55c58f6b",
        "cursor": {
          "ref": "1bbaaf30-2ec1-4b4f-b5ce-beeae4971d40",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "36d53484-2281-4485-bac3-ea9c4be8c91f"
        },
        "item": {
          "id": "f5795bea-6613-4deb-ba4a-301e55c58f6b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "779ad6f3-3916-465c-af93-6b14976d8b91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b651a45-97a1-4c25-b7a8-dc0f641ceac0",
        "cursor": {
          "ref": "870a3cbd-13e0-4e09-9c7a-c9b84dbd9351",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "2e68c25b-be8a-48d2-92eb-2c22ec805e68"
        },
        "item": {
          "id": "7b651a45-97a1-4c25-b7a8-dc0f641ceac0",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9b60b381-c922-487e-a821-5b714c2fef0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b484d05-47d8-4b53-a651-607fed068f2f",
        "cursor": {
          "ref": "a5bccb2a-1bf8-4b0a-a367-e3dd8ef331e6",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "72df15d4-5e12-4305-a79d-03ec8987fa26"
        },
        "item": {
          "id": "0b484d05-47d8-4b53-a651-607fed068f2f",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "26094a7d-a293-4768-a3e2-584d6d15f104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14b8e2d8-5512-4296-a8a4-83d84e3fabf5",
        "cursor": {
          "ref": "170d9194-fda2-4185-b3d3-5cc286d7f9a5",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "dcef9b8e-1882-4efa-acc6-0072f8cd410d"
        },
        "item": {
          "id": "14b8e2d8-5512-4296-a8a4-83d84e3fabf5",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c4c93125-1c93-4c99-afc9-4cd29122419a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7376778-32c1-41c4-b204-c02a9ab3027d",
        "cursor": {
          "ref": "c3f4d36b-ce26-4455-b395-40986f6f519c",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "16637293-2c3c-4146-83ef-f3ebd6ee7d74"
        },
        "item": {
          "id": "b7376778-32c1-41c4-b204-c02a9ab3027d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f9b4e190-6681-40b7-8aad-acb26f02eb5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d88d96-73c1-4809-8dc9-ef67240f5174",
        "cursor": {
          "ref": "51495e45-2eca-4cfc-8425-e0531dfd680c",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "01fe36cb-735d-41e0-adbf-c930499b5e2f"
        },
        "item": {
          "id": "f8d88d96-73c1-4809-8dc9-ef67240f5174",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f0800327-f9b4-4697-b199-6871f58470ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26bda9fd-2df2-4218-849b-6b9d5dc12d35",
        "cursor": {
          "ref": "9d836471-4837-4d24-b12c-27e5bb53d6d3",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "0fbfbdb2-c409-4d4c-a5db-aaa7c93f9bc4"
        },
        "item": {
          "id": "26bda9fd-2df2-4218-849b-6b9d5dc12d35",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "17098969-3997-4b95-b175-5610f8f4c909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "574500cf-9ac1-4ae6-8200-e7d2f127c687",
        "cursor": {
          "ref": "672642e6-d2d1-4d52-9783-5c6ab18ba141",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "c72926cb-71cf-49d5-919d-f34a6b4d5dd5"
        },
        "item": {
          "id": "574500cf-9ac1-4ae6-8200-e7d2f127c687",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "17d0c84f-75ef-40ed-859a-97558bc74e9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc3b7401-f2e6-4607-bdab-0330b3341698",
        "cursor": {
          "ref": "33bd3fd9-9af2-4401-8721-1336dda5b136",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "c1b023a2-9b75-4e1e-a2fe-67396389aeaa"
        },
        "item": {
          "id": "fc3b7401-f2e6-4607-bdab-0330b3341698",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7b38c13d-9cdf-4a74-a9ee-e2d4c91142cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73954475-57bd-4acd-8804-1543a0422e0b",
        "cursor": {
          "ref": "45e1c83c-d0d0-4cba-8141-6d9908ce62d7",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "59502bf3-c29a-40d9-84ef-df735a40cb65"
        },
        "item": {
          "id": "73954475-57bd-4acd-8804-1543a0422e0b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "387b2bff-71f4-44c4-840a-6675e17ffe99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35e07de2-c7c3-4501-8030-3dc9c7f07aed",
        "cursor": {
          "ref": "c42cd1ac-98bc-4483-9ede-9544ae388851",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "c182ba48-ae81-4df2-8b7f-ec960913c283"
        },
        "item": {
          "id": "35e07de2-c7c3-4501-8030-3dc9c7f07aed",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6d2d57f3-6bc5-4758-b1b4-f0aad6f78de3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66cf53bd-5eae-466e-adc9-5f785edb3a83",
        "cursor": {
          "ref": "e7d536a4-c01c-4930-a471-9ec707512413",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "25fd3071-24de-48c8-9026-7cd6f88b64a7"
        },
        "item": {
          "id": "66cf53bd-5eae-466e-adc9-5f785edb3a83",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "6012986b-724f-412a-a039-724a7170d5f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "431bcb54-6650-4a7c-8f43-c7b3a753f880",
        "cursor": {
          "ref": "6de2322b-a9f8-4575-9945-1e3c80cd4d42",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f72a992a-1e46-401a-8873-2d245fbac810"
        },
        "item": {
          "id": "431bcb54-6650-4a7c-8f43-c7b3a753f880",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ce7e9e23-1632-4df8-ae26-0c4e697ab8fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "841bcede-55fb-433b-b404-db900acf368b",
        "cursor": {
          "ref": "5ac0855f-763e-4d3c-b9a7-750358d20685",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "b0d25e15-45e1-4128-b9f9-3a1dbb568801"
        },
        "item": {
          "id": "841bcede-55fb-433b-b404-db900acf368b",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "29c92b43-e5b5-46db-904b-de2e2f16b04a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f924bba-7554-45cb-86ab-cb692eb9593d",
        "cursor": {
          "ref": "8cbb3de3-209a-412a-81dd-ab11fe39d8d3",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "579bc084-bfda-414a-b9f1-78cc044d3e51"
        },
        "item": {
          "id": "4f924bba-7554-45cb-86ab-cb692eb9593d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9304adbd-1ca3-472b-9c46-9c98ebc865f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c94a1e5-4503-4ab9-a4b1-b3c0fe9bdf34",
        "cursor": {
          "ref": "5afc3254-2430-4d7d-9da2-5c5c560f2400",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "4b5afae3-5e3c-43c6-a4fc-7f281119d801"
        },
        "item": {
          "id": "3c94a1e5-4503-4ab9-a4b1-b3c0fe9bdf34",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "bf95a3b0-3d2e-47b1-8a42-e16db072a87e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1339adf9-51e4-467e-98d0-c11532ded50e",
        "cursor": {
          "ref": "ab5f6799-284e-4cd5-98a4-cc345700fd58",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "b42a2077-3f6d-465d-9986-5a1af957c730"
        },
        "item": {
          "id": "1339adf9-51e4-467e-98d0-c11532ded50e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "1ca757f9-4063-4708-b6ec-6040841781f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2546969-9f73-4a44-8914-a1bac674b59b",
        "cursor": {
          "ref": "b0e85ab6-b1be-4846-8da2-ee82e2dd9871",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "5a7e9c98-a317-498e-820d-5111acfa5923"
        },
        "item": {
          "id": "f2546969-9f73-4a44-8914-a1bac674b59b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "65bcdc47-673c-47e4-8c4f-bffc0e0c893a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60226af8-ba3c-4deb-a291-928cb4d152c7",
        "cursor": {
          "ref": "cdd59aa5-336b-4794-995b-ed7f1b6164c0",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "6a95da09-39f5-4ceb-8e6e-b46fe1ada739"
        },
        "item": {
          "id": "60226af8-ba3c-4deb-a291-928cb4d152c7",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "25ce4745-730f-4d8e-8f53-24e077e959a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f41c8c38-3922-437c-9088-876226293159",
        "cursor": {
          "ref": "fce2023c-7396-442c-92e3-788001e90d1c",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "ca1448ba-235b-4779-98ee-4c9e6de13b73"
        },
        "item": {
          "id": "f41c8c38-3922-437c-9088-876226293159",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "0d5ff868-eb91-45ea-872b-6a0051442178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eeb8b20-aac8-460f-ad0c-8374321dc5b6",
        "cursor": {
          "ref": "84c0ee24-1f48-4112-8703-86ef4ed30d49",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "30ebe500-a041-4a43-a825-ae48e1535408"
        },
        "item": {
          "id": "0eeb8b20-aac8-460f-ad0c-8374321dc5b6",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "10e894c2-6abe-4fe4-9129-824442c3cacb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8777242-250e-4e67-8eb2-6437b527aa94",
        "cursor": {
          "ref": "88f3fa41-37fa-4143-b09f-047c8d9cc2b6",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "ee2c1cb7-0ebc-4525-887b-189563db6f31"
        },
        "item": {
          "id": "b8777242-250e-4e67-8eb2-6437b527aa94",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "68eabf7e-8236-451b-a2c4-a9b0c80d80bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77f992ec-021c-46f7-8ac4-34ad35aa0f59",
        "cursor": {
          "ref": "675f52b7-ab78-4de4-bb90-c2773e3e9b0a",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "2083ffee-dddd-4038-a082-1f9d8eb421e4"
        },
        "item": {
          "id": "77f992ec-021c-46f7-8ac4-34ad35aa0f59",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "013e50a9-f829-41c9-8b0e-de4cca63ed3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3c49a38-793b-4ba8-80bd-8bd54abadd9e",
        "cursor": {
          "ref": "127ee0c8-5a9e-4156-bde9-f1d75af5a6d4",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "cb0df7f7-9bc8-4a24-b641-b3469006c79d"
        },
        "item": {
          "id": "b3c49a38-793b-4ba8-80bd-8bd54abadd9e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e297c0d8-d29b-40df-8bce-19c1032ffdba",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cde27b55-1773-4652-8017-5ca56bc4438b",
        "cursor": {
          "ref": "ea73107f-70bf-4154-b8cf-c58cb4fef57c",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "633cfeaa-31dd-4288-b9e5-11b20dd48ac4"
        },
        "item": {
          "id": "cde27b55-1773-4652-8017-5ca56bc4438b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2b992dba-5196-46ab-a6a1-82a62a018b56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30d3d930-5a59-46ee-960f-ebc42f3f3709",
        "cursor": {
          "ref": "fa969658-d778-44b7-a981-efb60d0a34c2",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "f654f85e-1598-4741-afd0-3e4a68689ae1"
        },
        "item": {
          "id": "30d3d930-5a59-46ee-960f-ebc42f3f3709",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "4b902faa-53e6-451f-af4b-e9693887d86e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af51ae51-500d-46b0-9226-a6e5b1c59858",
        "cursor": {
          "ref": "16e47723-6a3a-40ef-b784-b7046c62cbf9",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "d2d6848a-1099-4da3-9217-d848fb6cdf22"
        },
        "item": {
          "id": "af51ae51-500d-46b0-9226-a6e5b1c59858",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "127a437d-74d0-46a2-b29a-512ef3595fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ada105f0-39ed-476c-bf9f-60c04903699c",
        "cursor": {
          "ref": "50db334a-7cc5-4046-b678-fe2a51558878",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "611b9804-6b51-4744-b31b-28c9af2cac3c"
        },
        "item": {
          "id": "ada105f0-39ed-476c-bf9f-60c04903699c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d24a065d-34b2-4e55-92d8-14d95bf39175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9b9f4a6-9a24-4ea4-9fd8-554238054c17",
        "cursor": {
          "ref": "54c322ce-8be0-444f-bbbb-4def89a90a24",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "0ded2dda-61d6-474d-af0a-72ea0e014356"
        },
        "item": {
          "id": "c9b9f4a6-9a24-4ea4-9fd8-554238054c17",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "173bf2d1-e126-4e2d-aa9a-82631917e66f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2eae8e7-414b-4d0f-9d4d-da18683eb5b8",
        "cursor": {
          "ref": "7fc9f37d-e45d-41d2-b8d2-e08b09e94d12",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "91c5ed4d-55d7-4d77-85cd-433787117264"
        },
        "item": {
          "id": "a2eae8e7-414b-4d0f-9d4d-da18683eb5b8",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ec269a0a-19d6-4bc5-a4c9-42ad46c11817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8276f6f3-a404-46b4-b916-53fb15d46d85",
        "cursor": {
          "ref": "f7324717-2c15-44e1-8f0b-766898f6ae1d",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "f6372e81-c415-4359-8366-56efd81155d5"
        },
        "item": {
          "id": "8276f6f3-a404-46b4-b916-53fb15d46d85",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "fcff478d-1f6a-4d5c-8012-d6ebf56c2247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "104b6ddd-71a2-4bfd-ac3c-29649923f48c",
        "cursor": {
          "ref": "c6ba5b47-ccf9-4eea-809f-a8d416767084",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "b4ad875e-d720-4ef6-9e7a-16455afa9452"
        },
        "item": {
          "id": "104b6ddd-71a2-4bfd-ac3c-29649923f48c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "58eda944-62b5-4fc9-acbd-5b6ec3bd5515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84baac8d-1551-44d1-a0b6-f7ba3c0a4c8a",
        "cursor": {
          "ref": "3bd25233-671c-49eb-9540-b07cdefa742b",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "d9c3a6fe-a743-4138-bd9f-f7bab6baf9fa"
        },
        "item": {
          "id": "84baac8d-1551-44d1-a0b6-f7ba3c0a4c8a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f8d976bb-e582-4ccc-b197-ee2ef1160076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81f4f3ee-855e-4826-b61c-83333f7ed2f8",
        "cursor": {
          "ref": "276b7da8-2755-4414-9fff-6444361710a3",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "1258a774-d1aa-4a5e-bdcc-63ce96427974"
        },
        "item": {
          "id": "81f4f3ee-855e-4826-b61c-83333f7ed2f8",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b5e02f9f-8f26-4ef8-83fa-1437ff99b584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8dc0394-d893-4e96-9793-9c77ac4ed982",
        "cursor": {
          "ref": "b0ea3628-e293-4799-b54d-950dfbb6892f",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "bcd7705a-47c6-45c0-9d9d-d29317e90bf7"
        },
        "item": {
          "id": "d8dc0394-d893-4e96-9793-9c77ac4ed982",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "30ca96de-5b8c-42d4-9a8d-9f067c81e2e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53db2e39-e82c-4b08-ba7c-2eec6b04e7ce",
        "cursor": {
          "ref": "64cf880e-5d1c-43ba-94ee-a4f15ab17aed",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "13d260ba-fbf8-41ba-929f-326e485d4c92"
        },
        "item": {
          "id": "53db2e39-e82c-4b08-ba7c-2eec6b04e7ce",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "2873c796-9659-497f-b62a-ad1837b29de4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30311959-a466-4503-a25b-e9b3fecfd536",
        "cursor": {
          "ref": "d72ff621-4928-4948-a998-66feca66c728",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "5007400e-a38c-482a-8d7e-0c3c1be1972e"
        },
        "item": {
          "id": "30311959-a466-4503-a25b-e9b3fecfd536",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "2eedb26a-5a28-4cf8-bae4-f596cd963198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1cc54c7-5d70-4a45-9b4b-c85da5f24582",
        "cursor": {
          "ref": "9d80adc0-d8b6-4303-a44c-a42f275b521a",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "ef4814f7-3057-46ea-9f92-4d05eb8f61bf"
        },
        "item": {
          "id": "d1cc54c7-5d70-4a45-9b4b-c85da5f24582",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "28035b4b-8bc6-4750-bb7a-4dfb09b45802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7905f839-9f17-4f97-be67-156db5058f3f",
        "cursor": {
          "ref": "69f1d402-844f-4aeb-9323-24946ad8caaf",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "5cb42d6a-e3e9-42c2-a8fc-d80c2d1dc353"
        },
        "item": {
          "id": "7905f839-9f17-4f97-be67-156db5058f3f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6b7718d4-9104-4165-b8b4-2410e5e4dc3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "476d6287-235a-49e0-b199-f3f440ff0a8b",
        "cursor": {
          "ref": "4ece7c8e-bc8b-4b3c-9dac-0e34a9316249",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "895adf17-b5f2-48a8-b2df-22f8e87b7575"
        },
        "item": {
          "id": "476d6287-235a-49e0-b199-f3f440ff0a8b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d06f7ad1-2f44-4ef0-a007-57ac8a54f4a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b89c7713-3471-47b1-9f92-8190e5a9ca57",
        "cursor": {
          "ref": "7c4e83ab-23d2-48b5-a1b4-a063d6a9d8d2",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "74874cd0-42f7-4a53-afe0-ee1429bbe7e3"
        },
        "item": {
          "id": "b89c7713-3471-47b1-9f92-8190e5a9ca57",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ec37b263-c629-4af3-8ea6-f8e3538e645b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a97e71e0-9612-466b-8135-750d198920ab",
        "cursor": {
          "ref": "be3cf0ac-f107-487e-8d8d-80686a67ba22",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "4ab8a1bb-2244-4aac-a5cf-fa98933d0cd7"
        },
        "item": {
          "id": "a97e71e0-9612-466b-8135-750d198920ab",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c2449f33-8083-4746-8eba-d66640da96c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "289bd307-8102-496d-b7c9-1e82dc7ecaf0",
        "cursor": {
          "ref": "b6949f93-b1ec-4ba2-997b-2e2a2ba99d7a",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "705036a7-e211-4ad1-a726-c27fc19cc1ef"
        },
        "item": {
          "id": "289bd307-8102-496d-b7c9-1e82dc7ecaf0",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c2f2d028-5561-4751-ad20-6520b3301b8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "218606db-b048-4b65-883d-50328b36a2d2",
        "cursor": {
          "ref": "d2638077-6c70-446e-98f6-619a3a4d0267",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "1724cca6-d01b-4724-a0fb-894c112815bf"
        },
        "item": {
          "id": "218606db-b048-4b65-883d-50328b36a2d2",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "7cde9da1-4d11-4464-a709-8050f12f8aef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95bad7d8-de0e-480e-b54f-17a53c203b33",
        "cursor": {
          "ref": "45182f79-c732-41fc-ac88-7a296335c219",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "9fe7469c-929d-4a48-ab24-ebccd6fbfe20"
        },
        "item": {
          "id": "95bad7d8-de0e-480e-b54f-17a53c203b33",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "80aed86e-6f0a-44f5-9033-0bcd77995cad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "817f39e9-8866-4114-bbe6-1f6a9c9892c2",
        "cursor": {
          "ref": "0d307563-965a-4671-88f6-a95194954e0b",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "b8b1dc68-ed5f-45b9-9935-bbde4e534f8c"
        },
        "item": {
          "id": "817f39e9-8866-4114-bbe6-1f6a9c9892c2",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "6c705fe7-dce9-4a11-a49a-38a04c5ad8ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ced68b7b-ba5d-4641-a7c6-4dd857159b0f",
        "cursor": {
          "ref": "e3a453c3-211b-497f-881c-6b260eae54ba",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d914f114-07a4-4bcf-9503-f4eb0db1c740"
        },
        "item": {
          "id": "ced68b7b-ba5d-4641-a7c6-4dd857159b0f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d3d4da61-4262-471e-ae8f-ce5e4443fcd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca12d12a-62ff-46ae-b4db-d8a6ad3a0a05",
        "cursor": {
          "ref": "4d12c679-585a-4582-8a43-f829a044a76b",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "ee022437-fb0d-4c6f-b90d-38a2bb1b4f18"
        },
        "item": {
          "id": "ca12d12a-62ff-46ae-b4db-d8a6ad3a0a05",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "db96686e-b4f6-4dbb-93d6-e9ea3e75ffc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20879792-4fa3-4c5c-b211-8e767a981767",
        "cursor": {
          "ref": "12b1dc94-40d6-49fb-b0b3-0182005c6276",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "ab5dc93e-53e8-4525-8317-71f409f6418c"
        },
        "item": {
          "id": "20879792-4fa3-4c5c-b211-8e767a981767",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e62beb51-f18c-44f3-aa9d-1d1a21f6bb66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "217125e2-3c5e-4054-94fc-150a8ef4c6ee",
        "cursor": {
          "ref": "9fbc4fde-be99-4312-8536-4323ceb856a8",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "39914aa5-a8c3-4e12-84b3-1bb819f31fb0"
        },
        "item": {
          "id": "217125e2-3c5e-4054-94fc-150a8ef4c6ee",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "94a59279-b8ad-4172-8c71-471b67009078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a8b760c-ec2b-4f5a-aef4-e03d14dcf208",
        "cursor": {
          "ref": "1ab33708-5941-49cd-baa2-33e476dbfdf8",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "1c5067ec-3e36-4dce-9394-833224c5139b"
        },
        "item": {
          "id": "4a8b760c-ec2b-4f5a-aef4-e03d14dcf208",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "dd81502c-9ad6-4a77-bbf6-68ea699ee13d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f75f71f1-b46e-48d0-a205-d6262c9d35d3",
        "cursor": {
          "ref": "64cf6f60-f0de-447e-91dd-002e9e7ebf7f",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "e34a1282-4122-4133-ba3e-0abe475dfc08"
        },
        "item": {
          "id": "f75f71f1-b46e-48d0-a205-d6262c9d35d3",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f0edacb3-d90f-4468-8677-039e1a6c0ae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a643704f-ea8f-41ac-8fdb-f79ee5b7e6b5",
        "cursor": {
          "ref": "bb7f62b2-20dd-482d-b531-9fae2c1c3418",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "a1ff18de-101b-460d-be14-e14259b8e9dd"
        },
        "item": {
          "id": "a643704f-ea8f-41ac-8fdb-f79ee5b7e6b5",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "306a9017-3a5d-4d5f-9534-4d36c1005091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b105ca6-d3f2-4f11-b0c9-02bafde0192e",
        "cursor": {
          "ref": "b6e8863e-438c-45e3-ae2f-7034340cbddb",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "a044d618-f90e-42b5-a119-88c4a64cdfd2"
        },
        "item": {
          "id": "6b105ca6-d3f2-4f11-b0c9-02bafde0192e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "12f67420-cd44-4eaf-8b73-aec125884597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b964e2c5-d6bb-4e87-8a05-91b94189310e",
        "cursor": {
          "ref": "6b301f5a-4fa9-4310-869b-29c7227baa8f",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "2dab0ba3-de01-4c0f-b5c4-2ca31b46f131"
        },
        "item": {
          "id": "b964e2c5-d6bb-4e87-8a05-91b94189310e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "fb6e138b-f525-43b2-b70c-2aec94ecfdfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4300afa3-8ff5-4e71-b098-41734b4b525d",
        "cursor": {
          "ref": "7da3d61e-8b9a-4333-88a4-0662d5d9f708",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "344f7256-4329-4d9a-836d-6b801339b1ec"
        },
        "item": {
          "id": "4300afa3-8ff5-4e71-b098-41734b4b525d",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "ffc32414-f610-4845-8e19-e8085c7e0386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bb0dc11-19a4-4399-815a-2aaaa78e1207",
        "cursor": {
          "ref": "e8d83da5-e4b3-4b8b-9347-53cd3a4242cf",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "07a918ef-7081-4066-9300-4872002c982f"
        },
        "item": {
          "id": "4bb0dc11-19a4-4399-815a-2aaaa78e1207",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "9820dccb-a659-4d97-9362-364f6de4e1e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d2a9eb8-47b1-4f07-b32d-24258697b5fe",
        "cursor": {
          "ref": "9035c454-8ed2-4329-874d-e7044cf06b5a",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "81f3dbdb-78b8-440b-90e3-ef0c42ef3fe2"
        },
        "item": {
          "id": "4d2a9eb8-47b1-4f07-b32d-24258697b5fe",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "556ca683-62bc-40a0-b454-8ec32f4dfb05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b0d5633-a715-4f8b-a257-39c51c1a8193",
        "cursor": {
          "ref": "83b1f520-fb97-4ca1-b992-797a4e5bb21c",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "11bfdf8c-0885-466e-81c7-52b1bf82220d"
        },
        "item": {
          "id": "4b0d5633-a715-4f8b-a257-39c51c1a8193",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "21ff21a0-eb59-4f07-bc80-a6c4cdcf6212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f0d458f-605f-4005-8de5-db50edcf42d6",
        "cursor": {
          "ref": "c9e2d011-a188-4cad-b944-92004780d362",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "80c2b71b-22f6-4a2d-8e9f-88820c8ef781"
        },
        "item": {
          "id": "1f0d458f-605f-4005-8de5-db50edcf42d6",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "9f61a9d5-5350-4b65-a491-ca09e6d7a32c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1234c71-7715-478d-accb-4e3666f8f752",
        "cursor": {
          "ref": "6e9bf0aa-9c77-4bbd-b173-ef25b72180ea",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "94848a20-ed99-4201-bc57-8c8dbf6a2362"
        },
        "item": {
          "id": "f1234c71-7715-478d-accb-4e3666f8f752",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "c31c9ae2-2025-4d87-b613-a35633fc558a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5c811f5-8e02-47c9-aca4-9c8a89757887",
        "cursor": {
          "ref": "38413f81-68de-4806-8eac-077adeba28b6",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "3460af77-34e1-43ab-bf4f-6f565d0879c0"
        },
        "item": {
          "id": "c5c811f5-8e02-47c9-aca4-9c8a89757887",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4f214eb2-87be-4b38-a027-756c82679e88",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c3599e-4c63-40d3-9193-f59b185f2f48",
        "cursor": {
          "ref": "a1f9affe-cfd8-4e72-b945-2333191ca071",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "1bcfc447-e818-49c7-88fe-67c2ab0e2bb6"
        },
        "item": {
          "id": "b7c3599e-4c63-40d3-9193-f59b185f2f48",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e20342ce-e395-44de-92bc-9bba177e42ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9b010f8-fb66-4d27-86a5-73f9d71c7dee",
        "cursor": {
          "ref": "f4b4a430-71bf-40a9-b85d-95dcd3c8c85f",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "b54c88d0-48cb-40c5-8fa6-b126000b8371"
        },
        "item": {
          "id": "e9b010f8-fb66-4d27-86a5-73f9d71c7dee",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "381b24c7-825d-44f9-87d1-cfdc0a77d072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2aa062c-9e24-410a-93d4-d65169cb49c9",
        "cursor": {
          "ref": "b635b588-75b8-4635-98f3-3c4096011e56",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "a902a08b-09db-4a7c-a798-3a983648a2ac"
        },
        "item": {
          "id": "c2aa062c-9e24-410a-93d4-d65169cb49c9",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "8b2ed61c-525d-453b-a6dc-9e98953948fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ecca819-eff1-452e-9a4b-56a71bcf4486",
        "cursor": {
          "ref": "d0c43d4e-ecc6-469d-ac59-2ba42cb28a9c",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "fbee0fc3-b164-4f3d-b2e6-79770cbbf9b5"
        },
        "item": {
          "id": "0ecca819-eff1-452e-9a4b-56a71bcf4486",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "0307f49a-8eb0-4e03-91f5-3c4f1302b524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72095432-0975-4dd2-8824-6bdc29ce6673",
        "cursor": {
          "ref": "c6c33383-f71e-4a49-935f-ad7f02351f98",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "ce523586-1f2d-4e90-8fc0-472863240fca"
        },
        "item": {
          "id": "72095432-0975-4dd2-8824-6bdc29ce6673",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "83d29217-0ba3-4f06-a7d5-85202a1c1479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e78048c-47aa-44f9-a8c3-b7c1cc9cb36b",
        "cursor": {
          "ref": "92302186-b687-464e-a293-1aa0b69e445c",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "4e8a9077-f61c-4bc5-8d07-0e8aef22c394"
        },
        "item": {
          "id": "8e78048c-47aa-44f9-a8c3-b7c1cc9cb36b",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "27d47c2e-4b84-49d3-bc13-e7870b36f425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47bcda51-1eae-486d-a787-4bfdc8d92045",
        "cursor": {
          "ref": "2c8c0894-aadb-499f-a696-838c9b2331a8",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "38679f29-9c6f-4248-a264-2636f4c61ddd"
        },
        "item": {
          "id": "47bcda51-1eae-486d-a787-4bfdc8d92045",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "577372bf-7243-4917-bb53-1463ccb0fd1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45bfe730-76b4-4004-a33d-209c73680ddd",
        "cursor": {
          "ref": "d79bda0e-2ffe-45f8-ba7d-9c091880c024",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "0da0cedd-25bf-4f09-98e3-2f88c54a435a"
        },
        "item": {
          "id": "45bfe730-76b4-4004-a33d-209c73680ddd",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "30ceef7a-2cf7-4163-a53a-ba7f96939d53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6ddcab6-64be-43a2-8c9f-e56524b7d061",
        "cursor": {
          "ref": "f1d8a067-8b3c-4ab9-a98a-5a95cfc6201f",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "f3475859-b474-460d-be9b-d5fcfaefca50"
        },
        "item": {
          "id": "f6ddcab6-64be-43a2-8c9f-e56524b7d061",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "f0857002-4fcc-46d5-b7c0-e2c125bdc0cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b55166b-a031-4d9d-ade8-d2bd43597c8d",
        "cursor": {
          "ref": "8fd5b86c-9cfc-41d0-8655-49a3cb3a4192",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "040c4e62-0b85-451d-9b36-4ad024f5519b"
        },
        "item": {
          "id": "0b55166b-a031-4d9d-ade8-d2bd43597c8d",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "9665486c-95e3-43d7-8fa9-fd96f5795545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc37d3f-82ec-48b3-82ea-df1cbd9e4e42",
        "cursor": {
          "ref": "2de4296e-3115-4f04-99e9-095ce371dda7",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "d0b5b569-a6c5-4616-9604-17a595f750b1"
        },
        "item": {
          "id": "8fc37d3f-82ec-48b3-82ea-df1cbd9e4e42",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ab1e03f0-adc7-4779-9dbc-a49c8b281a6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d6fafc2-058a-488b-9bc3-189fa5d2595f",
        "cursor": {
          "ref": "a7dfd0f8-9238-4b75-be9a-9857dd2d1372",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "491f9116-aba1-418e-ac41-75ee6ddd0c16"
        },
        "item": {
          "id": "9d6fafc2-058a-488b-9bc3-189fa5d2595f",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "2eea31c9-46f0-4a2d-88d6-153a6069aac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "add52686-c01f-479f-b415-dbcf11921723",
        "cursor": {
          "ref": "468cb92d-10ad-4321-8a6e-715840c0485f",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "51c2c8a1-193f-4e89-981c-f774f1073475"
        },
        "item": {
          "id": "add52686-c01f-479f-b415-dbcf11921723",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "1649d06c-5252-4014-b234-88c020f3f818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2038fc35-c6d0-49e7-882e-bd45fe93a1d5",
        "cursor": {
          "ref": "4fb60265-6a30-402f-b818-669a88d94a4d",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "0d597726-3b94-4f49-8a03-a2570202b3e2"
        },
        "item": {
          "id": "2038fc35-c6d0-49e7-882e-bd45fe93a1d5",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "d53c0dcf-6e01-4d0c-9d52-c60b884e8059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab5bc59e-53b4-4324-b0cc-c4121c1a5099",
        "cursor": {
          "ref": "1a894ca7-c9d7-4475-809b-dfd45e0f8905",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "c0deeae8-02b7-470e-bcc0-64cdee8e2bcc"
        },
        "item": {
          "id": "ab5bc59e-53b4-4324-b0cc-c4121c1a5099",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "c6538db1-53a4-402f-9e55-bcaa88ee469c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeb27cab-f146-4eda-ace7-00349befe9cf",
        "cursor": {
          "ref": "84184d85-f73a-4938-b184-1027bc60dc7c",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "def6659a-c712-4190-b8e2-4e52fce69a58"
        },
        "item": {
          "id": "aeb27cab-f146-4eda-ace7-00349befe9cf",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "6dce12e5-2fea-4464-b59a-9d3575197e4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca719fe3-8c9c-46e5-b05c-5c1e0c6aa47b",
        "cursor": {
          "ref": "249a7c90-4e36-44d6-ac48-657413261549",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "b0ea950c-e46c-4213-a1ac-13a27ad20573"
        },
        "item": {
          "id": "ca719fe3-8c9c-46e5-b05c-5c1e0c6aa47b",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "8f085dab-27cc-4794-8293-b5b4caf3ac6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "433e34fa-6800-48e7-8a31-38eb6dda9d87",
        "cursor": {
          "ref": "e49ec207-9c87-4f08-bfa6-a092b71f7632",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "58d59c33-5137-49b9-8d47-61d2a8e1e918"
        },
        "item": {
          "id": "433e34fa-6800-48e7-8a31-38eb6dda9d87",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "abb4e49e-1a5a-40e9-92d1-7978d83a2b52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "146c447a-eccf-4640-b349-06f20e2669f2",
        "cursor": {
          "ref": "83c6642a-d530-4409-806c-267a28e0f297",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "f23eeae2-4129-4462-adf1-d3f37186e7b6"
        },
        "item": {
          "id": "146c447a-eccf-4640-b349-06f20e2669f2",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "b3eaf236-2f27-46b5-be66-fea22ca1cca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f3d186d-11b3-46da-912b-96545b378dfa",
        "cursor": {
          "ref": "67b45310-96de-4eae-8ae2-76f77bd7f2e7",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "7eeb46ca-404a-4956-9181-5cd5a01d73f6"
        },
        "item": {
          "id": "3f3d186d-11b3-46da-912b-96545b378dfa",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "9042723b-90e4-4eeb-9810-72e0e5dc1b72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06748e02-0d08-4652-8386-7a1109daaa81",
        "cursor": {
          "ref": "fe71787b-da4d-417f-bdbb-f65c3e65d53b",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "e5bdb201-8a22-49b1-80c1-d5c7950aac09"
        },
        "item": {
          "id": "06748e02-0d08-4652-8386-7a1109daaa81",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "419b5d15-38e3-4117-9dfa-433001a8d6fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fa0ea4b-9c92-4112-a3df-003c74533dfc",
        "cursor": {
          "ref": "02151ded-e3df-460e-9470-c40a78d7c72f",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "2235ae4e-8a34-4d91-b76f-3876226fe03d"
        },
        "item": {
          "id": "8fa0ea4b-9c92-4112-a3df-003c74533dfc",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "85c8c31f-8a66-41a1-99d1-fbe0bde9d237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46640735-465e-4a07-99c6-cd56c0d2b9ff",
        "cursor": {
          "ref": "90741fbe-d573-4366-9afe-5e9439f9bfab",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "11049087-7085-4a03-b796-550dd9bc4bf5"
        },
        "item": {
          "id": "46640735-465e-4a07-99c6-cd56c0d2b9ff",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "692653f7-94fa-4147-97e2-5152849d29ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af64d5de-7572-48d3-8b4c-efb9fb8bef74",
        "cursor": {
          "ref": "c22f125f-5345-4414-b2b6-898beaaed7ab",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "a773a31d-6973-4cac-bc71-489baabe419b"
        },
        "item": {
          "id": "af64d5de-7572-48d3-8b4c-efb9fb8bef74",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "b78d1da0-2f03-41e5-b1fa-69c14d2c3900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2790ec4d-eb61-4df1-a2ca-ff93903fe0bc",
        "cursor": {
          "ref": "ca5ea170-2d01-4429-a318-d142cea2bff8",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "311a731c-faf6-4fb1-b8f2-9699bbe94890"
        },
        "item": {
          "id": "2790ec4d-eb61-4df1-a2ca-ff93903fe0bc",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "88492b6d-05cd-4feb-86ae-84096c1ab58c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c46b932a-d7b0-467f-a871-e2eb40755e30",
        "cursor": {
          "ref": "ae155c13-d8eb-4658-a0db-f2f4aaef9b5b",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "236207cc-b688-4005-90b5-7adb74ed0fef"
        },
        "item": {
          "id": "c46b932a-d7b0-467f-a871-e2eb40755e30",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4d847f86-16e6-4692-9e0a-c1f8f0e2d4da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51eaf9ab-8f93-4262-875b-e93ef2455fff",
        "cursor": {
          "ref": "1e98f5f2-65e0-4a9b-bdd4-e56107f56dd7",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "b3dffda1-a8d8-4a38-aa2f-b7285d8ebb7f"
        },
        "item": {
          "id": "51eaf9ab-8f93-4262-875b-e93ef2455fff",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "88c70822-72d2-4fda-93ed-efefc99939cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f426b490-4e88-42c4-a299-16b7ac4e6a84",
        "cursor": {
          "ref": "adf28b2b-439e-4069-a9f3-c197c14331a0",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "d458d37a-e8dc-471b-9ba1-a8a5629958ae"
        },
        "item": {
          "id": "f426b490-4e88-42c4-a299-16b7ac4e6a84",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "24086c1a-64a5-4ebd-a680-d35f1bd48497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb10973a-687a-4469-9a62-c6babe16e8e3",
        "cursor": {
          "ref": "c51e0248-9b99-4393-8e6d-e60972c6c80b",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "5fbafc13-4ba8-4d11-a80d-7d88054e85d2"
        },
        "item": {
          "id": "fb10973a-687a-4469-9a62-c6babe16e8e3",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "a513c38a-7bf5-4a4c-be23-1bce2f033535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c15b566b-eb00-408d-8913-5f99a84e7fd7",
        "cursor": {
          "ref": "55c5f077-60aa-4591-9aca-ae28f2fbca61",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "2b21de6d-798d-467f-884f-76e18dc807c7"
        },
        "item": {
          "id": "c15b566b-eb00-408d-8913-5f99a84e7fd7",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "2a168aea-5a71-4012-baaf-c317f91bd4fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e08a9f5-7f2b-48ca-ae1a-09fc7bcf5892",
        "cursor": {
          "ref": "bfe3ee03-6863-4e12-ae08-0188db3724d2",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "7380d6f0-3349-433b-9f89-c52f7e6b5784"
        },
        "item": {
          "id": "8e08a9f5-7f2b-48ca-ae1a-09fc7bcf5892",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "e591b9ae-e132-4388-b2ab-611990bcec91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "997d7bc9-3516-41e7-b3de-660e15f0e413",
        "cursor": {
          "ref": "ac4780f3-bda8-48ca-aec2-4290d686429a",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "c8682473-4c4f-457f-8ce4-b7657b9f7e76"
        },
        "item": {
          "id": "997d7bc9-3516-41e7-b3de-660e15f0e413",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "16a2cea0-5a27-4eef-8d34-aec96d4bf23c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c03b2a24-4fbc-4a87-89bc-3546e8fa52ca",
        "cursor": {
          "ref": "0c1e4d25-b27e-43cb-a131-6964de4a2a45",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "023e1794-8168-478e-9ff7-7b06b78aa442"
        },
        "item": {
          "id": "c03b2a24-4fbc-4a87-89bc-3546e8fa52ca",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "482e4cc6-737d-4d83-bb49-50a90bbbd1de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a33d2bce-97a1-48c3-907e-835eeba8ee63",
        "cursor": {
          "ref": "c8da1608-af73-4e9f-adcb-e4bca7d1b5b9",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "c361422d-24fd-43c9-8ffc-513df94bfdd3"
        },
        "item": {
          "id": "a33d2bce-97a1-48c3-907e-835eeba8ee63",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "5136c866-8e57-4df2-9f38-54c0488077f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c187bd9-b8a8-4cba-8e2a-2b4e9a4e7c4d",
        "cursor": {
          "ref": "cdff26bc-e1ff-4a25-8a02-7523bee2c974",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "0665edda-52e7-4245-885d-7fd811915991"
        },
        "item": {
          "id": "6c187bd9-b8a8-4cba-8e2a-2b4e9a4e7c4d",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "11594b5e-83f6-4461-b781-ea0f4d9c4abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74c93a55-82f6-4e5b-a1c4-9602103b7deb",
        "cursor": {
          "ref": "7d04f90a-b294-4167-b02f-db54b1a7df90",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f8337a75-1f5a-4992-821c-141e56b74d06"
        },
        "item": {
          "id": "74c93a55-82f6-4e5b-a1c4-9602103b7deb",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "165c1247-9e49-4eab-92f0-fd8d57f1ad01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44f66164-2096-4609-b761-d225b0ff479c",
        "cursor": {
          "ref": "3d992e1f-c462-4674-bb7a-0b4e63e92e5a",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "8823195e-f4b6-4821-985e-aa7f3525a531"
        },
        "item": {
          "id": "44f66164-2096-4609-b761-d225b0ff479c",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "19f4271f-e8db-4208-a722-bed4b979ecc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7822b9d9-5597-4138-bff0-b8025ca4aff8",
        "cursor": {
          "ref": "ca7e4dae-8c32-4aba-8993-dd4ec941c5bc",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "97f547a6-5a10-4770-b5cc-d7ffa709b147"
        },
        "item": {
          "id": "7822b9d9-5597-4138-bff0-b8025ca4aff8",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "395447b6-3d23-4918-8ad7-dab3003fa573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9398791f-d0a4-42a5-ba67-6f7c219f8fcf",
        "cursor": {
          "ref": "c9894a93-3bbb-402c-9aee-7d56ee15ffa2",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "768f0817-3a77-4328-b5ae-fe99b314ebb7"
        },
        "item": {
          "id": "9398791f-d0a4-42a5-ba67-6f7c219f8fcf",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "947b5798-1e32-44ab-b2b3-118e7000573d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca5db5c3-f0c7-4e0c-a9c5-9ef0cdabf0be",
        "cursor": {
          "ref": "eea96ff9-c53c-4039-89c9-f17cf68c5c87",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "2ef46a1d-8aaf-46cd-8b83-1e7ad98ec8a7"
        },
        "item": {
          "id": "ca5db5c3-f0c7-4e0c-a9c5-9ef0cdabf0be",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "ffbc2a3b-fd04-4118-9f50-a5c577bd036b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f4b11dd-c6d8-4577-b0d5-afffcb9de62f",
        "cursor": {
          "ref": "7d423ef3-62d0-4d2e-a858-45627ea2ccc0",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "5da7f29d-faa3-4a8c-81f6-ae603316c409"
        },
        "item": {
          "id": "2f4b11dd-c6d8-4577-b0d5-afffcb9de62f",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "52226e3c-cab3-490d-8547-d259c628310a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d66f44ba-c74b-446e-984e-405283981699",
        "cursor": {
          "ref": "df24ea0d-5a95-48da-b085-a7ff7fd7e615",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "f7506a47-cce8-44ae-b173-d66dab5246f9"
        },
        "item": {
          "id": "d66f44ba-c74b-446e-984e-405283981699",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "8b2044e7-fc44-485a-bc65-992e9fd46f28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61193d99-1bbd-4688-90b6-c6fde23e5d7e",
        "cursor": {
          "ref": "9f00b02f-89c9-40da-9426-868192ecba31",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "797f5ece-fab6-4678-832d-db90ae02b38d"
        },
        "item": {
          "id": "61193d99-1bbd-4688-90b6-c6fde23e5d7e",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "9b0e78e1-8f8f-49a2-a9fc-76296af8b6d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e53facc4-f67c-4ce7-92ae-edc4ff43e78d",
        "cursor": {
          "ref": "9901700c-6f39-47d4-bc95-7ab2c5b85b2b",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "37861df9-4182-448f-a999-25c9e228e774"
        },
        "item": {
          "id": "e53facc4-f67c-4ce7-92ae-edc4ff43e78d",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "3e432bb4-d52e-4dff-aeaa-d3a705342382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f68bc34e-25a3-4246-a39f-fa06850f3378",
        "cursor": {
          "ref": "72b83805-8591-4670-940f-a350a882ed28",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "8271317f-ca80-42c4-aed7-10fe9043cf9a"
        },
        "item": {
          "id": "f68bc34e-25a3-4246-a39f-fa06850f3378",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "20b97e8a-d5a2-4c65-a150-a24209c3a5cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b44cd818-2a62-42ad-b85f-0d901bb6905d",
        "cursor": {
          "ref": "6c5bfb1d-65e4-4f54-a19c-65f74b5c4757",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "dc18eab6-0bcb-429d-98b6-e87096e817f5"
        },
        "item": {
          "id": "b44cd818-2a62-42ad-b85f-0d901bb6905d",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "9c6fa530-a8c1-4225-babe-a7080fb5abde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a78fc82-95eb-4c3c-8e63-cb1ac68d8126",
        "cursor": {
          "ref": "76b85938-1aba-4c5b-99c8-0d9112e8a659",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "6f489237-1291-437d-9cde-3db1b3b99d3e"
        },
        "item": {
          "id": "2a78fc82-95eb-4c3c-8e63-cb1ac68d8126",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "fa7c0391-29ae-47a5-b0d4-a489b06fda1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28660612-aab7-4de1-a21d-c1a27ba6aa9a",
        "cursor": {
          "ref": "4c970336-ba08-4ca2-a23d-da7d9d46f6e9",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "67a82bb1-889b-483c-8305-bd9b3ded0cc5"
        },
        "item": {
          "id": "28660612-aab7-4de1-a21d-c1a27ba6aa9a",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "369313be-387e-45b2-95fd-e60cbeb6e91f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf42ee6e-7cbe-4b71-a693-1e84389c353d",
        "cursor": {
          "ref": "5ca54335-6979-4b03-96b6-05f65077deb0",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "7c69a5de-ee93-4f23-8b6e-d75d745b792d"
        },
        "item": {
          "id": "cf42ee6e-7cbe-4b71-a693-1e84389c353d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "0faee811-a2a4-4605-b17c-d1deeb356751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9301012-4e1e-4f2e-9525-5e1f307a29cc",
        "cursor": {
          "ref": "ba039881-ad63-473a-a8ab-9ff53902c0c1",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "defe3401-2f3b-4372-bf2f-02c37fc7d27f"
        },
        "item": {
          "id": "d9301012-4e1e-4f2e-9525-5e1f307a29cc",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "7eb15f08-8efa-400a-892b-bfdf2cb58b78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "686071df-db85-4706-99ff-255c9e922137",
        "cursor": {
          "ref": "60c50cb1-daea-40a9-9451-f4ac19040ba8",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "f31f0543-a7c7-4b72-9bd1-39cde08914db"
        },
        "item": {
          "id": "686071df-db85-4706-99ff-255c9e922137",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "329d8c8c-7199-4b23-bfa0-b64c7464d317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53ea7f84-784c-4b5a-872d-aae80d6387d1",
        "cursor": {
          "ref": "7e0f216e-d806-4445-8552-9849ee2ef7df",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "f4b208cd-30f0-409e-823f-32cbdc230c70"
        },
        "item": {
          "id": "53ea7f84-784c-4b5a-872d-aae80d6387d1",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "aa751c85-f330-43ae-8bd3-614173fb9a89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2eb5602-2e13-4727-b7ae-581a9152f361",
        "cursor": {
          "ref": "dbece61e-7cb2-450c-8d67-70dd6b9b64eb",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "5297239e-8567-49fd-a409-33a3d6d070d6"
        },
        "item": {
          "id": "a2eb5602-2e13-4727-b7ae-581a9152f361",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "d6f5755f-a750-4fac-a6b3-98fdec803b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71ba23ec-1c78-45a6-a495-1261d99b3661",
        "cursor": {
          "ref": "d3ecdba4-3917-4acb-a166-8492321de246",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "a9a07743-c0c0-467b-993e-c8b768e3905a"
        },
        "item": {
          "id": "71ba23ec-1c78-45a6-a495-1261d99b3661",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "3f576688-9daa-4799-af06-15e868351de3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20349199-1606-4fc8-9c45-7afad1c6242a",
        "cursor": {
          "ref": "2f7b033c-197d-41bc-a5a3-2acf3a91f293",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "9099b223-53f8-4da2-8f4b-b06c9f33e897"
        },
        "item": {
          "id": "20349199-1606-4fc8-9c45-7afad1c6242a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "1761f423-4031-4367-9c9e-ba10372506b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fce8364-a7fd-4339-a6b4-fc8563d811c3",
        "cursor": {
          "ref": "c4ff1c40-a0ab-4d3c-841e-200e3c2d7dd6",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "c67be6da-937f-4679-b1c9-81dfad0a8090"
        },
        "item": {
          "id": "8fce8364-a7fd-4339-a6b4-fc8563d811c3",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "0d0b5199-53b7-4a64-8742-1e1bef7c72d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7b42a86-7f1c-443a-8314-17b27549c268",
        "cursor": {
          "ref": "b544cc07-445c-4e1f-9ad6-a784e04445fb",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "73084f2f-f561-443a-b896-48ba5eeecb73"
        },
        "item": {
          "id": "e7b42a86-7f1c-443a-8314-17b27549c268",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "8e214bfc-2536-4b76-a38f-3980e9189fc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07e3cba6-1b91-413b-98d2-c1a1a94357cb",
        "cursor": {
          "ref": "ea7f7385-c667-4513-8e00-2b0fca29cefa",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "91eb3ba7-d1c5-4c06-b015-a4065e1069df"
        },
        "item": {
          "id": "07e3cba6-1b91-413b-98d2-c1a1a94357cb",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "6ecbb9db-b673-48c1-a682-034e26e83453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d301c32-9cbb-4d12-af8a-dcafc5d6f96b",
        "cursor": {
          "ref": "26520b96-4a5d-4ac6-a316-de2a0865daeb",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "ccdc0e26-e720-41de-82c3-26b52070b859"
        },
        "item": {
          "id": "1d301c32-9cbb-4d12-af8a-dcafc5d6f96b",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "6a0c8af9-f738-43c4-a521-12270677d9ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32266ed3-8a0c-4568-8ddd-10326e1e8cac",
        "cursor": {
          "ref": "e8f2b3d9-cd8b-4eae-935c-f1cea200b9e6",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "68436f46-9c0a-45ce-8776-61bb257b73bc"
        },
        "item": {
          "id": "32266ed3-8a0c-4568-8ddd-10326e1e8cac",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "8c7b2664-c64f-4892-a68d-7c21d55b8276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c20b14c1-d442-4d92-8af4-a483b2e9f8c0",
        "cursor": {
          "ref": "aaea2364-19b1-47e3-8775-494cd3757565",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "ab935dd6-abb2-45dd-87e0-6441c093b5ad"
        },
        "item": {
          "id": "c20b14c1-d442-4d92-8af4-a483b2e9f8c0",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "fe2e60a5-c1c4-4433-b090-6fba774c1982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "975e923a-427a-4903-a6e4-d4332890ed30",
        "cursor": {
          "ref": "252a075a-6df5-45c0-b11c-eb9d360d5a44",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "fb46eb1e-eb1d-4618-ab41-aecdb42725d5"
        },
        "item": {
          "id": "975e923a-427a-4903-a6e4-d4332890ed30",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "f15ceba3-5a6c-478e-a7c3-e4d71e16e9d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55d2b960-683b-4265-bcbf-0e101a64abad",
        "cursor": {
          "ref": "8920acad-ad18-4ba6-b894-f066566750f5",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "18f32c3c-e196-476f-a618-bb1bc2cf54f5"
        },
        "item": {
          "id": "55d2b960-683b-4265-bcbf-0e101a64abad",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "2096daac-2409-43ce-b827-745ef1a7ae5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "258f2ab1-cdcf-48b2-8c20-32edacd60534",
        "cursor": {
          "ref": "3a4f46b4-f31a-418a-b2dd-0af3916d1d39",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "593ccd8a-8714-42a5-a216-873897ddeefc"
        },
        "item": {
          "id": "258f2ab1-cdcf-48b2-8c20-32edacd60534",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "d1299fdd-af60-4081-b26f-67bfb567a1e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4302e44a-6313-409a-9a9e-473335f7a019",
        "cursor": {
          "ref": "da864187-2e5b-4577-bb00-dcc5171d94b7",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "2df6fac0-1bf6-46cf-9c2c-de29c5cfbeb2"
        },
        "item": {
          "id": "4302e44a-6313-409a-9a9e-473335f7a019",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "6900a0d3-c57b-4083-a1ce-40cf068ae64b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8847f71-00d5-4c72-b7e9-3a0c5d8f5ae0",
        "cursor": {
          "ref": "c844f235-2ccf-45e7-8c8f-ddb5039ba80f",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "dfc7b64d-cde9-4283-ba89-34a93025a2d5"
        },
        "item": {
          "id": "b8847f71-00d5-4c72-b7e9-3a0c5d8f5ae0",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "18e5f708-7fac-437b-a41f-36a85df51fce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d437a02-3c97-4559-bb61-eecc3af98483",
        "cursor": {
          "ref": "2c41d035-a5a5-48e3-8170-ad4f8a06f49d",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "dddae291-4866-4529-a574-a58c7d19e3c7"
        },
        "item": {
          "id": "0d437a02-3c97-4559-bb61-eecc3af98483",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "dcd41c31-05cf-48d8-9a50-c8fc224682a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49cc3e82-501e-47e9-9e61-7bcfa60e94ef",
        "cursor": {
          "ref": "76132550-e7dc-4236-a056-98630a6a8428",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "2a00710d-2a74-4ca1-8d85-78c6a3be3487"
        },
        "item": {
          "id": "49cc3e82-501e-47e9-9e61-7bcfa60e94ef",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "1ca65761-caf8-4144-ad85-cd1583327682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b104674-8428-41d9-837f-f70b9c3fa69e",
        "cursor": {
          "ref": "7b6e5879-3da7-47ad-b3a9-95b74010d79e",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "3d659e10-20e4-4981-9704-5dc918d180aa"
        },
        "item": {
          "id": "0b104674-8428-41d9-837f-f70b9c3fa69e",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "844e3f10-2361-4464-b941-1f9acad187b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57357eb9-712b-41e1-b734-8f9b50228f61",
        "cursor": {
          "ref": "6696dc9e-abdf-44cb-bf7a-682b71daff08",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a628e21b-336d-4a65-bcc8-e32f9a92197f"
        },
        "item": {
          "id": "57357eb9-712b-41e1-b734-8f9b50228f61",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "416a89d7-4ffc-4ed3-98b0-7f19eea37138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eddb3f20-77af-4b2d-912d-18678cd78839",
        "cursor": {
          "ref": "ca5fb3f6-112b-4a49-8456-a8f682bf086e",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a5f2af27-38b1-4f7a-a6de-be2f466a40b0"
        },
        "item": {
          "id": "eddb3f20-77af-4b2d-912d-18678cd78839",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "06092bfb-3ace-45c7-80ca-af5a246ca594",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f957889f-fd2e-4f70-b220-56ad17bbec94",
        "cursor": {
          "ref": "d55e5e42-8ae6-4bb0-8e34-8808a500a968",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "4b02e9aa-6bd5-4d9a-a3dd-aa0e930823c3"
        },
        "item": {
          "id": "f957889f-fd2e-4f70-b220-56ad17bbec94",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "e75d7af6-0f4c-4a34-934a-ab03521df6cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54aa27cf-e485-413e-a8bd-09234475fd79",
        "cursor": {
          "ref": "cd1fdb23-a77a-4609-9b24-2ec4a239a651",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "9345c953-c1c4-42c2-9269-dee279db7a2f"
        },
        "item": {
          "id": "54aa27cf-e485-413e-a8bd-09234475fd79",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "73c2d9ce-7540-41eb-aec2-20e8ddc98aaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "028fcf67-3a7a-4feb-8347-c2f3ecb79a48",
        "cursor": {
          "ref": "3baaaf89-36f8-43cf-9efb-2630cb25d8b8",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "412c4edf-a7b9-4647-9c88-61a2710415c7"
        },
        "item": {
          "id": "028fcf67-3a7a-4feb-8347-c2f3ecb79a48",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "19564452-ccb0-42db-8f3f-8a6536f56014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85c0c0cf-5320-4ba8-8753-ebdf2560ad33",
        "cursor": {
          "ref": "7ff9ab09-2781-4817-91f1-76d4542663ad",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "8ae14749-423a-4a11-8d30-e78f5195ed07"
        },
        "item": {
          "id": "85c0c0cf-5320-4ba8-8753-ebdf2560ad33",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "884e2d8d-744d-43c2-a6e6-8c33640bf738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27083f62-6676-4da4-9e13-ac44d9c4397b",
        "cursor": {
          "ref": "84bb18d7-eaee-4897-8ae2-9737235dbaa4",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "5a4121d4-6c95-437f-a066-6c05374d1cc2"
        },
        "item": {
          "id": "27083f62-6676-4da4-9e13-ac44d9c4397b",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "70ec95e8-b334-49ef-bce2-ebbd50db3eef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa846b84-3864-4004-94c2-17f2ecbddcf4",
        "cursor": {
          "ref": "8fdb6c34-1f4e-4693-9a52-641507b41fa2",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "335a6785-fa69-41b2-b0db-1cb08c2a05d3"
        },
        "item": {
          "id": "aa846b84-3864-4004-94c2-17f2ecbddcf4",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "8e0a57c0-20f4-4666-b672-ce2c4700e7ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31297f61-69f1-4cee-bd97-f7bd1bfdd87a",
        "cursor": {
          "ref": "08425e84-c7da-4837-bd7c-9bad6deca52d",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "6e7d4785-960e-4e25-992f-cfa5d45ea720"
        },
        "item": {
          "id": "31297f61-69f1-4cee-bd97-f7bd1bfdd87a",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "6eb291d8-8652-46ea-aa13-e4abda7c781e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f294c040-13ee-44ad-a87a-4507265910cd",
        "cursor": {
          "ref": "6cacd29e-7a44-48b7-9f4f-db14668add21",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "36edcd10-59b9-4657-8352-6b6d374d27e8"
        },
        "item": {
          "id": "f294c040-13ee-44ad-a87a-4507265910cd",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "8440f9ba-a2b5-42fe-a0bd-7c8f731e914d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d34cd1a8-c4af-464e-aafa-92112ba68cd2",
        "cursor": {
          "ref": "f7ed0296-d715-4a91-abfb-d796b14bba98",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "448a607b-44b4-4a95-895d-85c513c945b0"
        },
        "item": {
          "id": "d34cd1a8-c4af-464e-aafa-92112ba68cd2",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "7ddf3f8e-3510-4875-aaa9-231b14f81768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92835860-13ff-48cd-bdfd-18ea69ed2827",
        "cursor": {
          "ref": "bb0807ae-e9a5-4f00-a9ea-e6eed8492c16",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "2725b9c2-0060-4650-a4dc-e5bc4f9a055e"
        },
        "item": {
          "id": "92835860-13ff-48cd-bdfd-18ea69ed2827",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "3efd2dae-ef8d-4090-b854-c2d03fdf7860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a3e34c2-145f-4cda-ab88-645707e6cc3b",
        "cursor": {
          "ref": "ed923d7a-2c75-424c-a1e4-b6fc7b26a23f",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "c4e9ecb7-a682-496d-a83a-8d1273ffc7d5"
        },
        "item": {
          "id": "7a3e34c2-145f-4cda-ab88-645707e6cc3b",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "26239193-0e2e-41e3-972c-1c1506e7f648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9b0958-88cf-405d-bf13-1a06f77cef8a",
        "cursor": {
          "ref": "d7092412-493b-47b2-81d0-19cdc7c137be",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "cc7b72d2-54ca-4e0e-be31-5a5bcd969434"
        },
        "item": {
          "id": "6a9b0958-88cf-405d-bf13-1a06f77cef8a",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ee8d7f77-0241-4b63-b556-166bd86a776f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad03273b-d5c5-4c5e-b239-58be55c4024b",
        "cursor": {
          "ref": "9daa002e-7bbe-4cde-81e7-243a2b23300c",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "b791dbb6-c8f8-49b8-b5d4-ee5c98abf9c5"
        },
        "item": {
          "id": "ad03273b-d5c5-4c5e-b239-58be55c4024b",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "e7d60f32-4ecf-4ed6-963c-f706682a7aff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "298c4fb0-a011-452d-9a8c-ac1afdda9d54",
        "cursor": {
          "ref": "c943b6f6-8a00-4bcd-ad2c-edaa9451b042",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "237b04f2-47b9-41a0-89a7-677fa679309d"
        },
        "item": {
          "id": "298c4fb0-a011-452d-9a8c-ac1afdda9d54",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "26cd8f29-f231-4010-a926-f878183f545e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7fdba5a-8270-4b6b-843e-dbf529e9811f",
        "cursor": {
          "ref": "f7ff19ef-af98-4ffb-9299-1260058a273d",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "314ee914-e514-4585-8eb5-4ef436e0aac5"
        },
        "item": {
          "id": "f7fdba5a-8270-4b6b-843e-dbf529e9811f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "a4c93a39-fdfd-45c9-a333-a89780ad8c23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d661c7-19d9-4096-bf97-ff1e00c222cb",
        "cursor": {
          "ref": "550e8d12-085c-4780-a071-638bfe273c76",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "bc05856a-fe10-423f-a90a-723341621bda"
        },
        "item": {
          "id": "47d661c7-19d9-4096-bf97-ff1e00c222cb",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "71fe2ef5-5646-4852-8eb9-a2ac48221f89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "574de3e8-51ac-48b0-b57c-b537a5984ddb",
        "cursor": {
          "ref": "8e225d59-5642-4382-a673-35e63577f4a8",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "774f18bb-ff05-476d-8003-20a322c1457b"
        },
        "item": {
          "id": "574de3e8-51ac-48b0-b57c-b537a5984ddb",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "ff095845-fe97-4c33-b17b-7f18c4e9b140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e7275d7-4e5c-4e10-9ae2-d8b734ed8546",
        "cursor": {
          "ref": "cab80075-67b8-4dfe-9992-b08a80f7db8d",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "e5f15df4-1801-4f41-aa81-ff87a6a3734f"
        },
        "item": {
          "id": "3e7275d7-4e5c-4e10-9ae2-d8b734ed8546",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "bb07e69c-aab2-4643-8d96-a712240edb0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "229760cc-e9eb-4c2d-8fa7-ddea428a6506",
        "cursor": {
          "ref": "af7fe94d-d51b-45d2-8e5f-180db565a9e1",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "7f30d855-3c46-4071-9a96-9b18fd2595dd"
        },
        "item": {
          "id": "229760cc-e9eb-4c2d-8fa7-ddea428a6506",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "f4f10864-37de-487d-8e65-214a1dabe0e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51f53113-a24e-48ac-bea0-35d5592b944d",
        "cursor": {
          "ref": "c0fd23bb-5c26-46e2-a436-1b9db496c857",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "3671b934-0be7-4644-a250-e70626269347"
        },
        "item": {
          "id": "51f53113-a24e-48ac-bea0-35d5592b944d",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "f6fac4ac-0af5-4eaa-abe7-ff2764ff3e21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b7f4345-104d-4326-b461-bcf77f5a4fbe",
        "cursor": {
          "ref": "58dcc8db-ffb5-48c0-bfe8-5ef8fb166196",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "4c2e28cc-4e89-4bf3-b67a-c4607bd1c7fa"
        },
        "item": {
          "id": "3b7f4345-104d-4326-b461-bcf77f5a4fbe",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "52c6f994-580f-4ffc-a3df-9c7ef32c06a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62b11da4-619e-4ee4-ae3f-c439697634f7",
        "cursor": {
          "ref": "53362b4e-241e-4557-8fc1-cef792ddb931",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "5f549cde-863a-4293-a38c-b2705e8a4f5d"
        },
        "item": {
          "id": "62b11da4-619e-4ee4-ae3f-c439697634f7",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "7370d95f-d500-4382-8b8d-f66061f8df10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4cd2c12-1a38-4807-b96a-0e2f30122299",
        "cursor": {
          "ref": "9c79abb5-e57b-4ca4-9e11-4ad6ee285a43",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "f494b61f-64d3-4be6-934d-b59988be2d3f"
        },
        "item": {
          "id": "a4cd2c12-1a38-4807-b96a-0e2f30122299",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "4eaf16e4-3d59-416a-96d3-0b4d00b4369e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a2fe651-4cb3-4b4a-936f-c925cca41b1f",
        "cursor": {
          "ref": "a99020c1-e2d2-4478-9a75-39101e1a95d9",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "eabdf5a7-b158-4532-8130-9fe37e9a70be"
        },
        "item": {
          "id": "3a2fe651-4cb3-4b4a-936f-c925cca41b1f",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "09c19f8c-0c63-445c-825e-0437bf8e542e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "417b4584-50c5-4ea2-9abf-8642391137f7",
        "cursor": {
          "ref": "2f7c9766-0fd9-4382-85fa-318913382aaf",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "4e182a00-5581-47ed-aeed-c9eceead7743"
        },
        "item": {
          "id": "417b4584-50c5-4ea2-9abf-8642391137f7",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "70280891-94ff-467b-b1c0-511192aa8587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ddc4b10-04cb-4c6e-9bf3-cbf91daaec33",
        "cursor": {
          "ref": "a5ca6ad7-7a86-4f1f-b2d3-5fcf70c12755",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "2a4851e7-a0a2-45d4-a933-2646708cc8c6"
        },
        "item": {
          "id": "5ddc4b10-04cb-4c6e-9bf3-cbf91daaec33",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "88cd6c43-af07-4280-9f2e-ba9b500a564a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "988fa6af-237b-490c-b467-283cd1427108",
        "cursor": {
          "ref": "bb02067b-a9a7-45d2-b6d8-d8a4f7c1cdb1",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "929109f4-ae3b-46c0-8803-87fc6cfc814c"
        },
        "item": {
          "id": "988fa6af-237b-490c-b467-283cd1427108",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e85cd2b5-1456-4f11-b1fa-8102138eba86",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ee062e9-f22a-4bcd-80b7-cee403f6943c",
        "cursor": {
          "ref": "d99a36f1-8635-4292-b00e-45cbcb93af9e",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "b1c2209f-b929-4f8b-8dc9-7996b594dffb"
        },
        "item": {
          "id": "1ee062e9-f22a-4bcd-80b7-cee403f6943c",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "bc462489-be76-4ea0-97ba-c71872b5b5e3",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eed0aec-60fd-46db-a3a8-517718205622",
        "cursor": {
          "ref": "77ec2989-022e-4cd7-ac6b-f744d55956f6",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "8cc667e1-ddf8-43c0-b318-2b1bc1e61790"
        },
        "item": {
          "id": "8eed0aec-60fd-46db-a3a8-517718205622",
          "name": "credentials_verify"
        },
        "response": {
          "id": "0a6b5eec-e571-457f-abb9-964e8cc8d9ca",
          "status": "OK",
          "code": 200,
          "responseTime": 23,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3390076-5ab9-4275-938d-8bc1a33b36a8",
        "cursor": {
          "ref": "274ff961-7a2f-42b8-a722-bfd00076c3bf",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "5a7273d9-f7dd-4322-a673-350496c361c0"
        },
        "item": {
          "id": "e3390076-5ab9-4275-938d-8bc1a33b36a8",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "dc12bdeb-92be-4b18-a1b0-12fef3162065",
          "status": "OK",
          "code": 200,
          "responseTime": 27,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad6cb093-6789-4e7b-b42e-fae1ec09600f",
        "cursor": {
          "ref": "4ecfd32a-83f1-40d6-aab0-4e6dcb157351",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "7969a773-81f1-40ad-9c67-e4fb822c34d9"
        },
        "item": {
          "id": "ad6cb093-6789-4e7b-b42e-fae1ec09600f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2145dcff-12db-449d-a04c-a0e2c747dce2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad6cb093-6789-4e7b-b42e-fae1ec09600f",
        "cursor": {
          "ref": "4ecfd32a-83f1-40d6-aab0-4e6dcb157351",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "7969a773-81f1-40ad-9c67-e4fb822c34d9"
        },
        "item": {
          "id": "ad6cb093-6789-4e7b-b42e-fae1ec09600f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2145dcff-12db-449d-a04c-a0e2c747dce2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff1d77bc-6498-4dd5-8c47-39c8448292b1",
        "cursor": {
          "ref": "29fa3739-05e2-4bb6-a740-f2df5b0d4ed4",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "dac11b32-ac91-4a72-b44d-429795becb76"
        },
        "item": {
          "id": "ff1d77bc-6498-4dd5-8c47-39c8448292b1",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "59a923b0-704e-461a-9c2f-b2af5d9bc83e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 11,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9529f4b1-a95c-45c1-95f8-441114212c4c",
        "cursor": {
          "ref": "59e3d9c7-ec89-4057-a0e4-60199e849e4e",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "b9fcdced-51a3-4ec0-b8bf-5a848bd19f5b"
        },
        "item": {
          "id": "9529f4b1-a95c-45c1-95f8-441114212c4c",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "12997e16-388c-4751-84d6-2e8c9bb95461",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}