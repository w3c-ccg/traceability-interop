{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "d1856cbc-b123-491e-a49e-e5e336c4e86a",
        "name": "Clear Cache",
        "item": [
          {
            "id": "6a13533b-fb0c-48f6-afa6-342ad2a096b6",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7d818aeb-956b-4bde-95d2-f312914f2654",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "cc3f020a-aae8-4847-b47c-dec8cd363e20"
                }
              }
            ]
          },
          {
            "id": "82db3fdb-8576-4a2b-8d38-bee8da11b708",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fe86f872-ec6f-4377-be9d-9b8d2b41081c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "3e24e679-8c18-484c-a96a-6b192b970375"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "0b8ec5fb-25eb-4ad6-bfa9-43bc8523e033",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "10d089ef-5de2-41ab-aecf-c20df202113e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "92d16504-32d9-41a2-8572-9efb5fd27f13",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "97c97559-063d-464d-8e15-7a5e75322cd0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d1b4a750-75f0-4997-aff5-808adae19033"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f4bcec12-c737-4462-954e-f4e64143ba86",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ac6c7863-7769-48ab-b2fa-b6539baae64f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "890245ab-2b4e-497a-875c-39f3a69d29db",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6987ad53-a441-43e7-9d8a-1196ccb59fac"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "38a94dd8-fc41-472d-a640-518652d033ef",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "4b7ccb64-9b2e-4407-8158-a1886b063cb0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1793db8e-0174-4579-b646-36f4ebbb93cb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d9c82de9-7304-4d39-880f-8442a31ce2ba"
            }
          }
        ]
      },
      {
        "id": "f04f7694-7733-4999-b71f-6515ea8503ed",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "80b99c9f-c622-48e3-b2d6-e2976dbfd68d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "601c8cb7-c145-41cc-ba71-94877ae52a77",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "160e5868-fc2d-4221-a0aa-55fc431a6aa7",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04359797-61fb-439b-9921-b2a5c44c4c17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ece4d30e-3052-4995-ac6c-3c34fe0fe5c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ce321c3-806b-4e69-9395-e4d02665c701",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96b52aae-46c7-4453-b233-09203a1fb0fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "882f38ab-fbcb-453e-a5cc-8abe18377b21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddbbde63-cd48-4929-90ef-e0239cfcbe83",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e58be20-c333-4f0c-bbf2-43e836f05619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "391b5e1f-fafd-46a6-a4ee-51a928b91cc1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "35bd1195-bc1f-4b23-9e48-4c352486cc0f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "44ec516d-708d-4888-8e71-5a4fff653704",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb28639-b945-48f7-9ca1-01b1b6a86587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "32840964-ab85-4cb5-aaf9-b8a7a0ad7f34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69070f0b-ce16-4178-8935-5f6ef9287a5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f05029cb-5203-49b1-ad53-a005fcf7afb5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "fd6a100f-ce57-4088-bd95-50d090065ccd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8f994b3e-318c-423a-a4c8-af902fbac63e",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6cdf91d5-37c6-47ad-b36f-4fca84556f97",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "a17d8cc5-02fd-4c38-b5a5-ff58d619ee46"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6d01d1bb-492d-4459-b25a-a53406c527b0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "e4c1a33a-21f7-434f-a592-bbbea80b1828"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1cc9749a-a0e7-4ff9-b290-3c6c9ae91756",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f189064b-a1fb-4a2b-a376-a23b970aa178"
            }
          }
        ]
      },
      {
        "id": "bdcd0e42-7016-4583-be8c-497a65669b80",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "f32da67f-dcf2-43e5-8878-8507adb873d4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6196e242-06b1-4559-955d-1905c302022b",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "4bc52b42-9ce6-46c9-85d5-40a147396a95",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b04c24e6-51d1-4881-af3b-cd50739a2107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "985be575-2627-4796-872f-8de49711b40d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d84978f9-ccb7-4f62-9cf8-ee21500a6854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "61b3a368-7049-43ea-8197-d68e1d1fabb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8af36fbe-8313-4968-957e-3089c10395c7",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a627b33-d4cc-4fc7-9696-b00745cabd39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8793393-4d96-479a-bb14-be3e06284acd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1f5a852-760e-496f-947c-009af247134d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c556427b-52e5-4d77-ac64-a608dbf95fdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e18b630b-2d32-45a2-a23c-9468b87fe964",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c400aa07-6526-4f89-862e-0f3ed4e4af9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b22a7fc-c10e-495b-9d70-89f8b212fc31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f6d80f-4e35-45b2-966c-1ca27c9f01f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "278c9f32-a110-4b3c-bc3a-62000cbd0fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e866ef4e-a830-40e9-a805-f92d3f18e5f2",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3be2603-695e-404f-b7e5-2a926c294a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "427dd464-01d1-4738-956e-1cd413b50c66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ddd874d-c42c-4fa7-a2ee-0f3df9b2c18c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "efeedf6b-3dd9-4d57-bd20-61111990c717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d0741ff-3e7a-4fb3-971f-d6eb6b12992e",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf47bc8-b030-4b37-b56c-8a973fa3ba73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac2e60d9-2ab6-481e-8a8b-8580f3d4b97c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42a5149c-b9f8-4f2d-bede-3801dc3f6d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "912c1bca-eda5-4b23-8dc7-32d6340e58d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5a979fe-3f64-422c-8c14-cdae404da1e4",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c9b0438-3784-473a-9897-c6b02cb2e05d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9394a3d8-6424-4746-848a-ac4f21ab876b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb0c4339-fd2d-4904-bb64-b06d17cd6247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d263336-391e-41e9-ade5-1f65e6373b09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7506ad5e-b163-45f6-88ac-ed9ac6bab669",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc881435-599d-4084-ac45-e9be7708800b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea2f928c-d02f-413c-b927-443fbe1deb9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a545e9e-7b88-4c28-8a7b-6128f6f93737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "60a1ddaf-080e-4777-9c20-41703f81d6c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e94edddc-6682-4c41-8a62-da80612b886e",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9ec915d-f7f2-424a-98cd-018c541a0937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f3006a8-b105-42eb-a6a8-1c417bf776b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "536cb15c-edf5-4068-9459-2300cadbcd43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8478bb01-de72-4c34-b62e-aa420b03d75c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b20d3356-ea8b-4fda-958e-9bb8572741bd",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f64240e-5dd9-4db8-8bd1-302c646fcf6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08a9bce7-d534-44c2-9632-42ef7ef5ab19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7db53f8-702f-4365-b107-1e12b3077157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "03752e28-0248-4dda-943b-d86bab86ff53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d668c8dd-13ec-467d-8219-7f265c17e3e8",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a7b0877-0499-4f33-9632-8fc4dd46719c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5463f962-23a2-49e6-b74a-83881945f057"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb954c88-67c6-4fb0-ac25-68a27173cb0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba21b1f6-f19f-40f2-87ff-e4b9b0f2bb75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "131c0f54-917e-453b-a841-c424694898f5",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a00ea228-28be-4395-b47c-78c4dc5e69da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbbd3ee6-dac7-4b25-8a47-0096b39dfc95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50ed766a-0a5c-4bdb-9423-ea036bca3f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a00b03cc-54fb-4293-8ef6-bf6ddcd85d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b06539-300c-423d-b2e1-32aa66cc5bb8",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3229b8cc-6b6f-4cd3-afa1-d5bc2c442f62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7093f75-ad4f-4223-a6a5-12a009236f1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38a1c0f9-0f5a-429f-943d-d52f218e522d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f8d53dd4-bd2f-4792-8385-56d7aa9e84ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7810f9a-6a84-454d-a02f-896ce75449a6",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c495151-118e-4e9c-bbd7-4c497745e676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "292b1fc3-d5cc-4ec2-a13f-9255e5748b12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d613a1be-f4de-423c-aa5a-b6aadf98a873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f5f39111-219f-484e-a302-7feb78043fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f5d58cf-5667-41c7-ae1d-8f11636d046b",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06fa0c8b-c145-487c-9eae-097110a28e39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df35e6f3-81cb-42b6-81cb-eea5a913f756"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "496f3906-baa8-4794-8444-c88531b9e28c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0288d078-2a4c-448a-ab9f-9f977762eeb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b429489-4406-4fa4-8ede-23341720da48",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dd5101e-1cbd-463a-b38f-b35868258308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c56f156-3210-428e-9411-73a13c153b82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65dcfc3b-66a0-4af7-9af5-346ca443c536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "90dc0ada-efdf-41e4-ab02-46aef0be7036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a44ee071-b44c-4aeb-84b8-04425377989d",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5959b495-ae35-4c4d-b2af-e8e63a27b678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebd1fde7-2a1a-49a7-bafe-db98299b2898"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08cdbddd-05e2-4b1d-a6c2-8d0296c9e4e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cd159265-182c-4ca9-8f18-0e38c60209f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1809d7f1-7979-4789-b827-bcc58b779051",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f72f1392-1815-4db7-baa6-adb6402ebd12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ce88003-dd18-4baf-bf11-8eda0b6a50c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57ff29a0-b32f-4b1d-b28c-298ce07ec38f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d139bb07-fbc6-486b-812a-2927f51a6186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "398e5471-7075-4f4f-b4d6-b264fe5d6d9e",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0d967b2-edf8-4d5f-a306-d6183451eafe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c021c5fc-f63c-4feb-81bd-7b6bc36a2f28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1e6083d-e3e4-41c4-9e93-bd482ed774cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c373080-c508-4723-8afd-15597f9a31f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63273524-502b-4328-88c7-73b98ce14511",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b21cebf-8960-48a6-a864-f7f80ce05fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8310baf9-3e7b-4f09-a1cb-35db59db90ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5e4ca55-a4a0-433a-9121-9b2708342d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d5b120b-108a-4d7a-80b6-2de60330852a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85cd4e22-fce0-4ec1-9680-777b81c8c79d",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13a86dd8-65da-4bc6-b795-1284a96c7b59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "616a0502-05e3-40e6-8d26-0d34a6dfa843"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4034390-2d4c-4245-946a-43d7cfb7cdf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2080659-2b15-4ca4-a246-38c60b373104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e128a4c4-ee83-4c12-b9da-c33bede4b13c",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9056a7f3-9b6f-4f9b-a355-50a9937a93a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c901a204-6dc9-4161-90eb-d725a5221aa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1d1bd5c-0751-4db8-a22c-dcb1a852a709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "70ae5526-6c27-4426-8380-9de619ae7e5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a61d290-129d-48c0-ba96-57fcdf08c973",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dbf37c9-393e-415a-92f1-152dda5eba3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e805f35-12b1-4304-8f83-e06bce633f48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47aef0e8-a96a-4e6b-9455-ebca619d189f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5254f5c2-3a12-4b56-962e-4838967e820a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fb6d8f6-622a-4df4-aad4-711ad826de4e",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47a203f7-5083-4241-a5cc-4c1f7712c3e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87ccd886-479d-45cc-8313-4b962b7cbf13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "086c49af-c6b3-46e6-8f29-e61ef6f6e561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "19d720a3-ada5-40fd-87f7-601cb1d79ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df74cfe-b6d1-46d8-ac0b-a1b6e5d98fff",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8772be76-cbf5-4e50-9a82-2f57ebb570d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d84fac0b-b5d7-4394-b2dc-7e04749d936d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad7618bc-2872-49b6-bb93-e0832c1686fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d8c6ce5-2ac3-4f6e-9776-8fedbc01df98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0346baa-6a3f-41d7-81d1-b2525f09606b",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4742c00a-b6f9-41be-937c-c448dfe7049e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "901e9f57-7286-4f5e-a9e1-78f4ca1e8b76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f304f9ba-d003-431a-aa23-07c8a7878b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5f3b64d-0297-46d0-9c53-1bc46431f523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af5268f1-9c24-4c34-9c74-55a0e2024226",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3333de9f-ab96-4d72-9c58-20036df44afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a00f7a7c-e1c4-469b-bc9e-2e26a2863450"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65f48b1f-9054-4c84-93a7-f028ad3d39f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e10aa55a-dea3-41e2-9dd7-d3828003b6b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e48f68b2-2a5d-46ed-ab37-9562a6693825",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90f90c35-15e9-45f6-bacf-0f568cee81b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c857bca-3e84-4a95-bfb7-0c4f14036d46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fac27950-a58a-42b4-89b3-9bbefa957e1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d402c231-9bd1-4c5d-a50a-ab0447b60b44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a64044fd-ee2f-4b51-97d2-7365750b7ceb",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e405ba6-b7bd-48c0-bd29-3d1fe75a43c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28c63d5d-fdcc-4dd9-b3ed-7c1789f8b9ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bec2d442-2277-4ab3-8a4f-cd53a144b00c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0df883d-1cbd-4de2-a53b-dbd1f5ee3f6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2794229-9161-451f-abd2-4e350f323d2d",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eb219b1-827c-4281-889a-8fd23452dbe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fdaca8b-4b58-436d-b765-cac3296e0862"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb6fbbe-072a-431f-b4e5-95de8331c320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4dbfb813-2a24-4de3-9d2c-4f680f154f5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2a776ed-b398-458c-a017-d4efa93f1fa4",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f3a5f67-5572-43c4-89d4-909c0bd8e727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b56fe1d-8371-4791-862b-3ee89230f22f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a14dbac1-f96b-45d0-8f66-1efd8e0cf1aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "df53244b-2f6c-45fa-9dab-3695f33f8ad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caecc09a-e1d2-4173-937e-340a3093fd34",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e3c9f1a-bab3-4d27-b4e1-a11dd12c1113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2900eecd-e9e1-409d-9299-36ea4c95b523"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78a837ce-542b-40e8-87ba-6e280b6f74f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fb2e63e-3655-4900-8ce7-403804f52dba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4352ec9d-10f6-4179-9cba-6990d3738b2d",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e2b7fd8-bc3c-4cbc-9c1f-54fc8f12adf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d9b3d6c-2e3c-4705-a139-d5df3fc0a5b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "772f544a-4b90-4aeb-907f-b88632f1a69a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ba85ea9-ea71-48af-9a07-d5264250c0e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39fff3de-ca57-41ea-8165-2029266c99e3",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2d96cee-daf5-4bc6-8c72-d3569c0af067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9101f77e-9ebd-4db5-8249-fa0d6a51cc10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cd3abad-bf82-4481-a57f-a14a17f87321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d1a4327-2604-4773-bb62-ad0340e0082f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f91baf14-d5e3-4a96-826d-2f7ce548d039",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff824cf5-097a-4905-8437-99855ea29622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d1f08ce-63dc-4d21-a14a-356c5135a65d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0516a2b7-c5f7-4694-9596-7827246e457b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "73c60cd6-1821-4999-9f02-05bd22c0fe99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27354291-9843-482d-9074-72c53eb69883",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0eeaaeb-3190-44de-b63a-72b8f7eb7ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7fe7f65-a972-4396-8ea1-385437872f68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e9fc68-1245-445f-b45a-d142e2ff6dfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "88d4d0ae-6d64-4f09-91dc-bde038dc83ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35086b0c-d0bf-4190-81a7-fde0aaff9567",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d2d0030-57e2-46c4-bf16-a390ab0b426d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8b14ce13-1a5f-4fb0-95ab-aced03ac7005"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb01030e-9f04-46cd-a846-6118feb8f2f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2ce56489-b8a4-4902-a347-c8dc93102e40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6ce788d-f377-4cbb-8668-2f80d4f63d19",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e6bd62f-cf2c-454c-8569-e7639bdb9e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4e750f2-9cf5-4e3a-87b0-40ce53fae747"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "398ab7d1-581b-40ea-ac53-a06e2ffddd3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "53b297ba-7d1f-4a16-9af5-3405323ea89c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a899d8b-57d6-4978-8137-3669548617cb",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0f9ad76-ea52-4ab1-810c-87bea4bc3311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afab2eed-831a-4845-84b3-6761b25c40db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62f9dd77-2aef-48cf-9afe-5f032135eb69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "35d6bc2e-2c45-4f40-a9d7-99543ab93df3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09703ef2-3375-4ac0-ba4b-668139058233",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "910b97a7-9301-44ad-b765-3507413d6f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e0d4952-2f8a-404a-be0b-48228dfecce9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e7a80a1-f644-4c3f-bd8a-09ab9b32e4ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb26d903-67fc-498c-82ff-5447a985cd69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaaaf789-1d0a-447f-9524-2663fc1a65c4",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9268baa-e7de-4bbe-8da2-75549443e9ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69317f23-f2d9-4031-875c-f257873f6e8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7205913c-8d63-4f8d-99ba-f41db5c06571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f81b5329-7990-478f-b4e2-550c28f16c6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62b6acdc-8f86-4665-afdc-8a5807c6bf02",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30e41890-b772-452b-9f4b-edd9382117dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a16ec2ca-edec-4991-904b-99db2e9dddef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6faf07af-e51d-48c0-99df-c74b5f217053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd50d78f-e6d6-43e3-9e12-51a60886be0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd29f645-f248-49a7-b5e5-7e6499808964",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34aec02f-2143-4b81-a78f-f71b153dca39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e21bb7a-e9e4-41f1-85fa-3bed783b0d01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abe74cd3-2b3f-4708-9a58-058bdf2a60bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "268829ec-1830-4e43-8964-60c46d718cd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "606d288f-0801-47de-a9bc-6b554ba704cf",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb6b4ed3-2098-46d6-be51-a4a6fd709973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e5d60f7-91da-4e35-bc84-db353ebaaaa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "615a3787-8c50-4155-9cb4-15c5141a5c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d27eef7-f757-4898-be9d-435863a22337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf1dfc9e-f272-4765-9ed9-6203dff9023d",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f4d2e93-bb0e-4447-84dc-bcac80fe6134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfa7b2ed-4fec-48cc-8bae-3697490d575c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cfea269-92c4-40bf-8225-894b3365fa04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "958b351a-d3c9-42f3-a96b-a4ed32e2e83f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf2694f-dee1-496a-9887-bf91224c1715",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c64cb08a-17a5-4f5f-acdc-f93fd01c7441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c388c075-7535-4a0c-8b0b-6f5015ade58d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c491973b-cef6-4415-9c13-86820c3ed603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4f57aa2-d2dc-4512-abb0-eb85a21def2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "247a6b89-506f-48ab-a0bb-1b4759c3fa20",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abb7ed36-80ba-47fa-b446-3ce557b7d280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9413ac5a-1e00-40e6-8eb6-541b34281f77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9522506f-95f6-4634-99e1-bf12f2587a7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab6565a9-83fd-4ae2-8468-a80d3d8ca4a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3b7bb81-5056-4215-bdb5-8e73ab93be42",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64386a4f-bc8b-40b9-8fde-481cd12c468c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea217b30-698f-4bb7-b4e5-69b0bc069e3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb1d4c08-0ccc-4beb-a796-8786c265a158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a327636-0d5c-4f00-b55f-82a015edb91c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6bcf498-12bb-4d27-9b6c-bdad7c58990e",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3919265-c437-4b63-8d2d-55c19236c54d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d7858fa-21aa-4715-ba1c-d1259740edb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fd1d0de-c2a4-45c8-89a1-0ead7cb806a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c03fd62f-384f-4b41-b24b-29f8cdcee0ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a26e1729-1f3d-4a1b-91ec-87d527e2cf1c",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb9dad9e-df6c-4be5-b675-6788dcdeac33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0c15526-ee7d-4e4d-b143-be567a96ad69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b14b0886-3ec8-4b1c-9645-dbca3d22de64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a73a294-5fdf-4983-96c1-990b71262105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bfae8d9-6970-4c87-ac4f-0916e9b68b2f",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e862eba0-28fc-4798-bfae-73480db06c34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41beffc9-e508-4bb1-9f24-b19992ad9b87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "980338f4-7386-4e51-b6e5-c207cb31f069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "db749763-ecee-46b7-9398-80add4096279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61aa96ef-babb-44ba-b47f-a16f28bc334f",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "818148e9-858a-4e0b-aac2-779f0c023ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4303efed-07ac-4017-863e-faf1d2936314"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0c7faef-93f3-49f7-aaa9-660608419b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3483b74-93f4-4206-8b22-2b7d3dd7e335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6522f935-e5df-410a-97ad-8b698acc6e82",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4b682f9-7383-452d-a51c-db22c8b3d9ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eae8c1d-b024-4499-a44f-9ad56902fcac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "570f9f9a-8c19-42c5-8c28-e2ee6fd9aef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccbd4b77-5c22-4587-bf4d-d7649219d52c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "835d04a9-f8ff-4d6b-ab11-6019269a98c0",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce4f05fb-55ef-4635-8bdd-04802489f6ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce75ee60-5272-4422-af54-dc2148d5f00d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d353c8c0-3bc3-41b6-972d-5492278ef71b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1eb88933-0260-4c53-905f-4b58c1319263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f64b2ca6-b1b3-4c29-8ffd-a745edb7fe10",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "069e67d0-de7e-4262-b1ad-1579fd39acc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b430ba97-ad66-4fce-9ebc-790983199e7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3905ac0e-1f4b-4da0-bff7-88aa9bfa9d86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "11fe7479-6f17-4e77-869d-6cb0eb06001a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8105a957-ddcb-44ec-bd7e-8e8b43d8e42a",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c96fef0f-6d8f-4185-b679-674ad53cbd65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c718aaae-1e0f-40da-a1f6-d5d46fda0209"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74409ab9-159c-4edc-93cf-56dfdfb1f7a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3deec385-24b3-4d30-97ef-4a7b350b3f87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1427282-79ca-45ad-aef8-1c071e0d5e36",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de81c297-325b-4590-b842-c2388d3ea2fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43b8fa37-a0a7-43ab-af5f-661eb6da1d34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97992aee-72a4-4a8b-bb68-a8bf5f95402d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "2a0ebc6b-0082-4dac-a11d-785d29d6b98c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c945070f-5a26-436e-85f4-c28d51f2201f",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b07b276-ea90-4699-b704-06cd9a5c12fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "731a1ccc-9505-4477-b4ba-d6c4d4c1ac03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29bf972a-8c9b-4172-aca7-1ce53aa36344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b61fd44-ebad-405f-aaf0-f2614ad2b427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "123e72cd-6bf5-4fc1-8f4d-5142c45626d2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b498c9bc-8299-4606-a1d7-c71d80b84824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f298e413-ecdc-411c-ae07-6c2b74a72d24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4727434a-dcd5-44f3-bf8b-5efe3c0706ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "29643b40-19dd-4999-b6a1-89d8f98a1de1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7828dfe8-cb82-4b40-928f-3c4ee64cde68",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22e5792a-6594-4498-8c93-8ef329657c46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83ed64a4-0bd0-41a8-972a-e8db982bc81e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f732e0f5-9cba-45fb-a5cb-25805880e2d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf115e38-42a0-4679-b50e-4c9c34f9d399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41628433-3c06-4195-b321-836b29e3ef12",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cc69bff-06a7-4c86-9ca5-0a184645b090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60576d17-a35b-4f9f-80b1-c937d1df6050"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a080bd0d-68ba-465b-9ab3-262125470d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "acdd758c-68a6-476e-b5ef-54a17463b877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e648f39-7473-4953-a26b-380fe74bff48",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4012947f-53b6-40e8-867b-49ec1f579f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3899741d-2a07-4791-bde0-c8a00d69253d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bf4784b-4a2b-4a4d-87e1-b2cfbdd3ef95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e87ba131-5e6d-46c8-a259-3db5cb2449e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec66efec-b18e-4968-99d4-9f6c0cae0225",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24a2f233-9c5f-4157-8dd8-0f203dada51c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e574977b-2190-4dbf-8d73-da2708419987"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d156072-559b-4a6a-afa5-dbab591bb42a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "5558e4b7-ec1f-4922-81bd-0a4b8b1f1483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65c00917-34be-4de4-9397-447f04bc2d6e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ef941b-02d3-4571-8d3d-2306ac20aa84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14a86834-0a1c-47f9-8589-aaeb2c666287"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e552b9e-90eb-41fb-b73e-264e6423ecc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "774bceaf-707a-4e44-9470-73f501f6d946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eaa34dd-75d5-4354-94b0-8769d1e3506c",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cba877b-716e-4c17-9b80-1c444e623026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90efb577-57a1-47e2-bb87-2b296f97b1fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e7c2d46-686e-4b9d-88d2-48b105ac8e94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "522ce364-61bf-4fd9-8d01-896279c8ebeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "296ef1c3-dbd0-4bdc-b260-6804f3bfbfbf",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20dc0351-1a26-4eaa-8356-da75f5bac097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11a4a443-f247-472b-a8b4-42bb148b2b6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e8ac3f7-cd80-44ec-aeae-10028ca9bd37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ff275c3-ff07-4a30-a13d-63b7ad9bc2f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89909bb9-4059-43f2-ac5e-df9697298c28",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "584a5eec-3f1d-41a2-b14d-317d8e24ee18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57ec3da6-fd2f-4f09-bc89-5a7038cd0b3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56a69b33-7f59-427e-9dd6-f57181c477ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b672cbc-f3c2-46cd-8315-d2d16ab2b13e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a208ce2b-0ff9-4163-b1fa-7af47a4f7987",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "077788d6-d337-4509-a597-723e7e19ff9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff3f73a7-7b96-4a07-bcb4-4847ebbffe45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6f6c5ad-2b5a-4ee3-bfc7-07464f2b7e4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "02f68ea7-194d-4606-9929-babf86492ede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be71cbff-034e-416f-97e8-f36f5e5d7732",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e0291ab-2d88-426c-a8c7-34b6a0c02d15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ed5ecb1-a323-4dd6-a07d-f7d482c2e40e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79e130dd-6f45-4fee-af9e-78755de4f667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa276e9e-0e57-48ae-976f-dfb8ccdd41fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de125ee9-687a-43de-8274-14e249502e04",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5778f75-80e2-4268-aa4a-57d99afd8600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95ea6e6e-7727-42e6-85e9-0979107704ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18410479-89a8-4287-b15b-179860fd7432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "35881212-eb5f-4e56-8354-bef84828f7dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f1b87c3-be80-429f-83ed-c99b9aed875d",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d68518ec-d6a4-48a1-9466-3ba50b902b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1200757c-b62f-4959-9a01-067e7e649a5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48a70732-c764-4c04-96f6-04094a14b870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe90f2d1-1302-48b1-b537-05d8abadd1a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4db0026-0581-4b03-b29c-050d532cfade",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9da060c-bff6-4776-abea-75851c905af2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fccd490-9c70-4144-bd19-9530fde24dc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bea08aa-bf9d-4900-ac0c-032bb541c60d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "91d1e02e-e353-45be-96d5-2633df1ec88e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "159d830b-8fb9-426c-b91c-7cab2f005ef7",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bc4a803-ae63-4c5a-b366-7874ac025a86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e889321c-fbdd-45ed-9229-fb1da4e9f27b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c286c8-5d16-45eb-9805-37c8eed74948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "95307b9c-82d9-4707-8a16-25650ad1efed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6fd2231-be39-4cd7-aa3a-6e3f36bc9267",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "799b0770-444c-411a-80a5-05912c761d14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee2f6897-e4a3-461f-bc11-53f60fdeaeda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4181652c-941e-4ac4-81c7-8c621cabf45f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "972e1e65-b824-400d-bcfa-77169612ad0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e0afa92-b6d0-4e4e-b785-8bef5a1ed2bd",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e48d0a2-2e6f-4f87-bc15-7337467a304b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfa396d7-3467-4f97-bafd-d9eadd80609a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03c98fa7-a160-49b9-a34e-1bea03cf1d4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4f6412bb-4025-4125-af54-c1afca616ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df8fd5a0-2314-4334-92de-a37230ddc897",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bc005c8-f18e-4a6a-8df5-d9eec31aac44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b94285a-58f3-46a2-9755-1e7dde5b9355"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5530c803-4a4d-4069-8097-003d3dd30e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "33c752e3-d2e2-41e6-bb4c-d52ff3c581c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a06cf3ba-1892-41ad-8fb4-f85881ec626f",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3db506d4-5b5a-4cb6-9c22-a24aa47a8127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "677bb6c8-f433-43d8-8b57-e836eab095f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "151595c6-dedf-4e55-9ef2-2971e2129d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "97a697d2-0950-4a48-853f-6073360e015f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f591ed32-6ac9-4538-9970-e384dbb5f328",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40880c69-89ab-43ee-831f-f6f3652a1644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa7840ce-4b42-48b9-87eb-0247f9ec7de5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4199a8fb-f860-4fb7-8c53-8820a0835cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b97709e2-684d-42b4-aea2-6959c13d19a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80dca4e0-a917-4d49-9300-1e3e2d4f6e72",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28b87b97-970b-4ed5-a7af-a49c97d94c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a67e5c87-d6f3-4b1f-8277-f2fbf0f2faf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6882b7ad-1939-4611-af0d-d7b2e793d996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4606c6be-859c-4357-9390-3439a6ac74d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "580b4b08-9cbf-4a40-96fb-9672ec1faf93",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e930ae8e-5392-4101-8924-3fd6e599a4ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b07e828-f5b7-40b0-b421-fb3f8e55905f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "802de7b9-3041-4dc1-b7d5-e5100632e685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "75d66a08-8fe3-46f2-91d7-f221a4e452eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b42f8f34-d382-4803-94aa-2925ca3e8f4f",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab36da5e-3bee-4226-a72b-a091fcb28465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80977b00-5745-4d78-9ff6-bef4486353cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86e9111c-fc04-4b27-8fd5-9b64e58f9d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "415d81b0-7d06-430c-b395-e186a274c428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aa1abe4-3642-426d-b2a4-5538115f952d",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6f9f47c-cbef-49a2-86d5-c61e0b335bd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c22e63e-49f1-48ca-8a0f-36625290640e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e0b969b-0c97-4cfb-8478-d7c9588d0188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7aafbb67-731a-42db-889c-7c3a0b17900e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775d2f8c-c854-4cd7-917b-8921c7213896",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a4f24a-8082-43f0-af02-6dc62fb3fdda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34bfe20b-0496-417a-8f8f-45684f7c081e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b55252b5-0776-482c-9085-d0eeb366a2ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a077a7ba-8eb2-446d-a058-0295b140ac90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "554a5e65-7a2b-4a08-94d2-fd1d15899e8e",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf90229e-1f08-4b65-ae1a-2d3b24d8be68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bedfe3e2-11ca-4b06-8ed8-3babdc7b28ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28278b1e-ae5a-4c59-b5e8-38320cb99b68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e0a5dd7-50f9-4ee5-a9a1-0ad8ac593bcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9b7e6e6-882f-4763-8429-fc5c30a232a6",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27705955-f7df-4fd0-acbd-99a323bcef7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0067b950-6a98-4a91-85ba-c2a88d1e7aae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f1f869c-96b4-4834-be36-bff4ef72741a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8a8cd80-fec3-4927-8d91-554b5e2dff04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41e2a82b-e55b-4967-8171-196fa17538cd",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f842a42d-6d38-4460-b7a4-1f47ddbc592b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f73e9e2f-bef5-43d8-b69d-2c8ee88b94e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf5a371e-9c55-49e2-b3ee-5a27d47c5734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1765c436-49bf-4f98-820e-10db8f103669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a02df9b-8f88-43fb-bfca-d3724746795a",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80a96a7b-1396-4efd-9bc5-665604652553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e420f19-e73f-48b0-b60e-6fab412c41a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8e27741-7b32-4595-b8e4-e9b36b078888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "122a4e02-3ead-4149-953f-52a8c7a13cd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37c7e3b3-5522-4ffe-94c6-7b19f9b8d5e4",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf7d8649-0df6-4493-8f38-f62554773364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ce7cb95-c828-4894-92e1-a8bfc297c167"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "751ca8fa-82f4-4dd5-bf6a-dcc8c2da7a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "150bb6a2-c7ba-4492-a533-e5015a79ac48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be243ee0-2650-432d-8649-4b3793115454",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f935acd-8c62-4d7f-a731-afd824c29942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56be3883-d97c-4108-82d8-ffd4d717012d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5603ee1d-a156-454b-b7f4-7bd490b6915c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "79365ea1-0e9b-4ecd-963f-894f9f5c69b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6338b42f-819c-4190-ba8c-3db57824cd06",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6e4cdef-1c8d-4cc4-9690-6f690a468745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "714b1f0f-3354-41a9-a9aa-d14a525317e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b594cbf5-7fe0-416a-b24b-d09713746776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "75054b38-26a4-46d0-843f-f50f15aa4a5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96dd0893-f50d-485c-a53b-8b67ccce0880",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6f82b0b-36b4-47f1-b3b9-69dcf79d88e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "635c846c-1247-42e0-97a4-070042f3fe45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4b67029-fbb4-4b69-95ed-1aaeee2842ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "002ce055-b1c9-4cb4-b925-c6ac0f1af183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2e13812-353f-479e-90aa-3993c0d7a407",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cba96d93-1e39-4840-96df-971398038778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "000f7098-8dc1-4a15-a970-ce6f306c4c2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d89a686-00fc-4f38-a14c-bee2b134f62b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c64f19d-bc65-43a8-b447-555fcb1695c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eb275d7-2e34-4570-b4af-d1ada2694ed3",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64e7e653-f068-478d-93ed-84ac45d7875d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "6a1faa8b-92a4-44ef-8b42-9f94736e93ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45a82f2e-41c3-4509-bc42-db6d19a6ca5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "bdc59e04-d514-4b9c-ab81-ec9edaeca089"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "210c0da9-fbbd-40d6-9298-c864678ca4d6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "27711afa-5d6b-45eb-9791-f83f56c630fb",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a982332-7bd0-4ece-ad9e-ea2bfb368c1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "de1fe6d5-93f8-4adc-afcc-579ddc06cd48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1fc15da-28f4-4180-8602-e3094df63262",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "14732aa2-b788-4ec4-8b06-7bb29f1a25fd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b50993a2-e1f3-428d-842b-1e524e1dd3a8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f8b8e467-d759-40b8-b4fa-c9ec50de7b25"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d9f822e7-b6fb-4903-b021-9d3c0ffc0074",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e579efb5-d0cf-4779-a39a-780fc5b036db"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7e1324d6-572a-4176-bfa3-41ea10c46023",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "92fd5a8c-6c99-4a14-835d-05a1751b592f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2c2aadfd-76cd-4fb1-8432-fbe2ff5df072",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1de94bfe-5ed2-4d43-8917-1758775e5493"
                }
              }
            ]
          },
          {
            "id": "f9c887a9-5f72-4fa4-aa25-b54989abbdd7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c2ed1596-b280-4fa9-afd8-e44a67a44ce3",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "dfada3b5-2e55-449d-b9d2-00254ea33cf8",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6212e184-ce4e-49c8-b098-665d9fc4b5fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ff194fa5-1bfc-4ab3-a48c-9be94f4a32c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "392e4b96-3d2b-44fb-9108-e20badc2aea6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3246b3b-35b0-4a58-a74c-29a67bd93860"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9302c8f3-87f3-4418-8a08-d916af5f4a84",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "76db9ab9-f0f2-4592-b2ed-784d8e81cafd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "365cba4b-46d8-4307-8d2f-ff9c3413c542"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2b5c210a-3782-4772-a1b0-38b959981179",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6b34e5d5-69a8-453c-a78c-f9453c9b65e3"
                    }
                  }
                ]
              },
              {
                "id": "9feca66f-fb37-4588-ab16-eb73ae72c666",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aba0f58b-bcaf-4e07-8ab8-efdede544fc8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d8278fed-e6a6-41dd-ba75-cae9671bae2a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "75e5e0fe-99a8-4197-b7c5-d03b840ac2a4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "72327ac6-12b3-4848-8040-4fa2d7f985bd"
                    }
                  }
                ]
              },
              {
                "id": "80fca184-1633-4b0b-8886-42c5028b2d49",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b02b1f58-795a-459c-8506-e5db9fa63634",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8f508105-cf65-4479-91cc-cdffa6a354ff"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c9985ee6-b5b6-4059-af76-56a88d87ac2f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7103f560-bf30-4111-8086-fbca0d9b077b"
                    }
                  }
                ]
              },
              {
                "id": "d9084e54-063d-44dc-acbf-c30f6f639186",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e4d70317-39d0-4ce4-b299-f7b699d58c02",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "064886db-48b8-419b-a3fe-b5995b8f63ad"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e3152cee-7909-432a-9afe-67610ce589e4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "125b3a98-861d-41b6-82bd-dbaeec3f2611"
                    }
                  }
                ]
              },
              {
                "id": "68d43bd9-7721-4cd8-aa89-fea9280b5f72",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5ef805a0-5b75-4903-948e-73f2af08afaa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f330a3fd-e388-4c29-9497-ab1573d4af47"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "94e1f5a0-6f5f-417e-9c20-42823c21b055",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "01611369-10f2-496f-8717-f85b72ade482"
                    }
                  }
                ]
              },
              {
                "id": "502a0803-92ed-4733-83fe-5cfa900b7ddd",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "770a9c35-5fec-4bcf-a5ec-3cd63039feea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6a71d450-f0c7-4c61-9b49-6f88228f8f6f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b177d001-35b0-4245-ab57-7de7de49aa72",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1355ad97-6a4c-4297-a9eb-6d11c3228f3d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "438652bc-ab8f-4415-924c-f86294fd3865",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a748ad16-2be1-4e78-bcb6-b461c5be403c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c24ead43-9bab-493d-9b7e-f6388ea512b2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f44bea27-813f-4d4a-9f76-e33d829dc1fe"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "24ed1e72-48fa-4398-8c47-20c1f12df829",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "8bbd9072-119e-47b1-836b-c489d7301056"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fd9ce6ba-4da3-44d0-b3f2-fcfb23153a4e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3f710e48-4e0b-4707-9437-8a90b96cfc25"
            }
          }
        ]
      },
      {
        "id": "95e7360d-ab56-444d-bad6-2af020e11928",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "3a04c076-8ecb-4819-8771-e6b176968755",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2fcdc616-b19b-48f6-9d5a-34d21e01cc66",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "61819e5d-0517-4ea9-827c-77de6cc020dc",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "547d052f-9313-41a2-803f-f840c8be50dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab68aae2-1286-4b9d-9c5e-0a4fa8b1e20c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9b6da51-3666-414b-8faf-5ddbeca19f47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e95e35a-8693-43d8-b995-fcd3f191bbfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "225d9cdb-407e-4ef5-98a0-0caf49c179c4",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e7291d2-484b-4aa7-9b0c-c0e57d52df38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93fd35bd-dfe0-494c-a2a0-2d6fe8eae3bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96d0a14a-d2d2-467d-84b3-888c5de5b776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3336f1f2-23ee-4d61-9b8d-17d7287f0450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cde66a5b-c335-462c-bd53-6015698e9b8f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7067461-3afb-4024-81b6-c25c6f63c5c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b50fca20-1ba7-4867-bd32-ab4479d04bb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2dbe40c-6213-4cd9-bfcd-95806d876571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e5e9759-d10a-4942-a851-48261e790314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90fe5c54-7487-4640-8c2d-6b036541de93",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecdefc99-45b8-4586-a5cb-f063ece107e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb56ff81-3410-41e5-8c41-434a21566bf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c41adbf9-6ddf-4d6e-9b75-11ab1c6127d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f71a1635-0328-453f-ba08-503ddd7fcf78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f46d193a-3abd-4f16-b4db-92f12ec854a2",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff9a0fe1-93be-4468-9b39-debfb77d8e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "940e7d39-9c38-4c47-aaed-8047f2b8f2a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3b919f7-c34a-43a4-877e-03a2662b3adf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d581edde-bc4f-44d4-9b4c-39fe7cec0bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf1059d5-3eb0-41f0-93b1-d09413cd19c2",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbea6c62-5930-42dc-b0e7-b1a6106ba7d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0ee4631-de12-41eb-8a29-e08a377108f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "135ef51f-fce1-4e7c-b45e-354ec2eaf178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6404cd05-21b4-43b2-a983-8609ac277646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa270f0e-1d88-47d7-98c8-81efa727a2d4",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad75992e-5a94-4400-a6b6-c689af648de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "578de0c5-4759-4dd6-a014-e9f75db2b865"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73d8a9ed-f451-47e7-b920-fdf111e00ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9a8c0d4-b598-45eb-87d5-488af44c40c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ecc7cb1-ad3f-4553-9bca-8f71b2ab0c5c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cf6b315-b78e-47d9-b842-1f0dcf2d24ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8b3f8d7-ea0d-40c7-a7cf-dcacc0b8d23c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93216712-f840-45d8-b5a3-9af0baef9897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bad45af-81de-476e-8d3b-57a26c0b54ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13aca951-bfe1-49c3-bfeb-f9a7633ae96c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6de9f7b1-4d03-4ab7-b9a4-3b2dac435aea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71dc9546-1d11-4f38-a416-ed41e1284a06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e6aa47-7f50-4b34-aa53-d8b590e01c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1fa41fd5-85d6-4e30-849b-a1e1b7889c27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fdf9c1b-4169-4256-815c-f161b3aa4f28",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce6a5590-5d91-4efd-abc6-cbd791525812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61034d50-1797-4f95-a765-7eafb9532602"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d498fce-fce2-472b-b177-9e747aaf2627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e3ef651-8782-48f4-b8cd-3e1caa8c053a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc49fe64-31ae-46d6-81d4-0e6f4c6eb5cf",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7798cee4-93a3-4a9a-8357-fc53561881cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f3be309-d6b3-47ee-b614-8414659aa30e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d2007ae-799f-4194-a906-f95c4b74ff2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "166851d3-e89f-45cc-828a-246eb397ff9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e23f8cf9-e968-4c15-812f-55d95a41804a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8818aa7f-606f-4bd8-b88a-1f5cc835bacf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18c7cf17-3cd3-404f-a10b-6e8696ff0e6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84b8d018-cd02-4a31-bf2a-e8cb2fb26c89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "178a614c-9b17-4b92-a372-4f340afc606d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "967caa2f-b7f5-49be-b026-2fff043204c5",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f70412b9-70b0-4a5e-a520-212c11ce92e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93d648c8-2211-49b4-affd-cd9252dac9ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93d149c4-d94d-4ae4-b026-e0ca1984324c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "27f4033e-3105-415e-a76d-9397164b3a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c396433-b38f-4cbd-91cb-80f3ff36b8ce",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d8576bc-76a3-4aef-9981-f3b338933b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70eefd8c-6e88-41aa-96d6-16982aed4304"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eec07d32-8700-474d-9192-efe66b41afa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b93b780d-ae80-4283-aea9-682a567f96ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "896e5cec-9ae8-4c82-9351-80ec99ecd734",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49e7ee70-792c-446c-9f0e-ddb3b7ccba28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0ff10cd-7260-42ce-84cb-2c9fd9d9d833"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "456c54c4-32d4-4c15-99b3-08ad661d5377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d5ed56b-6310-4544-8d61-321e0bc8bcd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e26ca037-ef45-4ee8-a229-d91f32fe475c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38a2c3ad-71d1-4664-bf77-290777e8cf1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69b0489d-ca8b-4814-ba71-7cc5d7d667af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc763feb-8bee-4b7c-9680-93ee1a90eb32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d8ecc09-6aab-4d42-87f4-ef9772f9b513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "655f9b95-4baa-4f54-a95a-37911f9424b5",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0313a1ad-e813-4549-9968-7585c74102b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a934950e-cc0d-41b9-8087-e48f1432d8ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1013575-8e02-4dbe-9a05-1461f30bb3d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d646b1a-3454-4958-be9e-0d53ac14b2bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca43ce35-92a6-491e-85e9-ac2d77dd2bae",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6715977-12a5-4306-ac03-a18ddab1762c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b6d1920-a21d-48c4-b52f-8ebf8a3d9f1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68d1bad3-e71b-47c8-88a9-f3ce8e851259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3973cd85-371d-4cb6-bd6e-32f9e27c3695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6de097ba-f2d1-4df7-8a38-c75b2fad9294",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da386795-3055-443f-b8cf-2b3289699f9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00bf2481-bd60-48e1-ae2b-acdedb6113f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64bd7ffe-29a8-4549-8f2b-43cffd389c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f303d5ca-806e-4bbd-8ed5-a97c73a98f62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3ed3034-c104-4e40-85e1-17e8c03cec0e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea3ae039-c6ea-424c-afb3-8013ad4558cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66783f02-6b84-4184-b441-94e121614646"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dcd0edf-4016-44cf-a8ca-6092e8ad5952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "69ab14fc-38fd-440c-a272-4d56f59d4020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da51bf96-1f63-4374-b771-14cee5cc7c4d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8b2651d-843a-46c5-ac55-f2f8f7111681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ce033b6-a387-4d8f-995f-dd2f1bbd0a5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "173796eb-7012-43ba-bb78-23f9db4dbb10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7be4cd4b-ad4a-4328-a315-5ac08d278749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06cfde3f-a97f-4f7e-8de6-a3dd50f405c1",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "532e7a28-6949-4c99-aeca-2de2f543a23d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e981b3ac-b5c5-449e-9a98-cccb353c6e72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b877a065-f462-4555-b2c7-c393f8835e85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2844b7f4-ef7d-4195-a1e3-9e203f7af3ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dffaf56a-0c52-4483-9a3d-3d0e5085ef2d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bcb1290-ff64-4a21-92e8-95abad47be17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ca4fa88-a93f-4501-be4a-185dd3134a1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b59c4d1-c698-415c-89e7-1eeb5e7e42bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4053a8fb-6149-46b8-a76b-0ca20182f6b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21be3db4-1d4b-42f6-b92a-50d581e1f427",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "433631fc-f06c-4ebd-9da5-7cb1e8d0a6c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3cee3a5-1780-4159-8745-d7cd8370c96b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8afcfba1-99b2-400f-9ae8-bf418db36367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4319f1f2-1bcd-4799-9bf3-3ee0e78e3b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a44ad3a-f56e-4729-9b4e-61d9b1722622",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67fc5fff-7357-4b94-89e0-612b4db5fcee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1796f39-7669-4ccd-974d-dc150bbc6702"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcb27540-4bd3-4b79-a973-c32fbbbdb633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0611890-210b-445e-8ce3-831a20312da9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56459268-5c28-4477-9380-78d90bb45b2a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b68cbb74-aa7b-41d2-a2c9-8582fccaefe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f18751c-21d2-41cf-9c7b-0ad569b6dcbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d81926a9-c3e0-4889-9ea2-ff13ce6e9645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e6787c0-3df8-4899-b28f-e0d1da66646d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81282713-dc03-48c5-a5e5-dac4f4b2a1fc",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22deaeab-37d5-4b62-98e7-3ef3cdc4c1d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9a3cd84-cd13-47b2-bc60-c5ea6e685789"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99e07c10-5b65-4b69-ab38-9dad3dfa9ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bf10d59-aa18-4471-900a-26aca82b3c40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4234b8c5-21b0-493d-863f-a3765ca79f08",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16f89775-4c27-44aa-b17c-dad9a3094778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9039bae6-47a7-4642-8241-47783bf64c13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29a2695a-2247-4561-891d-1235dae8427d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a855948-4bbe-48b7-b0ab-edc90f2f30ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46d0511f-d0e6-459e-ab7b-8e88dd62e040",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "596aec22-55b8-49e3-8553-701f877b1f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "649dafa5-b662-46c8-8336-d87da84745ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49a23328-1494-46c1-80e7-3aa1e66f3643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "290445fa-8b1e-4ac6-a534-96c8b89b5df8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a2baa3a-f7bc-45f0-9662-fb95857bd5f5",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b5a7545-17e2-4f3c-8ede-c194eedfb8ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28d6ab5b-b81d-43d8-9a8d-6099807dd1f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb5f51f2-8e46-4de4-9c42-57a8ec541d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1efeefa-ee7d-4b2f-98d5-bd361e9e8293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19e67596-3906-4568-89aa-595ee36ea162",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a74186-f8a3-42d0-b570-7e221ad5011f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccfa95fe-bd23-4b20-89a3-bf3715734d66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dba22cd-e56f-453a-b735-d8ec41d3dd45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6021cc0-075f-4d5e-9567-ba534407e0d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a264724-783a-42dc-ab72-1e4db4fa977c",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acfe9c94-5b55-430f-804f-df619db5d312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "107731ae-f647-4f85-aef7-43d52b614188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31dc91fb-215e-4190-ac8c-b4196b48e9f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "556e3c42-c07b-4381-b672-767f5c976efa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "118bfc7c-ec78-45b7-9a06-40b316c7fc85",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd40b26b-4754-4873-b3c3-9ce90b051f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cdd78a3-6f15-4911-b1e1-ef3902eeb141"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f93d433f-db7f-4465-8279-dab835418781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b45bd74a-f650-455a-8399-3b168d0295ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71cac5cf-e28a-4cc6-8317-8437050a0389",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89cfed76-9896-49c9-b991-771b5c9b5bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78d04015-98b9-4e2b-b267-a7646825db11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8333d95-8ab0-4e82-89c5-b734d8ce727f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcf318fc-75b9-47c8-b42e-e75eeeb6c208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8522bde8-319e-48f4-bebd-c2d8f03e5e58",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82a28086-3da3-4dbd-8838-d2aa26644ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e989ed2b-c632-4390-8e5a-eaf390b5d899"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4943e822-02bc-4c36-96aa-cf6a42ebaddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c469b30a-7bcb-4a52-ac5d-fa29899b83b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c4241bf-ed6e-402c-abfc-19675ba30602",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "741ef6a5-4eac-4969-bac0-10c566f68348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfeafc79-b412-4202-9ae8-ecd6d224a02a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beecdad7-b2b2-43c2-b725-e64b99d6da88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03621488-8673-4b41-915e-f231dfb09215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a92a16d2-3e80-469f-8595-90006cb6175a",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e5009d1-99e6-44e4-9378-1028f975bc62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af32ed0b-c4ab-459e-83e9-f2cde3aba769"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24cf76d1-3395-4e7f-9fb3-6e6317f28c36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b423f02-18f3-4e49-90c6-f5286a391605"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fc743580-8a86-43f8-a725-dd42f3c23f9c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fde600ea-b38c-4355-b1dd-b1f187675abe",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a1d7d4a-8c38-47e8-b931-b62a7cd3c374",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3f7448d0-77a6-4d27-9de5-9f9144f739ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d042dd9-cec6-4244-8ba0-e8e2b3cd90dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "56846eb8-2c77-4a15-87a3-ca72f08df48c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2c85178e-8db5-4c09-b71d-22f4e465995f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b509fe33-22d0-45bb-9195-40be31be4f65"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e1441f19-b26d-4052-a74e-00b2af65256b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a7fac512-bcef-4d86-9ce7-acd3c1b5c061"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "92f4cde6-f22a-4fd7-818a-d6c0a9918aab",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f80f0eb1-55db-4c65-8e5d-afd8425e89c6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bc24e563-2113-4349-8a8c-1349dfd20ad3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ea9f73eb-cbd7-4c17-a8c8-09b6976a40a9"
            }
          }
        ]
      },
      {
        "id": "51c50105-ed5c-4a50-afb1-9226e676c3e0",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "3cfd826d-d30f-4716-872e-a512e6bc293e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "31d6119e-01c8-43fd-8f07-8ccbfb3d1f3a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c77819e1-92b1-493a-a593-c80f489a5934",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2dbc7d0-4a53-483e-bfea-6911332e86d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "693d0dd5-b016-44b2-b444-81c93e188859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13e4f737-b645-4701-b1e0-7ab1f9723993",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfb13f37-a0e9-4169-b7b0-8525d8cc48ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feba7a3b-4c6c-43eb-9f66-a4c13439d7d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c84ef67-b6ac-481e-a4dd-a0cc361420ac",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "623dd8cb-436b-42ac-94de-44cb561ff64b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac0a35b1-3eb3-48ba-9f31-08e6e48c3568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "054d3667-d6b8-4932-9621-57568d9dd48c",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e0b7b70-489d-4d98-91a9-5ba4c2684022",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00cee888-9cb8-42d6-be3e-dd124e7cfc5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6b623fd-0aaf-471e-938d-f0b64df15944",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd9a1e9d-e10f-45a2-bd54-864a645ef36a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b53e0d42-ec75-49f7-a471-8a0bee0bcba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "895e11b4-549c-4e02-8097-cebd8e97e611",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37db8211-a9c0-418d-97bc-e99729496d9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6096a5e7-96f4-4aef-a57e-e8c2aaf343fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25f52e3c-fedc-4f9b-affa-d178de8cf10d",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce5b8e2c-b452-4dfe-9c5a-7dac613c4923",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "401f47d8-c5d6-43d8-8ecb-80278ccad30c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc66a162-481b-4fdd-8bd0-b779f7586416",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba621548-dc90-4754-83bc-b3557c2edecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfb0bed8-14b8-4db4-8528-364fb9c4d44e",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa59fba2-269f-4455-85a1-85c4d2b45ce7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d394d3a-e761-4fd4-9249-c79d8e25443f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad0feb47-945b-4adf-887a-6fc00d139288",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87bcca22-3336-4acb-a250-f17c39895695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "625499d7-2836-47fb-b63b-a52328becb24",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdb47c0d-b634-4274-a5fe-3453ff0125ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc52bc52-4a2b-4534-baa0-81aeb378cc0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9aa4d77-009e-4ba5-abeb-34c1d8f0425e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42445193-4af2-4dd5-a7f8-051d691830ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dcf2bc0-e966-4a3c-afa3-613e97a9b281",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec6b9633-88ef-4e28-9ae8-2a2a530e9052",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e0e439f-beb9-41b9-a71b-9dffa143517b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa28f370-fc90-41e0-a3a8-7db9629d2119",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "901c8c25-60dc-4717-b5bb-67540f9f6c68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9734a2ac-47d8-469e-ba77-f54682a4ceb7",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fbb4b31-ce50-4ba2-8d5c-91305e828978",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94c957ef-05ec-48a3-9734-35e3d22a69f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dfb7a3a-67ee-433f-873a-1c9c72010606",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2db9e94d-79f9-4b2b-8177-381a67f40bbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58aec563-7a38-4472-af5f-206bbc6e93e7",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65983fe5-35dd-4c28-a9e5-5aa1e343468a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e614a72-83b2-4b55-b358-821d655a8a33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bdb6c76-3b0a-4d0d-bcdf-5a40f38e7e34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7bbd911-ed31-4e97-b877-2327d7e43156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eb7bd5a-f4d5-4a41-92a9-2e026e449dce",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "977e8d26-40bb-424d-bfc0-da7b85f48106",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c7814fc-4459-4ab4-8512-aad5e5b2bb46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14bf9d36-b3fa-41b2-96a9-73771f582151",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba5ad1d4-5194-4301-83bf-c520d837f091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d4114a7-b23c-4885-8ca7-dea71275249b",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ad9d64-c9ed-430d-9943-934d556eae65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10925676-1d2a-4990-b5ec-16ee2fb77452"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "653de72c-9208-43a6-a123-5b08fc3af796",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fca969c4-e616-41cf-9189-dd1d7781e04d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f27edd02-5a0b-4598-9a1b-be2a1fc6786d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad5423b0-fd8a-44ca-922b-04b448dacdb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "009231eb-b750-4346-954d-e9f97c7d1d7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "710e76cc-89a0-4386-b1dc-964782efe5ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f04ea33a-860b-49b1-aacf-3c6bf5e9c310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ad3989b-13ef-4dbb-abe0-0fe51cf0a45b",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f6b058a-d549-4ef1-9e06-2863600d17e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b15e163-3654-485f-9166-ee860c7f48a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ffd4066-00c4-460f-bcc9-dd6a7514e9b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98d7f4a7-f67b-4fff-8d4a-a67d5d60f49b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09d0b11f-8b05-44d1-8914-614c4e999a39",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc49fe6c-a60f-4b17-872d-f72d30fd3496",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25ad7ce1-3a95-45fc-ba86-3a5599a55995"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31db9b21-72c2-471f-8841-fb8824293a96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e9bce0d-cb53-4c5e-ba55-7f2c7ccc4b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "809c79e1-d4a6-476e-8e14-a7b534709d51",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d7fa10b-8522-4ed5-9adf-1af94b83033a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57216dfe-0de0-4c6e-a825-735f5a2b086e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9de0c7d3-bf07-4bd3-ab60-c6e5a6710f5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8373c354-a44c-493b-8fb0-4ec8ce43780c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eb994f0-ee44-4980-89fb-971a7b9157b8",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "322a669a-d293-4bcd-b0f6-f0cb050cf188",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c53f3cf-5f8a-4cfc-858f-f204237f6594"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "333245bc-19b6-407e-ab7e-85b8ef0db918",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c150978c-77f0-4274-b93d-e358fd5e6951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "500cd1a2-aded-4803-9b34-103138fb0b82",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d38698d-4806-41ec-bc38-4af2cea76480",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "258aa122-4283-47ce-a623-2d78501827de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e32ebc21-96cf-4347-aff3-8299855057e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ee7f044-3901-4e73-991e-2546a6811113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34cee744-54a8-4213-bbf7-69be057d0b2c",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a340c970-2615-4002-9bd1-2fc360ebda52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a20cfed-cdc8-4944-a9f2-10aebfc71a06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86cdfef7-6a34-47c2-8bfc-52929ed68458",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "371cbda0-2bf8-474b-bed5-9f9c5c881bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b2f665d-a5b9-41e6-87d8-c91d1817b1e0",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "831b516d-28ac-4f75-b98a-8e414825eb15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3594d074-9b3a-4ee3-97c2-51174d672e72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "959c553d-cc3b-4e43-a629-2de6c2741db5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "883e45c2-a3e3-4ae6-ad6a-cf71b7da5075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5e1c30d-db56-4394-9fb5-394a73f72b87",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef898843-b15a-4c8e-8b89-99471d40b32b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e71a8610-e4c7-4482-8e9a-3452c507d631"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e21d6b08-cef2-4c94-9b04-fdc359413b79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9484957-c6f0-4d2c-be6d-68002e8c12dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0fb41de-7231-40c7-be6a-c3b90787c8e1",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a6bbd72-02c8-4894-8410-f61c2d1ccce1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6de795dc-c4a6-4a82-9388-65ed8d66f777"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e933cc17-9698-4998-b995-12e83d5e43da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a02455ab-f549-452c-b2a6-e48075359c60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "849c098b-325b-426d-941c-cc747df3acf4",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce95fed2-9720-44d9-ae95-a15f907b6a07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5e1a001-81dd-4125-9cb2-1423b116bd1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33ce0483-b270-4783-b392-13f03d0e3cc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adfd6970-c7cb-4159-b1a1-98aefc09f554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7830e7ad-06dd-46c6-8a18-c310e0b530e5",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d36c2a95-76a4-4107-8ce3-a8ee68abdc5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b75da316-ed20-49f7-a2c8-51564c4aa84b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19a5b34f-59b7-4def-a49f-1a6ec3ade849",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31408497-c9f1-4654-90db-56ab3ea4e7d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ab3da09-c9c1-4ee0-8cb3-b9a99efadde3",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "652395a0-24ac-4185-baf8-519480f6c70a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b297d44-15f7-4c8a-9e84-835bc9d31849"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "787d2c0d-8bf2-4c68-b32b-7ae82cd84c97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcd1e5eb-516f-4263-8c05-9919b15f81e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eb9d70d-ab88-4305-911d-f69c3bb07c96",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "243b040a-d85d-4e26-bc0a-1ae001339d1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e54b482-8e98-49c9-8202-5ec620ce859b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96871565-93ea-41b4-bef1-bf63172bfe0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f521c58-f877-4c25-ba33-826f2c49f490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ad4c385-9176-4559-b825-3db36a9c4909",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9997dad-0af0-4adb-bffa-95ad2cc44987",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f20ac621-f7c6-4b72-bb64-de92bcfde22d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c5db38b-2f45-44c1-9d92-e4aeaa130ce0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccc6ecd7-caf0-4411-812b-b1a6d8b79339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a485c5bd-ffa7-43a6-bad7-71531716be0b",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e639752-aea6-4e57-bec1-4048f3cc61fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "823b98c5-fb22-4587-a516-be87c2071365"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05abc734-b686-4b87-8bbf-97fa67097de4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e1dea97-51aa-4651-852b-6a8ce0433c16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e2cb611-e815-4386-a9c1-dc1ee9fd453a",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4935c072-6b8f-4fa0-a433-920fa1fdd645",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45eb6e31-8177-4265-b88c-2c30bd3fd752"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64bd174b-00f0-43a8-b8ad-3068b5335cca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fff1d93f-fd95-4c1a-93f9-084d9b5f8928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c328749-5530-4456-b492-69a9b977393b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf2da7a4-ae4c-484f-9e7a-ba4ce9d389b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3efc2278-9f52-40c8-80e7-9ea20192326c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b4a792a-345e-41ff-9562-b0b02e8c0bf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85b18f5f-54d9-4c58-81c3-92f177afb438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf90ce20-c3f2-4ee8-a4f7-dc6c1bbdb760",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4557524-0585-4eeb-8a7f-64347ce307ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae1e0cca-33c1-499e-8a05-f2049217e70b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f66c328-8a1a-42c4-8b8e-06e42e3be1b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67e1ec22-c0c8-4cf1-a55e-4f55205b8ea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef343533-f916-43ad-bbb3-218055a9458e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "215d7506-9abf-46d3-b892-dc00927abd15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e27e3d4-36a6-4031-ac3f-efb1aefce447"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cda98fb9-d0a2-40e9-8c7b-a21a208b46f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8691d3c7-bcc7-44d1-b65a-2550bd665c28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ab81b13-9e20-4e6e-9425-e24e054c9e72",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0d8eea4-94cf-48b2-b301-68702a9a86ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8a53e3b-d24a-4756-9c47-1aab80ba44fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21f21813-56d5-418a-871f-51a11f1b6693",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5154f637-057c-493e-9f03-78994270353e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "584eab09-691d-4725-830d-bd51caf1185a",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "896f3885-431f-42b4-89dd-817154f5e7f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e134d0af-04b4-448c-ab31-2e8e1165d100"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "925c0288-fbee-4ac1-ad96-5a8578212b34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c79ff865-fa08-4a24-9ffa-8f9a813826f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97dccc77-6c24-40d0-8060-eafd9ba27931",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3973fcbe-622d-4464-b419-2b77cd9ed604",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3a21110-92f0-43a7-ae8e-ebd47f214dd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be178a3f-361c-44e9-94fa-9107e56ce31e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14efb8fe-48c1-4c78-a406-c74884c26c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7020967-b788-4f20-b581-90010510c30e",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d654416-f7d5-4b2a-a9b5-d8e83c105c19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0188f85-8804-4c1c-840e-55bba7e17987"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7974e5a-3761-4077-9226-52f395a6eb7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "189279ff-e755-45b6-9f22-daaa418d8c02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b9da084-35e1-4752-a1e7-9352001bf7de",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45f775a2-4913-4005-a802-a00511a28981",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f9c99f4-cbad-4c66-bcb4-c3162839a8f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cc25087-d6f2-4c0b-b0b8-0c8bdbfbf2ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28bd87f4-6d1b-477d-9872-baf1e1e5d6fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f0bfe75-0562-47bd-b26a-9f802a90ff05",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fd04d83-3bf7-4021-a997-e7d389a73f13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34ce3173-0085-4131-91cc-9dae2d432842"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfb146ac-a558-46ea-a2de-e856c5d624a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e061a224-8d77-40ba-9cbf-eef6c9315147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b77eb25-fff4-479a-adc3-4101182d5383",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b61195a-ad85-4985-9a4d-bf8197668701",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30cdba99-9e6a-465b-8f3c-05ee000d787f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94cf7b17-7127-41f5-9085-03c368003c60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7c7a1a8-628f-4401-98a2-a3b3d8eb82d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ac840dd-d120-4ec0-9766-633eddcf8e3f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48dcb890-ed86-4cfa-aedf-223fa2965589",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "183807d0-8a3b-4dae-adfa-aac9ebb4a7c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2f1e2c5-0e12-400f-beeb-181e9411c722",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cdf0c12-9644-4e11-afae-48fd26bd482d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "294b5424-44a5-40f3-a663-09c476573fef",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "036cab0e-ce86-4118-977f-3ccef14bc1f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfe44793-48f7-48d5-b434-4ed1a3411033"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1057a0ab-a1bd-44ba-aeac-6490823b9c53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec7964f8-c79b-48fb-9248-a444d4c74c70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15d5151f-74ec-4b0f-ae0b-0cf875983021",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eef1633a-84a7-4de4-8a7e-7fb0164e9956",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5538c124-7885-46f2-8f79-522acb237baa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e14721da-0ba6-4127-b1a3-a6526c888d4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e033039-3e3f-41e1-a94c-61992776d494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f83e556-5479-48b9-b853-af1e2fb92d01",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab21fd9-aa30-4d14-8101-49acf96c6549",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10d1d7ca-b084-4cb0-bf92-dbf6a5523509"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79410615-7da4-4943-837e-2b08388ec9a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2ae6db9-519f-4d4c-95ac-eea4bd13baea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6241dd34-cb95-481a-bf84-1c7318adac88",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6892220-c22e-45ec-8f86-8d15303fef32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66ab256c-4511-4e1f-8655-052dca287db3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "997a9880-c07b-4980-a350-6015efe0b605",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da093a7c-1983-4b7e-b9cc-ea835fd59299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cbff2c9-3190-4f18-b529-7cf81d00e239",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e036f19-234f-48ab-9df3-a1a04b1170fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a13123a-9cd7-4bc1-97d7-a4624d92599d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "293e5dfa-3760-48e2-bb40-05e98cebfe48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef3cdd5f-39f7-46a7-94ea-e247a6e386a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0da4e012-8a4a-40e4-aba5-64725bd29ef6",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feb4fde5-c93a-47ed-8cd0-ee4f3a7917c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a66d3ab5-e95f-442e-8625-843d1a9cebef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecb9c320-0b42-428d-9de4-3b2da2059315",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13661eb0-b03b-45bb-8a80-ff6657e01527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f41cec9a-c711-4727-8d34-f1d61879ce1a",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd420b87-bbf8-4d93-b711-5bfd48efab4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06a91980-9ce5-41a8-95ad-e621bc36f5c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85536c84-e596-441b-8ea2-c6741c177ac3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31da78f1-f291-4687-8226-47ecc6faaa16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "988698c7-795d-4880-b46e-0e12f8423530",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e437323e-2a1f-4f95-b770-f6cfdec753b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9777d15-1488-4f44-b66d-f96c68882bce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9da4dfdb-b01c-4cec-a743-d48222c4ff4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce51fc6b-1492-4bb9-8d7d-ea8b92e1c007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6880e4a-0eba-400e-9b2e-71550e96130e",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50200133-4281-427b-b9af-e4ae9419a30f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d6a7da6-a422-45a3-9b44-5a98bc677ed0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d710176d-9a46-456b-9ce2-605ace73cc5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57f4d47c-cbcc-41d3-9df0-7a2b0e8fdb58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89a03f23-1f1d-4eeb-90ca-a7c7e63f7729",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93354974-479d-4ea0-9079-7dccc2ba49fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edd07123-f4bb-4af1-b091-288c255fad11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa56002f-d01e-45b6-8b91-877d8b929002",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f07a276e-4529-441d-aa5c-473438031d4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85260b24-5315-429d-bf1c-0f25ecc3ed43",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a758c3b8-551d-4b99-b0bf-8ada63b2a86b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd16b0ba-ac9a-4640-a015-4cd431aa5c56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5401818-8fd4-4920-8d55-af06fee1effb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "880951c2-0c55-4bef-8881-f17fc7215076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9428594f-cb62-4cf0-a024-7c2236bad32b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b95856f9-2e40-4a12-94b4-d179250a2229",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a2448ed-6701-4d21-8bf4-0fd9c520a1ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d314f84d-e7e8-443b-a58e-96371e66f0c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a5ee5ce-c7e8-4e3d-8e57-4813a58b0411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38bc7411-52df-437e-91b2-9e37d5c241a8",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42db21a9-d155-4be2-be5b-bbca6091feaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ea554c8-bd73-4ccb-a0f9-468b3813d5bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21628d61-b761-45bb-abde-fad8140d89f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "822ee843-dcf6-41d7-b0e8-cd2bd979139c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7727ec72-b08f-4753-82f6-bfe2f57a10f1",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ac9ef92-49a2-4161-ade6-ace5c2945bf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3147a852-adfd-45ff-af8b-844f3afa5473"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0019e783-c396-4e25-80e1-3b3b31aab09a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44cd5844-5456-40ee-9801-b4fe1fb60c26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a9ff4a0-98ec-4f24-94f9-7fa3202f5ae6",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c080bb44-0300-43e2-9360-972a4062acdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "940fb401-fe8e-40c0-9ad1-14fbb00bba8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6153364-3bbb-430c-b4bb-337ec3122a40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f6a3cfd-7472-4855-b68c-eabd651d3596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b77b658b-7e18-42c7-aa24-c78b028ef8b5",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d9a55ac-0e64-4b6c-bd0f-bf92c1dd9c9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e74e6401-6947-4e7e-9cea-a37ae30431d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9d113e5-16cd-46a9-a1e2-52bc159c0d0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52d9688e-c8d1-4c46-b2d6-f8bdbb965613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "328f0a86-0d1d-441e-8808-2bf1bbd9a620",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f96aa461-6d7b-43d3-b733-4b4cebdb27b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b1c6163-5862-41b2-bcd5-ce4d37e1e13a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d765fbf7-38a2-4f8a-8a0c-4ab3122d70a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "befe7d28-8c7f-473b-9486-aebaaf7a8b77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7943152-4eae-4b60-b487-4d66b8c73a3a",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "313ac223-08f1-4a2d-8e42-352056a6c9c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7669e858-f48f-4d35-9d2c-74e5da9c2309"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c15906-43f2-49bd-be44-d8217ae118d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f6a890e-2681-408f-b09b-e8579109595b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4983aa83-3520-4c95-9b2c-0dad3da364b6",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2bb7a08-101d-4d42-a6b5-01a0199e18e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a792718b-a6f8-4957-8dfb-d21dd045555d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cff1e838-f628-46cc-ba60-d088d53945f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b371e88e-47bb-4bca-8120-a1528eb8966a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a03e106-d43b-4581-9a9c-516e47fd3b7b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53e55267-8df8-425f-95b5-598516a9b755",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a00b88ec-ef06-47fc-9fca-148fc5b640e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50cc9a08-d4e7-4cbc-a582-f4970cd95ecd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "103fa330-2973-4eeb-87bd-209dfbccd95a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f66d6bf4-912d-47e8-afcf-146143d72cc1",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd8b4f07-a762-4725-a21c-fe0e2d46b76a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01e7f6ea-fa0a-470b-9da5-e58094b8a351"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fbc78d9-120f-471e-9f45-890a9b599991",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c31e559-db52-4b1c-b83e-4795963697ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb184c2a-8c4b-4fc7-8f6a-bc36f592d640",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbe5c5e0-2d28-4641-8d88-55981e9caf8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9228b06-7532-44d7-836b-c534af1a3dbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed648292-5871-487f-b219-d20b3622e902",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4edbf3ff-8ded-4f75-8223-db0625e24115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62be52b0-9682-41eb-819e-4e5f5e696214",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8102d43a-9322-4beb-994d-3249372d2933",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75413130-df1a-49b6-9678-04f000b4207d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b46704a-54ae-417b-bdf2-c3711630af8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c434d829-3174-43f2-a849-1600d6a9d753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfc574eb-51d0-45b6-aeb2-ff307f77fdb6",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9af79481-cea1-4930-8586-957e943b93bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2fd380c-774c-4592-8422-7c2ab754a836"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b657e218-3e61-4a35-bb27-a1c3c7a360f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4d9618c-268c-465b-9b7a-6709a4b5cabf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a51ba271-d1dd-4cb5-ab55-ec9b0c3ed3a9",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7377976-c78d-436e-a319-181e485d0c95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3baf31d-88f6-4bbe-a4e8-a41b848ed7b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26bda70e-370d-4424-a989-230633975684",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "555639dc-34e7-417b-9923-c1101848c535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a776aaf-132f-4f36-847f-487d7d197e7c",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68176f9b-4043-4241-97a5-ed556b3fcd77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce594c27-de55-4de7-be79-183c48a05b7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "211cc630-fd26-4284-a88e-4387337beaa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5801f804-c182-4e38-b3df-146ed4be5d34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c9abac9-6e83-4f9c-9c50-30dd1dcb70f8",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cabef97-dbfc-4a39-8827-e4c13797d0bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e74a91a2-d0c5-404d-be22-a09792577830"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9e9a3bd-bf92-4e71-af64-7c2a4c4e1550",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e384d191-d609-4903-b78e-f1b65189ea7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11fb3bc9-5e0e-4da9-bf72-487c407f4158",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7699d381-0508-4ccd-8500-642de4cee8a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c682f0c-f2ad-4920-b7e5-642019c5595d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc7c44c4-b09e-4800-bb56-70989edfe0ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14e0066d-7df6-41fa-9b75-51204a2ccd53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aefdee83-627d-4713-9d22-67e99dd70b72",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f283b496-98b2-48fb-ad6a-909da0410332",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66ca7823-574f-4af2-bdac-292531b5c286"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cafece8d-4150-47ce-b2c3-9c1e4f6223bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74ee0aa0-94e0-44eb-9939-8fc442536fe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c63e285-3f6f-4400-8eac-be9488feebc4",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af1b5d78-751b-4e33-be5e-1b93dc3fa242",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4680e52e-725d-4f00-948e-8a3729bbf2f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41822375-ff21-43fe-89b2-de8e4639c7f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a65b5a6a-8868-4bed-9bb0-1291d9c890ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3746f27-0c32-4d00-adc8-2bd05386af46",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afff0d2a-72bb-4963-98ca-abc87c0ed36b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd575488-c0eb-4d2c-8cc3-e0b735276276"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85618e5a-1775-42b0-a3a9-3d8a55590d07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "103d86f1-bbd3-47dc-9dbd-1287e2c14ad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1047aec-4328-4cfb-8f21-b1a318a3662b",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0444e1c8-0d91-4684-a2b9-e648bac77292",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b5c88a3-14dd-45ad-84de-35fcf83bc07b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20a5f82b-d59d-4977-a1a6-1205635a7984",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aa6294b-dd74-4346-b7a0-7204215e0741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "015124b2-94f4-4875-af58-c53fa4ba2cfb",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4921773a-8780-4bf4-859d-8329d140c6a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fd077d3-14b6-4429-95ff-d6c3b35bf607"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94a7b854-6fc2-4872-a7e1-299958280e35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59f61101-9513-4e0e-8847-801011df0587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2312b9f4-71d5-4f3b-8e90-3d263550fe2a",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3fde8bd-8589-4544-9dd3-771633e29c7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d50af7e1-a621-4bc2-9642-48c6e353c4a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a58cba17-5180-4338-a6d4-122deb8ce2be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2aa9d7b2-6161-4ed8-a070-cad62dbba8b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bfbd160-193d-4aa3-83d3-684a09f54875",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b92317d4-f550-453b-b86f-ccdbe044114c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a386bddf-c8b4-41be-9c18-b50f45e6d57f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc8037bd-178e-4356-8d43-28d52acf0cd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8a2d285-6606-45ba-9627-253049e007dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f713a44-90af-4c37-b42d-e159eb2305fc",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73e72356-292a-4121-93a3-b17f75649f6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1460f90b-3bab-40f7-9c31-6d7137245982"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d334d0-594b-4a91-b07e-ac87bd7a6051",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89863f81-fccd-43ec-9839-63fcbd16f65a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b4d13f3-272d-4995-99b5-9fe655498df3",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "428914ea-58ac-4291-b996-65263f42ff80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a22cbf5-44ed-46fd-b295-1df79ed681e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd02d04c-0c78-4cdf-9ef6-c6277238d0f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dd7d0c4-096b-4248-9ada-792877d6989d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18204b2f-0a8d-49bf-8d49-5f47c2729c3c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f5840c-0f5b-474e-9edd-6ac3416dc5d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e11245e3-3562-4299-b99f-2c50f1079f0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "671316ee-d1f7-447a-8b84-3f229f872d89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8114433e-5fe5-4d84-93d6-2ad8200d5925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a221b1da-e90b-4871-ad87-4d7a70862e0d",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5691b32b-dda7-49d8-aee2-2a44dcbfc7e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acf65ff4-6090-4bec-b00d-15a760685c4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9369e88e-8dbe-4725-bbae-1ed9fb53c55b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba682358-9647-472b-a0cf-4ce52d3a1eee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a8a295c-7c42-41a4-b954-0423c452afe2",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcfbc42f-b99b-488b-84d2-cd4e4b269ec7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "646eca38-ad5e-4bc5-89f6-8d82850838c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b676704-635a-4f0e-8b86-ec1083e6a601",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0e6480f-81fc-473a-a3ff-ad3fe466130e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68fa589e-2675-4448-abca-dacea156bbc3",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e83986cf-38fd-4b34-abec-fd6c0084f8fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "958e209f-e446-4878-b88b-85b76c367501"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64dc044f-3f9d-40ee-a022-310ec4758e5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13197c70-4bd8-45fc-a9ad-41eb5b25e0ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a7317e6-7c8c-4d6a-8edb-a19b6b3382c3",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f86e162-a93d-41ca-a58d-944c69b0a334",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f73ed5d4-57ac-4fbd-9c33-8d938238c4fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5135d0b-3acb-4cff-8c11-e07322c8a070",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "359d291e-2709-4133-9ba7-a79612b32c8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "209d73cd-de6f-4be0-b4d8-541c58d43dee",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14ac48fa-257c-4563-b45a-2aac425bc36b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09596331-0f7e-43e8-ae93-e2afa4337fd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cf4a316-f3d5-4909-a798-d9b37edbf107",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6482f928-66d4-40bc-994b-f48b6184d654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "648d39f9-e2f2-4c6c-9a64-9b9ec372ebe9",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd9c33d2-82af-44a6-87a0-b73add739f7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "424e691b-bb03-4105-bc2c-4eaac04e7c03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59b0884a-dcc0-4bac-af58-6813204e38f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddfa3028-7482-4aa4-9997-7db9a9f24f74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ff0e2fb-4161-4cea-9563-163ae6a16046",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0061e67d-36e7-41ce-aea4-29fd2febebb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a32d351-f1cb-42bd-a8b7-a48ff0986bee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64a34301-2dd7-4650-83bd-e69ca81f2991",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72dfe010-325a-4d4e-892b-07b7351fa80a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31357f1c-6160-49d7-b810-5e38071d29eb",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f153a54-a6b9-4d0e-a430-378353f56f9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90f7699d-171c-4438-9516-d9b6cfaed76d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7398ec29-fb24-4bee-ba4c-4342c52f5b41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fccc726c-728f-42e5-a70a-f5de82502f75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d86db0c-96b6-438d-8363-21df46e03c66",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8b2e473-5abb-4848-9d3f-96e00fa27bd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f32c638-e081-4eae-93da-982bb91e14ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a2f2afc-b680-4692-88d8-14a3af9a2e77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "034175f5-349b-4053-92d1-b4ff55d7d1ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ed88b62-3c84-40e9-abfa-6324a3eb9343",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bed86b8-1148-4ef3-8193-29158ee3339f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61da6202-422c-476f-a99d-94f2b87140ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f174a2f7-d5c4-416b-91d9-c154ca82a1a4",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6157a0eb-a332-4ff7-9af9-0ed3e306ab22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f410d3d6-2b2f-4ef5-a106-9a15409a4949",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd299bb0-6b29-4dd5-a1d4-c326a86605d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b109f7ba-a10c-4ae0-a925-7065bb0640c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cc99798-77e1-40ec-a6ec-8c8abfe7725a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6df3f55-6708-4fbc-a3d2-0722ac8376cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d2c6f7c-2d3a-4f63-8a0f-ecaf65ee0e6a",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6405194a-c069-4300-948c-49fd04ade377",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff9ce61c-360d-41dd-9e9f-e7a17d5151bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80c9e047-541b-4c6c-bc75-1c0fa2ec5485",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d63874a0-3ca5-484c-ac4d-11ae71fab653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3790e8a9-5b8a-4323-9419-4183412f0c84",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76fd8132-9574-40fe-9713-08ab7a112bc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76d884c4-9191-4dab-8f06-6f0290a4db7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a96025ea-c885-4b97-81a8-c54ce5cb85ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f840c145-1f9f-494c-bfac-9b06b32e8976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "143aa04c-b8a2-40f5-baf6-f7139e8e08e3",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11456a41-2963-46a0-93f9-22c50ae95a2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "607866ef-c50b-490b-b8aa-db88eb7950d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e41a9aa7-5de1-49e3-b8a9-38b936cdc263",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5f78f82-dc20-4453-bce7-2f61c08935e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ff8970e-7046-4ee2-8f5e-39698f5444f9",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d196855-64b1-4a30-8b6d-bf8bb1d4783e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "163e4729-12c6-4828-983a-c45534de03bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b472fe56-9598-4308-a861-3d4275fe3423",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "970b9559-62ea-4139-acc8-eb8fb9e9a8ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbcdbf8a-55fb-4971-aa35-70ca47a76e79",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3eabe94-fd2f-4eb1-ad1c-83e68c7dedb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f6ab459-275c-40b4-b21b-74481190011c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f72efc4e-a638-4e2b-9781-a96207d73e33",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d979b8c-e78b-4015-9d0e-b6c7b23ffbed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd20bfb6-9fae-4876-8167-67083bf38f55",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34511e49-09b2-46b7-bdab-443507e4f3b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "984745fe-f3d8-4807-8661-24743b2ff286"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "789c97fd-6a71-4146-b7f4-8d7ba65d3858",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "929528bf-2cb2-46fb-8e7f-67575a581244"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "052735f8-e13d-430b-91a1-040bc9746c92",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ee3faf27-d364-462b-892a-7b0dcf784e4f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "19c6b6ea-e34a-4916-9b45-888fa15a24f5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "22bd8796-2d7e-4282-9d8c-ed0ce2a7e337"
                    }
                  }
                ]
              },
              {
                "id": "9ace664b-03e0-45de-a9ce-dbf8f60f0b9a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8df68e3e-4d11-4488-8f71-54208ad91db6",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c332b17e-885f-4c94-a3b2-d1d57c97e0c4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "0906c171-afa0-481f-a573-0f0fe8754ba2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "849307dd-6496-4772-9212-bb415d2796b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "35971c83-1b51-42f4-b6e2-2e9f0adc6c66"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "20cbb621-6ae6-4d89-ba69-4e9d9d7ac63a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "34232f82-4033-4633-896c-2d8def1d0c50"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7c00baab-d83c-497b-9ee0-ad04c68154d1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "be73b9df-15d1-40c9-aa32-28b742398e9d"
                    }
                  }
                ]
              },
              {
                "id": "657dae88-e4b6-4336-8f95-6e8449ee8d10",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "019816f2-5dc1-4c08-85f6-20c0b6efa6cb",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4773f12c-f7a4-4067-8e1f-d5013849cdcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "40dc497e-ed8f-412b-825a-9f8e68770638"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b975fbe8-1ac4-4445-b456-ee490dfbd900",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbd3eaeb-4676-4a1c-b711-7de95ba408c9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "00085517-c458-497c-9fb6-b5e3380e3033",
            "name": "Positive Testing",
            "item": [
              {
                "id": "81023c61-7e57-48e8-b910-32e0f88c80ba",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3ed172cd-03c6-4cce-891c-5dc48be14315",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ea293c03-dd28-4c61-9964-67d7875967a4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6fb2f572-72d7-42b3-bfd1-3f81fec7c1f7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "41473cd4-3caa-48db-9655-c7107d85f09f"
                    }
                  }
                ]
              },
              {
                "id": "9311179a-9706-473e-bda7-e9ab104465a9",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "00236aa3-52f3-4253-a959-f6a6a5cd7901",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "89bd9508-5144-4ec2-9321-ff34412111ce"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1eeaebef-8632-484c-a90f-02c04fd94952",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "18cadb2a-d17e-4161-818a-8ffa4dff3066"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e9cf4a68-e351-4ae0-8112-56765d6c5ac6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "7c189d4e-b4c7-4b01-8f09-a80683975207"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4af6a6b6-6f87-4790-92dd-aaac7020acf8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b1a33278-d055-483d-a481-c03897225cfd"
            }
          }
        ]
      },
      {
        "id": "7343a454-8da5-4b6d-9fb8-07c685614b8d",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "099bb213-1bf3-48c5-bc91-788293c6c79c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "09c432d0-d261-445c-b3aa-ae021db6d772",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "56fcfdab-7567-4b65-a838-3dbb2d449b84",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cae3f6c-34b5-4496-aa24-70ebf6552b1e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f3318c0f-970e-4f35-bda1-2f3ef420af73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41ec0cd7-3c5f-42c0-b1d5-42d10e809de9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c3018673-453e-453f-bd26-29c512908009"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "978f8652-ed73-486c-ab7a-f719338a17bb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c616614-d9f1-4eab-aa7f-a4c0ec6188e1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cb847a11-e8a9-4004-9b9f-e379979f8560",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6630c73b-45e9-471c-9d4d-851c2bc6211b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "73efbf5a-fac4-4a1c-964f-c95585d67c68",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "311678f0-5ffc-4a9b-8c6c-14ca2b9eb331"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "849d81df-c6d4-42dc-9238-37f7e1fcc5b9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "68ad13e3-47fb-4ed3-b96d-391ad78e8541"
            }
          }
        ]
      },
      {
        "id": "d3b0a466-e21c-463b-b6e1-d894c5aec0c8",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "4077a49c-2da4-4693-a839-46058939db30",
            "name": "Negative Testing",
            "item": [
              {
                "id": "98132781-6a4e-4732-b114-440048e17e08",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "84615438-0dc3-4924-b9c0-bf6167bb6f76",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f51d88b-4f67-4c14-ae93-01cf2fb20cb4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca86f8d7-24be-4b43-8ac4-bd523b9b0848"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54cafeef-f729-4f12-9784-ebabf0b4e064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b59888a7-1502-446e-9dd7-79a846dc2964"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "89dde82a-1d02-45be-b0af-79e3e020a80a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "129fa6fc-4019-47cc-b7c0-01667bdbb1e9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2310ab8c-ea1b-44ac-8554-1754ce8d5d78",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1099dd0b-66e5-4911-adf2-66b90cb0a062"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5ddfa738-9962-47ad-9e89-b97723157d42",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b05b0441-54eb-44d4-961c-573f34ebdc47"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1c8e6bcc-da40-4775-8806-aac30743ac7c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "898e65b3-cfbd-4a46-8d72-e401af3217df"
            }
          }
        ]
      },
      {
        "id": "a99b3659-319b-4fe3-9e7d-2ebad2ae7db5",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "d3f98b59-4e8a-40c9-b0d6-30e054556394",
            "name": "Negative Testing",
            "item": [
              {
                "id": "936803b4-1c72-409c-a791-80e2d3a61646",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "78ebdb3f-afb7-4b9b-8674-1ec3ec9f54af",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47c121af-132b-45b2-be7b-c5639316ba13",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b7521d73-37ce-458f-873d-ef788abe2c7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ab5df04-ece3-4a5c-9b9f-bfad779823db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dd3ad422-b3fc-4273-9281-69c4d2bd3c20"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d566ec12-46ba-4c67-8fe2-fa3f4f3c6f45",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "08641eea-4563-4ae0-8a59-2e876f5e1012"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "494c1147-9475-4073-a872-ec599d4af80c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "80cd4c22-a3bd-4db6-b835-aff653e348d6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7111f4c1-844b-4052-af3a-e21d4f53638c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "57ce4fe3-8717-4b8a-9b2d-f16ae861152c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7c8ff6de-bafc-4ac3-b045-ef7910231863",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b64aa8d8-cde5-413b-8b8f-78c453cd8c43"
            }
          }
        ]
      },
      {
        "id": "26f62e54-af1d-4575-bdde-7baf030d1b0e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "43369230-4c9e-4ffa-947a-051f96804f82",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a400f802-43ef-4ca2-8b85-664ba85ed215",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "9b6f52e7-fdc2-4572-8733-db56fbea1ef0",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "92833f46-435d-4bb7-aa26-6698b6ebb7f4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6c367ea7-a872-44a2-8de1-4e7c72ab1f74",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 159.6111111111112,
      "responseMin": 27,
      "responseMax": 12548,
      "responseSd": 835.7596152481395,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1724373636439,
      "completed": 1724373684446
    },
    "executions": [
      {
        "id": "6a13533b-fb0c-48f6-afa6-342ad2a096b6",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a9410e14-ebc9-4f4e-aa5e-a0a7df0e9013",
          "httpRequestId": "61c7301a-1777-4640-9325-ba74bfeedae0"
        },
        "item": {
          "id": "6a13533b-fb0c-48f6-afa6-342ad2a096b6",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "e08ddff6-ecb7-4cb7-a121-14cb4cc5fe84",
          "status": "OK",
          "code": 200,
          "responseTime": 89,
          "responseSize": 0
        }
      },
      {
        "id": "82db3fdb-8576-4a2b-8d38-bee8da11b708",
        "cursor": {
          "ref": "8f8493f9-c242-470e-8da9-62e85ae2bcf3",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "aea045aa-b40e-4d4f-a23c-2f55e1fa8eb4"
        },
        "item": {
          "id": "82db3fdb-8576-4a2b-8d38-bee8da11b708",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "96ca7911-f3a7-4c37-a693-a7b72b0b0179",
          "status": "OK",
          "code": 200,
          "responseTime": 27,
          "responseSize": 0
        }
      },
      {
        "id": "92d16504-32d9-41a2-8572-9efb5fd27f13",
        "cursor": {
          "ref": "a4a43b77-f1d6-4d28-bcef-5ab3c85fca24",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "bd23a556-e72a-4695-805a-adb963b9ce7f"
        },
        "item": {
          "id": "92d16504-32d9-41a2-8572-9efb5fd27f13",
          "name": "did_json"
        },
        "response": {
          "id": "2030e0a4-0e77-4448-8f63-d120d47fa1f8",
          "status": "OK",
          "code": 200,
          "responseTime": 440,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "160e5868-fc2d-4221-a0aa-55fc431a6aa7",
        "cursor": {
          "ref": "617b5efb-7184-48f7-8bf0-3ffbff5a4fe3",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0f90fae9-17f6-4220-9098-aeaf89467946"
        },
        "item": {
          "id": "160e5868-fc2d-4221-a0aa-55fc431a6aa7",
          "name": "did:invalid"
        },
        "response": {
          "id": "4e23ac89-6d2d-404a-bdc2-9dbd7f63fd3e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 437,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "160e5868-fc2d-4221-a0aa-55fc431a6aa7",
        "cursor": {
          "ref": "617b5efb-7184-48f7-8bf0-3ffbff5a4fe3",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0f90fae9-17f6-4220-9098-aeaf89467946"
        },
        "item": {
          "id": "160e5868-fc2d-4221-a0aa-55fc431a6aa7",
          "name": "did:invalid"
        },
        "response": {
          "id": "4e23ac89-6d2d-404a-bdc2-9dbd7f63fd3e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 437,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ce321c3-806b-4e69-9395-e4d02665c701",
        "cursor": {
          "ref": "79980a11-1984-4c3f-9c03-b5cf583ed68c",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "79017cac-9645-4e6f-a819-95de54c5e4fe"
        },
        "item": {
          "id": "0ce321c3-806b-4e69-9395-e4d02665c701",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "4d3c6d19-af37-4807-916e-6bab70d7c0be",
          "status": "Not Found",
          "code": 404,
          "responseTime": 69,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddbbde63-cd48-4929-90ef-e0239cfcbe83",
        "cursor": {
          "ref": "8d68668d-c48b-4a2d-808c-a27ae0b98c1e",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "befe81a8-1276-4091-a3e5-d119d91dfe30"
        },
        "item": {
          "id": "ddbbde63-cd48-4929-90ef-e0239cfcbe83",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "7ba17bf9-5c92-4c1a-95bc-41d8d257f1db",
          "status": "Not Found",
          "code": 404,
          "responseTime": 65,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44ec516d-708d-4888-8e71-5a4fff653704",
        "cursor": {
          "ref": "89c13329-a7ca-42fd-b255-eaa7ca005c1b",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "89cc989e-d53a-4369-9324-bdf94e22e72c"
        },
        "item": {
          "id": "44ec516d-708d-4888-8e71-5a4fff653704",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "4cbef80c-dde9-439d-8da0-81fe2d063f24",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 58,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f994b3e-318c-423a-a4c8-af902fbac63e",
        "cursor": {
          "ref": "2607af57-3fcf-4239-bdc9-cc91fbabbd47",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "cff202cf-a76b-449a-a239-c05f3491e579"
        },
        "item": {
          "id": "8f994b3e-318c-423a-a4c8-af902fbac63e",
          "name": "identifiers"
        },
        "response": {
          "id": "5427eb10-f29a-4d51-9251-bd894f107d95",
          "status": "OK",
          "code": 200,
          "responseTime": 72,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc52b42-9ce6-46c9-85d5-40a147396a95",
        "cursor": {
          "ref": "b86ed246-aecf-48a9-a0a5-b129492faca9",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "81bc9f94-5dcb-4486-adce-1f5e182549b8"
        },
        "item": {
          "id": "4bc52b42-9ce6-46c9-85d5-40a147396a95",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "360b9553-7dba-4059-bfe0-df1fdc9b342a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8af36fbe-8313-4968-957e-3089c10395c7",
        "cursor": {
          "ref": "9a665f6b-589b-4349-bcc2-2c5a624361ac",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "be136715-8fea-4d54-8cc1-45d0041fca06"
        },
        "item": {
          "id": "8af36fbe-8313-4968-957e-3089c10395c7",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "f2d089ca-3cd3-4c1c-9bfd-4923cdfe86f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e18b630b-2d32-45a2-a23c-9468b87fe964",
        "cursor": {
          "ref": "4f47e2e6-9f92-4c74-b92e-0c554c70a803",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "fff15f12-4fcd-4915-935e-962688152d59"
        },
        "item": {
          "id": "e18b630b-2d32-45a2-a23c-9468b87fe964",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "317ac79a-d406-4461-a23e-54e73b2c2df0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e866ef4e-a830-40e9-a805-f92d3f18e5f2",
        "cursor": {
          "ref": "14978eeb-0564-42c4-a80a-b51e5b79efbb",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "633d493f-1161-4b70-8229-a6d61eedfe78"
        },
        "item": {
          "id": "e866ef4e-a830-40e9-a805-f92d3f18e5f2",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "56357022-fb21-41b3-a0ec-e02a7456b6aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d0741ff-3e7a-4fb3-971f-d6eb6b12992e",
        "cursor": {
          "ref": "a0d105b8-af65-4b8e-853e-a4b536a856d7",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "c9818109-e051-4c61-bee0-d6f1e12f8125"
        },
        "item": {
          "id": "3d0741ff-3e7a-4fb3-971f-d6eb6b12992e",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "32cf7720-df4b-440d-9b4d-0106a8a76862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5a979fe-3f64-422c-8c14-cdae404da1e4",
        "cursor": {
          "ref": "3f11b3c5-8025-49f3-be23-b0fc07cb665c",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "f993c32f-cc51-4ec8-95a3-52067cabaab2"
        },
        "item": {
          "id": "c5a979fe-3f64-422c-8c14-cdae404da1e4",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "6810f671-41d4-42b0-9ccb-757352036971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7506ad5e-b163-45f6-88ac-ed9ac6bab669",
        "cursor": {
          "ref": "f1fde401-82a5-4e44-b139-95e05ef3d3b6",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "7208a095-70e9-4b62-9e54-857a66230cf7"
        },
        "item": {
          "id": "7506ad5e-b163-45f6-88ac-ed9ac6bab669",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "fa4307ce-7455-4f93-a0a5-6f513cf387d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e94edddc-6682-4c41-8a62-da80612b886e",
        "cursor": {
          "ref": "95075db1-7a95-4ea1-845f-4c23ff6156a5",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "4df2662f-38fb-4835-8918-78dec068cc09"
        },
        "item": {
          "id": "e94edddc-6682-4c41-8a62-da80612b886e",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "9d8d40fc-45ee-449c-a568-df8a747ce9b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b20d3356-ea8b-4fda-958e-9bb8572741bd",
        "cursor": {
          "ref": "a51e8665-f925-4b5d-bf6f-5903cb7c5089",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "cd45d9ba-6e8a-4b21-b1fa-eece9d7355aa"
        },
        "item": {
          "id": "b20d3356-ea8b-4fda-958e-9bb8572741bd",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "9f1243d0-c6d5-43e9-a27b-cbdac17a96ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d668c8dd-13ec-467d-8219-7f265c17e3e8",
        "cursor": {
          "ref": "3a347620-4d49-4d79-ac19-ca4e7cc9e01d",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "8cf6d6f5-05d7-4f15-87da-663c03f40cae"
        },
        "item": {
          "id": "d668c8dd-13ec-467d-8219-7f265c17e3e8",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "806e8547-f724-4188-9eab-8db1182e10db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "131c0f54-917e-453b-a841-c424694898f5",
        "cursor": {
          "ref": "4e0281fc-bde3-4d52-a248-d4528f027d1f",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "f059cebe-686b-4f47-b87a-dcdc9915c695"
        },
        "item": {
          "id": "131c0f54-917e-453b-a841-c424694898f5",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "393f655d-3541-4b4a-a082-550b8bb9324d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b06539-300c-423d-b2e1-32aa66cc5bb8",
        "cursor": {
          "ref": "2af42331-37ff-472f-b49a-09315a0872ff",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "52ea8c28-d676-4294-8f3b-09ce1a4710c3"
        },
        "item": {
          "id": "d5b06539-300c-423d-b2e1-32aa66cc5bb8",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "0ff07717-4c3c-4348-b5ee-0ebaa3e7b60a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7810f9a-6a84-454d-a02f-896ce75449a6",
        "cursor": {
          "ref": "a9f566a8-b724-453b-85ae-40d901875c27",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "17cbe504-d0e7-48e7-883d-beb28bef18cb"
        },
        "item": {
          "id": "e7810f9a-6a84-454d-a02f-896ce75449a6",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "5be12fe8-b5a9-4f60-a242-ab93fbab5056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f5d58cf-5667-41c7-ae1d-8f11636d046b",
        "cursor": {
          "ref": "b7afad1f-653a-47f9-9f3d-cb8a45ed5a47",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "d061f4e0-5421-4230-a1ef-6600bc4144ad"
        },
        "item": {
          "id": "7f5d58cf-5667-41c7-ae1d-8f11636d046b",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "c92acd16-33b2-4c13-bbc6-d39ca486126f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b429489-4406-4fa4-8ede-23341720da48",
        "cursor": {
          "ref": "1197059a-0de1-4774-9615-99dfba90f4dd",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "f0ef153d-7a24-4dfa-a44e-e8578aac11ba"
        },
        "item": {
          "id": "7b429489-4406-4fa4-8ede-23341720da48",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "bcce6701-27a2-414d-995a-08eae12a8668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a44ee071-b44c-4aeb-84b8-04425377989d",
        "cursor": {
          "ref": "29fa7703-2fe7-4ab3-95d3-b20fd8237035",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "6d088751-a130-4241-b96c-4285745e245d"
        },
        "item": {
          "id": "a44ee071-b44c-4aeb-84b8-04425377989d",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "1a921fa4-6664-4155-a9d7-a90e98a53d26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1809d7f1-7979-4789-b827-bcc58b779051",
        "cursor": {
          "ref": "24dfa342-2ae6-4041-a404-be1144bf7c7b",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "4f3cb3f4-ed4a-477d-81c7-669e6ca58e59"
        },
        "item": {
          "id": "1809d7f1-7979-4789-b827-bcc58b779051",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "26643b22-4f9e-4db6-88b6-3e0ff95c1419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "398e5471-7075-4f4f-b4d6-b264fe5d6d9e",
        "cursor": {
          "ref": "f558f57a-b336-4155-b8c9-181e0f49de13",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "33939d43-4d22-45f2-9418-d7db07b39b2c"
        },
        "item": {
          "id": "398e5471-7075-4f4f-b4d6-b264fe5d6d9e",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "51ec16e1-c565-461b-9173-66dd804d73b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63273524-502b-4328-88c7-73b98ce14511",
        "cursor": {
          "ref": "885dc732-02f1-48f4-82bb-008f75face03",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "41a5258a-540d-4bb3-a5de-5cf2347fcfeb"
        },
        "item": {
          "id": "63273524-502b-4328-88c7-73b98ce14511",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "258657b1-98cf-4ce2-84fb-6bb557d7ead8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85cd4e22-fce0-4ec1-9680-777b81c8c79d",
        "cursor": {
          "ref": "91a5b5b2-8b4f-44ce-b1a5-0b69d7fec7f8",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "aac90063-6dd0-4480-abf3-c6e6020f4e30"
        },
        "item": {
          "id": "85cd4e22-fce0-4ec1-9680-777b81c8c79d",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "4fa5dc6a-dd23-4122-a373-e4251b240cfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e128a4c4-ee83-4c12-b9da-c33bede4b13c",
        "cursor": {
          "ref": "5d16df29-7b4e-4f2b-bf1e-e6a8f694db88",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "9e982c73-beac-4ec6-87dd-b2a105f214f9"
        },
        "item": {
          "id": "e128a4c4-ee83-4c12-b9da-c33bede4b13c",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "2664cff9-45e5-4293-a78e-115c1a79805e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a61d290-129d-48c0-ba96-57fcdf08c973",
        "cursor": {
          "ref": "9c9432e6-b7cc-480d-8c61-ddf2e66b5d40",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "07dc6e36-2b4d-4467-b084-4ff5fc73d0dd"
        },
        "item": {
          "id": "7a61d290-129d-48c0-ba96-57fcdf08c973",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "997a9475-3ee9-4733-bf39-a2e7e5d26e51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fb6d8f6-622a-4df4-aad4-711ad826de4e",
        "cursor": {
          "ref": "6e3b26c0-f393-4229-9b73-ba8d2498e0ef",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "dae425e6-1d3e-4216-8afc-25cfcb9200f0"
        },
        "item": {
          "id": "0fb6d8f6-622a-4df4-aad4-711ad826de4e",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "5ef80f1d-b641-465a-94c2-dff7e45227bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df74cfe-b6d1-46d8-ac0b-a1b6e5d98fff",
        "cursor": {
          "ref": "50d80ad2-0364-49c0-abba-21b61d9856ad",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "7720c868-7325-47b2-a57b-269f2bd536a7"
        },
        "item": {
          "id": "6df74cfe-b6d1-46d8-ac0b-a1b6e5d98fff",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "c29be1de-ae96-4e2e-8854-787b8dfec4d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0346baa-6a3f-41d7-81d1-b2525f09606b",
        "cursor": {
          "ref": "8cfd6cdc-ee7c-4384-8f41-6ad5d381d632",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "94a642cb-3e4e-4fcb-8586-730c23c91ea0"
        },
        "item": {
          "id": "e0346baa-6a3f-41d7-81d1-b2525f09606b",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "8a126600-b636-47f7-8db3-b14bd35dbfce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af5268f1-9c24-4c34-9c74-55a0e2024226",
        "cursor": {
          "ref": "c4338c48-1059-4900-9adf-a78950ba0dbb",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "abdb308d-5333-4ff0-bcb6-20159575971e"
        },
        "item": {
          "id": "af5268f1-9c24-4c34-9c74-55a0e2024226",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "a4b2c5aa-a0c6-47fa-8016-506442de0605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e48f68b2-2a5d-46ed-ab37-9562a6693825",
        "cursor": {
          "ref": "2573d3a4-bc3a-46c4-b2aa-c2425dd07549",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "b9bfa117-6d9b-42eb-a33e-12b2c4abe2d8"
        },
        "item": {
          "id": "e48f68b2-2a5d-46ed-ab37-9562a6693825",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "dd77d152-83fb-4f6b-a29e-54bd1ab3662a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a64044fd-ee2f-4b51-97d2-7365750b7ceb",
        "cursor": {
          "ref": "630dd314-3352-4216-8597-fb678071816a",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "e66e48b3-ecb7-4f89-bc50-1c4ffe7ff9a0"
        },
        "item": {
          "id": "a64044fd-ee2f-4b51-97d2-7365750b7ceb",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "606e6aa5-89fe-467d-ac2f-90437683878e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2794229-9161-451f-abd2-4e350f323d2d",
        "cursor": {
          "ref": "c24b22b7-92f8-4951-aecb-2ee408c39dde",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "83a526a5-8be2-4075-b4d6-8ef73b1ea608"
        },
        "item": {
          "id": "b2794229-9161-451f-abd2-4e350f323d2d",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "0db096fd-a32d-44a7-9418-6ef1dc86d110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2a776ed-b398-458c-a017-d4efa93f1fa4",
        "cursor": {
          "ref": "7307f8e9-8fd7-44a3-8292-06f4f7bb5289",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "2b19a2c0-b977-44ec-9a35-50792ec96a2f"
        },
        "item": {
          "id": "b2a776ed-b398-458c-a017-d4efa93f1fa4",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ef0f9a53-7718-49c5-b373-750e47e45e67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caecc09a-e1d2-4173-937e-340a3093fd34",
        "cursor": {
          "ref": "a62c0a7d-84a1-403f-8b48-fb50c4e59e57",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "1a7f2dc8-ccb2-42bc-b9d7-75546c1a4e7e"
        },
        "item": {
          "id": "caecc09a-e1d2-4173-937e-340a3093fd34",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "2ae43d28-aa63-407f-9d3e-f1f442a2e5d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4352ec9d-10f6-4179-9cba-6990d3738b2d",
        "cursor": {
          "ref": "20804cb1-b677-4059-905c-2cbb6fa3b5fc",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "ae5bb4a7-f8c6-47ac-a618-47e25f14f3f8"
        },
        "item": {
          "id": "4352ec9d-10f6-4179-9cba-6990d3738b2d",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "699cc151-81d3-4ec5-ae82-c8758b252000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39fff3de-ca57-41ea-8165-2029266c99e3",
        "cursor": {
          "ref": "715338e5-cace-45b9-a81e-cd78da95ff8c",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "83bbdc97-0d07-4654-ab59-bf8aa731cca0"
        },
        "item": {
          "id": "39fff3de-ca57-41ea-8165-2029266c99e3",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "40697ea9-f369-4b98-aca6-4ee8891d7765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f91baf14-d5e3-4a96-826d-2f7ce548d039",
        "cursor": {
          "ref": "4c281d80-1781-4a2c-9b34-01db4c05e631",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b6c1f710-beee-43d4-a5e2-b811e3a9f968"
        },
        "item": {
          "id": "f91baf14-d5e3-4a96-826d-2f7ce548d039",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "a8bed023-f6b4-4d23-9ba9-ab0713d8e02d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27354291-9843-482d-9074-72c53eb69883",
        "cursor": {
          "ref": "10296afe-921e-478c-8603-5f2c4ecb617e",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "55036d73-64b6-44f8-97cd-43b495584ad7"
        },
        "item": {
          "id": "27354291-9843-482d-9074-72c53eb69883",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "c2a9e0ae-9342-4443-b498-1b7cf57017b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35086b0c-d0bf-4190-81a7-fde0aaff9567",
        "cursor": {
          "ref": "d585d9cd-3ab8-4955-9e27-6010028e62b6",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "2732efc8-1835-44bd-80e4-197ad9b12b47"
        },
        "item": {
          "id": "35086b0c-d0bf-4190-81a7-fde0aaff9567",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "25ede9ee-6032-460d-999f-4092af494ce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ce788d-f377-4cbb-8668-2f80d4f63d19",
        "cursor": {
          "ref": "d7c24e6a-5d3f-438c-91fb-8b7b08a7d52a",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "3caefb2c-eeee-4e90-b0ba-4975813145e4"
        },
        "item": {
          "id": "a6ce788d-f377-4cbb-8668-2f80d4f63d19",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "33503039-d4c9-4eff-abc6-143ae69c1424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a899d8b-57d6-4978-8137-3669548617cb",
        "cursor": {
          "ref": "8572ecb7-570d-41a6-809f-c263420b5c33",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "f03cf0ee-740f-41a8-92f2-801f4ba4c94b"
        },
        "item": {
          "id": "1a899d8b-57d6-4978-8137-3669548617cb",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "2e2aab12-4276-40ec-b946-f9c66f31b590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09703ef2-3375-4ac0-ba4b-668139058233",
        "cursor": {
          "ref": "e3e2ba4b-5542-4159-977c-113c63a0b45d",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "5e54e42e-e2a9-4253-b640-9e3d8fb82438"
        },
        "item": {
          "id": "09703ef2-3375-4ac0-ba4b-668139058233",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "6ba589a5-d5f4-463b-bc3a-39624378bc34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaaaf789-1d0a-447f-9524-2663fc1a65c4",
        "cursor": {
          "ref": "20fe1462-2b42-4f86-b9db-c45741f8c6ce",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "81605594-fead-4a55-af8f-838335b5e520"
        },
        "item": {
          "id": "eaaaf789-1d0a-447f-9524-2663fc1a65c4",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "dd24bb7b-f92c-4cd1-8368-29821807ee37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 852,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62b6acdc-8f86-4665-afdc-8a5807c6bf02",
        "cursor": {
          "ref": "e9f7494d-9b63-4f9f-9eb9-57bfd1837950",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "05623327-060a-4b0c-b39d-ccfe7a260c7f"
        },
        "item": {
          "id": "62b6acdc-8f86-4665-afdc-8a5807c6bf02",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "d76806d2-3512-4c16-9975-8b4828bcf54c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd29f645-f248-49a7-b5e5-7e6499808964",
        "cursor": {
          "ref": "bd489151-6e2c-4ea7-bbd2-d5c99c3f4404",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "d142c635-8f5a-4a44-a757-c9f29e93cf5e"
        },
        "item": {
          "id": "fd29f645-f248-49a7-b5e5-7e6499808964",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "cd9af974-aa15-4028-9e65-b4884c4e21db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "606d288f-0801-47de-a9bc-6b554ba704cf",
        "cursor": {
          "ref": "9dc2d182-3910-44fb-881f-edbce8e0b3f9",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "cd22140f-47ba-42cb-996d-6b7ac2faed36"
        },
        "item": {
          "id": "606d288f-0801-47de-a9bc-6b554ba704cf",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "df2ab8eb-18a2-47ca-8153-e8e0c372ab8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf1dfc9e-f272-4765-9ed9-6203dff9023d",
        "cursor": {
          "ref": "af7233f6-fc7f-47e9-acac-5f438d5de127",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "2ddea4af-8f9f-46b9-b2ad-a6633e86c8c7"
        },
        "item": {
          "id": "cf1dfc9e-f272-4765-9ed9-6203dff9023d",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "0e1e3165-dfd2-48df-a1e7-95f0c59a8eb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf2694f-dee1-496a-9887-bf91224c1715",
        "cursor": {
          "ref": "8a33ae70-7642-41b4-a6c2-5091fa49abf3",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "48f83c8a-cd82-4025-a7f1-b96b47128b33"
        },
        "item": {
          "id": "eaf2694f-dee1-496a-9887-bf91224c1715",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "f4b5300d-7458-4564-9865-d68ee37d420e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "247a6b89-506f-48ab-a0bb-1b4759c3fa20",
        "cursor": {
          "ref": "cc6bfe42-8e22-4270-9588-855ee5b0d98e",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "e2494642-fee7-4cce-8933-a1a7f0fb816c"
        },
        "item": {
          "id": "247a6b89-506f-48ab-a0bb-1b4759c3fa20",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e8fec6d3-31ba-4fd0-bd78-f2c7a306a3c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3b7bb81-5056-4215-bdb5-8e73ab93be42",
        "cursor": {
          "ref": "de501b7f-8f04-4ed0-b79e-01991d3f7dcc",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "7af00542-39c2-443e-ad4e-16caf94b3b5f"
        },
        "item": {
          "id": "a3b7bb81-5056-4215-bdb5-8e73ab93be42",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "e2dd52ec-3a55-4100-b8ae-ececd67536ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6bcf498-12bb-4d27-9b6c-bdad7c58990e",
        "cursor": {
          "ref": "9a4ee97f-e6ae-4d46-bdd8-768cd837a685",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "bca4d566-fcf5-4366-a9a9-74e0e0ccd049"
        },
        "item": {
          "id": "a6bcf498-12bb-4d27-9b6c-bdad7c58990e",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "43de32e1-a130-4c6f-a85b-f11788630b60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a26e1729-1f3d-4a1b-91ec-87d527e2cf1c",
        "cursor": {
          "ref": "9343e1c7-f2d9-400a-9d50-227e513d21ad",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "4e470211-6c94-4c74-8dc9-5f92a66e0c9a"
        },
        "item": {
          "id": "a26e1729-1f3d-4a1b-91ec-87d527e2cf1c",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "40980d91-c3f9-41dc-863c-c8b03e8d89f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bfae8d9-6970-4c87-ac4f-0916e9b68b2f",
        "cursor": {
          "ref": "cb5406ad-7f12-4a84-aab9-a336811984b1",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "8f19111d-3f2e-4fcb-b318-05fffb761225"
        },
        "item": {
          "id": "1bfae8d9-6970-4c87-ac4f-0916e9b68b2f",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "0707411d-18d5-42aa-8560-e0a8eeb252f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61aa96ef-babb-44ba-b47f-a16f28bc334f",
        "cursor": {
          "ref": "d6cc3250-6038-4afc-b94c-e40217678e97",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "ac7ebc32-af69-4c0a-bbcb-5a0c5b6bd1d2"
        },
        "item": {
          "id": "61aa96ef-babb-44ba-b47f-a16f28bc334f",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "6ab4a35c-7e0a-4be4-ae20-d157333d967d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 129,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6522f935-e5df-410a-97ad-8b698acc6e82",
        "cursor": {
          "ref": "56ab7347-32e1-4d9a-b42c-6f6aa1628156",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "cb421933-dbca-4024-90ea-f32ce1a90a85"
        },
        "item": {
          "id": "6522f935-e5df-410a-97ad-8b698acc6e82",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "37b390b9-9427-4896-87d2-13c3fa4a2592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "835d04a9-f8ff-4d6b-ab11-6019269a98c0",
        "cursor": {
          "ref": "b8660294-10d9-4b3c-acca-c39b5371c501",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "3f83e995-97cc-443a-a559-0a414adae248"
        },
        "item": {
          "id": "835d04a9-f8ff-4d6b-ab11-6019269a98c0",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "5284ae4b-4173-42e8-b748-094bcd5d0bee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f64b2ca6-b1b3-4c29-8ffd-a745edb7fe10",
        "cursor": {
          "ref": "3e5715b8-a9ed-4550-8289-51389bb646a7",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "0877c109-c38d-433f-a395-e235d9af97a6"
        },
        "item": {
          "id": "f64b2ca6-b1b3-4c29-8ffd-a745edb7fe10",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "0f7e803e-0864-4d64-b61d-8873de717d8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8105a957-ddcb-44ec-bd7e-8e8b43d8e42a",
        "cursor": {
          "ref": "f5f3024e-62b9-4feb-b2b1-6644cc891d0c",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "3bc7060b-f91a-4fb0-8402-9fefb5acf0ce"
        },
        "item": {
          "id": "8105a957-ddcb-44ec-bd7e-8e8b43d8e42a",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "6a8d8f78-89f8-4b3f-95f5-6c139dbf9839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1427282-79ca-45ad-aef8-1c071e0d5e36",
        "cursor": {
          "ref": "6e588390-27c3-428f-8690-0a8a282addff",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "56160dfb-ec51-41c7-827a-6c05678fd958"
        },
        "item": {
          "id": "d1427282-79ca-45ad-aef8-1c071e0d5e36",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "1c3e3e46-9055-4adb-afe4-5f8c658ffd46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c945070f-5a26-436e-85f4-c28d51f2201f",
        "cursor": {
          "ref": "4829850e-f74e-4f90-8a61-c606b1246277",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "69bac829-db7a-4e93-9492-3ac06d7cb929"
        },
        "item": {
          "id": "c945070f-5a26-436e-85f4-c28d51f2201f",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "ececa797-903d-4f1a-8943-e936c783a160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "123e72cd-6bf5-4fc1-8f4d-5142c45626d2",
        "cursor": {
          "ref": "69ec22ae-06c4-4346-bd5e-20ab5d2a64d8",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "ae2760f8-20b6-4fe5-8643-0f8999abda00"
        },
        "item": {
          "id": "123e72cd-6bf5-4fc1-8f4d-5142c45626d2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "43bfe6a5-88f6-4145-9aa0-127b21a0fb40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7828dfe8-cb82-4b40-928f-3c4ee64cde68",
        "cursor": {
          "ref": "8f3681b0-e9e0-4204-b898-e0119a6d8a0b",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "8fa68a45-f6ad-4600-a234-07426dfe442b"
        },
        "item": {
          "id": "7828dfe8-cb82-4b40-928f-3c4ee64cde68",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "c54e7ea7-c2f7-4549-8226-e67c75429bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41628433-3c06-4195-b321-836b29e3ef12",
        "cursor": {
          "ref": "4591af64-56c5-4c0c-a606-66de9709b3cf",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "440adb86-ffe5-481c-8e5e-163c79b80e3f"
        },
        "item": {
          "id": "41628433-3c06-4195-b321-836b29e3ef12",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "6501337b-43eb-423b-871d-aa221d2c333c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e648f39-7473-4953-a26b-380fe74bff48",
        "cursor": {
          "ref": "632ebd5d-3f3a-49cd-8136-ee0d8f4a54e9",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "0308a69b-ab1d-43d3-9f8c-a784cea71667"
        },
        "item": {
          "id": "0e648f39-7473-4953-a26b-380fe74bff48",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "7a76b897-dfc7-4211-a2a0-d03dee5ce5af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec66efec-b18e-4968-99d4-9f6c0cae0225",
        "cursor": {
          "ref": "772f6b0d-0d2c-4846-a8d7-3df6b49229e0",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "c4dc2bd3-7dda-4c8f-b3e6-053977ba6345"
        },
        "item": {
          "id": "ec66efec-b18e-4968-99d4-9f6c0cae0225",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "87ef42e2-6b5e-47b3-a16e-e906f288462f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65c00917-34be-4de4-9397-447f04bc2d6e",
        "cursor": {
          "ref": "e6d2edf7-cac7-49db-bbe6-3831c7137cf2",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "4b715a32-7bd3-4d6d-a16c-c94255945e67"
        },
        "item": {
          "id": "65c00917-34be-4de4-9397-447f04bc2d6e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "afc0c89b-daf8-4302-8223-5b5e7f602080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eaa34dd-75d5-4354-94b0-8769d1e3506c",
        "cursor": {
          "ref": "e2878b3f-02e0-4fce-a544-f4cfb2e99305",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "cf6bfb88-7f80-4dc7-b2f9-bdf1ff45536b"
        },
        "item": {
          "id": "7eaa34dd-75d5-4354-94b0-8769d1e3506c",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "638813c6-ff3f-4d98-9bd4-a4d6dda21fab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "296ef1c3-dbd0-4bdc-b260-6804f3bfbfbf",
        "cursor": {
          "ref": "cbaac28a-4d0c-4b40-815f-4012a2ea47c7",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "8655469d-9d8d-4d74-9457-70983435d22e"
        },
        "item": {
          "id": "296ef1c3-dbd0-4bdc-b260-6804f3bfbfbf",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "ee0af887-4d94-465e-9dc9-9ec16caa0ada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89909bb9-4059-43f2-ac5e-df9697298c28",
        "cursor": {
          "ref": "29d0172f-8492-4e8f-9ec6-fb543a400b90",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "ff5614b5-e149-4138-bd1c-b819c52296b0"
        },
        "item": {
          "id": "89909bb9-4059-43f2-ac5e-df9697298c28",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "b039f9c0-54eb-459b-a549-3cba61113eb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a208ce2b-0ff9-4163-b1fa-7af47a4f7987",
        "cursor": {
          "ref": "8068ec63-18ff-420f-b8b7-644f414ba857",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ccb89022-1c45-4683-94ea-a64df4d8fafa"
        },
        "item": {
          "id": "a208ce2b-0ff9-4163-b1fa-7af47a4f7987",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "7d013f99-e4bc-4c6b-bd5b-ed491ad35553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be71cbff-034e-416f-97e8-f36f5e5d7732",
        "cursor": {
          "ref": "b5856baf-bb91-41d9-bb22-730753739743",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "7f328faa-106c-4629-921e-0a91fa1d16b2"
        },
        "item": {
          "id": "be71cbff-034e-416f-97e8-f36f5e5d7732",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "655045a8-faea-4115-ad13-5f0deaad06bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de125ee9-687a-43de-8274-14e249502e04",
        "cursor": {
          "ref": "b4090b78-2e20-47d7-b1aa-640fb47ee6c2",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "69205237-3576-4cbf-a7c6-b426ca490e18"
        },
        "item": {
          "id": "de125ee9-687a-43de-8274-14e249502e04",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f58c8fed-6687-4493-bf7a-55cb79faebc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f1b87c3-be80-429f-83ed-c99b9aed875d",
        "cursor": {
          "ref": "7ef0d7a1-4971-4c99-ac0e-aff06d420698",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "3a2ceb6f-8d32-40ed-bf18-2b0e462b6676"
        },
        "item": {
          "id": "6f1b87c3-be80-429f-83ed-c99b9aed875d",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "41abe8a9-22d5-4746-8633-8fb89fbb8692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4db0026-0581-4b03-b29c-050d532cfade",
        "cursor": {
          "ref": "4bdab3de-91d9-4f9c-99e5-8bc26cf4fc5c",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "89d290e7-e027-45cb-868f-afb0744a8881"
        },
        "item": {
          "id": "e4db0026-0581-4b03-b29c-050d532cfade",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e300597f-6e4e-41d9-a5cc-1cc2bbcb17f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "159d830b-8fb9-426c-b91c-7cab2f005ef7",
        "cursor": {
          "ref": "b4cf2a6e-7824-4d03-ab52-d33ab214e8d0",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "4d4d16c6-166b-4b7b-92c2-d728a94f76ad"
        },
        "item": {
          "id": "159d830b-8fb9-426c-b91c-7cab2f005ef7",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "0d4fc6ce-918f-49c5-a62b-25c68f8bb4d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6fd2231-be39-4cd7-aa3a-6e3f36bc9267",
        "cursor": {
          "ref": "ba944c67-d748-4ac8-9518-e2ff22b701b9",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "c6279b41-d18e-4c76-bdfa-cea9d8d11a03"
        },
        "item": {
          "id": "d6fd2231-be39-4cd7-aa3a-6e3f36bc9267",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "01a2189b-ad97-4b46-b7dc-25c98080be7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e0afa92-b6d0-4e4e-b785-8bef5a1ed2bd",
        "cursor": {
          "ref": "a5df089b-55a2-45cc-ba89-d4f1e5832179",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "c51ed4ab-982b-4bd8-8c23-345755337f46"
        },
        "item": {
          "id": "7e0afa92-b6d0-4e4e-b785-8bef5a1ed2bd",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "83b9d4df-e3a4-4726-9943-4c2823f07268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df8fd5a0-2314-4334-92de-a37230ddc897",
        "cursor": {
          "ref": "a55bd810-2eaf-499b-b3b4-23e033f30604",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "0b7dcab5-88e9-4239-b3f9-bd69f962b454"
        },
        "item": {
          "id": "df8fd5a0-2314-4334-92de-a37230ddc897",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "ab1e71b9-bf13-4c06-b4f2-5846fe2c9dcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a06cf3ba-1892-41ad-8fb4-f85881ec626f",
        "cursor": {
          "ref": "d9446d47-3f38-4638-b0db-29c9b1b14c56",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "5ca7200a-15e1-420f-9089-46ad318a2669"
        },
        "item": {
          "id": "a06cf3ba-1892-41ad-8fb4-f85881ec626f",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "ed243fec-73f2-45b0-b33d-3d27b92f8d01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f591ed32-6ac9-4538-9970-e384dbb5f328",
        "cursor": {
          "ref": "6a0426cf-ccf0-4e08-83eb-dd44e3030466",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "2bf75a2e-f60a-417d-bbd6-6419c728b5ea"
        },
        "item": {
          "id": "f591ed32-6ac9-4538-9970-e384dbb5f328",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "bc8e8999-e26d-4375-8180-94fa32129fc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80dca4e0-a917-4d49-9300-1e3e2d4f6e72",
        "cursor": {
          "ref": "42dbb5e4-fa6a-4afa-b0fb-d941bc5edb65",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "f09649f9-caa8-4751-aa34-2451c55f1c74"
        },
        "item": {
          "id": "80dca4e0-a917-4d49-9300-1e3e2d4f6e72",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "806f36e9-9971-49d2-aceb-ed827b4a117f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "580b4b08-9cbf-4a40-96fb-9672ec1faf93",
        "cursor": {
          "ref": "cd2da082-144d-4040-8806-c21d509fd673",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "7045e2ab-7291-4663-ba30-014d8a324e60"
        },
        "item": {
          "id": "580b4b08-9cbf-4a40-96fb-9672ec1faf93",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "2b0270b5-b8f1-4d1c-b9cf-9cc11eff9ffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b42f8f34-d382-4803-94aa-2925ca3e8f4f",
        "cursor": {
          "ref": "7f63810e-2df5-4eff-896a-e8e1e5d42f04",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "7a96baa2-b6b5-498e-93f5-3599799b6413"
        },
        "item": {
          "id": "b42f8f34-d382-4803-94aa-2925ca3e8f4f",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "93acad18-5673-4b2b-a111-c59a9b0b8a8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aa1abe4-3642-426d-b2a4-5538115f952d",
        "cursor": {
          "ref": "037c18b4-f036-405c-93ab-d4aa6406e633",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "7e2ba8ef-03f4-4876-8606-19c15ed75927"
        },
        "item": {
          "id": "3aa1abe4-3642-426d-b2a4-5538115f952d",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "afe01967-d1d7-4412-b0d9-169c2b0da151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775d2f8c-c854-4cd7-917b-8921c7213896",
        "cursor": {
          "ref": "838d761c-ca7d-43b5-aa3f-37326ba0c9e7",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "c2469d0c-8c55-4499-b84a-8b66b9d2d3b2"
        },
        "item": {
          "id": "775d2f8c-c854-4cd7-917b-8921c7213896",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "ec6d5910-2482-4c5f-ae7a-154d8ede2e67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "554a5e65-7a2b-4a08-94d2-fd1d15899e8e",
        "cursor": {
          "ref": "d4ed6aef-9453-4651-9170-abd0990fb974",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "7dc08dc6-b474-45ed-8e32-e94df906a4ec"
        },
        "item": {
          "id": "554a5e65-7a2b-4a08-94d2-fd1d15899e8e",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "365c7479-5bc7-49d2-8b1f-b32f3eef9e08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b7e6e6-882f-4763-8429-fc5c30a232a6",
        "cursor": {
          "ref": "2349633f-dfca-442b-b914-301444792c96",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "89f6502d-e676-4fe9-866f-e77f18be01e5"
        },
        "item": {
          "id": "b9b7e6e6-882f-4763-8429-fc5c30a232a6",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "9378a641-d329-4400-adf7-387a9e366956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41e2a82b-e55b-4967-8171-196fa17538cd",
        "cursor": {
          "ref": "bdceab58-c4a9-4f10-b1d7-d76db627eab5",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "1cfe51d2-53ef-4b51-9d17-ccc5f1ae1d41"
        },
        "item": {
          "id": "41e2a82b-e55b-4967-8171-196fa17538cd",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "2ba04bba-980e-4354-83b3-69d7359568ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a02df9b-8f88-43fb-bfca-d3724746795a",
        "cursor": {
          "ref": "2473765c-34ac-482b-8303-23da8c8dadce",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "2e2e604d-09a3-4307-b30f-9feec92e01ed"
        },
        "item": {
          "id": "7a02df9b-8f88-43fb-bfca-d3724746795a",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "f59b34ef-909f-4321-b48b-33d6a2527835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37c7e3b3-5522-4ffe-94c6-7b19f9b8d5e4",
        "cursor": {
          "ref": "278defcd-9f02-4ec4-a59c-e6bc4f806714",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "6dc136ee-c6fa-43b8-8690-93b411c11521"
        },
        "item": {
          "id": "37c7e3b3-5522-4ffe-94c6-7b19f9b8d5e4",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "f869087d-17a0-4572-8c48-f7a5c740f994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be243ee0-2650-432d-8649-4b3793115454",
        "cursor": {
          "ref": "36d58550-31ff-47fa-902c-19f9da265a88",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "56b6308c-ff83-4de7-b9e3-93ff0ee852b2"
        },
        "item": {
          "id": "be243ee0-2650-432d-8649-4b3793115454",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "f1a58588-d8a0-4505-a17a-42686229f957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6338b42f-819c-4190-ba8c-3db57824cd06",
        "cursor": {
          "ref": "344ca5d8-02a2-4b52-8c2e-aa4dbc643cbc",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "0ef86741-2f76-4905-8dbb-283b21866b0c"
        },
        "item": {
          "id": "6338b42f-819c-4190-ba8c-3db57824cd06",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "12cd115d-0703-4d8c-a4d1-b43dd52b2523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96dd0893-f50d-485c-a53b-8b67ccce0880",
        "cursor": {
          "ref": "ccf286c3-e051-4b8d-acb8-87b9a496741d",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "8191c516-fd09-48e0-b626-2703e098a35a"
        },
        "item": {
          "id": "96dd0893-f50d-485c-a53b-8b67ccce0880",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "62de96bc-953f-4204-9fc2-e69045487c6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2e13812-353f-479e-90aa-3993c0d7a407",
        "cursor": {
          "ref": "33e6bcf3-ab21-40c1-be45-a7349d10e88e",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "c2b874c2-d86f-4bc3-a05e-f341bc5c6e60"
        },
        "item": {
          "id": "f2e13812-353f-479e-90aa-3993c0d7a407",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "2a165dc5-cfa8-48c0-832a-fc93d192ec2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eb275d7-2e34-4570-b4af-d1ada2694ed3",
        "cursor": {
          "ref": "632e27e4-8df0-42ba-b174-ed4590df3e0c",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "8e4f1e87-d2ee-408a-91a1-6108126ab5ad"
        },
        "item": {
          "id": "2eb275d7-2e34-4570-b4af-d1ada2694ed3",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "9559219b-17b6-4aa0-a1c8-7e7fcbb4d989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27711afa-5d6b-45eb-9791-f83f56c630fb",
        "cursor": {
          "ref": "a947d4bd-467a-44fb-bfe9-5de2a50b97f8",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ec7ea167-3e46-4849-aa3b-2d66f465e373"
        },
        "item": {
          "id": "27711afa-5d6b-45eb-9791-f83f56c630fb",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "956b9b7a-c2ef-4f6d-818b-b0b7d570e5bb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfada3b5-2e55-449d-b9d2-00254ea33cf8",
        "cursor": {
          "ref": "7e2def06-d792-4ec8-bcd4-1b7bbea30ba4",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b463341f-9fc8-4a5f-a7a9-b617568c1e37"
        },
        "item": {
          "id": "dfada3b5-2e55-449d-b9d2-00254ea33cf8",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "efe88c73-2357-4ed0-a067-f3875e069e12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "9302c8f3-87f3-4418-8a08-d916af5f4a84",
        "cursor": {
          "ref": "ddb8dade-18a3-4b03-bf73-65dce363f2af",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "0273169e-a26a-40ea-bf9b-438141329fe4"
        },
        "item": {
          "id": "9302c8f3-87f3-4418-8a08-d916af5f4a84",
          "name": "credentials_issue"
        },
        "response": {
          "id": "591615e6-24e7-43a9-84cd-5ad92b2c21e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "9feca66f-fb37-4588-ab16-eb73ae72c666",
        "cursor": {
          "ref": "4bf895bc-b547-4613-9bd0-019c9c335084",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "df8e06f7-ba55-4c22-9428-1116a4429395"
        },
        "item": {
          "id": "9feca66f-fb37-4588-ab16-eb73ae72c666",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "af493a21-e8b0-462b-880f-9c3c405288ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "80fca184-1633-4b0b-8886-42c5028b2d49",
        "cursor": {
          "ref": "1632558f-a35c-41d9-90af-4627b2d35fd6",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "512cceb0-4657-4348-88fe-8ca08ac1eb87"
        },
        "item": {
          "id": "80fca184-1633-4b0b-8886-42c5028b2d49",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "7f840224-51d5-4657-870d-91179908df98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "d9084e54-063d-44dc-acbf-c30f6f639186",
        "cursor": {
          "ref": "cb384bcc-2025-419d-8186-b9312f361612",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "621dc0f0-7b56-455b-9d8a-b22c27a30b3d"
        },
        "item": {
          "id": "d9084e54-063d-44dc-acbf-c30f6f639186",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "f1770d05-dafd-4f8f-bf5c-5786617c16aa",
          "status": "Created",
          "code": 201,
          "responseTime": 12548,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "68d43bd9-7721-4cd8-aa89-fea9280b5f72",
        "cursor": {
          "ref": "c34c778c-f2f0-47b1-aeb2-2a0961f35968",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "0393d635-aaa2-4e44-a5a4-cac6dee55c0a"
        },
        "item": {
          "id": "68d43bd9-7721-4cd8-aa89-fea9280b5f72",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "702e58fa-9c1e-491d-9e76-7938ea3aa7e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 134,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "502a0803-92ed-4733-83fe-5cfa900b7ddd",
        "cursor": {
          "ref": "10afec33-c185-4fda-809f-e9524df1f4f1",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "6cafd94a-be3e-44ad-b8b5-ee3f6c158044"
        },
        "item": {
          "id": "502a0803-92ed-4733-83fe-5cfa900b7ddd",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "922a0a14-e023-4f82-9d51-3400f0c8d220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "61819e5d-0517-4ea9-827c-77de6cc020dc",
        "cursor": {
          "ref": "b311b037-e714-40c2-8cc1-269796f333a7",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "42be1889-9617-4bff-ae32-e6aa0a446ad5"
        },
        "item": {
          "id": "61819e5d-0517-4ea9-827c-77de6cc020dc",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "1903bf51-cadd-4d2e-901d-281203fbb799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "225d9cdb-407e-4ef5-98a0-0caf49c179c4",
        "cursor": {
          "ref": "363d8a0a-1ed2-4e7f-a8fb-0383f5f6a872",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f998aaaf-91c7-4fac-9a31-f975a430ab3b"
        },
        "item": {
          "id": "225d9cdb-407e-4ef5-98a0-0caf49c179c4",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9e0925f1-de5b-47db-b3fe-1fd85efa2b36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cde66a5b-c335-462c-bd53-6015698e9b8f",
        "cursor": {
          "ref": "bb297116-7c1f-48c1-89de-43e3bf6e6ade",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "3f1655b4-0678-45f5-a90e-31c2101fd7bd"
        },
        "item": {
          "id": "cde66a5b-c335-462c-bd53-6015698e9b8f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "9be13150-6731-49cf-9dc7-f03aa2990a81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90fe5c54-7487-4640-8c2d-6b036541de93",
        "cursor": {
          "ref": "5d19ebfc-9bba-41d5-8153-1f453f3bd1d3",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "b916f160-4c70-4760-b834-13fd9ff718fe"
        },
        "item": {
          "id": "90fe5c54-7487-4640-8c2d-6b036541de93",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "11f46089-7318-4b72-b899-b9affd4e142e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 151,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f46d193a-3abd-4f16-b4db-92f12ec854a2",
        "cursor": {
          "ref": "255023e8-6403-4307-a65b-327a15b6aac8",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "5e0eb794-a3ae-4306-b00a-f7c020a598f5"
        },
        "item": {
          "id": "f46d193a-3abd-4f16-b4db-92f12ec854a2",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "53793198-ecaf-45d3-9b7d-8003c3dff93d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf1059d5-3eb0-41f0-93b1-d09413cd19c2",
        "cursor": {
          "ref": "9d8d4acd-cbe9-43c5-8aa0-72f3ff022170",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "fda3dd8e-a430-436d-9803-e655dab40426"
        },
        "item": {
          "id": "cf1059d5-3eb0-41f0-93b1-d09413cd19c2",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3511521d-cae5-446b-b04f-b63348834964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 121,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa270f0e-1d88-47d7-98c8-81efa727a2d4",
        "cursor": {
          "ref": "84b9d159-4f20-443e-9c50-36f1ac3c5645",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "2c28bb22-94e3-4548-a924-7b690edaa3c5"
        },
        "item": {
          "id": "aa270f0e-1d88-47d7-98c8-81efa727a2d4",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "af4010d7-f212-4952-935d-fc20d7420867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ecc7cb1-ad3f-4553-9bca-8f71b2ab0c5c",
        "cursor": {
          "ref": "2fe859f6-b125-4f5b-bedc-2991d70ba8ff",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "b19deeb7-4441-42f1-ae06-bacf5791b5ba"
        },
        "item": {
          "id": "1ecc7cb1-ad3f-4553-9bca-8f71b2ab0c5c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "25a895f5-bbc7-41fd-a91d-8bc35d3d584e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 142,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13aca951-bfe1-49c3-bfeb-f9a7633ae96c",
        "cursor": {
          "ref": "426b7d5d-6a74-4094-9755-8fbfade3b0a0",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "6458e303-23db-4234-94d5-25aeaaedd2da"
        },
        "item": {
          "id": "13aca951-bfe1-49c3-bfeb-f9a7633ae96c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a4fcae6f-942d-4016-90f4-02d7ded31414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 145,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fdf9c1b-4169-4256-815c-f161b3aa4f28",
        "cursor": {
          "ref": "d83be429-4b1c-451a-aa60-5132ed4b0f03",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "f9e0d339-2e7e-42ba-8332-8148eff3757a"
        },
        "item": {
          "id": "8fdf9c1b-4169-4256-815c-f161b3aa4f28",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0375329e-7698-4b5a-a0e5-d34484dbc3d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 123,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc49fe64-31ae-46d6-81d4-0e6f4c6eb5cf",
        "cursor": {
          "ref": "c270a979-8d5f-41ce-9111-21b19f65bae7",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "759dec1c-907c-4861-a3ab-53434dd1b3c0"
        },
        "item": {
          "id": "fc49fe64-31ae-46d6-81d4-0e6f4c6eb5cf",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9dcf3685-0753-4f00-9082-22ed286207c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e23f8cf9-e968-4c15-812f-55d95a41804a",
        "cursor": {
          "ref": "d3fbf2f1-65f0-4f97-8e2f-983302a91121",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "86f5f521-20fa-40cd-9771-69be05e61b97"
        },
        "item": {
          "id": "e23f8cf9-e968-4c15-812f-55d95a41804a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "971ce70d-24cc-4e6d-9fcb-e64d9f7306cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "967caa2f-b7f5-49be-b026-2fff043204c5",
        "cursor": {
          "ref": "c9f1d9bb-c757-422a-9270-dcb041bcd4f3",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "fbf0fc25-cff7-412c-88f0-fc178d92837b"
        },
        "item": {
          "id": "967caa2f-b7f5-49be-b026-2fff043204c5",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d2eeff96-02e7-4c8f-b8f5-175afa0904f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 127,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c396433-b38f-4cbd-91cb-80f3ff36b8ce",
        "cursor": {
          "ref": "67554eef-e48c-49c1-a577-c3b5bb210bd7",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ed48d45b-667d-4e2b-a71b-bf1d69434d6d"
        },
        "item": {
          "id": "8c396433-b38f-4cbd-91cb-80f3ff36b8ce",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ec9f945c-f94c-4868-a57b-39f864f8df04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 173,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "896e5cec-9ae8-4c82-9351-80ec99ecd734",
        "cursor": {
          "ref": "8d828c22-f4bf-4173-a22f-0edb20e112cf",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "f0f9c770-d3aa-4160-a93c-ffeb9f04adf7"
        },
        "item": {
          "id": "896e5cec-9ae8-4c82-9351-80ec99ecd734",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "339aed46-219a-46e7-954e-708cca4d02d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 120,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e26ca037-ef45-4ee8-a229-d91f32fe475c",
        "cursor": {
          "ref": "2a524fbe-f5fc-409f-a607-c378fc468919",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "acef804f-b20e-4603-bcbb-0d8086ed2ba3"
        },
        "item": {
          "id": "e26ca037-ef45-4ee8-a229-d91f32fe475c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "28de290c-ed49-4b98-b0fa-f3c91fe2387e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "655f9b95-4baa-4f54-a95a-37911f9424b5",
        "cursor": {
          "ref": "eafbd925-d849-46c7-8c3d-93070732f921",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "4d557213-f47e-44ea-a8dc-237cdf237e4a"
        },
        "item": {
          "id": "655f9b95-4baa-4f54-a95a-37911f9424b5",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "0b953f30-e271-4b44-af3b-23ebaf809996",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 74,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "ca43ce35-92a6-491e-85e9-ac2d77dd2bae",
        "cursor": {
          "ref": "e99fa352-f4ac-40a0-9b88-0b92f955042c",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "8046745d-8e42-4d6b-a7ee-9ff01ee2ac0d"
        },
        "item": {
          "id": "ca43ce35-92a6-491e-85e9-ac2d77dd2bae",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3899e852-9620-4cdd-bf55-adba83c118d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de097ba-f2d1-4df7-8a38-c75b2fad9294",
        "cursor": {
          "ref": "94f31325-3c37-481e-b61c-481cf014acf3",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "d2cdac0f-fb1e-4db5-a803-693362e35364"
        },
        "item": {
          "id": "6de097ba-f2d1-4df7-8a38-c75b2fad9294",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5de46ab0-bc68-4dd5-abdd-ed133b034e79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 159,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3ed3034-c104-4e40-85e1-17e8c03cec0e",
        "cursor": {
          "ref": "9d5fdb80-d5ef-4ef2-a7f5-4e29cadfb074",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "cdeb0a41-fe00-4b15-a940-742a2c70effa"
        },
        "item": {
          "id": "a3ed3034-c104-4e40-85e1-17e8c03cec0e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c6925ee7-1b9f-4877-9779-4afed5f340b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da51bf96-1f63-4374-b771-14cee5cc7c4d",
        "cursor": {
          "ref": "af220c02-b133-4b33-8f8c-d42934b44c3b",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "44cc6528-d3ca-41a4-af09-43d20dade4f9"
        },
        "item": {
          "id": "da51bf96-1f63-4374-b771-14cee5cc7c4d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "3a9ad280-9ae5-42f8-a20b-c76acdea4db9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 129,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06cfde3f-a97f-4f7e-8de6-a3dd50f405c1",
        "cursor": {
          "ref": "49d86b6d-3b7b-4f4b-94b0-2ac73156718f",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "087fb92d-7caa-40cb-aca3-18ed391f540d"
        },
        "item": {
          "id": "06cfde3f-a97f-4f7e-8de6-a3dd50f405c1",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "12dc7685-7e4d-4958-81ae-fb11538eeb55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dffaf56a-0c52-4483-9a3d-3d0e5085ef2d",
        "cursor": {
          "ref": "fd6dedc1-79ab-4354-b123-e7f01289fceb",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "8667770f-632a-4627-9ee6-c50d8ec520df"
        },
        "item": {
          "id": "dffaf56a-0c52-4483-9a3d-3d0e5085ef2d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "67ff9cde-5603-4f0d-b1f2-0c630093de37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21be3db4-1d4b-42f6-b92a-50d581e1f427",
        "cursor": {
          "ref": "b6e3ad15-368e-4200-a832-4f8e3fa9216b",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "d88460eb-500d-4341-815f-43c83d224961"
        },
        "item": {
          "id": "21be3db4-1d4b-42f6-b92a-50d581e1f427",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "7c114adb-e965-4859-8e3d-7cfbec83d46f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a44ad3a-f56e-4729-9b4e-61d9b1722622",
        "cursor": {
          "ref": "054bf5b5-9fa5-4d42-ac9a-850dc7ef1003",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "630c6ed8-ca54-4cc2-b4a3-56bc1cc5c311"
        },
        "item": {
          "id": "2a44ad3a-f56e-4729-9b4e-61d9b1722622",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "96a039ad-93e3-4763-91e2-c33a571523a0",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 69,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "56459268-5c28-4477-9380-78d90bb45b2a",
        "cursor": {
          "ref": "b600e335-543c-4d0c-845d-d3d1a796f909",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "11562810-e6e5-4c99-a0d4-7c8927b0bf2a"
        },
        "item": {
          "id": "56459268-5c28-4477-9380-78d90bb45b2a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "78ee1ddd-da6b-4550-972e-eede8c12d2aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81282713-dc03-48c5-a5e5-dac4f4b2a1fc",
        "cursor": {
          "ref": "4b83ffb0-4714-4564-9bc0-bc99ab5ac208",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "65cfa930-da87-4875-a4ad-d84d6730ba89"
        },
        "item": {
          "id": "81282713-dc03-48c5-a5e5-dac4f4b2a1fc",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "744ccea7-207d-4ed8-9239-c94d0055e80e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4234b8c5-21b0-493d-863f-a3765ca79f08",
        "cursor": {
          "ref": "2422a840-7253-49b1-b35c-a006396c137c",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "345e8585-789e-4d4d-afbe-47edb8d02a71"
        },
        "item": {
          "id": "4234b8c5-21b0-493d-863f-a3765ca79f08",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6455cc8f-d4d5-4af6-a0bf-2310f469b56d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46d0511f-d0e6-459e-ab7b-8e88dd62e040",
        "cursor": {
          "ref": "c0e4fe3c-f8f5-4202-b9ad-2afa6731c140",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "0e65034d-ff57-43ec-a1f0-87fbe83e98ed"
        },
        "item": {
          "id": "46d0511f-d0e6-459e-ab7b-8e88dd62e040",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2820ce76-97c7-4546-ac58-70a677dba4e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a2baa3a-f7bc-45f0-9662-fb95857bd5f5",
        "cursor": {
          "ref": "2bc8de83-b0f4-4a14-990c-cbd2bc44c1e3",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "d5c70b1b-a7bc-4b02-86ae-4c80ccae1dbc"
        },
        "item": {
          "id": "6a2baa3a-f7bc-45f0-9662-fb95857bd5f5",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6f56b297-3167-4b23-ac99-b008a560e2fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19e67596-3906-4568-89aa-595ee36ea162",
        "cursor": {
          "ref": "3dbb19cb-103f-4ebb-9e7d-0adf7e1af411",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "551dc7b3-d724-4493-ab46-fdbe5a88cf24"
        },
        "item": {
          "id": "19e67596-3906-4568-89aa-595ee36ea162",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d4e84038-49c4-48fb-98c7-958fc6cb239b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a264724-783a-42dc-ab72-1e4db4fa977c",
        "cursor": {
          "ref": "32c8e1d4-56be-425c-bbf1-00cb8137ec4c",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "f080aa50-3cb1-4d50-b2cb-924b7b785317"
        },
        "item": {
          "id": "6a264724-783a-42dc-ab72-1e4db4fa977c",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "f525d5b5-b470-41be-a310-e228af9475da",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 67,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "118bfc7c-ec78-45b7-9a06-40b316c7fc85",
        "cursor": {
          "ref": "9b32aca2-b9a4-48de-87b2-0e98c49c6935",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "d7d8a3d9-fad6-40e6-a195-a5b51b7a5598"
        },
        "item": {
          "id": "118bfc7c-ec78-45b7-9a06-40b316c7fc85",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "5ea7b105-07d5-4132-9cef-b7bd081fbcf8",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 72,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "71cac5cf-e28a-4cc6-8317-8437050a0389",
        "cursor": {
          "ref": "2d64e80c-faeb-425e-9c2f-36d5cce32e96",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "d12abe93-46de-4ee7-afb8-7946fd4755ec"
        },
        "item": {
          "id": "71cac5cf-e28a-4cc6-8317-8437050a0389",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "7699657a-6bf3-4d4a-8f7f-54fdf2daf665",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 68,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "8522bde8-319e-48f4-bebd-c2d8f03e5e58",
        "cursor": {
          "ref": "d6217459-5292-4b1b-a52d-c7187311942e",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "b2e6410f-2171-49ef-bfb6-1b8164db89fd"
        },
        "item": {
          "id": "8522bde8-319e-48f4-bebd-c2d8f03e5e58",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "8e64ef0f-94d3-40a1-ab45-4a74687c0707",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 68,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "3c4241bf-ed6e-402c-abfc-19675ba30602",
        "cursor": {
          "ref": "d7e7154f-3c73-47ad-80e3-9055bf3b69bf",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "5da74025-ef57-4708-ba0b-f2bc00aa88a1"
        },
        "item": {
          "id": "3c4241bf-ed6e-402c-abfc-19675ba30602",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "28f6104a-49ac-47c3-890c-a5b8e01554da",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 71,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "a92a16d2-3e80-469f-8595-90006cb6175a",
        "cursor": {
          "ref": "4e4cbf2c-172a-49a0-adbb-cd9df65a263e",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a93645db-eb25-43e8-a9d4-8846ae4e09a6"
        },
        "item": {
          "id": "a92a16d2-3e80-469f-8595-90006cb6175a",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "74f9c834-cf62-4c09-bc80-894f3100d4cf",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 69,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "fde600ea-b38c-4355-b1dd-b1f187675abe",
        "cursor": {
          "ref": "c210f41a-2ea4-452e-b7be-1ba306b2c6bb",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "1a19438f-fb38-4745-a764-690cfb02da3e"
        },
        "item": {
          "id": "fde600ea-b38c-4355-b1dd-b1f187675abe",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "ead9f1b3-c25b-4474-907e-7347d854a542",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c77819e1-92b1-493a-a593-c80f489a5934",
        "cursor": {
          "ref": "1c05db47-314a-429a-9391-df3473b20b55",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "a68069b5-2069-4991-bc4d-d45a908b07e4"
        },
        "item": {
          "id": "c77819e1-92b1-493a-a593-c80f489a5934",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c842d320-4d05-49a9-be0a-bb850961233d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13e4f737-b645-4701-b1e0-7ab1f9723993",
        "cursor": {
          "ref": "24776216-21d2-420c-8812-edd640bde3ac",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "1d1eb9f5-68d9-426b-90cb-d05285c69ece"
        },
        "item": {
          "id": "13e4f737-b645-4701-b1e0-7ab1f9723993",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "e447cb1e-9bae-4a3d-b854-0e34c51ff5ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c84ef67-b6ac-481e-a4dd-a0cc361420ac",
        "cursor": {
          "ref": "5f848ab0-55e3-41db-8a10-4d13ae80fa1f",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "dcb6aea7-6b22-44b8-815d-fe54d07621c3"
        },
        "item": {
          "id": "3c84ef67-b6ac-481e-a4dd-a0cc361420ac",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "208e1be7-4a54-4e95-8608-61218dd1c2d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "054d3667-d6b8-4932-9621-57568d9dd48c",
        "cursor": {
          "ref": "4573416b-911c-4703-8d74-bb2fb421144d",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "d8d44ec6-1fc9-49be-9d80-ac99f7b1beec"
        },
        "item": {
          "id": "054d3667-d6b8-4932-9621-57568d9dd48c",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "5de45612-2538-4cbe-aa9a-e9c984591631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6b623fd-0aaf-471e-938d-f0b64df15944",
        "cursor": {
          "ref": "92b7cf0a-e469-40b7-a955-dfea178c41ea",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "81a20d97-5c62-4599-9036-4ee9d42f9435"
        },
        "item": {
          "id": "a6b623fd-0aaf-471e-938d-f0b64df15944",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "6efc4544-9276-4688-a303-eca648164a6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "895e11b4-549c-4e02-8097-cebd8e97e611",
        "cursor": {
          "ref": "23e8909b-38eb-4bf5-bd8b-c2eea53d072c",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "41cca150-8117-4842-8b8f-1a3c32a6c4ee"
        },
        "item": {
          "id": "895e11b4-549c-4e02-8097-cebd8e97e611",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "99bc1320-3599-4efa-a1f0-5f9854e0dbd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25f52e3c-fedc-4f9b-affa-d178de8cf10d",
        "cursor": {
          "ref": "c521ca9a-76a5-4767-b5fa-2ba374623c83",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "67c04e96-5a3a-4f9b-83a1-0addfa011f0e"
        },
        "item": {
          "id": "25f52e3c-fedc-4f9b-affa-d178de8cf10d",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "63286794-5693-4ced-9f32-7257ca629a53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfb0bed8-14b8-4db4-8528-364fb9c4d44e",
        "cursor": {
          "ref": "d3956bff-8c63-4d3a-8995-e8631e392cd1",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "b92b30ad-6813-4a6f-9db9-85e5041f06d2"
        },
        "item": {
          "id": "cfb0bed8-14b8-4db4-8528-364fb9c4d44e",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "81099b43-e15e-4ded-8ec3-395e1ebef0f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "625499d7-2836-47fb-b63b-a52328becb24",
        "cursor": {
          "ref": "09048c65-3f2f-4c62-96eb-74b2935f12eb",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "d1e0276f-c2f0-415f-a816-6abcf2390fc8"
        },
        "item": {
          "id": "625499d7-2836-47fb-b63b-a52328becb24",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "f003c68c-7a85-4a46-a2cd-4bb763f6c9fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dcf2bc0-e966-4a3c-afa3-613e97a9b281",
        "cursor": {
          "ref": "eca4fd5e-9d48-435a-a304-d26e32a832ca",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "ebe621d6-aa3d-4998-b1d0-91201c769215"
        },
        "item": {
          "id": "9dcf2bc0-e966-4a3c-afa3-613e97a9b281",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b1224f7a-7a7a-49eb-86b3-739603b46e85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9734a2ac-47d8-469e-ba77-f54682a4ceb7",
        "cursor": {
          "ref": "38a3edb8-201a-4420-8db6-c13f820dd67a",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "aceb7176-2d7a-40c6-8f7b-7960ff54ff1e"
        },
        "item": {
          "id": "9734a2ac-47d8-469e-ba77-f54682a4ceb7",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "c0246e16-b4bb-4f08-bd46-7f7fdb1d59c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58aec563-7a38-4472-af5f-206bbc6e93e7",
        "cursor": {
          "ref": "2568de32-b000-4c98-bdf4-b6c6334f6809",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "7ac40026-a226-4c92-92c1-a093e7fb7ad3"
        },
        "item": {
          "id": "58aec563-7a38-4472-af5f-206bbc6e93e7",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "e7445b45-4f2f-4544-9c6f-07d6cca3dd7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eb7bd5a-f4d5-4a41-92a9-2e026e449dce",
        "cursor": {
          "ref": "8b65fa3c-dc21-4b08-95a2-c5645d76ebd3",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "56a9ad0e-73ad-463e-a7d6-fc26a5e0bfa3"
        },
        "item": {
          "id": "9eb7bd5a-f4d5-4a41-92a9-2e026e449dce",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "8a74c980-99db-4761-b2e0-ff2fbb9dcc0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d4114a7-b23c-4885-8ca7-dea71275249b",
        "cursor": {
          "ref": "0973fc0e-fdb7-4ca6-8c19-b9f1c5e47605",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "7fa46de1-8f24-4721-bfba-099812b9f484"
        },
        "item": {
          "id": "5d4114a7-b23c-4885-8ca7-dea71275249b",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "0ce9f160-c828-4c4f-802f-634caf47d86f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f27edd02-5a0b-4598-9a1b-be2a1fc6786d",
        "cursor": {
          "ref": "02f43659-2b44-45f1-942d-f4cc37b4919d",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "64025b76-8b2f-4f25-8476-42206bbba11d"
        },
        "item": {
          "id": "f27edd02-5a0b-4598-9a1b-be2a1fc6786d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "4c78fb9e-d220-4a19-b6ac-47e146a0bdef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ad3989b-13ef-4dbb-abe0-0fe51cf0a45b",
        "cursor": {
          "ref": "336cd09e-c43f-47a5-9219-3bd1f2332132",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "54c8e72a-1fc1-442e-8eb2-0d3d2ea529bf"
        },
        "item": {
          "id": "1ad3989b-13ef-4dbb-abe0-0fe51cf0a45b",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "39db80ac-bd3c-4e6b-b3df-2170d42ca84e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09d0b11f-8b05-44d1-8914-614c4e999a39",
        "cursor": {
          "ref": "6381cea9-3a99-454d-8267-a9eb906ce384",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "fee4589a-ef2d-4072-a48f-9c92d8c41559"
        },
        "item": {
          "id": "09d0b11f-8b05-44d1-8914-614c4e999a39",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "67fe7227-534c-476d-978d-59e948ec6e04",
          "status": "OK",
          "code": 200,
          "responseTime": 106,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "809c79e1-d4a6-476e-8e14-a7b534709d51",
        "cursor": {
          "ref": "f95ca359-5556-45a8-a5ef-0191611b0f82",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "ee8b3475-d280-442d-9c8b-0cdc943313a0"
        },
        "item": {
          "id": "809c79e1-d4a6-476e-8e14-a7b534709d51",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "f446e591-46fa-40d0-b499-d51c65e42f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eb994f0-ee44-4980-89fb-971a7b9157b8",
        "cursor": {
          "ref": "690de8e4-4f6e-4311-8307-d82d8369dbea",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "3a02f27b-6410-4d16-a9ae-9f69fee604d0"
        },
        "item": {
          "id": "6eb994f0-ee44-4980-89fb-971a7b9157b8",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "39c4abdf-4c5b-4c0c-9237-c0ba46137c58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "500cd1a2-aded-4803-9b34-103138fb0b82",
        "cursor": {
          "ref": "3d8a2233-4086-45cd-81c2-af8bcbded9b8",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "9ca723cc-bb21-4325-a817-c7949db80d6f"
        },
        "item": {
          "id": "500cd1a2-aded-4803-9b34-103138fb0b82",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "68746fd9-6c2f-43de-8bc9-13e996adda79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34cee744-54a8-4213-bbf7-69be057d0b2c",
        "cursor": {
          "ref": "49cb832e-af51-421e-a7a0-c0b4e07258a8",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "57798c54-6e63-4b10-80f3-33476fb61d3b"
        },
        "item": {
          "id": "34cee744-54a8-4213-bbf7-69be057d0b2c",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "aa5ee557-283f-4dd4-9c32-f0f6eb712808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b2f665d-a5b9-41e6-87d8-c91d1817b1e0",
        "cursor": {
          "ref": "9897c534-0835-414e-9f08-9ce49845af7e",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "81520b57-9a0e-4cd3-9000-e88947b8f411"
        },
        "item": {
          "id": "6b2f665d-a5b9-41e6-87d8-c91d1817b1e0",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "f719e473-fe8c-4317-b302-9919d18c82f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5e1c30d-db56-4394-9fb5-394a73f72b87",
        "cursor": {
          "ref": "6fc1844c-6f48-4d0c-9237-1dfe12848d6a",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "fe3dce22-82c3-4f3d-9d37-68ccbcbac7cd"
        },
        "item": {
          "id": "d5e1c30d-db56-4394-9fb5-394a73f72b87",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "022ec86f-1ba7-4a03-b1af-1559a28f1b30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0fb41de-7231-40c7-be6a-c3b90787c8e1",
        "cursor": {
          "ref": "d04b2178-56a3-4eb5-865e-32121f79ef5e",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "2b28aba0-283e-485a-8bf5-bdc2a160bddc"
        },
        "item": {
          "id": "e0fb41de-7231-40c7-be6a-c3b90787c8e1",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "a87682ea-065b-4286-b6b4-60a244330ae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "849c098b-325b-426d-941c-cc747df3acf4",
        "cursor": {
          "ref": "d3e1cc48-4eb0-4b5c-b2ae-84e5675a7b60",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "f9e037f2-f4f2-4a54-b125-dc643c0eef5a"
        },
        "item": {
          "id": "849c098b-325b-426d-941c-cc747df3acf4",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "5509ca73-8c09-4b16-9325-5fdb68b4f4fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7830e7ad-06dd-46c6-8a18-c310e0b530e5",
        "cursor": {
          "ref": "1065bf3c-290e-4d5c-bb29-f178a997ba7b",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "ca2a85f2-cdcf-4386-84b3-31f01023b2e8"
        },
        "item": {
          "id": "7830e7ad-06dd-46c6-8a18-c310e0b530e5",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4503fd4e-737c-4218-9595-53bed50d7b8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ab3da09-c9c1-4ee0-8cb3-b9a99efadde3",
        "cursor": {
          "ref": "648f7ab7-884a-494a-97f6-bfc8b3c74b31",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "4314be25-e62a-40c5-bb21-0c239585d7a2"
        },
        "item": {
          "id": "9ab3da09-c9c1-4ee0-8cb3-b9a99efadde3",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "e5a4202f-d04b-4372-a468-39963713d914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eb9d70d-ab88-4305-911d-f69c3bb07c96",
        "cursor": {
          "ref": "d0493362-26a8-4804-b2bf-2f4125bb917e",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e794d0f3-3a40-4d6f-bd3d-d592c1cf773d"
        },
        "item": {
          "id": "8eb9d70d-ab88-4305-911d-f69c3bb07c96",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "3a4265e6-fadc-4d43-a5a0-bfa56e49e21b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ad4c385-9176-4559-b825-3db36a9c4909",
        "cursor": {
          "ref": "d3dcc6bc-bfbf-4b8a-ac21-dc9034794cd4",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "3eea5a9f-f4bc-40cb-8d7f-d2d4762ebf34"
        },
        "item": {
          "id": "6ad4c385-9176-4559-b825-3db36a9c4909",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "24d36f77-6499-4dc7-9471-1f983a68a0e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a485c5bd-ffa7-43a6-bad7-71531716be0b",
        "cursor": {
          "ref": "e3931da3-760d-4f4f-9e82-196f40d40292",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "c0f1b7ab-5840-4b5a-9c16-15cf540cc7cd"
        },
        "item": {
          "id": "a485c5bd-ffa7-43a6-bad7-71531716be0b",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "18af6f7f-dd7b-4343-a061-e1e8cf939a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e2cb611-e815-4386-a9c1-dc1ee9fd453a",
        "cursor": {
          "ref": "0f4e37e3-c083-4513-86a7-5dec25d247c1",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "2e622103-dc25-4772-9590-c2a3437c2348"
        },
        "item": {
          "id": "0e2cb611-e815-4386-a9c1-dc1ee9fd453a",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "9ecd04ba-bbf5-4802-b2e3-2fc856a1d366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c328749-5530-4456-b492-69a9b977393b",
        "cursor": {
          "ref": "2636d24e-563f-491e-b22e-02f65fc07e1b",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "57a45a82-8fca-4978-a333-ee536a3c55ba"
        },
        "item": {
          "id": "7c328749-5530-4456-b492-69a9b977393b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "ccfbc9bd-f494-45fd-b3b4-b8ee60b6ffb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf90ce20-c3f2-4ee8-a4f7-dc6c1bbdb760",
        "cursor": {
          "ref": "059f54ca-774e-483d-9f4d-59db4fe7f6a2",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "6ac660af-bad2-413a-aa81-8aa9dd6deae5"
        },
        "item": {
          "id": "cf90ce20-c3f2-4ee8-a4f7-dc6c1bbdb760",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "e2340c2f-e270-454e-8a7a-b20dbebcb004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef343533-f916-43ad-bbb3-218055a9458e",
        "cursor": {
          "ref": "e1ee9593-c3e8-4ac6-a2d1-8c9b57f87a89",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "e5b77174-5d0d-49ea-b6a5-8e7945e97801"
        },
        "item": {
          "id": "ef343533-f916-43ad-bbb3-218055a9458e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "ce4d7c90-2f15-4ff9-a7fb-d38cfa241648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ab81b13-9e20-4e6e-9425-e24e054c9e72",
        "cursor": {
          "ref": "f6518beb-dcf6-4ab8-9817-915580d83514",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "c005708e-3a78-47fe-a861-39a42c5e3f0a"
        },
        "item": {
          "id": "7ab81b13-9e20-4e6e-9425-e24e054c9e72",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "50f5886a-42bf-42bc-add0-faf84f1012a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "584eab09-691d-4725-830d-bd51caf1185a",
        "cursor": {
          "ref": "e9f706f9-3ff9-496c-8dcc-582184674189",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "14c6809f-052c-4f63-af90-8a2d72a6dc6d"
        },
        "item": {
          "id": "584eab09-691d-4725-830d-bd51caf1185a",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "e9c8de04-f42e-4c67-b0a5-83db115e0f31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97dccc77-6c24-40d0-8060-eafd9ba27931",
        "cursor": {
          "ref": "d4b82038-6adf-4d54-8beb-ac321ba1cd06",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "5b6949c6-369a-4467-b955-2c549805a99d"
        },
        "item": {
          "id": "97dccc77-6c24-40d0-8060-eafd9ba27931",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "6a790d1d-77c0-4bf0-82a2-a0f5ec5b3f5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7020967-b788-4f20-b581-90010510c30e",
        "cursor": {
          "ref": "3e09380e-89d8-49e6-b65d-82543f19d968",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "53044503-893a-44e8-bbeb-9a3b5f7fac8f"
        },
        "item": {
          "id": "d7020967-b788-4f20-b581-90010510c30e",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "c85ee57a-add7-4011-8e8e-f22ecb5f111d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b9da084-35e1-4752-a1e7-9352001bf7de",
        "cursor": {
          "ref": "ec782320-6e96-48f4-ab0e-94bbc4160e15",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "d05abac4-cf1d-4954-a1a6-bf176a795c6c"
        },
        "item": {
          "id": "2b9da084-35e1-4752-a1e7-9352001bf7de",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "9f044487-dcf1-447f-bd0e-7a98d055f58f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f0bfe75-0562-47bd-b26a-9f802a90ff05",
        "cursor": {
          "ref": "47de6dd2-e684-4e2a-8153-28ad76e88196",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "af55a1c0-32eb-4e83-9b33-b70335507c8c"
        },
        "item": {
          "id": "0f0bfe75-0562-47bd-b26a-9f802a90ff05",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "202d23c0-f284-4569-a581-1c7b7e6470d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b77eb25-fff4-479a-adc3-4101182d5383",
        "cursor": {
          "ref": "8700c98d-54a3-4cfc-9b65-307606f3a6b8",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "37d2ecc2-3b3e-41ac-a917-124368f05ef7"
        },
        "item": {
          "id": "1b77eb25-fff4-479a-adc3-4101182d5383",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "1dac03a5-d111-440c-9dfd-4cbe7a588c4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ac840dd-d120-4ec0-9766-633eddcf8e3f",
        "cursor": {
          "ref": "55a51625-705b-46b4-88bc-e42ea81c309c",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "731c8592-62aa-4be5-89d2-ebc5f17c8412"
        },
        "item": {
          "id": "6ac840dd-d120-4ec0-9766-633eddcf8e3f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "4df45e8d-3a64-4176-8bbc-b007b2ff56c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "294b5424-44a5-40f3-a663-09c476573fef",
        "cursor": {
          "ref": "58015086-cc6f-4a6f-b7eb-d362891d0707",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "fe3de014-e2a7-469d-9821-ed267bf87de2"
        },
        "item": {
          "id": "294b5424-44a5-40f3-a663-09c476573fef",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "d447db50-ef6a-43fb-8df2-9e7f9cfe260b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d5151f-74ec-4b0f-ae0b-0cf875983021",
        "cursor": {
          "ref": "3e3d5495-dcbc-4e50-8d71-1228b46fb288",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "20f54017-250a-4866-ab25-d0716a539ef8"
        },
        "item": {
          "id": "15d5151f-74ec-4b0f-ae0b-0cf875983021",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "657af763-f54f-4b78-9296-9ba5cc545290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f83e556-5479-48b9-b853-af1e2fb92d01",
        "cursor": {
          "ref": "cdcb7531-5b77-4987-a47d-9eda79eb0211",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "d397538e-51b6-42e9-9c3f-992566b07533"
        },
        "item": {
          "id": "5f83e556-5479-48b9-b853-af1e2fb92d01",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "90aee0e6-38c8-4f25-acae-b9b0d17f9bfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6241dd34-cb95-481a-bf84-1c7318adac88",
        "cursor": {
          "ref": "53647972-fa5f-445b-a2b7-3901095ab16a",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "032458f7-3610-4c3f-89c2-a89ae461a470"
        },
        "item": {
          "id": "6241dd34-cb95-481a-bf84-1c7318adac88",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "3b6741c4-6988-4a1f-8865-b8b0604dbafe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cbff2c9-3190-4f18-b529-7cf81d00e239",
        "cursor": {
          "ref": "6343477a-adfa-4925-9eeb-90efcdbfb427",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "e27a6f5d-cd25-490e-8b50-7122f471b797"
        },
        "item": {
          "id": "7cbff2c9-3190-4f18-b529-7cf81d00e239",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "fd83bcc1-78e3-45a0-a5ed-37b92d11d857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0da4e012-8a4a-40e4-aba5-64725bd29ef6",
        "cursor": {
          "ref": "53ca3306-6ed1-4ed9-b8fd-bcc49708fd07",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "1b225c00-4d00-49b7-a494-5873db499ea9"
        },
        "item": {
          "id": "0da4e012-8a4a-40e4-aba5-64725bd29ef6",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "445d44c0-3c6e-4a9e-81e8-832085f199e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f41cec9a-c711-4727-8d34-f1d61879ce1a",
        "cursor": {
          "ref": "cdb8501d-e759-480b-80a8-084affde2326",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "b80c226e-c22d-4207-9ee3-51b77f81188b"
        },
        "item": {
          "id": "f41cec9a-c711-4727-8d34-f1d61879ce1a",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "a185fd88-72b7-453f-961a-48da390754d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "988698c7-795d-4880-b46e-0e12f8423530",
        "cursor": {
          "ref": "b24abdc1-2428-4fbd-becf-d69374c588db",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "6bc525a9-bf5b-43d1-af7b-c5b9dd91ad34"
        },
        "item": {
          "id": "988698c7-795d-4880-b46e-0e12f8423530",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "47e5cbd6-ed30-4b17-bd72-dcb478d87b8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6880e4a-0eba-400e-9b2e-71550e96130e",
        "cursor": {
          "ref": "dcfec6f6-21c8-4c94-89fe-b17053fe1438",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "85fa8578-87dc-4dad-983b-ffda626169f6"
        },
        "item": {
          "id": "c6880e4a-0eba-400e-9b2e-71550e96130e",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "d6660fe9-6466-4f43-9821-8e5a5167613a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89a03f23-1f1d-4eeb-90ca-a7c7e63f7729",
        "cursor": {
          "ref": "d871ba44-9a68-4db9-b5c4-8821ff50f3a3",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "e0dd50a8-c62c-465e-a758-34cf800b129d"
        },
        "item": {
          "id": "89a03f23-1f1d-4eeb-90ca-a7c7e63f7729",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "f6965194-59b6-499d-bee7-11657e17445d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85260b24-5315-429d-bf1c-0f25ecc3ed43",
        "cursor": {
          "ref": "0eb41d2a-cc03-4946-aba0-9e6b494b8d57",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "1b4861c4-c2b2-4e63-bfb3-7b9e76e4fe91"
        },
        "item": {
          "id": "85260b24-5315-429d-bf1c-0f25ecc3ed43",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "fbf863f8-444e-4ad6-a214-7864ff66280c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9428594f-cb62-4cf0-a024-7c2236bad32b",
        "cursor": {
          "ref": "fc25bbc5-cdf7-469d-a539-702df67192f8",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ad63de02-17ea-47f6-9550-360dcf3678a3"
        },
        "item": {
          "id": "9428594f-cb62-4cf0-a024-7c2236bad32b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "8ff53805-637c-47af-9e45-5f952f3d4c80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38bc7411-52df-437e-91b2-9e37d5c241a8",
        "cursor": {
          "ref": "5bd091a1-43b0-407b-b5a9-487c1223e128",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "8069ffdf-d468-4391-b5af-f465e69b9f35"
        },
        "item": {
          "id": "38bc7411-52df-437e-91b2-9e37d5c241a8",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "a7d6def9-ee4f-407a-89d2-379f85ea6184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7727ec72-b08f-4753-82f6-bfe2f57a10f1",
        "cursor": {
          "ref": "c4cef9f2-805b-4c3e-8f1e-557301032b5b",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "9abe1440-1344-4f1f-a422-1e32183d89c7"
        },
        "item": {
          "id": "7727ec72-b08f-4753-82f6-bfe2f57a10f1",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "35fdd5bc-f21c-491f-805c-7b0e7e9d889e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a9ff4a0-98ec-4f24-94f9-7fa3202f5ae6",
        "cursor": {
          "ref": "2e216bc0-d1a2-4860-b9a0-ad8d74c2e3b8",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "748c2f54-fa91-4a3d-a6b4-8f84f5748ce9"
        },
        "item": {
          "id": "8a9ff4a0-98ec-4f24-94f9-7fa3202f5ae6",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "e3ba5acb-658d-40de-a0d4-15432eb87cb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b77b658b-7e18-42c7-aa24-c78b028ef8b5",
        "cursor": {
          "ref": "1c2b3a55-db3d-44b8-b4a0-6d92073e19e8",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "9bddaaa4-61fb-457e-b2b8-e4247a1c20ae"
        },
        "item": {
          "id": "b77b658b-7e18-42c7-aa24-c78b028ef8b5",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "d09c2c46-60bc-4fe6-b40f-31c38defb17e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "328f0a86-0d1d-441e-8808-2bf1bbd9a620",
        "cursor": {
          "ref": "cff3a0c6-1503-4f52-ae84-5e3bb1b84bad",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "408bc414-da84-4a00-a957-c50ea60688a7"
        },
        "item": {
          "id": "328f0a86-0d1d-441e-8808-2bf1bbd9a620",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "5fa6b2e3-472b-491f-8e07-6bfa09d5c6bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7943152-4eae-4b60-b487-4d66b8c73a3a",
        "cursor": {
          "ref": "22016e4c-e843-499d-8a5f-f0597d402bda",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "c8b07526-8c0d-4ecc-996d-506b3d308ad5"
        },
        "item": {
          "id": "a7943152-4eae-4b60-b487-4d66b8c73a3a",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "f668d69d-9d9c-41e1-b4fd-78ad9cb00f28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4983aa83-3520-4c95-9b2c-0dad3da364b6",
        "cursor": {
          "ref": "fe7ac774-98a3-4018-a979-7084dd542075",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "0d9521a2-559d-4c6c-b975-2ed283fe24a3"
        },
        "item": {
          "id": "4983aa83-3520-4c95-9b2c-0dad3da364b6",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "26452856-c8c9-4ad1-8244-4f94b9dfbc78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a03e106-d43b-4581-9a9c-516e47fd3b7b",
        "cursor": {
          "ref": "ba749362-17c7-436c-8fe5-8876e0fb810e",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "c660d458-4564-4ef3-8104-3cdfc24f28c8"
        },
        "item": {
          "id": "2a03e106-d43b-4581-9a9c-516e47fd3b7b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "455c74b9-c929-4b49-9d8b-2b1bbf44ec65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f66d6bf4-912d-47e8-afcf-146143d72cc1",
        "cursor": {
          "ref": "3768e743-f61b-4305-ad35-987f9cdd20cc",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "452803f9-7299-407f-a866-9d88e8c78c79"
        },
        "item": {
          "id": "f66d6bf4-912d-47e8-afcf-146143d72cc1",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "b1ed8a97-0ede-4596-a267-5fc6dfc42030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb184c2a-8c4b-4fc7-8f6a-bc36f592d640",
        "cursor": {
          "ref": "77dc1707-e7a2-41a4-bf18-514d6951d349",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "9034959a-4c8f-437f-b290-39008b1fb428"
        },
        "item": {
          "id": "fb184c2a-8c4b-4fc7-8f6a-bc36f592d640",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "2e025090-4dba-43f7-8cf4-799d05e285e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62be52b0-9682-41eb-819e-4e5f5e696214",
        "cursor": {
          "ref": "12bc6549-daae-4888-a58b-07291dc90e40",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "b4c18e1c-85e3-40a2-acb3-92e1fc62cea8"
        },
        "item": {
          "id": "62be52b0-9682-41eb-819e-4e5f5e696214",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "3775929c-6bdd-4a4a-ae70-132d8076be47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfc574eb-51d0-45b6-aeb2-ff307f77fdb6",
        "cursor": {
          "ref": "2fb8358a-e1a9-4825-ba11-d9d21143631b",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "c6a5ce22-cbd4-4e1e-955b-570cc56fc8d0"
        },
        "item": {
          "id": "bfc574eb-51d0-45b6-aeb2-ff307f77fdb6",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "8c9c28eb-057f-45a5-9612-7384ec2565bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a51ba271-d1dd-4cb5-ab55-ec9b0c3ed3a9",
        "cursor": {
          "ref": "e984743f-3abd-42cd-a0be-d4bb426dfbab",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "e4ba6705-27bc-403f-b34e-c3ce90b76055"
        },
        "item": {
          "id": "a51ba271-d1dd-4cb5-ab55-ec9b0c3ed3a9",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "b6e3f81e-3468-4d59-ba82-9131b7030132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a776aaf-132f-4f36-847f-487d7d197e7c",
        "cursor": {
          "ref": "9b633b07-bf18-43e5-9991-fd42ba9e059e",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "26c01dd7-cce3-4f0a-8ba3-5d82f1cf3dea"
        },
        "item": {
          "id": "3a776aaf-132f-4f36-847f-487d7d197e7c",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "509b21b7-4ef6-4dd6-bf67-2a8b9202efde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c9abac9-6e83-4f9c-9c50-30dd1dcb70f8",
        "cursor": {
          "ref": "c4132297-c9d9-4bb1-a483-b465369f9398",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "273a6ed7-acd8-4878-aba2-90e5779cd3dd"
        },
        "item": {
          "id": "7c9abac9-6e83-4f9c-9c50-30dd1dcb70f8",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "1fc736bd-5180-48e5-ba61-328f2e73f33e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11fb3bc9-5e0e-4da9-bf72-487c407f4158",
        "cursor": {
          "ref": "4a8ab4b9-4669-43b6-8ffc-100fa9c8f59e",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "c2dd79bd-e493-4f90-8822-f859ac8f4ea5"
        },
        "item": {
          "id": "11fb3bc9-5e0e-4da9-bf72-487c407f4158",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "4b3b628f-4358-498c-8f79-bdab5d1629d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aefdee83-627d-4713-9d22-67e99dd70b72",
        "cursor": {
          "ref": "9f740dbe-f745-4ccf-b156-8f9dff315b9a",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "0f29e622-ac4b-4138-ae06-9ae9cf56621f"
        },
        "item": {
          "id": "aefdee83-627d-4713-9d22-67e99dd70b72",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "69b8b437-7ba9-4f4a-a9b5-e1eb0d2f5735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c63e285-3f6f-4400-8eac-be9488feebc4",
        "cursor": {
          "ref": "522d0869-9bfc-43f8-bed8-433d2843cffb",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "a605ef8f-1319-47ab-a517-34b86a68ca5a"
        },
        "item": {
          "id": "8c63e285-3f6f-4400-8eac-be9488feebc4",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "3b474d21-b985-4597-b7af-c3eb3aa9f52f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3746f27-0c32-4d00-adc8-2bd05386af46",
        "cursor": {
          "ref": "953eec42-1078-4ecc-b4ef-848f1b83338b",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "5fb568e7-3c79-4585-b558-5b8176f8b4df"
        },
        "item": {
          "id": "e3746f27-0c32-4d00-adc8-2bd05386af46",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "3138cbac-77b6-4f37-b044-abfafe2c123d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1047aec-4328-4cfb-8f21-b1a318a3662b",
        "cursor": {
          "ref": "c8f31a8f-cee3-4352-98a3-0728f5819c7c",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "7d193d6d-b894-48b0-befd-ab96c33eecc4"
        },
        "item": {
          "id": "e1047aec-4328-4cfb-8f21-b1a318a3662b",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "2183ee26-aa03-4ac9-ac6a-06fa6f556372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "015124b2-94f4-4875-af58-c53fa4ba2cfb",
        "cursor": {
          "ref": "611bec9d-4a70-4431-b430-b43643c95be2",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "f1f61ce4-e43a-4189-902c-e75522b30bb9"
        },
        "item": {
          "id": "015124b2-94f4-4875-af58-c53fa4ba2cfb",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "fb54e6c9-f2b0-44e5-b016-e0acacb191ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 188,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2312b9f4-71d5-4f3b-8e90-3d263550fe2a",
        "cursor": {
          "ref": "94e9f936-0db9-47aa-8b7e-52363c589ea8",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "f73c259b-9424-47a3-8d3d-1e34d4f4613a"
        },
        "item": {
          "id": "2312b9f4-71d5-4f3b-8e90-3d263550fe2a",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "dc2bc26b-98d8-4d5f-ae03-4f7bc15e98e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bfbd160-193d-4aa3-83d3-684a09f54875",
        "cursor": {
          "ref": "965f204f-25d5-448a-b04b-59c4d1dcdba6",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "d18863ed-34c2-4116-84ed-b9bb80fb9190"
        },
        "item": {
          "id": "5bfbd160-193d-4aa3-83d3-684a09f54875",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "d43fbf92-f8e8-4e8f-b300-5b00408210ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f713a44-90af-4c37-b42d-e159eb2305fc",
        "cursor": {
          "ref": "26c7ce4e-b1d7-417d-9573-0c1112181804",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "479ffce4-83ee-40ba-8664-d378f26a9c0f"
        },
        "item": {
          "id": "2f713a44-90af-4c37-b42d-e159eb2305fc",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "3caa0158-bbf1-4ccd-8c49-1cad94eceaac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b4d13f3-272d-4995-99b5-9fe655498df3",
        "cursor": {
          "ref": "ecb9569f-64e6-4e78-be6e-fb226c8b1dcc",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "a61ea7c2-cd5d-4d7f-958c-38f93b479c57"
        },
        "item": {
          "id": "4b4d13f3-272d-4995-99b5-9fe655498df3",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "8ee38746-f6b1-4978-bfe3-7160c5729560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18204b2f-0a8d-49bf-8d49-5f47c2729c3c",
        "cursor": {
          "ref": "fc3c06c2-4eaa-4694-aa03-a04a81528ad2",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "93b00d0b-8be8-49f8-aec2-f8a454fd4e32"
        },
        "item": {
          "id": "18204b2f-0a8d-49bf-8d49-5f47c2729c3c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "569f4e23-63a4-469c-82c1-1dc70057254d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a221b1da-e90b-4871-ad87-4d7a70862e0d",
        "cursor": {
          "ref": "64cd457e-6ea5-44c3-8b00-6df83ee76942",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "cb17840c-01ea-4d5e-a91e-6b3083900ea5"
        },
        "item": {
          "id": "a221b1da-e90b-4871-ad87-4d7a70862e0d",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "b37ccb45-1e25-4209-a515-da1b978d4e07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a8a295c-7c42-41a4-b954-0423c452afe2",
        "cursor": {
          "ref": "f988013b-1a9a-48df-adbc-82f0cfbd8a33",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "8a52509c-2e01-42b5-930a-199eb2b71ad6"
        },
        "item": {
          "id": "8a8a295c-7c42-41a4-b954-0423c452afe2",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "9121fea6-e45f-4f70-b111-3fd9f428e1d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68fa589e-2675-4448-abca-dacea156bbc3",
        "cursor": {
          "ref": "7566bfe4-2a27-49b5-983e-9ae43274ed82",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "f822d398-7cdd-4485-8974-9cd4d9df9cbd"
        },
        "item": {
          "id": "68fa589e-2675-4448-abca-dacea156bbc3",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "9e5d6810-d21c-45a4-b57f-9210d64e60e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a7317e6-7c8c-4d6a-8edb-a19b6b3382c3",
        "cursor": {
          "ref": "cf480a15-b068-44f4-82ac-d9ce42a87f2a",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "fa9e4206-1138-47e7-bcfd-ad4c5d7aaafd"
        },
        "item": {
          "id": "4a7317e6-7c8c-4d6a-8edb-a19b6b3382c3",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "9a4a067e-607e-4254-948b-cd92edcbb06d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "209d73cd-de6f-4be0-b4d8-541c58d43dee",
        "cursor": {
          "ref": "88129e22-6281-4396-97e5-7436a916c168",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "873cd89f-8617-4516-b80b-ee28727d05ac"
        },
        "item": {
          "id": "209d73cd-de6f-4be0-b4d8-541c58d43dee",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "308cafbd-c22a-4da4-a064-44ac0dfe5c7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "648d39f9-e2f2-4c6c-9a64-9b9ec372ebe9",
        "cursor": {
          "ref": "9ea46c11-696e-4f6f-a628-97a4ef30775e",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "96ac7ce5-bd3c-4237-b69b-8aecf712d762"
        },
        "item": {
          "id": "648d39f9-e2f2-4c6c-9a64-9b9ec372ebe9",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "5c40521d-73b0-44e2-a616-3874004eb21a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff0e2fb-4161-4cea-9563-163ae6a16046",
        "cursor": {
          "ref": "9f7a6090-2fa7-443c-8c70-2f48ad8e98ad",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "f40cdc56-524a-4e45-a7b2-806e43c7d2b7"
        },
        "item": {
          "id": "8ff0e2fb-4161-4cea-9563-163ae6a16046",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "da933225-8e79-4605-8955-649fce20f4a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31357f1c-6160-49d7-b810-5e38071d29eb",
        "cursor": {
          "ref": "66841db0-aa8b-4c36-bcc5-ddacc6f3acea",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "532eecec-4777-4d2b-bb03-1db54d4f7302"
        },
        "item": {
          "id": "31357f1c-6160-49d7-b810-5e38071d29eb",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "ab787516-e2d1-4920-a2be-0558e6c51790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d86db0c-96b6-438d-8363-21df46e03c66",
        "cursor": {
          "ref": "790c1afb-e2b9-45f4-bd2c-2134f3fcb518",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "2000b630-14be-4eaf-a77e-9fc3a683253b"
        },
        "item": {
          "id": "5d86db0c-96b6-438d-8363-21df46e03c66",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "42174067-083e-489e-8ee4-c23dac1380ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ed88b62-3c84-40e9-abfa-6324a3eb9343",
        "cursor": {
          "ref": "4e0ee8c1-0bb6-4f6e-a4e2-2116dc475dc0",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "dcea3e77-78d3-4d37-912d-d6c8ade144d9"
        },
        "item": {
          "id": "5ed88b62-3c84-40e9-abfa-6324a3eb9343",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "c66a0850-3b26-4bb4-8f5c-9bf64b1395ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f410d3d6-2b2f-4ef5-a106-9a15409a4949",
        "cursor": {
          "ref": "4744e279-1c5b-47fa-8c46-9953d577059c",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "efde0c67-46cd-465b-90ac-5e50a68599d6"
        },
        "item": {
          "id": "f410d3d6-2b2f-4ef5-a106-9a15409a4949",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "721bb62d-6ae6-408a-b483-ae50e53a4141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d2c6f7c-2d3a-4f63-8a0f-ecaf65ee0e6a",
        "cursor": {
          "ref": "b502a3fc-061d-4142-a9e5-1d9ef78a5c57",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "561b3126-9adb-4aec-8c9e-ef9019a574fe"
        },
        "item": {
          "id": "0d2c6f7c-2d3a-4f63-8a0f-ecaf65ee0e6a",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "dd2a16b8-ac86-4578-84c4-07aa0ab8fa2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3790e8a9-5b8a-4323-9419-4183412f0c84",
        "cursor": {
          "ref": "e42fb68a-d04b-4223-8e3c-761b8f59d670",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "d43850fc-e20e-4619-8e87-569f7e0ef3af"
        },
        "item": {
          "id": "3790e8a9-5b8a-4323-9419-4183412f0c84",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c64acca1-fd2d-44ab-94bc-df08db58ecfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "143aa04c-b8a2-40f5-baf6-f7139e8e08e3",
        "cursor": {
          "ref": "55714bf0-1f18-4eed-a21e-16212bc048f2",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "3f699980-8d05-4c3d-98b7-a42536a13364"
        },
        "item": {
          "id": "143aa04c-b8a2-40f5-baf6-f7139e8e08e3",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "dfa1d302-6ec1-4db4-bbc9-e688ad060222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ff8970e-7046-4ee2-8f5e-39698f5444f9",
        "cursor": {
          "ref": "02d5d7c0-c1b6-4ae0-a06d-b5af80b0b468",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "785c299b-2f2e-4530-bcc1-19b9da290166"
        },
        "item": {
          "id": "6ff8970e-7046-4ee2-8f5e-39698f5444f9",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "ec20eff1-d646-4c20-ad2a-2182fd27902e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbcdbf8a-55fb-4971-aa35-70ca47a76e79",
        "cursor": {
          "ref": "fcf0fad4-bf30-4800-ad68-e1bd34599cbd",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "b6a862a3-7f1d-4b13-98cf-d407a17208a8"
        },
        "item": {
          "id": "fbcdbf8a-55fb-4971-aa35-70ca47a76e79",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "7a7d9f82-ddab-4464-8064-44b3f10d5ad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd20bfb6-9fae-4876-8167-67083bf38f55",
        "cursor": {
          "ref": "ba0831bd-0624-4878-8a5a-ad2f4a2940e0",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "6e4a2e94-81db-467b-993f-d6c7e87e2128"
        },
        "item": {
          "id": "fd20bfb6-9fae-4876-8167-67083bf38f55",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "d260cd69-b9ad-4e85-a09d-5e647ce4094d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8df68e3e-4d11-4488-8f71-54208ad91db6",
        "cursor": {
          "ref": "84debbf8-4e05-4fc3-a346-82eacc1831f6",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "37c2a367-1a8c-4e77-94d6-0468b546f6e5"
        },
        "item": {
          "id": "8df68e3e-4d11-4488-8f71-54208ad91db6",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "dfda9dec-bfce-4517-b962-21249f036852",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "019816f2-5dc1-4c08-85f6-20c0b6efa6cb",
        "cursor": {
          "ref": "405cdbb2-8e62-40a0-bf62-7b4ebce2ba42",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "b76a16f7-6c90-4198-b11d-2f0cfb19fdbf"
        },
        "item": {
          "id": "019816f2-5dc1-4c08-85f6-20c0b6efa6cb",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "361ed871-d1ce-4eb5-a46e-3d83e2c5993e",
          "status": "OK",
          "code": 200,
          "responseTime": 84,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "81023c61-7e57-48e8-b910-32e0f88c80ba",
        "cursor": {
          "ref": "0749cf7b-f246-44a4-b662-7e10b789f136",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "205244b6-f8f3-4d73-8471-be425600e07d"
        },
        "item": {
          "id": "81023c61-7e57-48e8-b910-32e0f88c80ba",
          "name": "credentials_verify"
        },
        "response": {
          "id": "4c69a3e7-625b-4073-8c6a-491475745184",
          "status": "OK",
          "code": 200,
          "responseTime": 2956,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9311179a-9706-473e-bda7-e9ab104465a9",
        "cursor": {
          "ref": "b79d3417-2df0-4d79-b831-5dc660e0d824",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "ce52ad9a-04fc-43a8-943f-6837d7ff8a13"
        },
        "item": {
          "id": "9311179a-9706-473e-bda7-e9ab104465a9",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "f0842658-9e48-4fcf-9ff5-9940456243a2",
          "status": "OK",
          "code": 200,
          "responseTime": 3398,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "56fcfdab-7567-4b65-a838-3dbb2d449b84",
        "cursor": {
          "ref": "465176c4-041b-4637-b1ef-47978d5be42e",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "76057e2d-60f6-4664-ac5d-4d8fe85a8ca7"
        },
        "item": {
          "id": "56fcfdab-7567-4b65-a838-3dbb2d449b84",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2181ba64-5bab-4f5f-8f5f-5379e568ecf5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56fcfdab-7567-4b65-a838-3dbb2d449b84",
        "cursor": {
          "ref": "465176c4-041b-4637-b1ef-47978d5be42e",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "76057e2d-60f6-4664-ac5d-4d8fe85a8ca7"
        },
        "item": {
          "id": "56fcfdab-7567-4b65-a838-3dbb2d449b84",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2181ba64-5bab-4f5f-8f5f-5379e568ecf5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84615438-0dc3-4924-b9c0-bf6167bb6f76",
        "cursor": {
          "ref": "bbedad68-a103-44b7-87f4-5beb9d958d71",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "b5aad5fd-c571-43c2-b473-3421d34b07f0"
        },
        "item": {
          "id": "84615438-0dc3-4924-b9c0-bf6167bb6f76",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "8ffa7fb6-af85-4b49-b480-9840e2414509",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78ebdb3f-afb7-4b9b-8674-1ec3ec9f54af",
        "cursor": {
          "ref": "143fa412-e9d7-4320-99f6-4531da5449cd",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "4ef36599-3117-4c5e-b359-0d3c852133d1"
        },
        "item": {
          "id": "78ebdb3f-afb7-4b9b-8674-1ec3ec9f54af",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d4c44526-ca26-4989-b4bc-42ae359bc0d4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}