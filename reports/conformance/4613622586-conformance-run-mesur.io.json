{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "75822629-0d34-486b-9528-0ee6973e9d26",
        "name": "Clear Cache",
        "item": [
          {
            "id": "cfd8ce15-62ee-476a-94c2-22abbd114739",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f49ffcd8-11bb-4c54-8d12-fc37f96d3d30",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f0343509-a293-40c2-8a37-faccfbb03167"
                }
              }
            ]
          },
          {
            "id": "8ab19262-b40b-4d02-8218-8c80dd460954",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "075b4643-a029-4404-8161-0e3cad3539ca",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "bbe2d76f-f72f-479e-a8ac-801c978f2254"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "029ae0f3-3dbe-4445-8f8e-5ff8a7cd07f9",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "2956a593-df11-48bb-af27-56703295352e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "078b6574-bffa-49bc-aeca-4551a3106c9f",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e4754c33-2c87-4d10-a90e-7101ead6d1c7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8c76f941-77b2-495a-a1fc-f3b61ed72ab9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3648c1d6-a70a-48e5-8a4f-3675f72d8cd5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8bd08eac-9749-46a8-bf53-2e46a4d0c615"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "65d684bf-7286-4668-90cf-faf341370a69",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4a5c419d-fd03-41f3-91d2-b3bce37c934f"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ac4ebede-5786-4d11-bf22-a8e8ebbad3e9",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "f849c3dc-32bd-4cea-a178-acc684be8576"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "46c037b7-72f3-4b65-93a1-e02981d817aa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6648bc73-080c-4148-b3f8-e0e63df83818"
            }
          }
        ]
      },
      {
        "id": "82096c1b-e40b-4f57-8ad7-c8b055f133fc",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "740e90ca-4b4a-42f6-8d56-7a07c48f02c7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ca2b4488-c1be-41ab-b2f9-f885513cecf4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "95889ca9-cf04-4ecd-a8df-d267c882b0fb",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca2729b5-2766-4f7f-b6d4-464de0d73e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fb8b723a-7348-41ec-96fa-4b5d5454d4de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5361fcd-f313-4fc8-82d0-5ef62db21efb",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0efedb63-f0b2-4234-aa4d-23cf4a6a4b62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "635252e7-717e-4e23-a7b1-34fe398d806a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50691099-83f3-4d15-8f6f-6b7878aff69d",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b69461f-57fe-43d0-b9c2-3f559c68a415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "04324acc-4fb4-4627-8165-f305312313bb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2136a643-b01b-44fa-8488-504723914543",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d25b26a4-9fab-404f-8e0a-773a5746970c",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9620c315-9576-4a6e-b3b0-17e81d409ccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7051013d-8e4a-4c45-8afa-6e4048115345"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0b5582a-3b00-4ef9-8b6e-de1b2eef6c41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "160a2e7e-0052-4765-9ab1-5b4252f5897f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d748a74-494d-4053-a506-1c8b267ac76b",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68fbdfe3-a982-48db-a0c8-a8bbae58c3a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b4fd2f3b-e0b8-42c7-a02d-a68a56fde76d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "718eadea-2b97-4f17-801c-5c17a9622923",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "6a57ccd7-1c07-4bd0-a975-378f6f557e32"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a162ae14-7131-4228-a047-ed571588838c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "81827476-073c-4f65-b504-3175509c4cfe",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c31dbee4-628a-454d-9ae8-3aa0ba9de938",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "c6b5c31d-87f9-4cbf-a299-e64d705f755f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e68a0071-b5bc-4b13-869c-908b7f6b7da6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "63409a6c-5dc1-4f93-acbd-a01d3a50c555"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "20488810-560e-4151-b318-fffbfd9766d2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "18914a57-5159-47d7-968b-7f16add5e05b"
            }
          }
        ]
      },
      {
        "id": "7fc57141-44be-4dbd-be76-0b3870432e14",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "d428a227-b52a-47e2-a552-034a430c285a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ce8c5d17-d780-4d88-ad35-01d220e655c6",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "aaaae089-352a-4d9e-92c4-7d54602f1f96",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ddba0b-7de0-44df-a675-a74f64cd624f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "458be262-ee62-4d93-a7a3-5c3661595ff6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d59e80e-bc95-4c22-a70d-b548ed7337ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c2e6de22-14f4-49ab-a6b1-0b086bedaa12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b43cbc54-3728-49b1-9e88-88013b8c4fb7",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b978047-e9ae-464f-936c-194bedb7786c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b68b6c7e-cf94-42fb-b923-971158cadb82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a476816a-f18e-4336-8a52-08f87838145a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "70049949-4bb7-4d89-9f09-54047344730f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72863c5d-3931-43db-aab7-bb26de579c71",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c1e0874-e8eb-40f2-ade9-1f07abe9e42d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e63627d-7376-4014-998e-a884fe20d395"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a39667f-873c-4d6c-a369-7d4cd42b4221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d1959977-3564-474c-8aa5-c630b457d572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "671f3f98-6049-48fc-b93b-3f5734c5c4d6",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf1c9aa2-7892-4adf-aa3e-19a8cacdef93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69b11dc6-c7de-4102-82a7-37fa3f5a7529"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24ff4610-5c7d-42f6-96c2-6e24a5474402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be08b487-0a91-4378-82fb-4d9f1a74c11c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9272ca13-5e8a-419a-830b-b02ca33cfa7e",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8711109-3331-43c0-8c0e-145fe590cf79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e8d6ea1-9198-4f9b-b502-4fcb29f5ed88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a4df471-9214-4c39-8ecd-1b4f4135d804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da018c29-b3dc-4533-849e-dd561a091b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "146db4d0-7a04-45a9-ba2c-f05e56865287",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2002d0d8-797c-4edf-86bd-4f7a91e01a79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45381c18-9c8b-4dc8-8c26-cf2419b73e8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3d717aa-c256-4060-8e55-a9fc0a9afb87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9ede0309-f8f7-46bb-b463-e76567cbd408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "366ee070-e224-4ee2-8498-a851bdea657e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a505d20-1446-455e-9e56-808b264f0cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db843377-f735-4f8f-bdec-816b57b2174a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2f97ff4-142a-4472-829f-621534b7d32f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "deeac192-680f-4129-a677-0a0fe9f22432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00570496-5337-479d-8fbd-ea1c6dc24809",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8801ea16-89dc-4842-a6f9-e6db8d76920f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "792088eb-4fcd-48dc-ada6-5f646230d1b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b0bf424-30bc-4df0-a42e-2deab552f558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78ad367b-04c7-4442-afe8-50623430a0f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d96dd33c-32c1-4e15-9e3b-242c6cbca89c",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d17bcc99-9b9f-4247-90bb-f9b29d98ecbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9c822a5-9ea1-4d06-bcc1-424bf11c34a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "157fdcf2-2c8a-41bb-9e91-5be62657f1e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5042b773-7bcf-4949-bf5f-4d6706268469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b37215a4-0640-43c9-933a-a0b2e4342358",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dbda103-344a-452d-89eb-a7aa5eceb9a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "384d4a62-1c0e-403b-bc92-55c80fd67d4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb3c208-f572-4bab-8735-dc3c20f697a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e8716e3-7ecd-447d-b52b-14c7e01488f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edf1df0d-c15a-43e5-bed3-bb79a78acf17",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c6b5325-adcc-4900-b5de-cdf68ddc9d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a4ee690-2fc6-4b9d-9f92-8961fbfc3a32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ba5482-a079-4f35-a328-97b6c33270a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aed5fe09-af86-4ed7-b8e0-5b44abaefea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afba3a60-8b74-4851-91e6-1c98c2221059",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0614705-ac70-4022-b28b-a67da171b8af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c56afb21-2600-4506-ac76-8f0af40f380a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9b634c1-cc57-435b-a7bf-2c6ad9915151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c56aad61-1119-4681-a1c5-d91dd8cabdfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02228cb3-0e54-43de-9153-ad7659464ad8",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aea4f031-08d7-424f-bb9c-1fd57e932632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd8ebdd6-41cf-4cd9-b34c-5d90496a0c51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "810e3d38-d2ef-4312-bf03-0d3ac97fb50b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e877947b-7d6f-492d-9adb-7cbc33b8b07d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcf36687-67ae-4a17-90d6-9a0037a2897c",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2853a913-7755-4c48-82b4-5f50aca46cb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1379aa7-208d-4a08-a393-4b9d465b6851"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f65252e-094d-48fb-ad12-88fcdbf8e7f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6df93594-544e-4803-8d66-0afcdae61d5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2f2ed16-6530-43bd-a500-c20cc569e13d",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a66f145-2c27-44b6-a40e-6b4e72af543c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf98abcf-4456-410e-a11f-b7ba272d74ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf5955dc-d70f-4d33-a59e-54b320dbf340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c354021-6eb4-4689-a172-838b7ffd51e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbe13db0-0526-485f-a73c-501ef8a16bbf",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87e13aa7-cfcf-489e-9dac-eeaceed214aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32e4193e-7cc1-408b-b2cb-dac0e408c764"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d573c159-92bc-4d83-bb51-1cf11366cfa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e6fc51b8-58d0-4839-9b1d-7faf267f48ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "849e439a-e366-40ed-930d-9c60774dca39",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c86d6580-8b0e-417a-977d-dda0b9eec569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "160844d6-7af5-4c91-84e7-2f7f3221151c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0995d18-2bcd-4678-a2a0-845dab6b1ca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d574b463-4aa8-4516-bb8e-659c6e76dfd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eafedc55-9b9c-4426-a58a-635b600e43f8",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1975c87a-d1ca-4d23-a06e-d087eb0896fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c0ff4c3-0515-462e-9f65-32292270a0af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2860ae28-22b8-4d0a-9fee-01b2c3f84814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cb631a0-9440-4700-b459-61e1e5a71ac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a759621c-3c32-481c-af0f-81f023939711",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac926bc8-9fc4-418c-99d1-3cdc6c6d3f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2cb5712-7781-4e4e-9f81-820aeff0a0b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4bf1209-1fbf-4de8-a333-c7d57b195165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "24041549-2183-4870-ab9e-f0f819a3093e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acac6d46-42ba-4619-b8dd-c64e8459396a",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aa66774-9ef3-4762-924d-22cb1b09a357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29761c7a-54dc-4bf7-be89-0a14b3757932"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e777f84e-99e0-4d2e-b796-52d6e54f6a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ff7bf10-b07c-4b23-99ee-c05200ec6034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd5b1b21-6608-45ac-98f3-e04300b6bd4e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9628dad-0498-4dee-a37f-b3efdff7dd6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5609841-b364-4700-a946-ab086c6cb483"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a25062e6-950e-4876-9d5f-59c2b8f872ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd68e2f0-f0ab-4f91-87c5-ec98ea254691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e02fd2aa-aadd-42d9-bd2a-bb33b89e9dad",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "202cdc8e-1f9f-4d12-9bbb-8f48e463764d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1c9e7ee-5811-4ba7-a326-43e7c8bc5af8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c97dbcc-0841-4fa1-8002-a36130a2005b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d17dd893-fa4f-4975-b411-0c3b74404607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd68c69d-6b5a-4e6a-98cf-89b121c0934b",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaec0469-bf6b-48f4-96d0-df255a903952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9866fdf-e910-4179-a1db-d1687d4b979b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0163c2e0-170f-4da1-a598-74573b712c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "73a0c3d1-c81e-4e19-993b-c74a1add7e34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fee12c5-48a1-4ca5-9b5e-9266c7a51185",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8efa686-ad9b-43dd-b51d-1680c5b39ca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dde8deb-85c9-46d6-a14a-2b872e8fc037"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1170e455-fd53-40fe-aeb1-d6807f032c6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "28a0a402-edb9-46a1-8c73-2edf323271ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a493bd35-ea08-42cf-8d01-bef56ed1ecbe",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2e9a1c3-6ac1-403c-8ea3-578c97697af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19aae9fa-839c-45a4-9a20-ad5bbb9a0415"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cc5bf1d-7bcc-4718-8852-22c2e0b69967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7bb6bb7-bde7-42fe-9f38-044dfa502dfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d9ab920-eca6-4aa7-b71b-eccaa902a277",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6081e419-f923-4d1e-b74e-e64c704e5f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76c90b0d-4e29-45c7-86de-2a34fff00de0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "021ea86e-2e05-4e31-8381-60307be62194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "08c6659b-5ef6-46a4-9224-71d69b6d8447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdf1eef9-0d6a-40d0-8b28-7b8d53345018",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b850c528-8eb8-41df-a9f1-b3a240718631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e860b2a-526c-4852-a394-1df7f3208aa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c239ae7c-15c4-4ebe-a716-652915c650ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a20fd2b5-aea7-4e0e-89c3-36ce8b9e9475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb3e0c8f-fe44-4018-ac8f-404b2b0dddf8",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b645392b-0738-4626-867b-2590d1cce1cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6578e64-589f-43a6-9b4a-e44ea583595e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "991053df-6d02-4e49-881f-8d652022d7b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "06214c83-2056-4c16-a09a-3c272bc95744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ef779fb-bc83-4943-98bc-bd2d3d0dfe17",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "470248dd-6f7e-4502-90f8-5aa6313705de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d94677ed-4064-4e8e-b526-fb789464b8b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd36f49b-4a1f-4a35-bb2b-4da04c3e6c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc609c86-dd63-4109-ac22-bcc73823efe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23ac71da-c0d0-4e49-9ea7-e96fcca5d1d1",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d7e305d-83c8-4a3b-865d-9a60dc7e3160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "860b52b8-d8bc-413d-a0c0-fd59cec99df4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8059d014-ed5f-4a40-90fe-c9410ad71997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae00507a-7018-467b-b91d-9a8cf5a3ba9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab2fe637-0a17-41da-9679-54ae0fa77e80",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "affe97b7-341a-4498-abd6-5a17e95995f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb0bf475-89e2-4dcf-aceb-c3bd0fa6d71f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56765915-6c8c-4e58-a0a0-b17b2df6aa6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a18c4f4b-ce64-4c06-936e-10741407631b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ec31dbc-2fca-4442-a3bb-7d7d6a111d1b",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fc41134-e78b-4806-866c-2f5688b23887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "425f3e3b-dba2-47ca-9d5d-31de0dcf5ef8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12d48eac-9c00-4bcf-8f96-695052cc19c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ccfd5bc8-4340-4a36-8060-2930a2776d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48c27218-96be-4f1e-b284-2b9c77f7ae1a",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8bc6347-03f1-481c-90a0-1c8e981d1707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6d51a63-4ed3-4374-a3e3-2d7337d03a8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d45d021-bb92-48c3-86e1-8528e174a64a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c193977-9831-4f46-87da-da5b36d8faea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e51c9f28-ee87-48df-87b9-d189ec5d96ad",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "492f941d-89c9-4873-9223-ccf16de8e1c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e94adfdd-7e6e-4341-a2ce-e52ec55af9ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "558853df-790f-47c5-87af-a881bb6c015a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f7ca138-7e9c-4769-80dd-bcc139868b24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "886c226d-1871-4b56-9eba-f363d483eb66",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90b2ee1f-7f2b-4463-9627-e79369379839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "069c86e8-bd66-4914-beb4-4ac0351cef77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35cf6b34-a96a-4ea7-b0a1-981b8a2c42c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "db7f9428-9f8a-44c1-803b-803f13750dce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c58012e-7fc0-41ba-b527-310ff00d2c37",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe5c12c3-4f3f-40af-a4f9-4ffe96b6cb49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "11f0fe7c-e12d-469f-809f-6226fe2a60ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd17271d-93f5-4d86-99f7-92a7f19975fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0ccd1f30-9070-4d23-a0a4-2563a08db85b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e06de1a-12a8-46ce-8d33-9f0e650dce96",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89053d0c-2496-484e-beec-b520f501a455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dad68ea3-f3e7-4d97-aea9-6884e71cb589"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26b4dfa7-7f38-442f-b88a-d0119de78e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b114abf-b7ba-4c3b-8a78-dc5270624a2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e0d93eb-0ad7-435a-a91d-29fc75325782",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de14a242-4dac-41d7-894f-c78615dc39f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9e70c59-f79a-4f46-b72c-5ab79de64437"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3be8637c-efc9-4d80-8065-e840785ee5a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2eb4191-3047-49c8-85b7-1e0753fc1a20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "107e68f2-cd38-4216-86bb-63f93a3c4846",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d37ebe9-77ad-4338-9b02-002f3eca162c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "996cc83c-ddf0-4cce-8f21-7887cb5aa7b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "592b5db4-19e6-43e2-ab9d-6181d05c7845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6acbe1bd-7bbe-4222-9ee7-bfb4615e6325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df0ba683-5a5e-46ca-945d-bd206e06cce7",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "600faeaa-4e05-40dd-b103-f79e06ff49e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c78469c-98b5-4d8b-ac49-36482abafeda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c23762a-6cbe-4c2e-8992-c0bd3eba0f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "255752d8-e22d-4e2e-a2ad-b71de7de92ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20c765ab-f669-4ae4-bbe9-a9eed56da4d5",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5c6e6cc-84b0-4719-afb3-507daaedf079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e6db904-d1bf-4d9b-9309-c76c76bf575a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89ad9420-4902-460b-8bd1-a403eeffb7bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "305b5364-8f8f-4be3-8ce1-076caabb60c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3325dbb7-6c12-48e3-b6ab-730ac6f8cdb4",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e35adc5-8b54-4a3c-b383-e55201eb2339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f819cbc1-a716-44ff-97e4-29df6e664f23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88185620-3c88-4ac7-84e7-e0ecd25e97c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "df6b79db-2a8c-473d-b647-853e5cf7c24c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fa4ffff-0d08-4f54-a199-c3d4ea46bb06",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bea38085-b102-4191-b3a8-39f9d9ed41d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d8017ef-59b4-4ece-aa48-0b46de3fad06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c110e43-2ad9-4df6-a0b3-e6aa7666e5f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e8a6a08-0af9-498c-8cdf-bd372f9966cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b99c4c4-855e-4c05-afb9-11fd545d627e",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60e8d458-9b64-4521-b8db-732713350cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e029ef9-2355-4a0a-99c9-8cd384556db1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6ab9b8c-d70c-4e97-9978-723df4c39d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "c381ef58-4ce9-481b-84b0-fd7b719b8355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "808059b1-912d-4454-869b-92ca80fbdc36",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91e28aa4-3c20-40e8-857f-e0ddb2ff4151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5331e36-1ed2-406f-9f12-a3c76b503a38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "358e6df9-8651-40ad-837e-605c67608795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c05f296-d4e4-45c6-b095-9cac2e5aff44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07fa259b-e1cd-4f7d-a87e-72b373328ed9",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2618518d-aa3b-4339-9d5e-fb68472cd7ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cbd8442-ef4a-4b28-b753-3f226e13d031"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27262c8e-e45c-4f5f-8e35-e12bce81eb84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "efba94b8-7b81-49dc-842c-e50716dbd862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60a69e6a-e975-4150-9355-0cd1d5ce1377",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bb53e32-e5d0-42b2-9c35-9ad2ed21e5a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da1ac6f0-8313-410e-9552-c1ca81b83009"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef26601-04c7-4383-93e3-241acd7b8c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a2c5c6f-9d10-43b8-989d-cf92c421267c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a299fbc-af5b-4c06-87ef-bc37baca183f",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f7e3f2d-ab81-4a63-b296-35ef06ef76f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2634214d-6cb2-43e1-aa39-4eca20a01216"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7452666-897d-4da4-9313-b9f6cec377b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d78e9fce-f5ca-488b-a23a-936daf71c9a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20f149d3-b229-48e5-97a5-d3214378937b",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d34a826-4b8a-4343-bfa7-ba0bf2167e2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cd33d2e-eeff-4b28-b07c-c816a413d03e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a8127f-ca46-41f8-a5e3-c93daf3b2078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ae1b8cf-62cc-4956-b911-7bd3f72f6acb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a056dee-e02e-40bf-a178-1a4a16adda7b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bae9b02b-3524-496b-9a86-fdb15e014a52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f327560-0d28-4254-a006-23897613f192"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdd3ea22-4e9e-4cdd-adbd-0fda581d0591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3102d060-780f-4f33-979c-4d15242f5e3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f36ff80-beb6-4efd-a3b6-6c5b4224dd20",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3b21593-423a-43aa-9cc5-5277fa2d7d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cd5edc6-f954-4c97-b927-d7b161ebb2d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcbdc737-f675-4def-9c0b-df8cb1d5cac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b56df59b-74e2-46be-a6cb-15843c77eec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bace30be-6a24-40aa-877e-c46ee6c14d77",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb2beaa2-27b4-4022-a716-db3787f4f22c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d3376cc-282b-48cb-b9ba-3e2c4b45e31f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aab1bbe5-48c5-4a5c-8ea1-27c543fd5906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc8b6408-8858-4245-9e19-3e57c5c1e17c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ee44279-3060-4daa-b091-52d3a6143fa8",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "166520ea-3655-4054-a002-d3633bbefd2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7cc8cf2-1d94-4022-b77c-1dd2d770ebcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb02f13d-8dd6-4a4c-8744-a184fb8c4eb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4b6a126-712e-4d30-8877-dbe9225b6567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d9290a2-63c5-41ac-9150-d9e7cb7cba5a",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c254c4e6-0966-43a5-9250-2decc79cd3cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ae4d4c0-a2eb-413e-855d-876604e7d456"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b0798fa-c9f2-4e40-ac24-a5539352f52f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "124f1bc3-f450-4ae2-ac81-53baa048f433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdbd4a8c-fe05-4dd0-bf2c-a04908b9806b",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59960855-6326-48d0-b97c-90fa7c909f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5240624-2bd5-4b21-9709-0bcb0b160ce5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3651130-8ccc-4fde-be21-cefdb28a205f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "46f8d4f1-d0ac-46d8-82c2-6643e6c33534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f0cd3a5-d3e3-4703-8373-5b485070727e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56f835ae-2fc7-4df3-84b2-edda789d79aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa88fe8e-a5b8-45be-833a-690c28455f16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "386a9c87-e123-4a81-b9c5-7a2beacf3751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "769871cc-9b22-4e6c-8b7f-1ac1889f5034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7e5a284-a3d4-4267-bf81-b3d720cfb662",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3d0f589-2bb3-468b-9c43-8cc3fcdef628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "286804d3-cfeb-49fc-b7ec-e99caf2af94a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d767df5f-c31a-4776-bfa2-f8732caaf193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "69c0ebae-1be1-415f-942e-37d6b4d05869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "210f350f-51b1-4f84-8f82-057bdc7d30b9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f718896-b117-4bfb-9e45-e1dc81be7cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faa75a8a-a2b7-4545-b040-d0b74e124f88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74fce6bc-efa8-4b3c-a1c8-2e6a1a5b8112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae268803-6746-4ae9-bcda-87436e77d9ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0ca3f38-2176-4d60-849c-36bd99544724",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67a800c0-18ed-4317-9308-cb8b26813303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c017e672-75e9-4b7c-a574-ff0bed98606e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d49b000-945b-44a3-ba58-778a3c20c4cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9bc3b04-c3b2-4e9d-97ba-0105af413541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efd07620-b563-49fd-9d52-cc1969985ada",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07f39163-f97b-4c4a-80d4-3cb913c30b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9374b9c-093c-4207-ba63-d1fabe190d89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41033cff-7360-4658-81d9-43222f31ff8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8495e40-bd0a-4f9a-8806-ca62f5577601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74c8773c-49ce-4f2c-afa0-48104970d68f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72fcd01d-69fa-440c-ae07-5ebb3b6920e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f31dd28-7a46-4422-9021-7fa3a21082dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f38efeb-1b0c-4cf0-9c39-ee3f69fa2b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f7a5cec-71e9-4ef6-a931-23eb79b849a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e98aea2-3dcf-4e34-b7db-ae24b6974034",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7d17eb7-6e09-4248-92e5-00a0fa3c731f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4500925-5ff4-41cf-b184-309549937824"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c06afa9f-26db-42fd-b397-0529c891a8b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3f326fd-4113-4a64-b79e-0b409a5214c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edae39a0-1d5c-495c-869d-88e17ef0c023",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9ac2117-b7a0-4cb6-9069-b3ab312e721a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9272bfe5-9fdd-4de7-befa-81bfa588de63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "290da21e-4ec5-40a8-8bc7-b1bdb00a2df5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f44ef29-b534-43cf-8b14-d4cc0659e647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc8a8682-3c97-480d-997e-b0c78876e6bc",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38bfc38e-1d10-4d62-aa1a-c2e180ef8ef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd9ab054-b5e8-4302-9907-21c7264e57ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e3dc225-c364-4cc4-9fa5-343f3da6ee38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b34219a1-9671-47e3-9263-28a205272f55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80e86462-d0b8-4ec8-92ef-f495692389b7",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bde64474-c135-4354-b4cc-b985f91fc438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86c3eb4d-14e7-4b37-a884-fd0f0bf985b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0579e9fb-a75c-478f-a89a-36595ae4ad75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4c86017-17a9-4ac1-9336-16564ee87e32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55b12c32-0766-456a-b30d-c9dfedeef6ea",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9fdfae9-5c59-4946-a06b-4e2fd953183b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b640aaf-369c-43e1-8344-125f56325627"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a38a4c34-e282-4db6-8e27-78d406003e2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5dcd4b0c-b8c5-485f-860e-05ee7f872c3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbc7ff33-8c8e-4a22-95ba-5d10d42d3f97",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee016483-59f2-4897-b434-68ebd62c652c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd8bec3d-47ec-44a6-ad4f-3e20084665b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e2de110-fe96-486c-95c5-cb2c684e2124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e90d4a4f-6690-48aa-88d6-b82d3514b9c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "822043a6-ff8b-4575-bfca-3d728b604e20",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "324d3687-c8a9-4258-b55a-3449563b8bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da5e6a0c-90d9-4a79-a60c-37cbf84ffa75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38c8ca0b-8fc8-480e-b2a4-3067decb3f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "debabd8e-7130-4bb7-b456-20c984fd7993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cb1a29c-faca-47c8-9c3d-a1acfc422134",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eec03895-b9bc-44d0-9a72-e6ce7bc37bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a68bc59a-cc66-4c7a-84a5-14c50b8c8758"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7b963b2-1e35-44da-b0a8-d3b1130f2b98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "10ca775c-667d-4a5e-8c6c-7ad70486d433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b8629f6-8c71-4557-956b-8ebcb4d02e69",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8ab3ffe-264d-448b-976c-a95287690c5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a90d106e-4ded-4536-bdd5-2eac54964459"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bc2e38a-916c-43da-90c3-883544317c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e174510-9a59-4ffe-9776-c239e6175804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0cf6527-8e2a-4f20-adf0-55017a3f8b41",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec918a2-7577-4dbd-9896-fd1ad444a59b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5306e4cc-9aaa-4ae4-8f88-c741687f0a4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96e0e938-29e3-4ae6-bac1-e5cdebb2dde6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "42e4f189-d926-47a2-9ff8-bf63c0f1c470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4a5ed74-0c6c-40e5-b94b-eded032cb8f4",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92180c19-1723-4c09-a408-acb06852c72a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "450f817c-2c05-494b-a6d3-df3420b0dbde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77679a64-51cc-4485-ad07-df5aac11b653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c42dabc-654d-4a01-897c-bd4b44673a53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f04aa0cb-9d8e-4304-85b1-bf7ee317adaf",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "261aa9f7-4127-465d-80de-6dce0848a256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51ac4a06-3012-417b-bb7a-f716417da335"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bec3b4db-5606-401e-991e-93010e1ccf83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "29ce4797-a925-4cf8-84ce-477939fdb72b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7096dd8e-4278-48e5-b19c-5a51597ec294",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51ff94ef-8a1b-4565-b097-c432c5bc98fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79989f22-7b7a-4549-8b3e-347c74875cbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be3377e7-6a8a-46d9-980c-c0e266c94937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d6604372-edf5-4771-b9b8-37b97ee9bc87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de0964c6-7ec6-4545-a29a-188956907f23",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "657d0bbe-0de3-40f3-9695-0efb8acb24ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e070fa6-1079-4fd2-a6b0-839ac1a55c20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "049eeff2-ef95-4eb8-95dd-df423ed5459b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "19890164-f094-442a-be8c-b5c923651d81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9994916c-a0ad-4e92-a2e7-9c1f47ef6a93",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c405bc67-06d4-4bf3-ae8d-649ba6e69e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ca86a84-e00d-4a15-ade6-dafe209cfd7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f8a9eeb-a06e-4aa9-87ae-a9445bcff049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "de261cb7-b8ae-48f5-9d0e-c59d8f7ab183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e00327a7-558c-4c26-9c97-2bccbc11993c",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ea2f53-0659-4d16-8785-58eb460909b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d281d39f-0c72-4317-ac3e-cec1d266eb6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bf3fecf-5a3a-43cb-a5f1-9f8097f12ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfcb906e-2476-4b84-a6c7-c54b0b64f98f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccefb192-c7a5-40c3-907b-822b0f0a34fd",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dcfbe95-f1bb-4e52-803d-127590bb6404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adf521a5-2006-488b-b445-60f27d729034"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f9ce41b-23b6-496c-b36e-0eee8d99edab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b7501d6-23b5-44ab-a972-8fca53aa1736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8d0ee8f-5656-4278-8da3-ad9fa5e66148",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9040247-8532-4e6b-97ed-594794e07ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23e2d910-333c-4e4e-abad-dc786320e8c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbba05f4-b8f0-41e1-8d31-a28840f94773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d2bca1d0-9170-410d-85b6-4e3b03508471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0cf67fd-34a5-47dd-a9bd-cf617250097c",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e948b0b-50dd-4b68-84a3-4ae647b028cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "410db2c8-4b29-4940-ad9b-cf712ff39e3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14cf7382-0994-4110-9a70-1425792b2edb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c402576c-65b5-45f4-8e75-0fcd3ce48862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1be715a1-6fd1-4097-a6eb-1c43d147ed94",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a639a2b-5abb-4f15-8592-b3f3504f7993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42d4f3bc-2d4c-405b-88d7-4ac9a1778ad7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29c66284-63e1-4a8d-a644-1368428c6ab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e09228be-a532-45b1-8d24-abb510c74402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d576b26-0f03-41ab-bb2a-69e7bc360ffa",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfc0f058-61ea-4fbc-8bc2-05705383470f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb5c2869-4631-4e26-86e6-fa00d47f627e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca866e63-e1ff-4bb5-b70e-39abc543f99d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "522461e5-4a63-415c-8ae9-8bc781b6c9af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90e986c2-42e6-4d60-b0b5-41c615b27b52",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cdb91f2-fc66-4414-92b8-e73e31b2e7cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e4c9c5c-a892-4322-b254-af35fd8486ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "024c7bf0-0c1e-4686-8dc6-fab96556d4d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f75e32b-bc0c-4c94-913d-be468743599c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ca849ad-cf22-4c74-aee3-e962993dfc8a",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43e00214-7dd4-433a-bdbb-c48bcb327846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5c8a44a-6be6-48f2-a630-9a6685df698a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a05a709-e1a5-4236-80c4-ddf3ec01d6e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "355a0d83-02a2-49eb-9261-2a4aabbc4a69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3ce15c9-87eb-49ff-b023-1771f08d66c2",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a65dde7b-481e-4ed6-9a0d-b26e6d446457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a5d64ac-5880-4776-9198-054aaf10cb09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d4663aa-887b-4e67-98c6-815ef806fe6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5a0efd3e-522e-4a50-9e0f-fa67513199b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf1d07c2-c111-4a46-9ac2-e837514e95ca",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed7a7114-f7ba-4dad-b4b7-910c9161dea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53b58084-06a1-4e8b-a6ce-730145603a7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8eedea4-5cbd-4c6d-a211-5c3decccb71f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d240bfe-31a6-4dda-aed8-7e62c09aee84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fab64da-6dff-4bdd-be71-28332f6d44b7",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "997d1c2b-6481-4bb5-805a-ca70e2a372dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3a8d9b6-90e4-4dd1-8f48-fddea55580f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30e6d8ce-022d-4074-a6f5-e8882582c75a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6dc98420-fd76-44bc-bd31-c5ac9396477b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fabf0e1-e678-45f2-96a5-812554301304",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d513acd0-a726-496b-8bb3-df7d5b906ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93b85e53-bf57-4930-9cb2-c71d070eb40c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10c43417-ffe2-4fd5-95d3-cefc94a15d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5f51875-b260-40dd-a0fd-539c34d572e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "560c9eff-f74b-4b3d-8a8e-323b5390feb3",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95410a25-260a-4729-90d0-ad1dc4bc076e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95561424-c582-482e-a497-28b759e7f9da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f0991e6-4124-4dea-af73-69a7bfac1e47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1fc8d6c5-0f9f-4e42-ae42-6869f597bfbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f06058b2-f25e-483f-ace3-b03d45d66ee0",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49c6a617-5f30-404f-be56-97086686542f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17b161b4-f3a5-4e53-8a15-8031ef49ab73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40cb6bb8-7af8-4ca6-8f24-dc66dc96ea18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8afee5a-d90c-4a43-b037-8a0b2fdf56d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a87b6c2f-ba6e-4a5c-bd27-cbf1550a66d8",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5339e20-6868-4878-b167-ba4297c0bd49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ce9b22a-48b7-4858-bb21-9c3aba165921"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe1ab937-0103-4d08-b48d-e700e51a7085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7ca2c5a-b61c-4727-94be-808b531069e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1edc168-24be-48e6-81e9-cc272afd1785",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc73e1bd-fd85-40c5-b659-f0ea7fa0466c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "9929f953-9e3a-4ec5-b3e8-32030fa0c9a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5693122f-fa03-4bde-89ee-cef21deff120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "41a5d244-70ff-45af-b36a-75ba3bf008c0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8576f841-6214-469e-8879-11fb37585502",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b2debcd7-f112-4d6b-bc67-fa361ca4e380",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37f3f203-2600-4ccb-bc57-1de0643b15cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7997d951-40de-4781-9413-5002e92241e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bac56b7c-4d97-4dcd-aa0a-5ed83225f0a5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "16b9d214-0909-4233-913e-7c04f48ef4f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53c4093e-329c-439d-a321-542472323e1e",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f18238b7-fd82-4bef-96b7-89effdaab7d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "10f724d8-44bb-4d2c-a941-b321c7bfd7be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9624b1e-8eef-45f6-bcc2-b09e457a61a0",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3f9ec513-8bd1-4c7d-b9ee-0363d75c7cc3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5a0549e7-a22e-412e-8514-5916472ee396",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a341c1dc-daf8-47ef-bdf9-1039632074cb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "10eb33ee-b033-4ff8-bf37-417cba4cee07",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b82439ed-8542-4312-b644-19a69dd1d2f8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "72699187-1039-4ece-813e-e4b9bb90f2d6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dec42d0a-adbd-4eb6-9c57-f79ec31f9472"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "dd8f0925-0a50-41c5-8d11-bdeeed8079d1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fa91cc19-de23-46ac-8edf-435a12c7cfdc"
                }
              }
            ]
          },
          {
            "id": "9f02d230-5431-4802-8671-fa2cc1bac74b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e935f92c-c95d-4367-a79d-66de3d16cc2b",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "103493a8-54f7-4685-9549-a6b225e7f110",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "34fa50ff-38c0-40c0-9a67-37a26fd757db"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "91cd376d-f985-447c-8bec-1ea9bf21065e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "33c95a37-c26e-43a2-882b-3de959e80737"
                    }
                  }
                ]
              },
              {
                "id": "29ed141d-8705-43e3-b37f-4913119a87a8",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "87f6c0d1-2baf-4803-8580-8ab9ec741bb7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8953a937-4e8a-439b-8747-ebd77b8841a6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b5c9bdc9-4b34-4f58-ab3b-a0860e576b64",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fbadc993-a660-4f8e-8af6-418084faa0af"
                    }
                  }
                ]
              },
              {
                "id": "389d66e2-8b60-49da-8716-dc15c2279b26",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d17a5e8-4d6e-45a6-bedb-9a8d60691ce9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ce7963b7-b666-4244-ab55-378d401b3b5a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "153cb5b1-1abb-4177-b575-7133ed330fab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dacdc875-513b-4fce-9e36-7ddb70ec3267"
                    }
                  }
                ]
              },
              {
                "id": "cbc87a58-f9ab-4f16-9069-2c92558dfa30",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "364eccfb-9daf-4860-bddc-20a6bd4f761c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "75910576-36c2-48bf-be91-3666ce43f0a8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a4e64428-da9b-46ed-bebf-9ab9ae843bc1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "fd7708da-29a8-4878-959d-5b19a0c886e4"
                    }
                  }
                ]
              },
              {
                "id": "375bdc5c-64a3-4fad-b1f4-452f65bbde12",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eb685fd3-d36c-4374-8290-08556778bd83",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "05c96e5f-53f6-4f61-b680-25220aa886b0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8e7815a9-433d-4d98-894a-3c099f9b5694",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "db46a90c-cf4c-47ad-aea3-bd8de069b744"
                    }
                  }
                ]
              },
              {
                "id": "345b67c1-cd57-445a-9441-f4f10826deaa",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "10fc97bf-bb95-4055-aaae-1a28c6296b2a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c680bfef-bbe5-47b3-9d2c-fbd0072dbad5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7fb7fc50-6d2b-4d71-8a29-740737811fe6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "52c62d2c-439a-41e1-9d20-2fe86f36d29e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a78c779a-be23-4cc1-b245-38040c9c9e8f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d242d853-4818-4132-80bc-2b76f7a8ab1b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "43fb262b-f9ff-4746-b19c-0a0e48b0e700",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "61b9eb20-0aa8-4d2c-8dd7-13c36a578892"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "04967f75-13e9-4433-b819-d3cef6730334",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "dd0db304-cf3c-4a25-98a0-edb7d78ea37a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0ae3b10e-63d9-4a62-a3ec-398fb346ba8e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "17a02acb-904c-49de-b17b-bc9c56c88562"
            }
          }
        ]
      },
      {
        "id": "d0d202d3-03f4-4a52-9dff-b7391c0dced7",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "93d0fed5-3cb6-4793-be2e-0221622490c3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8859972f-8441-4df9-9356-bdfae16a0bda",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3b9ccc97-663d-44f8-a025-f8976a3faac1",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c9d6ea5-a6bf-4889-bc02-4aa32d54b8a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91147411-a036-4d98-a0ed-95fea2f0c9b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3452fd92-6025-4502-8701-859105e3d9fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a3b6925-ee0a-4fce-a8c7-fa0c629c803a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b803886-8eac-42de-87a1-fdd7ebce6ed5",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03b449df-0a52-4a53-b0bf-cb632072c520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9657f307-0eb8-4c02-96eb-b710ab20ce31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef86661-84e6-4f08-afcc-44f9c1641ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "13156d08-184d-4d0c-aeda-2214c891b908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73168bed-87dd-46d9-a6e9-d2a2c9239887",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc19a430-7931-4035-9efe-a5f55958d747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5542b5b-c206-4909-9cb7-1026d8ee2929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0083e27b-9a05-48a9-8d8c-11cbc1e55898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "52bf8454-aa1f-4956-b30b-540eab77cb6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6e92f4f-c055-4668-96c8-0191a3881122",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1432827-7b87-4ad2-8dd7-39a10693d0dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5d0a7dc-8fef-4ba7-bf9d-7e789ff43ed9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "641ad58a-69a9-4a8c-aae3-69e64b6ec497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c667243f-de81-45b4-aba4-feda1763ad9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a38fe660-e175-46c8-afb5-190c79da0a85",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81dc2a07-b296-4021-a4cb-c4ea38c906eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "023fac79-67e4-42fd-be64-83a756b85212"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a167ded-0a84-4681-8e8d-1f7106225226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "33ab3cb8-ddfa-4f26-ac78-59ec5c653cb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8216353e-cba3-4911-8d30-cffb47a3a35a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "936df9c8-4f22-4b6b-92bb-530d99d07057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b553c4f-33f7-4a32-8300-90c2a02e8eb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8242a615-d2a1-45c8-a9c1-877581b2286e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "41bc9472-7377-4943-a776-e29460154c00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "142b87a5-b584-4b72-b785-87bf20f0eb2d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65046302-018f-4a51-a988-12dee93eeb9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39621382-efd8-4e5c-becb-97335520c91a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bef06107-80be-4f3e-a229-34794a4b138a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d1dae6f-986d-4a12-b6e0-f2c703cd655d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fefe294-dc3d-473c-87b6-78dd684d25d2",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dcfe99e-02a9-4ddc-ba3c-77b19134a064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53b10e6a-2683-4936-a127-8bf91628ee85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6077d55a-7234-4f3d-8f37-67fd5891f01e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1ad71dd-edb7-4f5e-ae05-b5a0d9583f2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6895a786-2f58-496b-9a53-c6f67fd1619f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0d01853-0487-4ba8-b60c-33575b6611f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "086e2db7-f80f-411b-ab09-9f884a950a36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2816f411-75c7-4a05-87b4-dfb5667f83b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e817e216-272a-4d5c-930a-8332df861e4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d69e24f-bd25-40f3-962d-1525afed1e15",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab604d85-dc1d-4d20-94fe-a78b988d398f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f225c55-b82e-4f29-8797-c6e410b865b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b1ef01e-6bb8-4acc-a69e-e9b6e7f4c9ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c37e47ee-c039-4e8c-bce5-f1a33ad71ab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b22e4730-aae1-4298-8404-4c6a4d03092a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9914754b-410c-4f0b-9058-0f88decd9865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83fa31a9-94a0-45dd-97f7-e3a60b18dc66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f458808d-3e42-483d-b8fb-458aca8aa66e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "41f06cd8-594a-4244-bd55-80d0a0aba425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "416fa1f0-f8fc-4ee7-816a-b4ed3c8138cc",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a836ef3-d62d-46f4-8c77-b5ea14966a75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fffefa0-e0f9-4871-b2d0-4e8d9c12a9a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b276d3a2-4b65-4fec-ae14-28a11416828f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "867b2001-d0e5-49b2-a3b1-6de047800ab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "811221e5-5f41-4c89-b3d0-c27446096bba",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94ff0d6e-6d00-4bdb-b330-6270b1cff49d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6949d359-6494-4df9-9880-346c47c00513"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96a0bc2b-ef64-4bf3-8cfb-1864f8d533f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "89823025-747f-41dc-b474-b4437ef756f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5655c8be-09e1-4b57-af46-850b1389f60d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3818267-fe84-4dbe-95ba-c8c35c3e6bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a64d8f39-25af-4508-ace7-a193e3f22a06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae069603-d312-459d-8eb0-9837281cee3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "80eaceed-9063-4990-9340-351a9f33eb3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb3316e0-5efa-419b-93f2-f107a964a4e1",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f14d986f-9aed-49e4-bb6b-84990e1189fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31ffbc09-985d-4269-bbbb-e934af672e88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "086d3a66-33dd-43e4-a01e-bb91cba3fd9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f263b15-0c6e-4975-a35e-9ff28a1679eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18e87dcf-5259-42f9-8155-526837d8ce79",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e5baebd-5610-4d47-a1ba-8f5f287bccca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0f18a2f-6d54-47fe-b118-49571fe24a14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17ecbac6-3724-41ae-aa92-f70f6742005b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2041adc-f03b-46ac-85cf-fb035d29af67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c0ce07d-124b-4fd1-a773-32b804cd1eb3",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4752cb26-e108-4e73-bb9f-9cab759cd4e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a19429f2-bf3f-4022-9c00-c4b8cd9fc6d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ddfbdc8-b631-4ff6-9a81-84caa948742b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "93b5830c-d127-43ed-876f-2007e09fbbe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e80b387-6db3-4b8d-ad4e-0bdec90d05b8",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a0615b-f6ec-407c-b988-045d5f3e05b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "322f1c9f-bd79-493e-929e-a1aa668990b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fece5a1-6c2c-46e5-82fc-ace68ee67937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d91a8264-4879-43d8-b8d9-627101388662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b52115b8-d57f-4ef8-b6dd-fe4ba05bf76d",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4943ad4-0170-4611-b3d0-908306dff862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1464ec47-4cd1-4750-bca3-e57d2580a640"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4691672a-054d-40aa-8d36-8e8b86b430fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f089f74-1b3d-4096-b3dd-e5a2264e9d2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcf33856-47bf-4555-be58-3a8c4a392cb2",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1eae2c9-478a-425b-bf99-944e8dbac592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06fe0d96-f9eb-48f3-bd45-482f150b1dab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea22fe63-b422-46d5-b2a5-3d31e74698e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d269e8ca-2075-4fd6-91e6-48a70267dbaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91271573-eac2-4947-8992-a577c68e626d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce74428e-af3f-492e-a91e-dc07f26d0ccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffbf8a9b-45bc-4ef0-bab9-70d90fc2a4a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "879894ee-85f7-42a9-bc1d-4966a45b3734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "795e6759-911d-407e-8f3f-aecda57db85c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25063f1e-c589-43e7-9f82-09d5058f88d4",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41d8b60e-343e-433d-8332-a2d093c1bb4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6364a3f-53f0-4793-a109-67728566a806"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b6cd057-670b-482b-9659-4cdfb807227b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd4bc5a7-fca9-455a-aa12-ce45a51dd894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0bc3248-7b5b-44cb-a921-df2b30e5b496",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c166798-f4e0-4b0a-b14a-94bd26d4664c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c23534a1-f627-4d4d-9365-bc84f029494e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67946434-acbf-4df3-b62a-e62d4df6495d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a9b49c6-bc9a-47e9-9e0e-243e53562aa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c83c7928-ef02-4034-bf32-c99e0164b659",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d78eb17-6063-4307-9028-4b9d48ae1615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd3044f8-3528-4214-b6a2-d78269920adc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c55e18b8-cc7a-486c-b00e-42418925add5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "247f8cee-3d05-4809-828f-5c32b3058cd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95c3f566-222c-4a45-aa3b-e38be7e41f27",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52d3df60-7107-466f-bb31-cc9357e1b778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f202e2da-2800-4d1c-a96d-f339a2955059"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf2a489d-8161-4bfc-aec5-ac14e2896e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee9c4122-1085-4a43-abf0-27490bf7dcf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0d24c82-c03f-4198-87fd-507bafa54bec",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4d060fa-cfd8-43d7-8a3e-330087933c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0828c1ef-f670-40ac-ba27-ee2f41d5d953"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7111515a-e8f3-4491-9ab1-6f20ef3ea8a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c5c69ae-faea-4981-8e3e-d9707b9d722d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ad5e04e-87b2-42d5-bd54-38f27daec49d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e7d7d79-e451-479d-9f4a-ef411cdb7015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b39d49b1-01b7-4517-b76b-6a9d97e2c096"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "153f3251-1b4e-4a7c-8f6e-e2d81d788ef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1df7e934-e1fe-4404-88e2-94957cc1aea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e45f0435-94d9-455e-a31f-a721228f03e2",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fccf8a8-bae3-4644-b0ab-0a85759a4216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0cd9bb5-c0b1-4948-b9cd-34ffe76166a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07029d31-5999-45f6-87bb-0eedec42f684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "acf1c807-e11f-4aa9-b156-be130690bc43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34f03aa7-7d54-4f78-97f1-7c854a427e2a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31a24d37-bac3-426c-a9c7-0ef30dd4446c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "989f8edf-de54-46e2-a75f-43830883a814"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6309610e-4a32-49d5-9366-c59b57f1e158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0d2acd7-87c4-4b47-bb46-e0806a80edb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa3735f6-142b-4dc9-964a-f3b9b6e68abb",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcd869b3-a305-4e81-a67c-055bab2a33bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48c85fd3-6c0d-4ea3-b521-b9bf1c2170f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eab4f7bd-38db-452c-8111-c2679e8e4ce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42ca682a-52a5-42e4-b445-6b1f80747f39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44c3f21d-b254-46ef-8c93-9d3e2b168fc4",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66ae34d5-0073-411d-a5c0-d32ce2e5b519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2582eed9-edcc-45b6-9f04-d76e77288f1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6accdd0-901a-4eda-bca4-69e1b6c78461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3da5a34-e8ca-4981-9ee5-8d457fb137d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f801ff5-6658-4fbc-a90d-e42224deeefa",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2cd8e7c-e94f-4adf-953c-68ad6b87877f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a3d6e91-c729-4f1b-87f6-608e1c94aa21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "190daee8-3170-4422-bfd7-a52bc10f0daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1885077f-5bbb-4400-8aad-c6a2b2bfae67"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6ba1c719-e8d1-4d72-b962-d2c969e14e83",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e4a0b31b-4e85-4cce-b38e-606631dd8184",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36e7ccd8-8f35-4d91-a8fd-ff3e4882f8a3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c8a04d83-8736-434d-b344-e5ea3209a685"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c58134e0-3752-4ef6-b573-b66bbb508a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d7239531-1121-4980-bf32-5c95cdde2a32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02c3adad-3055-4c9d-8ca8-bfd88d086e2c",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b193aff0-3d49-4775-bb70-c9d87c9ca308",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0a3d850f-d62c-4952-985a-c3630d962845"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cf39f54-47a9-4566-9ac8-2b746802558e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "04a4eaec-58de-4a4b-a8bd-fe32db396426"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "59e1a17a-096e-4160-9cf6-9052d2191d61",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b296e3c3-dc2d-43a2-b05e-69bcebd30ae1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fe848195-1021-4943-be23-ec651c075f9e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bd625ba7-df55-413e-8ce4-7a98b06abd57"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "75556373-b3b9-4ead-b33a-5c17aadaa81c",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e6acd29c-19b4-48ec-aad3-8329944f0d99"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "23b2d1c6-017e-48ee-a49e-9390c88a252e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "49297c2c-7aa3-4079-ab02-86ee6d7af86b"
            }
          }
        ]
      },
      {
        "id": "9ce99c57-3c27-40f1-a8e4-d2c343302d2f",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "06e39edc-ec06-45c4-acd7-8b061b69496e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1ced8685-21f1-437b-8dc3-af17b64f1b28",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7f07baaa-50a9-449c-bf58-ab5a9ff3f19d",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeb704f3-4f09-452e-9dad-803cf538d3e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8ace7bb-613f-49e5-9093-ef1d1020c94b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3d7c2d2-2503-4a83-a0e3-ab02a4f5b2af",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08fd030d-c2a6-4131-808c-b73ed5de571b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22997bb7-984c-4e42-8081-e696aa0c50d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7830b6c-c6ec-4a35-811e-6b2f2df51b54",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "962c9678-821e-49a4-88df-30c8481abdfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1767af8a-58a3-4736-9ba9-de53145b99c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdc33ba6-bbe4-40e6-8def-0780aec903f0",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87afb5b2-3929-4fa9-8347-485495f50b1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f3fccf9-b363-4311-be56-160334cc998f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f0c7bdf-59a1-435a-9c46-f8017a31251c",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2f8b9e8-b596-41fb-9a2e-663010f9ab6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c480571d-bbb3-4ce3-83a0-b9c0207c21b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "487a3bcd-3b6d-421a-b0b8-ee3bee06b0d2",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dbfbce0-3709-417e-8d31-47b13f45d609",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97e8ad3f-4efc-4394-87a6-996ddd620e24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3e21bc9-6b83-4e16-883a-7459e2f172ff",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06961125-9e84-4b54-b91b-0c180d7101dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e74e1e6-cb03-4583-9419-47c33e130d51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cb4831f-578d-4917-9faf-ff2f0cd82533",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "910b5c92-d179-40eb-b758-242447c569a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58dc2e08-c623-4dc7-b9e7-17cfd4a3dbc6",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04c75f0e-25e5-488e-b521-890307200e0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "805d5f17-aedd-47cd-acac-0daf63c9e62a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3521967b-f068-4c29-894d-d24c907b50b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dda5de52-2d7c-4baa-b28b-6f018d34eb9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09ff5074-34e8-4627-945b-d0a72c9c2890",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11b3121d-d219-4e56-82e3-05771a67dd08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "600ee89a-b503-428f-82e2-9f65ae228318"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "219f6942-c7cf-408a-94b8-e4ce0000092c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28d27a8f-0369-498c-bef7-9dfbde3b467d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3236226-4278-47b6-9677-1a7c6797324a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "853b5476-fa89-4a6b-9b02-9a5a75193752",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a5f6725-3111-41eb-a426-0ec1b3b58fbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "662a6bd3-9c16-4440-a6d3-b812d7c38209",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e738d37f-3b2d-4a45-b34d-a917f44294af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "404df436-87f9-4e76-91e0-32903c2c53b8",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c76fdcc2-8325-4301-b528-9ac2ce7ae771",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e09c9787-5fa9-4fd3-9549-d936b8c4b757"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "770dce89-ca82-457a-9726-145270a66307",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e4cd251-bc05-4965-83fc-2b45db4af94d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c9fcbee-524e-4acf-b9e5-54c5893913e2",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bc0848e-c815-47d3-a1d9-cd0da9d3c01b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f4c017c-42c9-47c1-a16f-95e3f116de4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "697851aa-e1e7-4d4f-a2a3-55ffdc9b3bc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b80c426-3d3e-4865-97f9-86b89d27b12c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16b9cd0a-225e-4b92-911f-e6bf47fe7a77",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dab3038-3e9f-4212-ada0-d3fa148806a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7454e844-9723-412d-887d-2912b8fdd24a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "524e508a-d9c8-49f8-a3f7-be2261442bab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a272d6e-3da7-43a0-a941-181e68e9f2b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7f5ef05-5871-483e-b539-aca19fc83c01",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "843825c0-a4d6-4fe9-9d55-dbaf693aa631",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b344b479-293f-493f-8bc2-a680c8208217"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a74f8850-d682-4b5d-97ab-1da50d54527a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa9256ca-01a2-478f-9282-1cce9f252c8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d104717d-944c-47dc-9742-85b881101432",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a7bf743-6b6b-48d3-bddd-182c48a1cce7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e2f38d2-f104-4653-8ec6-a3cf77d7c011"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deeb949e-9b4a-4ea4-9070-6ddc86c2ab90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6bfcb0d-aa80-4f6c-a2af-23951aa1e263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "750d25a0-0c52-44ba-9574-f71e97d2bb5c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "226c9cf9-f092-47cc-a3f1-7a20511b7807",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "756180dd-4640-41b7-9218-286eb0504507"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db50138f-e744-484c-9a04-a3f9d600373d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7ae67e3-cefd-4027-a647-6a9e205f3abb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7757407-2530-4a51-8fb2-777041bf29e7",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "154718e5-4ead-4e54-8b09-0a35cca799ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d82e982-d904-40eb-81a1-dd25ae8738ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b4fac4-ed2b-4418-bab3-f1797c2ccdcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7eedaf91-f005-419d-81d9-265076afff4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c11ef06f-36bd-4708-9aea-b07c9d7b0e23",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be86faaf-9932-4de2-9eff-c2cc0c3a4252",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e56c81d8-cc26-4ac1-873f-ffc1ea42e99d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7629a300-7170-4eaf-81ad-2effc7d3d83a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5b04f80-7e16-48d7-849f-fdaecb17e2c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f4bdbc5-f4b6-48b2-8ffe-e3ce93d82a4e",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8121c378-0356-4545-96fc-b85b495fa5b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "112a38a4-c195-4dbb-8077-96bc414d1d57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "034ac4b2-8f23-410f-bae4-61ce0ae25302",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e58305d0-af3f-4d54-a162-baa31388689b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c424fe1d-560a-4337-898c-31873fa5c5a0",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ca68e42-9ead-4532-8562-230529290a06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "396ed539-ce24-477a-98d5-c6634b9cf46b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3cb5450-9a23-48c8-b08a-bca51cae2ef0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "392cf5cd-a2f0-413b-8dcc-4715f865272d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0d40675-5880-4a99-b35d-b96b8530faf1",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96481391-bf7b-418f-905f-361121e47c0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "013bbed2-26b4-4d1c-b672-e3cbf5145587"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d881ad7-19fd-4ce2-91c2-2807c57c1c15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0b877df-cf1b-4da9-ac19-eb21a312aa3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88d4aedf-d0db-421d-961f-afc37e81f141",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dccd446-ffbe-41b5-b7b9-a9b773ee0578",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26705877-42b4-4a6e-9ad9-2f986b6553d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59ce5601-81f1-4cf2-abbb-160e312c804d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "532627b2-fe23-40c1-a058-c09ef69c984e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c22d46b-8178-48bc-9962-5f652310d715",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a817eedd-38d3-40ce-8faa-60b017cb78ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f24acd3-26af-45b5-acec-cc328fdbaff0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f3be6e4-b0ae-40fb-8156-b8f3e4d427a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1e77676-f54a-484c-bc55-62ca7703076c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e504886-3703-4982-a519-c275bf34144d",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfd65ea6-9111-410b-bc71-7151dd8e9d8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da465573-cd32-4506-a1b9-fb3c075b3bed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b25843ae-d868-414b-920f-84d51d5c5a9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5664e7eb-e2e9-4626-ae7b-15a5e7b2a282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f675a70-4ca5-4355-a0ad-08e7c4e0c5a0",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2a4d912-793f-43da-96fe-800a71fca23f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06492636-47f1-475d-a8b3-a6dafcb2ad1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da9cdb34-1b2e-43c4-b96d-c2c0650f0311",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e146be11-314e-456b-bf43-0d29b54372df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36660a90-1ca8-41d9-bb40-0b86b0db6853",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd8f00a4-1df5-4085-9360-b4e6cba4742b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b912858-56d9-49fb-a90f-4207dce79b84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43d7a3c4-d8b4-4de5-b016-ac5bbeb93512",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5703f551-f6fa-47ea-b8b0-0c39a3b24f86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e7b03f-abaa-42b2-b110-4c551b450f5c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "215e314e-f2e3-4959-acd4-1a80cbfa3d6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9b0c6d4-4819-4605-b431-96aa3c86facf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52efb6af-c3ad-4236-be00-fa5b7f74bbc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f90aec2-5196-4d3e-8808-fcd4bcaf2430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a061e7db-46a9-4e34-9327-a638be86956a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2d20249-a403-48f6-a9d7-39c81c3d3c4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3461d16-3025-4183-b0f7-93780ed08611"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e6b07fb-1ef6-405b-9d9b-1eac388f6d85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "069b98dc-97db-4feb-8754-d7b1152277bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb1467ea-b8ee-4453-9060-9d26f3ffceed",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "453e5fe8-6d01-4876-8658-6d0cc281e752",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31ef216a-1090-4511-9733-546ff422d44e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ede303c2-8ac1-4b32-bf0a-98b6a8a353d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4ca82a5-e005-4388-beb3-83473afe03ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dffc437f-16ac-4361-a532-d763f8621ccd",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e3b6719-abae-4c76-a938-bc8862ac650f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80097091-072c-4753-871a-083c0fe6eb40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c425c1e9-dbed-4729-a55b-6c7e578b53da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb3faf7e-f820-40ce-b689-8b9b7de9a3bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8e42083-1095-4b02-9870-8855e7c85a05",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeb50db8-54c4-46bf-bba0-3d97910d3e3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef384968-15d3-4b89-82ea-6e740144af9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1350cfe-7be4-48d0-9c19-4054d1c1e727",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "146c6ae9-aa68-48a3-8053-00665c730bd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ace16aad-0e52-40ce-b79f-bd9b9468d9de",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eb5060b-82f8-4548-9d9d-84164e8bd327",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a631e3a3-41d4-4984-b9cd-d9268632aecf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b9fddaf-71b1-450a-a72e-7366e0627a38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7727b5d6-3365-4fa7-9a1f-5ba99bbcf69d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35179ac0-983b-4c7e-b065-ba13d5c5d6e4",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce548fdf-e5c1-4da0-9c35-67e45b4462fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd7bdfa0-3abc-470f-b0b0-97ab96bf0b2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11398856-d3af-4c19-a75a-a00e70e62332",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a4754b9-36fd-4317-8e95-9b5f06ea81ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc5c0368-94da-4b55-90a1-327e7ae10db3",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a0e3b6b-baf8-4474-ad67-700b82cf3d31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bea390f4-41e0-4aaf-b719-041e5df2c3df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebaaed38-830c-4287-a548-1b8cf1cafa9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f25c7b1-3c96-4a03-8959-d46b3c77012d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acf7adeb-3422-431a-9cbb-69998aa264ed",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b00ab79c-7831-4e40-9b48-66bbf07c1b77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e041965-3762-4000-a0f6-2af58963dcf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c78f212-6bbd-4cfa-b33f-c0ec9caf8ca0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f46e352-d76a-44ae-8b18-97969aca989e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd124ac3-216f-48d8-9d99-e95875b5c235",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd4fb630-15a6-40e7-91c4-d4adf243a4ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4a36b71-1983-44ae-b99a-65de888cb64a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cd6857b-0148-4a72-bd7e-47d0c6470f7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9d191a6-f0ea-4296-b308-68572f4e75d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31bc6f44-2a78-4377-ba4c-b8307f6dba00",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0debcb0e-769e-435c-b904-0a0144dccb8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f7eff6c-236a-462f-bf58-79ef87f78f30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "860724ef-a648-47ea-afde-2ac2d02a9d7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aedfbdc6-b6f8-4afb-abaa-5a09c5ff7471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e36accc-d623-4df8-aa77-4e90b56a79aa",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f79caa2-6d64-40e1-bb07-cf3db5903db8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "238300a6-789a-4975-8c55-d4e23606c4f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb9725ba-26f9-425d-b3b7-903303598460",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28093530-4997-497c-8d2e-fc4fa27e796b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "807ac39b-680d-4473-975f-3c31357e0d8c",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c775fb3-3e96-4347-9f1b-ba220f625935",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4344e0da-abd5-4cb3-9a8d-cbea89c91d63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c6ce086-2c97-4bc6-88f1-4661b0e0f496",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bbeebaf-fe67-42bf-b6d6-b63ae19e8c16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b02f3ef-243f-4a88-9d64-13fde94474dc",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43bb9a51-ef88-4184-83e8-94e2713285cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d0b0cee-9e62-4933-8781-be56c2cdc77d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ba56ed8-77f7-48f5-a109-0d5fcf8fd554",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b810129a-d17d-4cd1-b464-afe353e100c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1057ff0-efab-41b4-af7b-acf968e0a62f",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5092c59-4cd0-4302-8f67-04ca5f8c13d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b38fb3bb-6087-40bb-bca8-5e40803a711d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db08ced0-618c-42c7-b6d8-6680c27ae192",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d6056cd-5260-47da-9f4a-baf3a52e515c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a340ef48-1de4-4677-b0a3-e8f6f0c77405",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00e33ad2-cf85-4dcc-8fec-447360ade7fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb984af9-1a7c-4f60-812b-aecc4e167c95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5f9eb8c-cfa5-4e0b-a04d-f6c6fa0c9602",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5468a8b7-39bc-48a9-af91-2a033e97eddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dc2e26d-1752-4a86-a529-128b296ca439",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "969e520b-dc47-4a9f-a1a1-ce1d86e2ef95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b6e0cf8-1646-4811-931e-9c344e19b966"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9a4ab8d-1717-40f1-96c0-1370f7a03126",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d282cc6-e95c-48ea-ab72-f4aeb0a545c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "550cd027-6d3d-4413-b175-8422fc422c80",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc743f92-0e14-40b6-97dd-ef4d5eef9662",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a134bca-4d38-49e4-97e3-2f2afa83a095"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4db0b1f-50cb-4b71-9586-a0a24892f429",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfacbe0e-dd5b-4a7c-ab6b-2092ea1460b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fc90779-a807-43e9-bfca-5e48fa0a111f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ccf5a22-6f87-4f50-9be8-ce4fd1f945a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17e98e47-a67d-4389-8d5e-06a936697463"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b348fdb-8b2e-480e-b265-33aa58a2ed1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d35abd8-335d-4405-81e2-2ebb481f8399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b4c5bb8-661b-4622-bd08-3294a42e8801",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "987ac563-b692-4fb8-8fd4-90c2333695b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "766f927a-2075-4084-ac2d-b6921a7db117"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a4276d5-5181-4c41-86aa-58b90d1f1db5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "302499b7-b80c-4497-bf2a-e6a3626369cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05ff585b-fd55-429e-ae26-f7473d1453ae",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0df12c3b-f031-42e3-97ff-29045d3fdf2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa12eccd-8480-4723-859b-37d778d66300"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72c0344b-dc7f-4bdd-a66b-7719f1e51d94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e66147cd-710b-494f-842e-fb07c8c63c6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ad629b0-9c9e-447a-8ea7-00e7ad7335a0",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ed50d8-1086-45fd-9969-058d336c6d09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49ffda07-ca31-4d43-b990-5e48d0662f51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d3dc615-3ac5-4a3e-afc4-b5c423364851",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59f91a0a-f6af-495b-a759-0579c3eff785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9971f88-f086-4477-9029-051cb9fced90",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6bfe301-ca53-47e0-ac5d-c632442a5746",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c580d47c-81a3-4129-984d-117f992802fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5facd35-10d6-4449-8ff9-b50fd985a0c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ee24827-5f51-4274-878e-8c4c0438f2a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2faa2d03-97a0-4f69-bd30-9943244f88bf",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73b224b0-3643-4d52-b86d-bf9ae83b6fc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b88fe7ef-ef01-4301-a19a-17a917083b64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a806b892-4177-4c7f-ac56-8a4470582152",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7d4eae1-f0a0-4924-840b-d36c297f197e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf1ffeed-15e4-4826-a9a6-3b8ec390ba50",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3635fe9-4d43-4d82-b92b-222f96730b0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab704655-69d6-4a62-aa1b-1aec45e9ee82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa571aa5-bcd6-4700-9bad-f84ded13b9bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc8ef00a-d20f-41e3-b6b4-2f474c76491f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3587d668-c56c-476f-96ee-91b95b84a7a1",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afbfe0cb-fc6b-4a18-8ff0-73145977b140",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "388bba2e-5a39-4d32-a301-3d34374c255b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96b39eca-3dcc-49a9-add0-8a81c842c070",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14615ea5-c747-461b-8b58-a10a4bfbf9a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee145fae-dfc9-4a59-9984-b8d778507054",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "315c44ae-1cf1-46b5-b0b5-4427717e342a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a35e3a2-c766-420b-888b-6f2eba75a328"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97606e1c-20ed-4224-a63a-e4ff5cf64387",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f74571e2-5d96-4bea-a0d0-0d8303eaeb55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0924a357-a855-4b33-aa10-89cc9aaa3698",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd972562-d9b3-4a67-a8bd-204fd6c7182a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "668c3a38-403f-4d0b-bdf0-2ba614a31692"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f44e574-526c-4489-afe9-b6303255f377",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0559ef0-7222-4253-872a-2176d7044b50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca537035-a80f-4023-857c-b7b31d386dc4",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b39c1261-0baf-4892-b9cf-8dd5d9a56762",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3c35551-2126-491e-a4f8-908268dfc372"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c945ea52-8004-4218-b1f8-81d6efb8b643",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bb4413d-fe95-49ed-aff9-31e1d481c606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c1fb0ec-ebbd-4a24-a7f1-96bc46a066e8",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae0c6426-da79-4142-8d48-f38a995ff224",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "300e2e5d-0e12-43d2-94f9-50b3acf69665"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f7908b4-fd9f-45b5-8116-24475cb000ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6454edb-2748-40f8-a533-4acce9478c27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebd37b99-a945-49cd-9840-1e2e871d47ee",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32d45bab-6324-43d7-8a82-2fce41611ddd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea9bdaaf-83ef-44be-a3ad-b7f3f0e92547"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f114dcca-7e33-448a-8d19-453320e02257",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f718ac4-20a4-4f92-ad3a-eb0b6c7a3a2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f025d16-05c7-435d-843c-c109a793cbef",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c9d572d-59b0-4b1d-8e66-4161d8128541",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf25e7bf-0329-4436-b662-4040b98080a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8e0aea4-0c2e-4095-9bbf-34694b0329d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47aa4853-f447-4632-8d11-23ccb2d65005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38ff08f4-0c25-4327-8133-5bf18427206b",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edc85d9b-14cd-4a65-8631-e0f610848a56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4071595-511b-4855-9b8b-978120278bb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc1e50ec-d0fa-432e-b04a-2edf92a02fcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3645b36d-d241-4ff8-83ed-007017287c72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba2b1a3a-2df0-4fea-b2b4-266b4abcc06b",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1d0ac7c-c921-4343-806c-bec9cdf2527b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4854bacc-3fe7-430a-8414-cab57db61c9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6d8742a-7466-42cd-874b-87f87c17d4eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05d07f3a-f951-44df-b4c6-132719c8b8f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a6bff6d-8597-400c-942b-5f43d193b950",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e515afc7-b7bb-4b3b-85d0-6879cf295212",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42bda0f6-cc70-45d8-9093-fef294742934"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f682ba3-db7c-4023-a669-0e2a2a9c8b41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9b44900-a095-4115-8acd-8cdb59828ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9fabf45-b78e-407b-8f21-c32212aa0c67",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2818cdf5-fc4c-4dc0-bafa-d95bf449070c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "073cf305-a530-41df-92c3-c3a40815c092"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a650874-1389-48fd-a95e-7202df8d6458",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14a87f82-c74a-4dee-9ab0-151d0e669ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c5da3e3-35c5-46ce-b8a5-2fb4adc1ab6c",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b683c9e2-e8bc-4264-9d76-9bc18327e773",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0d3a9c8-3dd3-403a-868d-04088f2459bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00cae8b8-9c64-404a-8bc3-21ee599656d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a86a30aa-79f2-424a-8f5e-3ecae012a5d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "610af91d-faec-4ecc-8e79-f580f9e240fc",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cace872d-9520-43ff-a651-fe8be28ff28d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f7a463d-907c-4196-923b-d4d80c196fa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d38431e5-e1fe-4c9b-b503-b48b00dbb6c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a455f42-4906-493a-bfa3-e6a5331af6a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c30d4ad9-bcfe-478f-9dc4-1dda781a6fb0",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05e6f3be-4787-41ed-b871-ab4436614e10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c02742c7-9f74-4e4d-b799-b66292fc3e36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bccb58ae-f3ce-4e72-a769-b1a65bb35aef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af82c267-4665-4454-a4b8-91310edbd276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c333a09-aeeb-4de7-b8b3-a7f09d8e48e8",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "597eb6e7-d311-41fe-a179-359231d41fd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c384919-ad9e-4be9-b68e-45e5cfa2cd38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2270923c-490a-471f-8baa-6cfdabf0b0c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28841f13-cd5f-4a20-8b80-eee9286a55ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c94293af-cccd-4800-948e-ef830c78975f",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b804894-7d25-4733-ae6c-9e45118d7d7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c90d5306-bd64-405b-985a-71467d80e54b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a65134e2-9995-4b95-ae77-10c8435248ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "924a4f21-56e0-4f1e-a9bb-ccf38d002052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b5575c9-d49e-499f-b307-9e60945ebfb0",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bba7a319-6b5d-4e97-a362-cf507010e58e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53404a96-755a-40f7-a3a0-332bfa76cfa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a36f107e-c6cb-48b0-973b-5bd73361249e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9a22b7a-19d1-498a-af11-b99a739b48dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9b03073-fe34-400c-bcf4-dbe1260135d9",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a1fa5f8-9065-4600-8e25-235e71e6ff67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14e3d4b4-ad0a-4631-aba7-dc7b1d65522d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a179155-a9c5-48d9-aa2c-033c21944eaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b96a80a-5f1d-496b-85b7-a473cb6f433d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31fe9b8f-49fe-4bb0-b97b-9ea10f3bdcbf",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4074ce71-22a1-4f77-891e-bb658ba68697",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b227726b-6607-4a1b-9315-fb235992c00d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bea1c97-0c0c-45b4-bab9-f04e7f60e87a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef7fe92f-1c25-4233-892b-b1c1647d2f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa3b9f98-a9db-407e-8bcf-8f2c694f6973",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a094c7d-4175-4aa1-9097-a0177fff60af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5505e3f7-728b-4d6c-9218-e7dfb122b4af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0739ddec-b2bb-480d-bb10-0a89a2df2d80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9381349-4000-4188-beaf-04169d721506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1966ad6b-d757-489d-afbe-46f41e73eb0f",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d6462f8-e135-43e6-a7f9-4c83b539fa73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4096831-b071-40dc-933b-9c925b2c8b74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d44f7e2a-ffff-489b-852e-506d48eaa864",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01dc28be-8259-4aa5-a190-823dbb7c6707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2d83683-f4db-4f2d-914a-f3fb6eb8f2b5",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35d5c96d-9229-4aa1-bcb0-043859587483",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f120e4cc-cd6f-46bb-926b-7e25644e1e21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b94bf55-4e91-4f9e-9a31-7920ef7f7ca1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be7034cb-e2c8-41e9-8839-86a6225dce3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eea4b194-cccc-4d2e-91fd-e35ead905510",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a33f88de-0765-4201-8133-dc0cff381413",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7af5178a-c939-4eee-985d-c125951992fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10e27eab-0b58-4944-9a4a-5e1630f13dda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a322b26b-f79f-41ce-8fcb-df1d5f6622c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbf56795-4efc-44e8-b0da-3b9e7f92e796",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36eaa786-5bdf-4986-87d4-c2e555a62348",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4080581-b69f-40d2-8854-7de9469f1558"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cdd1258-d815-4ee7-b4f2-a3e9d26676cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a85ef76e-0763-49b3-a704-367efb559d76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac62d14d-4915-47d6-9c7b-308b40e2bf2c",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "800911fd-a818-4166-882e-721337eaef36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15d035db-d5c1-4e76-bfd8-6cc73e3e6171"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdb4a20f-fef6-43b5-8615-36abe9bd7fb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8750c05f-4219-401b-809c-8e12d6e38af9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "203a76c2-7537-4f47-ad81-0f377c13240b",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5bd9fd4-3525-4ee1-86ae-35bbf8c07f1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31ea2e0b-6107-45c7-a3b3-af0426e19c7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e57c29c-180f-4e52-a209-9edb0e9e7b5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d4f765e-7afb-428c-a8e5-216ef4f53c9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16061c48-2ad3-42b8-93df-0b69a62b70e7",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ddff2cf-6fc2-4c3a-860b-8a465c821c59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6edb7fb3-9d0e-4fb0-b7ad-353abec5aee6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4c22c23-b625-4c23-a14a-5ddffe9df9f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e85f002b-ca26-4404-ba6c-f296d27fb673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edc069bd-abe3-4392-b88a-5add9bf4440f",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec4a037d-22b2-4afa-b626-bc8e87da7047",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "037d3cf9-b9cb-4c20-bb75-12491f39307a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66d62a93-c6a6-4c15-9e0d-1eb435a974c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ecd7b63-3534-4dcf-b82a-a5b60fbd71f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00d46369-0f41-451a-86cb-c36a6f3cfcd9",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3f824f4-6abe-4436-8730-35df041f3a8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5324436-03dd-4e55-b5c1-e0142e833799"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ae7b0e6-1d86-481b-900c-02a47207012a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "677d3e03-7bc4-4caa-bdab-101b9a11a0e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85e386f6-99ee-4095-89bb-ede6b9578b13",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5225730-77b4-4b7c-a3c3-99446e6811d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "411332f6-a3ee-457b-abe6-a220deffc0d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9daf570f-f612-4554-8567-34ee7a58eeb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81a0fdf6-db53-4f8f-b8b0-152c6b2b7afc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab072cc1-7a07-4a30-9013-eeccdbff7090",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88c2b132-9f58-405c-81f1-648ff6bccc66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fecc5223-c9c4-4ab1-a5c9-8f15947c9cec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aee7a9ff-fe31-4041-a08f-97371b4ec7de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "524d4139-e457-413d-a80a-fbada6ccaa82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c97ea91-ba70-498a-9e52-87c1dcba2c83",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94b92a86-433d-40ff-925c-18e4b422275f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3a09eed-4adc-40bc-8916-d232eabe15a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be010f54-3070-4c50-b8d9-e498f8229222",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7e54727-b87e-4b98-b54f-01b850acdbfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85af0f64-f249-4115-8e1b-0fcaeac11122",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cffc669-9026-44ee-82ee-e573baba176a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61eaa89a-d66c-4b09-84d4-fdc5e826d2e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdb38af2-68f2-448e-a797-bfeb9939d5e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60c9c1f8-a220-422a-a2ee-f4f78e325a99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "804ddf3d-145e-4795-8dfe-1f2f8025e071",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f49cf6e4-d37a-40f1-8350-4b8f523e9674",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c46e0148-51cb-46d6-b881-c9a30b5e6374"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "053ef6d1-b33d-4b6f-a9e6-fe0a1a87b015",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af4ea536-6c03-472d-be8d-0d59c6d8a980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70b8a94a-c9e2-4ced-9fc5-2af570a4cd94",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0406568-1639-46e1-80b5-edd7ae802e2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7693aa8-bd3b-439a-ab90-ca3301c99fa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6841ac5b-f4da-4ce1-a85b-7ee8da226d05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74f48c52-a4ae-4497-8e77-85b87a7c1d5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4612cb44-6bc6-4d1b-ae74-48f167e0cc6e",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6cc36f0-fd11-470f-ad9b-845ee88ac88c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0afbcb50-55f2-44a6-9c08-fc820dd4c9eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c061b52-828a-4387-83c2-0c556ac1e087",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37916e13-7b8c-44fc-95f9-ea2416f7104c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e7c22c6-88af-4af6-a29a-d1e38bdf1b71",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "878e40e2-deb2-42d2-8b0b-f5f8294264e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "329e915e-5622-4a9b-987d-9de42900c0cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36cc1bff-4edd-45e5-9ff5-85a5e4cef008",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4548e5e8-8083-4b3a-9680-2d1135c6b301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51ad95bf-b3ca-4c7d-8646-d63d2a19f97b",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46a77d00-2fd1-488e-9e8e-2aac61c93329",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d16ee144-dbb5-4bd8-bc9c-cb974ed768b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43322ef3-14e4-41ed-acda-e4388f60bd7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34a0ebd7-cff7-475e-b58b-a75160dd9834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e0ef55a-7363-4682-823c-6d3fd8671447",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ad671d7-9ee8-4a70-a70f-a90fcc2ba9d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "616e6846-c792-4c45-baff-41d1d74368fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77c05fd0-8541-4b54-aa07-7beb5131487c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ee9d4a5-6921-4291-a645-fd4a585389d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a9cb1ef-09ed-42b7-a9c0-ff8cbdf319d6",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e43adea5-d0dc-4d09-9550-2cad07c24a59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9546f9b1-b864-4c00-93f8-0ba64a35f362"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16cf9ad9-953b-4db5-be08-82f6b02282cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0328575-cd2a-4215-a0f1-94a6d5fe8860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da585a69-6fc1-437c-9541-b79fb92559d5",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "987cd298-5716-49d1-a450-00bfaa4c6ecb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c79e9643-51d3-483a-9213-b83c615ef73b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ffb3dee-b34b-46b4-8703-e98abd224024",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65a5669f-eb53-4938-b0a5-cbd4d774fa7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae384a8d-0214-4290-b429-cfdb1d2265a1",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f399f09-0291-4aa5-9ccd-18796763a3c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb6eba2e-1258-40b7-ac6d-c78666bdc27e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c084b6-8d7b-4162-905a-9d802c3c9be2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beb5611e-c10b-4106-b7ce-366f6bacd9b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2e46e39-5118-442f-8202-3bb5913a1155",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c353c49e-4ac9-480b-a64f-3772c346cd12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "148f14ce-1ebf-4332-8fa3-c11b4472725f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "446aae42-5055-4499-80a0-9f497a4c80d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f59933dc-385d-4aae-a987-3a0172282961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f1c26cf-3ab0-4cda-8d12-3abd11f83350",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef2b17f7-c19b-4996-a041-95e9936f2787",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e9ecc99-b10e-4605-82e8-c6549a628cc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64a75147-758e-46f1-a471-a7569c893986",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c896e68e-5ae5-4248-a17a-9eb9108b6aca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "549b1372-96b0-4cd6-8923-2a8b6dc49b25",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bf86be5-295c-415c-a838-0e69be33e775",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f9ee1c1-edf7-4230-8dc5-37d695067c54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5198784d-be0a-41a7-9738-66ac9bec03cc",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad9bed9a-248d-4259-b94a-58b01ae59ba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96eacb0c-4676-433e-a611-e70014ff3569",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c96ea6d8-12c4-4e63-be3c-0fe4c221f0a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6d84b30-556b-413e-a910-d56c743c2a47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97314150-56a4-42bf-a84f-c4b0f2fad1de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bcf7e3b-323e-443c-a493-407ebb3474ae"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9125f7bc-fc91-4008-9e2c-cfbda59d15b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5ff045bc-22bc-4724-8795-9fdaf0a9a145"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "09b1b703-5ac7-4ae3-a589-fccb3f597402",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7b35a3ee-8691-4420-9165-199895080614"
                    }
                  }
                ]
              },
              {
                "id": "c522d615-2e3f-4fb5-b5ba-1f482be60b4d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5411288e-e80d-4b4f-8b71-9e98c41bb4d8",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2045e786-1a6a-48a8-ba6d-6c9c7db3ef87",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c184561e-3359-47c7-b676-a3b82b5b794e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc8e625e-af7d-467d-9b1b-ff7ba5e06b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "769b4e76-de72-4fee-8e73-b8ef3c5e900c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7517272e-4710-48fb-b621-4cd90051599d",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cca70fa5-6037-4dee-966d-a54fb508ea81",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7510f20d-1f9f-4d61-a415-fc3cf107c43e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da4038ee-176c-492c-bf8e-3ea8213d80d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a6d4c545-a157-443f-8e2f-e57c72e97ffd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "553b85f5-1ec9-4398-bf38-a457613ed2e9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "58627e4d-3e20-4b38-ac0e-17078a7468ea"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f26bfbf0-1e6e-4e56-bd80-27f4eb350623",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "348dbc88-8be0-4c79-b7ab-31d407f1b4e5"
                    }
                  }
                ]
              },
              {
                "id": "dbda433c-38a6-4126-87c0-38db0b4da350",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "2153c0e4-68de-4f59-bd49-98d643e93f31",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eb9d6a4-81ac-4093-80c7-e24794e56aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "67da6643-88ff-4c4f-b326-a74b617ab046"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87952adb-c1d4-4eeb-9635-bb00e2a1b4e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c76cec6c-3a7b-430b-838b-ce68291b3d95"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "315535fc-1424-42ea-b58b-0fc8bc5e95ac",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3a40d83c-ef5a-4ca2-8aa6-c1ad01f6c861",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c2fa07e9-32f2-4e2d-a823-48be6ee8763d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6fe5063c-2172-4cdf-a56d-51f7341bd6c7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3532933e-ad8d-42c7-b46d-01c23f9002f8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0e97e68d-ebd6-40fa-9ecb-b0b0bbc8584a"
                    }
                  }
                ]
              },
              {
                "id": "f57057dc-248f-4cd3-ac55-08465e0fc181",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d160987-0967-45a9-a9e3-e8e5092ef60e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "dc02792c-e001-4e14-99ae-815fdae40752"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41224115-bb73-40cd-b1ad-281643aa6a7b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b5cb8ed9-3471-4dff-8b5d-bfb94ddab4ff"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9abb9331-5c77-410c-b336-a2ab0c11a5ba",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "c39b8b7d-7b84-4498-a2c5-08929c0d1d1d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5febf4a5-1f1b-487b-9aa8-25353a99c2a0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ffbc587e-7665-44b3-92d7-9355f8231ddc"
            }
          }
        ]
      },
      {
        "id": "ad379039-b393-488b-95b7-8aeb9b898469",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "e44a9402-34d4-40c4-ae34-846fe988ad6c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f57f6914-b33c-4f3c-a962-247aef4d6c65",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a926b0c9-5f0d-416b-8a43-cb95b3aab679",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0185c536-9265-4b26-b324-abc0ebe30beb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "bc096d39-2f96-4763-be4e-7ed6e117e17e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88dc597f-df35-4942-88fe-7cece57c0154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "15141a71-596e-43c3-971d-22a7e38cc429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1524dd4-cc6d-4282-8710-b11f26ac38e0",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "691e43b1-c54e-44b9-8846-5557bbd4dee6",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "abfc74ee-819e-4a1a-8fbe-c021ef3c2439"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c010331-5f7d-42e1-9533-d3e932e1eed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "147db550-37cb-4d61-a986-0899f538f77d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "00fd172e-4627-4e1b-b786-da729da77bd8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "14b48d60-a971-40cc-aa85-1abdcd09de7f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "794da260-642d-49d8-a22d-27d0d66f40a0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f06fa931-2d18-45ab-b984-f72f71870faa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2fdc3bf3-e37e-4427-9dfd-842a7d6219a6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "4f1430d7-208b-415c-927f-7dcef7fbd288"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "acdb7c80-af61-46e3-9480-3ef4971284ca",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "66f0da01-da8e-4520-b8db-081aa67268a1"
            }
          }
        ]
      },
      {
        "id": "1bcbad03-b2d1-4dbd-8961-684751963b50",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "22198797-538c-4856-ac29-d82938df5f55",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0b31d48a-2e3a-4565-ad2c-37c7f11d3967",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "22ce56a8-3ba3-4b70-ac30-3aaab333cabb",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be3eb9ff-bbf1-4bca-98db-66c391b51035",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2ecb9d09-ba8c-4207-8e84-3187f75a39ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39579ea5-5a4a-4535-af9d-b1e60273b94f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "77b6bdec-7c58-4a15-b2e0-89d2d7e2435a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a179410-4c17-4f9f-afea-172e3c3e05ec",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba57895a-85a8-4dda-adaa-5576cb2a23f8",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "791b343c-b658-423a-a04f-df6404405dfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d114db1a-7199-461c-8b75-676a1b7bb2f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c9e92049-ffd3-4500-a72e-8de895893aea"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bb4b3367-1873-4c2f-a79a-a95669cc733d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7162055c-9ee8-4dea-91c3-19b2912f6e41"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3e3d0278-df4b-413b-b758-7ad4f4e76070",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ec492d51-c214-4840-aad3-035e1c797846"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7ece5fbd-1b48-4d78-a114-33aa67276785",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "07c4d320-1208-4f7a-affe-4db294ac5c8f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "775acd4b-7758-45ee-9dda-c179ab82e8bd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6f07f96b-eabc-4ef1-b394-40b3ce71eb39"
            }
          }
        ]
      },
      {
        "id": "f9dbe11b-fc25-4dee-9515-62cf76762b2f",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "d0518191-827a-4860-9822-eaf722ba2e10",
            "name": "Negative Testing",
            "item": [
              {
                "id": "01ec8aa3-ead5-4ff5-b73e-552335b84565",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "db42df2e-c620-4a63-9454-5fbee6995732",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc9fc430-d3e3-4268-8bb0-e398add23d39",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "99bca5f0-101d-43e0-ad25-f438fcc9b2f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc145fe-4942-443b-a3ce-867952e8b82d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5be5f73f-ca60-4c2d-848d-8bbf3ef7725e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d941b4d1-662c-4ec0-8ef2-1dc64599f118",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a19df9eb-af3e-4c36-bd1a-bd2b6233e3b0",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "48f80c96-5be3-471a-bf3a-d7745dc8853a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3c0376d-3732-4fcf-bc3a-82a049e0c006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a5af8cf4-5cc0-44ec-8028-3ad40228390c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f2b37eeb-34a3-4e65-8aa1-abca9b1b2609",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c9600c5d-0f93-4607-a1ec-94ac7350752e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7dababdb-e1b6-4a6e-b729-dd62c3b967b3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b3aedb0-e799-4e8a-ac0f-5f4bf6228aee"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f0fada5a-15b5-41d2-b659-2912f1a248a9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "09ecc907-5dec-4ba5-9bea-a89c7aa70ad2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "773f6da3-6026-4f34-a7e3-bfe0485a92b5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "55b32bfd-3646-415c-a824-dd615648cbbc"
            }
          }
        ]
      },
      {
        "id": "810b1627-7391-4895-980f-754620f2b080",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a2f9283f-a5e8-42e7-9a3e-d29cd23e5b61",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7d613794-4a26-4d5c-978d-d8b907a1c850",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "723b88ad-1cea-4784-93bd-9578d16134d6",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6837d633-518e-49f9-8744-100a50757b19",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f0b61f46-f3b0-475a-8db7-e4dd572e0c95",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 72.05384615384615,
      "responseMin": 8,
      "responseMax": 359,
      "responseSd": 32.42821932027755,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1680654699234,
      "completed": 1680654730488
    },
    "executions": [
      {
        "id": "cfd8ce15-62ee-476a-94c2-22abbd114739",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "bb300641-8d84-4efb-aca6-3e303fe49e2c",
          "httpRequestId": "e465ee6a-02f7-406b-a5c4-b0866d8c40f1"
        },
        "item": {
          "id": "cfd8ce15-62ee-476a-94c2-22abbd114739",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "6b0c9745-ede5-4bbf-b4bf-62a8fde591b3",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 0
        }
      },
      {
        "id": "8ab19262-b40b-4d02-8218-8c80dd460954",
        "cursor": {
          "ref": "b4da4fae-a6a8-4d34-b5a1-e91765687590",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "c84601f1-49f3-477b-b003-97401963504a"
        },
        "item": {
          "id": "8ab19262-b40b-4d02-8218-8c80dd460954",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "f5249809-ea30-4d5f-9461-577a4314c641",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "078b6574-bffa-49bc-aeca-4551a3106c9f",
        "cursor": {
          "ref": "de42f8bd-9ce3-4f36-b33c-20957ea89755",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "75750f27-bf56-4335-8efd-aa35e654beb0"
        },
        "item": {
          "id": "078b6574-bffa-49bc-aeca-4551a3106c9f",
          "name": "did_json"
        },
        "response": {
          "id": "1148840b-32f5-4319-b34a-6d345ea8dda5",
          "status": "OK",
          "code": 200,
          "responseTime": 359,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95889ca9-cf04-4ecd-a8df-d267c882b0fb",
        "cursor": {
          "ref": "c57f5bd4-f647-40b9-bbdf-d1e729e634a8",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2b84a928-ff86-4968-88d6-cee35eac55a8"
        },
        "item": {
          "id": "95889ca9-cf04-4ecd-a8df-d267c882b0fb",
          "name": "did:invalid"
        },
        "response": {
          "id": "423aac4e-e673-4942-96f4-1b3471a42df0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95889ca9-cf04-4ecd-a8df-d267c882b0fb",
        "cursor": {
          "ref": "c57f5bd4-f647-40b9-bbdf-d1e729e634a8",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2b84a928-ff86-4968-88d6-cee35eac55a8"
        },
        "item": {
          "id": "95889ca9-cf04-4ecd-a8df-d267c882b0fb",
          "name": "did:invalid"
        },
        "response": {
          "id": "423aac4e-e673-4942-96f4-1b3471a42df0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5361fcd-f313-4fc8-82d0-5ef62db21efb",
        "cursor": {
          "ref": "1e3f2ba3-d4fc-40ef-8d8f-e3625587f29a",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b59aebc3-3163-4c00-aae5-916205a453ed"
        },
        "item": {
          "id": "c5361fcd-f313-4fc8-82d0-5ef62db21efb",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "c229f31e-b3e0-4bf4-aba9-56afadcd5192",
          "status": "Not Found",
          "code": 404,
          "responseTime": 179,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50691099-83f3-4d15-8f6f-6b7878aff69d",
        "cursor": {
          "ref": "1bc7d02c-0ba9-45dd-90e2-cc8041cf8672",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "a4a48a59-ca97-481b-9449-0c6c468e1bc0"
        },
        "item": {
          "id": "50691099-83f3-4d15-8f6f-6b7878aff69d",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "9143bdeb-aa57-4d77-8861-e84b0f8c8f2b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 67,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d25b26a4-9fab-404f-8e0a-773a5746970c",
        "cursor": {
          "ref": "e44f9d0a-89eb-493f-81fb-76ca54ed7eb4",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "8504b198-c51f-426a-a021-9d6d020c5d94"
        },
        "item": {
          "id": "d25b26a4-9fab-404f-8e0a-773a5746970c",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "df2251f9-202e-4eeb-a900-f3d14a800e19",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d748a74-494d-4053-a506-1c8b267ac76b",
        "cursor": {
          "ref": "aeee9841-c5ed-4bef-ba1a-87be210ac753",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "77272c46-77e1-4491-a9bc-740e5bf42b67"
        },
        "item": {
          "id": "5d748a74-494d-4053-a506-1c8b267ac76b",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "888bcf00-ad38-4feb-bca9-3b6e8790dd69",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 65,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d748a74-494d-4053-a506-1c8b267ac76b",
        "cursor": {
          "ref": "aeee9841-c5ed-4bef-ba1a-87be210ac753",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "77272c46-77e1-4491-a9bc-740e5bf42b67"
        },
        "item": {
          "id": "5d748a74-494d-4053-a506-1c8b267ac76b",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "888bcf00-ad38-4feb-bca9-3b6e8790dd69",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 65,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81827476-073c-4f65-b504-3175509c4cfe",
        "cursor": {
          "ref": "e50297dc-3481-4439-af65-aceca3cb89e1",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "9c581bbc-5f9e-44ed-953f-c1a0d89dbcb0"
        },
        "item": {
          "id": "81827476-073c-4f65-b504-3175509c4cfe",
          "name": "identifiers"
        },
        "response": {
          "id": "b2d1e4a7-0e1e-4bfa-bb3b-2564f9504fc8",
          "status": "OK",
          "code": 200,
          "responseTime": 214,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaaae089-352a-4d9e-92c4-7d54602f1f96",
        "cursor": {
          "ref": "46aaff79-2a01-4c52-9cde-3602e4687131",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "13f12e1c-e069-45bf-99fd-08f4fe616807"
        },
        "item": {
          "id": "aaaae089-352a-4d9e-92c4-7d54602f1f96",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "e27927b1-9ffc-4a64-a17e-dd04eb1c6b69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaaae089-352a-4d9e-92c4-7d54602f1f96",
        "cursor": {
          "ref": "46aaff79-2a01-4c52-9cde-3602e4687131",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "13f12e1c-e069-45bf-99fd-08f4fe616807"
        },
        "item": {
          "id": "aaaae089-352a-4d9e-92c4-7d54602f1f96",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "e27927b1-9ffc-4a64-a17e-dd04eb1c6b69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b43cbc54-3728-49b1-9e88-88013b8c4fb7",
        "cursor": {
          "ref": "2e2efe7c-417b-4e5a-ae1f-dfc0c96231ee",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "83ba3b40-58bf-4b14-92f7-e42e22c34d93"
        },
        "item": {
          "id": "b43cbc54-3728-49b1-9e88-88013b8c4fb7",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "d970de05-20da-4341-a910-a8ab54a180de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72863c5d-3931-43db-aab7-bb26de579c71",
        "cursor": {
          "ref": "389da020-9c86-44a7-b564-d7003316c532",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "5d2a0400-cd9f-41f3-95a9-f6927801cfd8"
        },
        "item": {
          "id": "72863c5d-3931-43db-aab7-bb26de579c71",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "52d707d3-dc2a-4d17-8fb8-9fe4b5ab7c41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "671f3f98-6049-48fc-b93b-3f5734c5c4d6",
        "cursor": {
          "ref": "269619b3-968f-4c11-8389-00c8532c5ff7",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "2d5d10b5-806d-47c7-a6ab-69c227983a0f"
        },
        "item": {
          "id": "671f3f98-6049-48fc-b93b-3f5734c5c4d6",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "cacd3e0e-edc2-4b86-9297-d9758a8cd476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9272ca13-5e8a-419a-830b-b02ca33cfa7e",
        "cursor": {
          "ref": "34b6e28a-cf12-4547-b07c-d2f72e51638b",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "6862a35b-9f41-47d6-890d-78381a0c3df6"
        },
        "item": {
          "id": "9272ca13-5e8a-419a-830b-b02ca33cfa7e",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "a8e4ed3c-c6bc-47c4-a310-6208faed8b22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "146db4d0-7a04-45a9-ba2c-f05e56865287",
        "cursor": {
          "ref": "d00b59dc-f4b4-4d3a-9e23-42a3d83f3d6c",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "ece42b40-20b7-4518-9376-0e0de1522f2a"
        },
        "item": {
          "id": "146db4d0-7a04-45a9-ba2c-f05e56865287",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "b9b39195-c3b5-4db9-8be4-afd3cb29581c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "366ee070-e224-4ee2-8498-a851bdea657e",
        "cursor": {
          "ref": "e5ef4221-41e6-4775-a7a9-117a8588e1ab",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "a70c48e0-1577-436a-b22f-bb6c80eb988c"
        },
        "item": {
          "id": "366ee070-e224-4ee2-8498-a851bdea657e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "2c3d297b-035a-46c0-9796-5ce05c029153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00570496-5337-479d-8fbd-ea1c6dc24809",
        "cursor": {
          "ref": "2ee3b220-0870-401b-9b36-eec7b204f0f2",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "641b3bb6-e041-4e53-b4ef-8ab8b83af237"
        },
        "item": {
          "id": "00570496-5337-479d-8fbd-ea1c6dc24809",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "05133d3d-f442-45c5-819e-6c86ca06d392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d96dd33c-32c1-4e15-9e3b-242c6cbca89c",
        "cursor": {
          "ref": "1fa0c8cf-e370-48d8-8925-62053bfa3670",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "0b7f8aca-624c-439a-aa0f-6b249dd80025"
        },
        "item": {
          "id": "d96dd33c-32c1-4e15-9e3b-242c6cbca89c",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "bfc6769c-da4d-49c7-bcd5-ab766bded1e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b37215a4-0640-43c9-933a-a0b2e4342358",
        "cursor": {
          "ref": "36e1a257-bfcf-479c-addf-c66bd377c18a",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "0410a08e-59af-4ab7-8908-79c22a0ae3b5"
        },
        "item": {
          "id": "b37215a4-0640-43c9-933a-a0b2e4342358",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "145e2e24-339c-4004-ab80-20e9ab1e9e82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edf1df0d-c15a-43e5-bed3-bb79a78acf17",
        "cursor": {
          "ref": "e0640f6a-f738-4d0a-838e-f6df1121d0fc",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "4753c598-aa06-4a25-b4d0-044af791c0cc"
        },
        "item": {
          "id": "edf1df0d-c15a-43e5-bed3-bb79a78acf17",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "ada5bde3-9981-42aa-9f57-13f424eebfb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afba3a60-8b74-4851-91e6-1c98c2221059",
        "cursor": {
          "ref": "4e65b13b-e97e-4629-bdb8-ba8b16608f6f",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "cd2bdc45-3bdd-48c4-b839-9c754edb8225"
        },
        "item": {
          "id": "afba3a60-8b74-4851-91e6-1c98c2221059",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a6088791-1706-42b5-82cb-d7b403185b39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02228cb3-0e54-43de-9153-ad7659464ad8",
        "cursor": {
          "ref": "e8ff6bfd-3c60-4b84-85fd-7e4c18fac47d",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "60106c89-702d-4410-9e56-2523d75a388d"
        },
        "item": {
          "id": "02228cb3-0e54-43de-9153-ad7659464ad8",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "375ee28a-47f4-4f13-a87b-49ae2085529b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcf36687-67ae-4a17-90d6-9a0037a2897c",
        "cursor": {
          "ref": "2d6674ef-945f-4a30-bf69-3760faf71471",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "78cf1af1-a806-4d1b-9dcc-075a5dd60296"
        },
        "item": {
          "id": "fcf36687-67ae-4a17-90d6-9a0037a2897c",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "7528e4c3-f4f6-4809-86e7-da30c569da2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2f2ed16-6530-43bd-a500-c20cc569e13d",
        "cursor": {
          "ref": "d1e4024f-78ce-41b8-a9ad-8cd3718bd670",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "37c87e0b-9b05-47be-9fd4-dd62779506ae"
        },
        "item": {
          "id": "f2f2ed16-6530-43bd-a500-c20cc569e13d",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "29e4c9dc-369e-4a83-bdc4-d31d1f098cfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbe13db0-0526-485f-a73c-501ef8a16bbf",
        "cursor": {
          "ref": "8ed43582-2a9f-4ae9-9b20-599bbcdb4116",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "4c7d293c-5636-429f-a8ae-6686a1a8e484"
        },
        "item": {
          "id": "fbe13db0-0526-485f-a73c-501ef8a16bbf",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "fd13c628-2f39-49d4-b002-33a8758cd9a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "849e439a-e366-40ed-930d-9c60774dca39",
        "cursor": {
          "ref": "62d2dd97-1d00-4294-9a77-dd4395d9e330",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "94637567-6ccb-4616-8aba-575824e65149"
        },
        "item": {
          "id": "849e439a-e366-40ed-930d-9c60774dca39",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "ef7d59fc-8214-4c7f-b89a-1ef1b982638d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eafedc55-9b9c-4426-a58a-635b600e43f8",
        "cursor": {
          "ref": "faedce8b-d338-4154-900c-3d9dce91f905",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "0582e8c3-482f-467c-bf03-68182781e0ed"
        },
        "item": {
          "id": "eafedc55-9b9c-4426-a58a-635b600e43f8",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "82ecf78f-81f2-4a92-935f-7f8b0a0c293d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a759621c-3c32-481c-af0f-81f023939711",
        "cursor": {
          "ref": "51d63205-8cbb-4d16-9be5-328f46c23db1",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "700e6314-5827-4003-a603-66a4762d6f01"
        },
        "item": {
          "id": "a759621c-3c32-481c-af0f-81f023939711",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "a7eaef8c-4ad1-449b-8ffc-10fbc6fb2c5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acac6d46-42ba-4619-b8dd-c64e8459396a",
        "cursor": {
          "ref": "bb54e19b-60cb-4247-9ac9-2a33d3b1d662",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "42b45d89-3dd7-483d-9952-0e2b06b16a92"
        },
        "item": {
          "id": "acac6d46-42ba-4619-b8dd-c64e8459396a",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "809d59b2-c9c6-4767-aba1-6cadadb5af67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd5b1b21-6608-45ac-98f3-e04300b6bd4e",
        "cursor": {
          "ref": "ee064bfc-05e4-4de0-846a-f62aebc27b5e",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "14fd5769-8d64-4844-8617-8b6f0239988a"
        },
        "item": {
          "id": "fd5b1b21-6608-45ac-98f3-e04300b6bd4e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "c86e68e3-9c9c-4d8a-a174-04c10655a858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e02fd2aa-aadd-42d9-bd2a-bb33b89e9dad",
        "cursor": {
          "ref": "8a73cc23-3afe-4ea5-9ba2-a01ce962149c",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "9fe641e2-3cef-42da-8aab-e267f900fde7"
        },
        "item": {
          "id": "e02fd2aa-aadd-42d9-bd2a-bb33b89e9dad",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "89cb20cd-38de-4576-b4f1-3fe65372bb54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd68c69d-6b5a-4e6a-98cf-89b121c0934b",
        "cursor": {
          "ref": "7d416632-8d0f-4b47-a293-f99b52ce3cc0",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "c04d7c6b-cb87-4356-9bdf-4fdd41ddde2b"
        },
        "item": {
          "id": "cd68c69d-6b5a-4e6a-98cf-89b121c0934b",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "720e1281-0452-4d84-997a-f4d51b15bf4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fee12c5-48a1-4ca5-9b5e-9266c7a51185",
        "cursor": {
          "ref": "f5066dda-e26d-45f8-8a96-75572c92c095",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "476f241c-0812-4f7e-bb26-95b2974c750a"
        },
        "item": {
          "id": "1fee12c5-48a1-4ca5-9b5e-9266c7a51185",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "b64896f2-27bd-432c-9508-525e427e92fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a493bd35-ea08-42cf-8d01-bef56ed1ecbe",
        "cursor": {
          "ref": "a515e29d-ce76-48ce-82ee-918e8e6c088e",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "5b87c065-8f7e-4c78-b2cc-a82254c77ab1"
        },
        "item": {
          "id": "a493bd35-ea08-42cf-8d01-bef56ed1ecbe",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "8a2a9e3c-5934-4e8a-a91e-aee0ec480271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d9ab920-eca6-4aa7-b71b-eccaa902a277",
        "cursor": {
          "ref": "3467c25f-3025-4526-969f-64adc04e0167",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "efadd17e-9aa4-4266-8c38-b0744d08869c"
        },
        "item": {
          "id": "1d9ab920-eca6-4aa7-b71b-eccaa902a277",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "e80b45cf-88dc-46e5-aa00-e64fc000356d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdf1eef9-0d6a-40d0-8b28-7b8d53345018",
        "cursor": {
          "ref": "71015620-6e5a-4e15-8933-e7cce0f34db0",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "bb7ecd04-4b27-4c23-8d3d-29463843c310"
        },
        "item": {
          "id": "bdf1eef9-0d6a-40d0-8b28-7b8d53345018",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f22881d8-2913-418f-a396-d7cef61806f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb3e0c8f-fe44-4018-ac8f-404b2b0dddf8",
        "cursor": {
          "ref": "de451f76-5e58-40e7-9ee2-c8644eb2f823",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "47cca02c-e083-420d-b357-22c59f6a6d57"
        },
        "item": {
          "id": "fb3e0c8f-fe44-4018-ac8f-404b2b0dddf8",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "3e02d0ed-f3ae-43fc-bf58-3b64bb7cdb6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef779fb-bc83-4943-98bc-bd2d3d0dfe17",
        "cursor": {
          "ref": "a1c24333-157a-407c-96b8-3b45612c6917",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "ba8f37c0-6749-4a8b-997b-f688a44675aa"
        },
        "item": {
          "id": "5ef779fb-bc83-4943-98bc-bd2d3d0dfe17",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "edc7d2b8-7af8-4d96-8a66-4e3be16565cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23ac71da-c0d0-4e49-9ea7-e96fcca5d1d1",
        "cursor": {
          "ref": "09f589af-ebc3-47c9-be4d-cb20f6efefe0",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f8864a24-af7c-4581-8772-02dcafb3b794"
        },
        "item": {
          "id": "23ac71da-c0d0-4e49-9ea7-e96fcca5d1d1",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "b0d3eccd-b54e-495f-8711-e8e97a6eca59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab2fe637-0a17-41da-9679-54ae0fa77e80",
        "cursor": {
          "ref": "549205a7-a72b-4885-901c-7cca1646d772",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "bb392259-6d96-4551-9401-75ac5f5b7eae"
        },
        "item": {
          "id": "ab2fe637-0a17-41da-9679-54ae0fa77e80",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "b34e8546-7e14-4a8a-8138-3abb8306f798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec31dbc-2fca-4442-a3bb-7d7d6a111d1b",
        "cursor": {
          "ref": "3ddd9b1f-074d-420d-a33f-36a864d07648",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "74a9700e-a4d3-4c76-b459-ab5874916780"
        },
        "item": {
          "id": "8ec31dbc-2fca-4442-a3bb-7d7d6a111d1b",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "48806cef-ad62-4e3e-a376-b7361bdfe448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48c27218-96be-4f1e-b284-2b9c77f7ae1a",
        "cursor": {
          "ref": "0c5fe911-c68d-4260-a6de-672f45137d7e",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "d9e32e18-aa57-461d-877f-2a7933d8b68b"
        },
        "item": {
          "id": "48c27218-96be-4f1e-b284-2b9c77f7ae1a",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "3e078872-dbc1-447d-b4ce-36c0a75e69e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e51c9f28-ee87-48df-87b9-d189ec5d96ad",
        "cursor": {
          "ref": "dac81f71-fd6f-4af7-8249-e5be32c62c89",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "398cd35d-5820-4f6d-b2dd-849946797f71"
        },
        "item": {
          "id": "e51c9f28-ee87-48df-87b9-d189ec5d96ad",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "da5360f5-88f2-4a15-83e9-faa4be27f6f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "886c226d-1871-4b56-9eba-f363d483eb66",
        "cursor": {
          "ref": "36aa676b-2cf3-4639-9d13-b6c75eeb7d7e",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "5cdeaed3-b9c7-4752-b462-f68f3c43afe1"
        },
        "item": {
          "id": "886c226d-1871-4b56-9eba-f363d483eb66",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "b95159f0-32d5-4a4d-a8b8-3b50ada5580b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c58012e-7fc0-41ba-b527-310ff00d2c37",
        "cursor": {
          "ref": "13b3634a-4bac-4e52-b1b9-0261b5eeff27",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "cc7c5e3d-7533-436f-ae57-8606c912f3c4"
        },
        "item": {
          "id": "5c58012e-7fc0-41ba-b527-310ff00d2c37",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "a92951b1-3d53-4e08-814d-40095ed16051",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 73,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e06de1a-12a8-46ce-8d33-9f0e650dce96",
        "cursor": {
          "ref": "a6dabe8a-ed2f-464a-8f36-79b377b63778",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "1da24bd4-399e-452f-beb9-c408b40f15a7"
        },
        "item": {
          "id": "7e06de1a-12a8-46ce-8d33-9f0e650dce96",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "0ca95591-0abb-458c-a1ee-2dcdd09e512b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e0d93eb-0ad7-435a-a91d-29fc75325782",
        "cursor": {
          "ref": "8c9602bb-352c-460d-b95a-77d1150b8708",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "f85a1821-473a-4fe7-bef4-51bb5495af96"
        },
        "item": {
          "id": "6e0d93eb-0ad7-435a-a91d-29fc75325782",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "1fe30f0e-dd54-4813-b92b-76d6356507a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "107e68f2-cd38-4216-86bb-63f93a3c4846",
        "cursor": {
          "ref": "e4ca86b3-e875-42cc-a744-15f8054d0654",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "9c73d21b-7c55-4c40-a508-28ea233ba22c"
        },
        "item": {
          "id": "107e68f2-cd38-4216-86bb-63f93a3c4846",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "ee4fc4bc-46c0-41e2-bf0f-f61000a12dd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df0ba683-5a5e-46ca-945d-bd206e06cce7",
        "cursor": {
          "ref": "1d8559b6-ab65-4686-8c9a-65cd09381bb0",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "10176574-83cc-4779-beca-6717060f0338"
        },
        "item": {
          "id": "df0ba683-5a5e-46ca-945d-bd206e06cce7",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "1248c914-6015-48b5-9431-dc2bbadf43c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20c765ab-f669-4ae4-bbe9-a9eed56da4d5",
        "cursor": {
          "ref": "98e4cdeb-2727-4106-bffa-100d66df5918",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "ed4dea12-18dd-4807-bad6-8a7f24fb18f2"
        },
        "item": {
          "id": "20c765ab-f669-4ae4-bbe9-a9eed56da4d5",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "15380799-c219-4f5f-bc4a-3089164aeb03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3325dbb7-6c12-48e3-b6ab-730ac6f8cdb4",
        "cursor": {
          "ref": "b321cd68-7009-417a-b25f-b3eba4ba56f2",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "5fff274c-6354-4cab-9f8d-c70f0227dbf2"
        },
        "item": {
          "id": "3325dbb7-6c12-48e3-b6ab-730ac6f8cdb4",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "51b44326-5084-4f32-ba48-b810d39fea21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fa4ffff-0d08-4f54-a199-c3d4ea46bb06",
        "cursor": {
          "ref": "3a8640a1-a46e-446a-a824-ce465fee4296",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "92325dcc-da37-4059-8ee1-812a847ac0b8"
        },
        "item": {
          "id": "3fa4ffff-0d08-4f54-a199-c3d4ea46bb06",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "0962c674-4f7e-4cd4-a111-1992c0c37c66",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 73,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b99c4c4-855e-4c05-afb9-11fd545d627e",
        "cursor": {
          "ref": "87ad6483-4546-4365-bdf9-4eb0a5b2daf4",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "f8f02cff-eca3-4c07-bab3-f72a25d03b74"
        },
        "item": {
          "id": "5b99c4c4-855e-4c05-afb9-11fd545d627e",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "1dfc47a0-ad9f-4a52-96ae-5a2f0c158f8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "808059b1-912d-4454-869b-92ca80fbdc36",
        "cursor": {
          "ref": "ae1c0cbc-f349-4ffc-9ec7-aa5a458eb30d",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "bd6eef63-88e7-44e1-a318-c5e5a62ab31d"
        },
        "item": {
          "id": "808059b1-912d-4454-869b-92ca80fbdc36",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "ff53f6c9-87dc-4344-8477-ca3d1df17702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07fa259b-e1cd-4f7d-a87e-72b373328ed9",
        "cursor": {
          "ref": "90ea5d9b-7a5b-4b8d-b9d8-edfdf09d04f2",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "851a50d8-da3d-4c36-9206-2e11b2aa8718"
        },
        "item": {
          "id": "07fa259b-e1cd-4f7d-a87e-72b373328ed9",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "d5b81d9f-aae0-443d-a102-0296ea0c866b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60a69e6a-e975-4150-9355-0cd1d5ce1377",
        "cursor": {
          "ref": "6bb950d3-1809-492c-adc0-5ac22acf3756",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "aca8ff74-28b1-4d1d-bcad-ce6ed644f80a"
        },
        "item": {
          "id": "60a69e6a-e975-4150-9355-0cd1d5ce1377",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "d9051a50-74f4-4ea7-b98e-b9422353af76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a299fbc-af5b-4c06-87ef-bc37baca183f",
        "cursor": {
          "ref": "b25f12a2-5343-4a23-83fb-f09c7911deb9",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "c2575c41-b2a6-4ed1-8305-2dc9b76ab0d3"
        },
        "item": {
          "id": "1a299fbc-af5b-4c06-87ef-bc37baca183f",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "fb98a4d4-bcab-49bf-b258-62be9287b219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20f149d3-b229-48e5-97a5-d3214378937b",
        "cursor": {
          "ref": "1400336b-3407-43a1-b671-4aa8c7891ba9",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "5cd73bc3-c380-493f-90d2-f583c1a5c75d"
        },
        "item": {
          "id": "20f149d3-b229-48e5-97a5-d3214378937b",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "e39917ef-1620-4811-b631-4bd8c5b74d5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a056dee-e02e-40bf-a178-1a4a16adda7b",
        "cursor": {
          "ref": "24c75283-596d-4f0d-b11b-69e2dfa3af01",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "32b62a71-dc74-4bf1-884e-aee9290aa80c"
        },
        "item": {
          "id": "9a056dee-e02e-40bf-a178-1a4a16adda7b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "a7e7a122-32f9-4d4e-93b4-0b99da48873d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f36ff80-beb6-4efd-a3b6-6c5b4224dd20",
        "cursor": {
          "ref": "5b15bb99-93e7-4d50-b594-bc32283f606e",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "d5d547e7-1795-438b-b468-5832670fb9c8"
        },
        "item": {
          "id": "4f36ff80-beb6-4efd-a3b6-6c5b4224dd20",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "522b37b3-1e08-47fb-9299-a1c78c4f6fbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bace30be-6a24-40aa-877e-c46ee6c14d77",
        "cursor": {
          "ref": "dc61cce6-790f-4700-8a0f-9607cdb21ac7",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "4a082ac1-bb7b-4933-a4ac-b5839ee57700"
        },
        "item": {
          "id": "bace30be-6a24-40aa-877e-c46ee6c14d77",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "d5c2e061-631a-4075-8cc4-92bf9722fdce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ee44279-3060-4daa-b091-52d3a6143fa8",
        "cursor": {
          "ref": "1a215def-107a-4a11-b3af-d06059b90515",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "431ada29-f380-4a3c-a753-923f7a20886a"
        },
        "item": {
          "id": "8ee44279-3060-4daa-b091-52d3a6143fa8",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "bcd35cac-0e8a-4cf6-a26a-f6abcab6c22f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d9290a2-63c5-41ac-9150-d9e7cb7cba5a",
        "cursor": {
          "ref": "dfea266d-da55-4af1-a36f-a81115be2626",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "14a661ad-fbdd-479e-897c-72b36b905dd9"
        },
        "item": {
          "id": "2d9290a2-63c5-41ac-9150-d9e7cb7cba5a",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "141418a7-f377-4edf-8d6c-09034414bb73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdbd4a8c-fe05-4dd0-bf2c-a04908b9806b",
        "cursor": {
          "ref": "bcca50ca-ce9d-4dc5-9137-f1bd1668b669",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "b6539800-4c15-436b-99ac-f372c1ce2121"
        },
        "item": {
          "id": "bdbd4a8c-fe05-4dd0-bf2c-a04908b9806b",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "4fe47e03-45ad-44c9-b630-ff7f47472de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f0cd3a5-d3e3-4703-8373-5b485070727e",
        "cursor": {
          "ref": "86ef8c10-b5ca-4d44-af79-b26ca9b48613",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "c1b93c2a-057a-4595-b694-11fd6dcd05ee"
        },
        "item": {
          "id": "8f0cd3a5-d3e3-4703-8373-5b485070727e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "485ac84f-4ac9-4acb-bcb6-6c4a65aaf9cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7e5a284-a3d4-4267-bf81-b3d720cfb662",
        "cursor": {
          "ref": "b63ffa7f-35a0-4f2a-bf5d-ea0b066a1ba9",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "7d184bc4-a7db-4530-8251-92c6cc05c265"
        },
        "item": {
          "id": "f7e5a284-a3d4-4267-bf81-b3d720cfb662",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "3b0d0d25-9eb6-47b2-81f1-4671adf051df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "210f350f-51b1-4f84-8f82-057bdc7d30b9",
        "cursor": {
          "ref": "90ae4d3c-daa8-4782-85ce-b6a14b2161bd",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "968bd8b0-613a-4061-af91-6f010bc503cc"
        },
        "item": {
          "id": "210f350f-51b1-4f84-8f82-057bdc7d30b9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "71ce4ecf-bb8d-4ce3-a9d9-8ce7c70bd68c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ca3f38-2176-4d60-849c-36bd99544724",
        "cursor": {
          "ref": "a8db7cc0-c474-420e-bfdd-e274517d9fd7",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "447b6a00-cf86-4f37-8b6b-f30f8977b98f"
        },
        "item": {
          "id": "f0ca3f38-2176-4d60-849c-36bd99544724",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "fdeab0c8-91bf-4d9d-896e-c23c08198f2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efd07620-b563-49fd-9d52-cc1969985ada",
        "cursor": {
          "ref": "931f727b-1d4b-4d81-a34d-893902ba46cc",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "865a15df-97fa-4ce8-b24e-47c07f9f1e8d"
        },
        "item": {
          "id": "efd07620-b563-49fd-9d52-cc1969985ada",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f88fcc94-e87f-4436-b982-08d41a35473c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74c8773c-49ce-4f2c-afa0-48104970d68f",
        "cursor": {
          "ref": "dc5cbcdd-68b0-44b5-864b-a693578c3566",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "c682e25a-a214-4797-a5aa-31160f660f93"
        },
        "item": {
          "id": "74c8773c-49ce-4f2c-afa0-48104970d68f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "2111a672-d4d1-44a4-bc1c-3b1b22aa7e03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e98aea2-3dcf-4e34-b7db-ae24b6974034",
        "cursor": {
          "ref": "6fb08e74-1f4d-403e-8ac5-181f74648836",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "65885239-a542-41d2-aee4-c2fd6a1ee12e"
        },
        "item": {
          "id": "2e98aea2-3dcf-4e34-b7db-ae24b6974034",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "870de5c9-2873-4858-bfa4-9bb9d19645d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edae39a0-1d5c-495c-869d-88e17ef0c023",
        "cursor": {
          "ref": "792ec098-356e-4cff-b594-f31f5b65cbbe",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "126edab1-464e-464a-9a4a-5ac6bead9473"
        },
        "item": {
          "id": "edae39a0-1d5c-495c-869d-88e17ef0c023",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "d25a0194-7506-4fbd-99dc-1c5a3b2f72a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc8a8682-3c97-480d-997e-b0c78876e6bc",
        "cursor": {
          "ref": "55c1d11f-0e45-431b-89ab-4f60e60b6324",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "8ccf477b-004b-4c94-bca2-da906dbe4f0b"
        },
        "item": {
          "id": "bc8a8682-3c97-480d-997e-b0c78876e6bc",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "4f011aeb-7c11-4786-b16d-d49dc1b5f560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80e86462-d0b8-4ec8-92ef-f495692389b7",
        "cursor": {
          "ref": "992ee95b-5f24-47f7-8f2e-93aa4816f690",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "200ccae6-86dc-4ec6-8967-1bb265ceade8"
        },
        "item": {
          "id": "80e86462-d0b8-4ec8-92ef-f495692389b7",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "da74f943-9127-4381-9fe8-8e0572aacdce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55b12c32-0766-456a-b30d-c9dfedeef6ea",
        "cursor": {
          "ref": "3eef57a7-8df9-45da-829b-693e14172b25",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "fb577e84-e678-428b-af8e-7365d0445e8b"
        },
        "item": {
          "id": "55b12c32-0766-456a-b30d-c9dfedeef6ea",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "0ecc480a-11f5-445d-81ba-9578419137d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbc7ff33-8c8e-4a22-95ba-5d10d42d3f97",
        "cursor": {
          "ref": "d050194d-ecdb-44bf-8103-b89e838e2018",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "f65e9b0e-3fa5-46d6-9d3c-2dfe7efe918e"
        },
        "item": {
          "id": "dbc7ff33-8c8e-4a22-95ba-5d10d42d3f97",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "41030538-9deb-40df-ac68-c62c2d206ac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "822043a6-ff8b-4575-bfca-3d728b604e20",
        "cursor": {
          "ref": "be1ea900-57de-480b-a783-e3eeaca80145",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "d7f9c315-362e-4023-b882-6ca1829de407"
        },
        "item": {
          "id": "822043a6-ff8b-4575-bfca-3d728b604e20",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "8fdc702b-1fe4-4216-adac-71d6819e8a9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb1a29c-faca-47c8-9c3d-a1acfc422134",
        "cursor": {
          "ref": "8c922fd8-58f7-4f34-86ed-ec22c080943a",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "bc001768-ab35-4a41-86b4-ab01589ba6b2"
        },
        "item": {
          "id": "6cb1a29c-faca-47c8-9c3d-a1acfc422134",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "ea0ac9f5-f94b-460c-87de-e16695bc414b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b8629f6-8c71-4557-956b-8ebcb4d02e69",
        "cursor": {
          "ref": "639f5ebd-4123-4e6e-b9d2-8a811c9442fc",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "e25fc2a4-3cb3-48f1-b5dc-38daf6dc519c"
        },
        "item": {
          "id": "8b8629f6-8c71-4557-956b-8ebcb4d02e69",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "375ebee2-ed22-4338-8ad2-9aa37b139c6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0cf6527-8e2a-4f20-adf0-55017a3f8b41",
        "cursor": {
          "ref": "821c7c1a-408f-49e5-b67f-efc35743e9a2",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "1ca282d3-b138-49e9-8601-b169cacfd909"
        },
        "item": {
          "id": "c0cf6527-8e2a-4f20-adf0-55017a3f8b41",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "f4b4cb6a-e5a8-4428-84a3-95be1aa2c89a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4a5ed74-0c6c-40e5-b94b-eded032cb8f4",
        "cursor": {
          "ref": "5f6185cf-4755-4629-929b-5cb348329bfd",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ed9e5f60-8cb0-46ed-abae-fa39b7a00042"
        },
        "item": {
          "id": "c4a5ed74-0c6c-40e5-b94b-eded032cb8f4",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "c2f61355-67da-49e1-a8b3-5f2feeb78336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f04aa0cb-9d8e-4304-85b1-bf7ee317adaf",
        "cursor": {
          "ref": "bff73765-dbe0-4fad-9401-2c41414a02d7",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "4bccd91a-a7c9-401a-aeb2-21e15c74f6d3"
        },
        "item": {
          "id": "f04aa0cb-9d8e-4304-85b1-bf7ee317adaf",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "f3e7feae-3847-4bc1-a2f5-b1dba28c97db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7096dd8e-4278-48e5-b19c-5a51597ec294",
        "cursor": {
          "ref": "ae470ebb-7356-4a9d-be75-5cbb68f9cb40",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "c72edf31-ffb6-4ab1-b124-6164903ec1e4"
        },
        "item": {
          "id": "7096dd8e-4278-48e5-b19c-5a51597ec294",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "6606a0bd-2f4c-4e67-87da-c0d57ae1a062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de0964c6-7ec6-4545-a29a-188956907f23",
        "cursor": {
          "ref": "92e2c336-9516-45e1-9011-3a1bfa9bb9d2",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "8908ceb5-e374-47f9-bc3a-aa1ae6cf6301"
        },
        "item": {
          "id": "de0964c6-7ec6-4545-a29a-188956907f23",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "e8fddda7-e264-4e54-9a59-ab50625a26df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9994916c-a0ad-4e92-a2e7-9c1f47ef6a93",
        "cursor": {
          "ref": "914ddb4b-bec9-4a6b-a992-c4b7b2e9cce3",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "1f7ca266-2937-4892-81ed-f12c727a1c00"
        },
        "item": {
          "id": "9994916c-a0ad-4e92-a2e7-9c1f47ef6a93",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "388c4fcb-c7d2-4737-82e7-f8754dbde3ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e00327a7-558c-4c26-9c97-2bccbc11993c",
        "cursor": {
          "ref": "baa2cf3d-c418-4fe3-9051-3db8dcfbef9b",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "0d53414d-b24a-45a1-8512-bfe0541f003d"
        },
        "item": {
          "id": "e00327a7-558c-4c26-9c97-2bccbc11993c",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "d8aba97b-508c-4164-8e00-319e0c496e4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccefb192-c7a5-40c3-907b-822b0f0a34fd",
        "cursor": {
          "ref": "4fdaee8c-d2bc-4257-be0f-8c7b4eff1629",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "781b22de-f5a4-4c25-993d-9710a10ea106"
        },
        "item": {
          "id": "ccefb192-c7a5-40c3-907b-822b0f0a34fd",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "88360786-f29f-409e-8fed-de882987b891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d0ee8f-5656-4278-8da3-ad9fa5e66148",
        "cursor": {
          "ref": "1776893d-8dea-4942-8e0c-34219eafb8e3",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "eae6fdee-3b5f-4c0a-9904-a5c7f73c8a13"
        },
        "item": {
          "id": "e8d0ee8f-5656-4278-8da3-ad9fa5e66148",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "eb2f554a-3ab4-4aee-b894-59e69374d93c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0cf67fd-34a5-47dd-a9bd-cf617250097c",
        "cursor": {
          "ref": "5f7b420f-169f-4b00-841b-cabb120c1661",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "cac33040-93f1-45bc-b08a-28f95e33479e"
        },
        "item": {
          "id": "d0cf67fd-34a5-47dd-a9bd-cf617250097c",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "7163f702-160b-490b-8eed-cd1b6bea3bdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1be715a1-6fd1-4097-a6eb-1c43d147ed94",
        "cursor": {
          "ref": "f776fa27-c2a5-4c3f-9516-fee95a8d6994",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "ef5096e6-f6e5-413a-9eed-aab365c04489"
        },
        "item": {
          "id": "1be715a1-6fd1-4097-a6eb-1c43d147ed94",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "e3687db5-7964-49d7-9b8d-6f1e6ebeb677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d576b26-0f03-41ab-bb2a-69e7bc360ffa",
        "cursor": {
          "ref": "49026887-0741-4654-a09c-3c3ac9809af1",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "5d2e311a-dfcb-4714-94c8-437b929a2a0d"
        },
        "item": {
          "id": "5d576b26-0f03-41ab-bb2a-69e7bc360ffa",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "9f25c45c-615f-45fc-9516-2cbd7af70b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90e986c2-42e6-4d60-b0b5-41c615b27b52",
        "cursor": {
          "ref": "0154e9bd-3af5-4fbc-9456-0643a7967451",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "b0fc6302-f6bc-482f-810e-1673a5535d23"
        },
        "item": {
          "id": "90e986c2-42e6-4d60-b0b5-41c615b27b52",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "8220cdbf-d068-4dad-b794-1148c3a7b542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ca849ad-cf22-4c74-aee3-e962993dfc8a",
        "cursor": {
          "ref": "40b730ee-5b0f-43e7-a793-32354cf3ef09",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "35a4ce46-2889-472a-9305-eaccb02415fe"
        },
        "item": {
          "id": "2ca849ad-cf22-4c74-aee3-e962993dfc8a",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "4511752b-d9b4-4301-b10c-00ca8c382066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3ce15c9-87eb-49ff-b023-1771f08d66c2",
        "cursor": {
          "ref": "a1b9295d-c9d2-4940-924a-9ddc8f0e21a0",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "7424c717-f27a-4a50-9a40-b56847d5b4c6"
        },
        "item": {
          "id": "a3ce15c9-87eb-49ff-b023-1771f08d66c2",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "ebed4e5e-de19-4775-b1f1-41d6f464ae19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf1d07c2-c111-4a46-9ac2-e837514e95ca",
        "cursor": {
          "ref": "139bad9e-84c7-4bc0-92be-bfe91e19f9c9",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "f750f0a9-74f3-4c4b-b956-f9602adbcfbe"
        },
        "item": {
          "id": "cf1d07c2-c111-4a46-9ac2-e837514e95ca",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "4d232b79-88c1-47b0-95c5-397a2d481466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fab64da-6dff-4bdd-be71-28332f6d44b7",
        "cursor": {
          "ref": "a31af503-94c4-4675-bcac-3e117cc2758f",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "df740dbb-a6bb-4e7b-866b-c9e382ee59bc"
        },
        "item": {
          "id": "6fab64da-6dff-4bdd-be71-28332f6d44b7",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "36b6b14f-71c8-40ed-973e-1e3684d51206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fabf0e1-e678-45f2-96a5-812554301304",
        "cursor": {
          "ref": "dc022798-ab91-49fa-a799-f9858094add9",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "17567132-3554-49b1-af5d-8c16e1c2f693"
        },
        "item": {
          "id": "8fabf0e1-e678-45f2-96a5-812554301304",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "1c72f647-47b6-434a-bdae-c8ff9c55486c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "560c9eff-f74b-4b3d-8a8e-323b5390feb3",
        "cursor": {
          "ref": "0f32b34c-4b71-4a52-927d-157a4779dd2c",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "006e4e7d-0985-46a1-b9fc-cfa96987ecdc"
        },
        "item": {
          "id": "560c9eff-f74b-4b3d-8a8e-323b5390feb3",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "64ee5c92-b20b-4851-9b69-df10f396d58e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f06058b2-f25e-483f-ace3-b03d45d66ee0",
        "cursor": {
          "ref": "6201f6ee-2377-427a-b1c7-6090f1245474",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d415e667-7071-448c-9c6d-06238f433b58"
        },
        "item": {
          "id": "f06058b2-f25e-483f-ace3-b03d45d66ee0",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "380e2acd-63c5-4124-a828-63a513bafbe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a87b6c2f-ba6e-4a5c-bd27-cbf1550a66d8",
        "cursor": {
          "ref": "d0493eff-2d0b-4c7f-9e9c-36fd0c617590",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "1a81a470-40a1-4dd1-b207-f9efd5d33eeb"
        },
        "item": {
          "id": "a87b6c2f-ba6e-4a5c-bd27-cbf1550a66d8",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "87c601f3-1ed3-4077-bb98-64c68b5f7ff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1edc168-24be-48e6-81e9-cc272afd1785",
        "cursor": {
          "ref": "8faf03b9-18f2-4add-9962-9bbb40234ee3",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "79d33470-202f-404c-99a8-3c611229cb1b"
        },
        "item": {
          "id": "a1edc168-24be-48e6-81e9-cc272afd1785",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "44e8dc0a-28f1-4206-9b3c-d6592662e580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2debcd7-f112-4d6b-bc67-fa361ca4e380",
        "cursor": {
          "ref": "48cd1b1c-7f98-44d6-8b05-219de87fc0d3",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "8a5333b1-7c37-4779-948b-b79dc5d93ad4"
        },
        "item": {
          "id": "b2debcd7-f112-4d6b-bc67-fa361ca4e380",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a97cf7e0-5484-4f8b-9481-6fcff41d2276",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c4093e-329c-439d-a321-542472323e1e",
        "cursor": {
          "ref": "00f628a4-1a6d-4398-b561-fd676340ac94",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "ee51831d-a74c-49ee-a903-d2a2bc90e986"
        },
        "item": {
          "id": "53c4093e-329c-439d-a321-542472323e1e",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "43d2997d-9c51-4248-a411-4946ca21e0c7",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 206,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e935f92c-c95d-4367-a79d-66de3d16cc2b",
        "cursor": {
          "ref": "6d034137-8d5b-41b4-8e85-807f7cd97cbe",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "f2f3ab07-78d3-40ca-9920-da243d6425ae"
        },
        "item": {
          "id": "e935f92c-c95d-4367-a79d-66de3d16cc2b",
          "name": "credentials_issue"
        },
        "response": {
          "id": "5ecef453-e6ce-458f-83b6-03775560401e",
          "status": "Created",
          "code": 201,
          "responseTime": 84,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "29ed141d-8705-43e3-b37f-4913119a87a8",
        "cursor": {
          "ref": "54542055-553b-4da1-927c-ac2242924edc",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "e70003f8-f9e9-42ba-9057-e59ce16e6c56"
        },
        "item": {
          "id": "29ed141d-8705-43e3-b37f-4913119a87a8",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "c96332ee-f493-4aae-a4b4-1872ccd65e6f",
          "status": "Created",
          "code": 201,
          "responseTime": 227,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "389d66e2-8b60-49da-8716-dc15c2279b26",
        "cursor": {
          "ref": "49cd0d27-53df-4931-b530-3ccb7c48a382",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "b9a730a3-6f91-4eb7-8d0b-9ff71c281923"
        },
        "item": {
          "id": "389d66e2-8b60-49da-8716-dc15c2279b26",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "1fd3d274-2c19-4a37-912a-96d4c488833f",
          "status": "Created",
          "code": 201,
          "responseTime": 83,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbc87a58-f9ab-4f16-9069-2c92558dfa30",
        "cursor": {
          "ref": "ea9d3ce2-195b-42fc-8e8e-0177a751d623",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "33e7696e-03b9-4e91-a7bd-a4e1bdbcef32"
        },
        "item": {
          "id": "cbc87a58-f9ab-4f16-9069-2c92558dfa30",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "152fa9b3-844c-4dbb-a9d4-16616d8389dd",
          "status": "Created",
          "code": 201,
          "responseTime": 86,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "375bdc5c-64a3-4fad-b1f4-452f65bbde12",
        "cursor": {
          "ref": "68c27262-81b3-4bab-884e-6fdbd172be19",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "d586438d-0fcc-4ef0-8fe3-8e4b0a198356"
        },
        "item": {
          "id": "375bdc5c-64a3-4fad-b1f4-452f65bbde12",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "bc76e3aa-5a18-4ba2-84f8-39fc581fe792",
          "status": "Created",
          "code": 201,
          "responseTime": 92,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "345b67c1-cd57-445a-9441-f4f10826deaa",
        "cursor": {
          "ref": "856f0573-516c-48e6-b981-9f4f6be1d5c1",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "c2c68e96-1023-41ed-8907-7bbc6af5f0ec"
        },
        "item": {
          "id": "345b67c1-cd57-445a-9441-f4f10826deaa",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "0a73b74e-b8c7-429e-bf38-a165eafc9d93",
          "status": "Created",
          "code": 201,
          "responseTime": 85,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b9ccc97-663d-44f8-a025-f8976a3faac1",
        "cursor": {
          "ref": "116de525-492f-4d2b-850f-8fddff4258ea",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "002a6f50-b14f-4246-b26e-da4eb1eaacf2"
        },
        "item": {
          "id": "3b9ccc97-663d-44f8-a025-f8976a3faac1",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "59e158e0-d2e8-4d7a-ab9f-d845ed133def",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b9ccc97-663d-44f8-a025-f8976a3faac1",
        "cursor": {
          "ref": "116de525-492f-4d2b-850f-8fddff4258ea",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "002a6f50-b14f-4246-b26e-da4eb1eaacf2"
        },
        "item": {
          "id": "3b9ccc97-663d-44f8-a025-f8976a3faac1",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "59e158e0-d2e8-4d7a-ab9f-d845ed133def",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b803886-8eac-42de-87a1-fdd7ebce6ed5",
        "cursor": {
          "ref": "5a053d1d-e4f7-4765-be40-dfdb4fe36444",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "3b0f0720-5fc8-4c0a-aad3-57e95c2089c0"
        },
        "item": {
          "id": "0b803886-8eac-42de-87a1-fdd7ebce6ed5",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "678da33f-9d63-4d22-8982-b15495f33da1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73168bed-87dd-46d9-a6e9-d2a2c9239887",
        "cursor": {
          "ref": "b164568f-e3dc-4ed9-805c-688993ee7099",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "f10e3dd5-b112-49e6-b352-b6c54d22c3fa"
        },
        "item": {
          "id": "73168bed-87dd-46d9-a6e9-d2a2c9239887",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "18662c64-9b10-46b6-9f6f-ae982e9e4a6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6e92f4f-c055-4668-96c8-0191a3881122",
        "cursor": {
          "ref": "e714cc1b-4912-4768-a063-b8fc2675cffb",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "5e0597ac-74ec-4d33-83a3-aa094b0f8184"
        },
        "item": {
          "id": "e6e92f4f-c055-4668-96c8-0191a3881122",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "3e9c0a3a-bd2c-4dd9-a826-ee859c4e89f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a38fe660-e175-46c8-afb5-190c79da0a85",
        "cursor": {
          "ref": "f9b602e1-dfbe-4227-a5ff-8729aa2bd197",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ee8b3edb-7d2a-436f-98fa-c2e973676f15"
        },
        "item": {
          "id": "a38fe660-e175-46c8-afb5-190c79da0a85",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b6c9717c-4aeb-4bc5-97b2-6ce604ae2849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8216353e-cba3-4911-8d30-cffb47a3a35a",
        "cursor": {
          "ref": "7c7e6287-a258-49cc-ae73-edb877b77a07",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "ba2f2b75-b640-43b3-bae8-3e13ab4ecdce"
        },
        "item": {
          "id": "8216353e-cba3-4911-8d30-cffb47a3a35a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "0652e5dd-661b-45fc-be7d-333647fb1e66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "142b87a5-b584-4b72-b785-87bf20f0eb2d",
        "cursor": {
          "ref": "a383c637-c426-43e2-92f4-5e2cdca84a5b",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "115a98ba-09d6-4044-9e49-71cf700fbe1f"
        },
        "item": {
          "id": "142b87a5-b584-4b72-b785-87bf20f0eb2d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e1b27eee-1857-4c91-97fa-7a3c8fe52716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fefe294-dc3d-473c-87b6-78dd684d25d2",
        "cursor": {
          "ref": "998ad9ef-65f7-42d7-806a-0e3a90cea9f5",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "9121d35f-3d95-4e19-a7cc-f7292af2bee9"
        },
        "item": {
          "id": "3fefe294-dc3d-473c-87b6-78dd684d25d2",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f4b039a6-fc9a-4b46-84cc-a3bdcea3417d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6895a786-2f58-496b-9a53-c6f67fd1619f",
        "cursor": {
          "ref": "d614fbe2-df01-4498-aa8b-2bc5b11e90b3",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "410ce663-bab5-464c-9c5b-a56710f860ad"
        },
        "item": {
          "id": "6895a786-2f58-496b-9a53-c6f67fd1619f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a02565f5-b6be-4fc2-9f3a-324d32924314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d69e24f-bd25-40f3-962d-1525afed1e15",
        "cursor": {
          "ref": "6ad5318b-eab1-4c00-bb0f-4bf89ff1e61a",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "8387acc9-eb95-4769-bd4f-5a0be44c3f3c"
        },
        "item": {
          "id": "8d69e24f-bd25-40f3-962d-1525afed1e15",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d382bdee-7f3f-4217-8984-dc5188d9b638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b22e4730-aae1-4298-8404-4c6a4d03092a",
        "cursor": {
          "ref": "df3b58e0-0b40-4ca7-a15e-fa17247c02f9",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "93f234cd-9bbf-4fb5-9443-77d2743d6d21"
        },
        "item": {
          "id": "b22e4730-aae1-4298-8404-4c6a4d03092a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "69ed2841-d434-4be8-b558-3d1eb4063612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "416fa1f0-f8fc-4ee7-816a-b4ed3c8138cc",
        "cursor": {
          "ref": "bd3f086c-8472-4308-8354-586322328fd6",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "6904f91e-ceeb-4a9b-a2c4-5ca3f981e05c"
        },
        "item": {
          "id": "416fa1f0-f8fc-4ee7-816a-b4ed3c8138cc",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d3e769d7-7cc6-4a2f-a2e7-c4c334040709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "811221e5-5f41-4c89-b3d0-c27446096bba",
        "cursor": {
          "ref": "219d11e8-b33d-4e9d-ade3-6f5d0065f0aa",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "5f3b6ccb-4d00-405a-b23e-dc0243ff5773"
        },
        "item": {
          "id": "811221e5-5f41-4c89-b3d0-c27446096bba",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "40af677a-74c3-4746-970d-936a8287b3eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5655c8be-09e1-4b57-af46-850b1389f60d",
        "cursor": {
          "ref": "a1367d3a-70b8-48a6-a4a3-b381a5f79b74",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "8c3eb6fb-9fe3-42a2-a90b-7dcfa53353e4"
        },
        "item": {
          "id": "5655c8be-09e1-4b57-af46-850b1389f60d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "8468a50f-029e-40cd-8fef-c62ee9cadd8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb3316e0-5efa-419b-93f2-f107a964a4e1",
        "cursor": {
          "ref": "11604c17-4f97-4042-82db-5d671cb20578",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "c874e514-ed7b-40d4-bbca-f6addf96ad91"
        },
        "item": {
          "id": "fb3316e0-5efa-419b-93f2-f107a964a4e1",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "96cff549-a0a7-41cb-8729-7772e9a93a4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18e87dcf-5259-42f9-8155-526837d8ce79",
        "cursor": {
          "ref": "36198f79-dd79-4954-9591-e56afbdacae2",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "046fa6f6-37c8-4f1f-a41d-498e6236fef7"
        },
        "item": {
          "id": "18e87dcf-5259-42f9-8155-526837d8ce79",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "30bd626e-4d9a-4299-af3e-4de10e900ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c0ce07d-124b-4fd1-a773-32b804cd1eb3",
        "cursor": {
          "ref": "13093472-9202-4e4b-8f63-72eec9fcd4ba",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "0f477121-0ec5-4ee1-a5c1-8a018ef0ff27"
        },
        "item": {
          "id": "7c0ce07d-124b-4fd1-a773-32b804cd1eb3",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "03ca7d8f-f286-4e1d-9241-307224f9e212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e80b387-6db3-4b8d-ad4e-0bdec90d05b8",
        "cursor": {
          "ref": "895472a2-adbe-4da0-a8df-bfb6ef6bd54d",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "57b470a6-3ac1-46e2-b7a4-ac5197be4e5a"
        },
        "item": {
          "id": "4e80b387-6db3-4b8d-ad4e-0bdec90d05b8",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c49fb51c-65aa-4081-bb2c-ef5937f6ecd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b52115b8-d57f-4ef8-b6dd-fe4ba05bf76d",
        "cursor": {
          "ref": "28d1e184-1bbc-4618-a83e-8086719206a6",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "40ee4f68-b664-499f-b42e-1314e48fc5c1"
        },
        "item": {
          "id": "b52115b8-d57f-4ef8-b6dd-fe4ba05bf76d",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9f725783-ad44-4bc7-ac66-371ac8386f2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcf33856-47bf-4555-be58-3a8c4a392cb2",
        "cursor": {
          "ref": "a3201290-b6cf-4a31-a657-5a1182e75943",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "d8821b83-8235-48b8-8db8-512dfbf3643a"
        },
        "item": {
          "id": "bcf33856-47bf-4555-be58-3a8c4a392cb2",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a1cc3398-9e2d-4b97-a3d9-2a43874595a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91271573-eac2-4947-8992-a577c68e626d",
        "cursor": {
          "ref": "3bf1db2f-3223-437a-b0f0-2ba43ace74a5",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "212c25f4-28af-42ca-b70c-1c2b6aca3798"
        },
        "item": {
          "id": "91271573-eac2-4947-8992-a577c68e626d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "76651fc7-2e1b-4b0f-aa0a-9e930793f226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25063f1e-c589-43e7-9f82-09d5058f88d4",
        "cursor": {
          "ref": "90229dc5-e661-4e47-a4be-a61fb03d8b1e",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "aa14fa7d-1878-45a1-85ef-550f6a270d03"
        },
        "item": {
          "id": "25063f1e-c589-43e7-9f82-09d5058f88d4",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "32911c63-684b-4fc2-93f6-e9e32adb356f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0bc3248-7b5b-44cb-a921-df2b30e5b496",
        "cursor": {
          "ref": "ac469e40-f570-4e69-8c14-b4046f0cabcb",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "62f69d9f-979a-4ee6-b818-375ff06ca416"
        },
        "item": {
          "id": "f0bc3248-7b5b-44cb-a921-df2b30e5b496",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "26f682df-df5a-457e-97ff-017b00dc6267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c83c7928-ef02-4034-bf32-c99e0164b659",
        "cursor": {
          "ref": "583be495-ace0-4a97-b060-c3532d7cfa86",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "7b64cc51-b6e4-4694-b315-9e7ded38a8b1"
        },
        "item": {
          "id": "c83c7928-ef02-4034-bf32-c99e0164b659",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "84513466-8627-4348-8115-3aa0acf3c6cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95c3f566-222c-4a45-aa3b-e38be7e41f27",
        "cursor": {
          "ref": "39a80de5-2ba4-4e2a-b3a2-5e15c31e0aeb",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "e3fc6633-82a9-4756-bc44-0063bd9e5510"
        },
        "item": {
          "id": "95c3f566-222c-4a45-aa3b-e38be7e41f27",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "bb20c517-2360-4eea-a374-981b31e2ac7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0d24c82-c03f-4198-87fd-507bafa54bec",
        "cursor": {
          "ref": "b410493e-80e8-413d-b942-eb086fc6bcb9",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "205b3aae-1c7d-4056-b347-dcdeb7036583"
        },
        "item": {
          "id": "f0d24c82-c03f-4198-87fd-507bafa54bec",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "3d8363ff-624e-4585-a576-3e3fa4b1de4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ad5e04e-87b2-42d5-bd54-38f27daec49d",
        "cursor": {
          "ref": "f1979689-496a-4236-8135-b4ab3a0063d8",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "afc486f6-7fd4-45ad-9540-ecdfc8f0251d"
        },
        "item": {
          "id": "2ad5e04e-87b2-42d5-bd54-38f27daec49d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "089cbdb7-576c-4efb-b067-689f7a765be4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e45f0435-94d9-455e-a31f-a721228f03e2",
        "cursor": {
          "ref": "44a96d1a-2ab6-4564-8533-882f7fb51b3e",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "38f706e2-e8cd-4819-bb5b-5a5baff7b319"
        },
        "item": {
          "id": "e45f0435-94d9-455e-a31f-a721228f03e2",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "a5b59e03-e63b-44fd-b7db-8a3e24489a87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34f03aa7-7d54-4f78-97f1-7c854a427e2a",
        "cursor": {
          "ref": "5814bca5-29ea-4b95-a5bf-bdefd9059f09",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "25ca8285-e0cd-4113-9ab4-e6186771fb0b"
        },
        "item": {
          "id": "34f03aa7-7d54-4f78-97f1-7c854a427e2a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ab23998b-0621-4f2b-95a4-e082829efc58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa3735f6-142b-4dc9-964a-f3b9b6e68abb",
        "cursor": {
          "ref": "4dacdf49-b608-4f69-aeee-dbad69befcc1",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "2b983c48-31bc-4f8f-b6c3-94c2c624be8b"
        },
        "item": {
          "id": "aa3735f6-142b-4dc9-964a-f3b9b6e68abb",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e7d7a3c3-51d0-49d4-8c5d-bdadf48c1dcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44c3f21d-b254-46ef-8c93-9d3e2b168fc4",
        "cursor": {
          "ref": "4ab6f40a-ff7c-47ab-ac78-aae7731ac4bb",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "319fe3e3-41b2-4afc-9362-88400b4abe15"
        },
        "item": {
          "id": "44c3f21d-b254-46ef-8c93-9d3e2b168fc4",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "337b0d8e-796a-4eea-9be9-c26ccd803a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f801ff5-6658-4fbc-a90d-e42224deeefa",
        "cursor": {
          "ref": "bbf958c1-04f6-4cc5-8eb6-bab0ab47ecf1",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a2a2d0c7-0be3-4f38-a459-690e2404f4f3"
        },
        "item": {
          "id": "1f801ff5-6658-4fbc-a90d-e42224deeefa",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "6f73f614-8b56-4ee5-b0f9-8ba152b73500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4a0b31b-4e85-4cce-b38e-606631dd8184",
        "cursor": {
          "ref": "0b8bab51-cf15-4b9e-a0af-8e4589182b22",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "706e6b5a-6639-481f-ae08-913bc6c2a4dc"
        },
        "item": {
          "id": "e4a0b31b-4e85-4cce-b38e-606631dd8184",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e7020929-0fa6-4168-8b21-39022117fc8b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02c3adad-3055-4c9d-8ca8-bfd88d086e2c",
        "cursor": {
          "ref": "b99bde8d-2473-42c7-b76e-d1bc1d3c5dbb",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "f45e7181-1192-42a8-8cc2-1b506d710bad"
        },
        "item": {
          "id": "02c3adad-3055-4c9d-8ca8-bfd88d086e2c",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "e1ae1cc6-7b24-4232-a677-7006c1978c2a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 64,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f07baaa-50a9-449c-bf58-ab5a9ff3f19d",
        "cursor": {
          "ref": "0fd4511c-3638-48a4-a10e-bba816d96238",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "06fbbc43-ef10-42b6-9f24-0be6521a4d17"
        },
        "item": {
          "id": "7f07baaa-50a9-449c-bf58-ab5a9ff3f19d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "fd9deb7e-7e7e-4385-ab8c-12a1efc6f56c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f07baaa-50a9-449c-bf58-ab5a9ff3f19d",
        "cursor": {
          "ref": "0fd4511c-3638-48a4-a10e-bba816d96238",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "06fbbc43-ef10-42b6-9f24-0be6521a4d17"
        },
        "item": {
          "id": "7f07baaa-50a9-449c-bf58-ab5a9ff3f19d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "fd9deb7e-7e7e-4385-ab8c-12a1efc6f56c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3d7c2d2-2503-4a83-a0e3-ab02a4f5b2af",
        "cursor": {
          "ref": "7e64db3e-6da4-4dd2-9bd1-b61b6f2bcb81",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "2d7b49fe-e385-42bf-ae3a-632ed32728f7"
        },
        "item": {
          "id": "f3d7c2d2-2503-4a83-a0e3-ab02a4f5b2af",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "a352d4fe-35b6-4d8b-8f51-e224fa13b836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7830b6c-c6ec-4a35-811e-6b2f2df51b54",
        "cursor": {
          "ref": "1f4d0e77-3452-40f5-b32b-9839a0ba41b8",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "6b706f6a-9041-44c1-a72f-095b7be52c67"
        },
        "item": {
          "id": "c7830b6c-c6ec-4a35-811e-6b2f2df51b54",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "b9e9cae8-f838-455d-81c0-bfbf7c03418b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc33ba6-bbe4-40e6-8def-0780aec903f0",
        "cursor": {
          "ref": "213a78f8-e013-47ba-9991-7909a44378ac",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "fcdc4c7f-2c19-4e6a-9600-4f87dcd3db14"
        },
        "item": {
          "id": "cdc33ba6-bbe4-40e6-8def-0780aec903f0",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "d87d0e04-85ce-40ee-ba38-6dcaac315bb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f0c7bdf-59a1-435a-9c46-f8017a31251c",
        "cursor": {
          "ref": "53df1861-4a87-403f-a3dd-720d8ecf4be9",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "9969c8f5-dffc-4e55-8cc9-a298da90fb7e"
        },
        "item": {
          "id": "1f0c7bdf-59a1-435a-9c46-f8017a31251c",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "2fbd3ad1-de99-4b12-88ee-0d0189330f67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "487a3bcd-3b6d-421a-b0b8-ee3bee06b0d2",
        "cursor": {
          "ref": "b0e8acc7-f46d-4136-911e-426eee0343d9",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "92a89c0c-c6f5-455a-ab12-ef48e408dabc"
        },
        "item": {
          "id": "487a3bcd-3b6d-421a-b0b8-ee3bee06b0d2",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "ef1087ee-ae75-45f4-84ac-3a3c1dca40c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3e21bc9-6b83-4e16-883a-7459e2f172ff",
        "cursor": {
          "ref": "cd46763a-55d5-4b9a-b4eb-1f97ad144484",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "07c13643-deb5-441d-a92f-ec540f8d9ce9"
        },
        "item": {
          "id": "e3e21bc9-6b83-4e16-883a-7459e2f172ff",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "c5427a6e-299f-4ea8-a947-0c663b8ddadf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58dc2e08-c623-4dc7-b9e7-17cfd4a3dbc6",
        "cursor": {
          "ref": "335e3d8b-0d49-448d-bc35-faba2fb84d8a",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "e12db6c7-6cba-4f5f-9727-8389e75729ab"
        },
        "item": {
          "id": "58dc2e08-c623-4dc7-b9e7-17cfd4a3dbc6",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "2440dfa5-c7db-4297-a63f-d5f27d61a9e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09ff5074-34e8-4627-945b-d0a72c9c2890",
        "cursor": {
          "ref": "e4bc661d-ce01-4251-b8b7-5ad41a78945f",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "fd1af5bc-beea-492d-9810-6e6c06dd431a"
        },
        "item": {
          "id": "09ff5074-34e8-4627-945b-d0a72c9c2890",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "9cfc736d-7d4b-486f-90a1-978d7d2129ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3236226-4278-47b6-9677-1a7c6797324a",
        "cursor": {
          "ref": "582b7f95-b3b9-40e7-8b76-3cc1532eaada",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "011dd7ab-5190-457e-9cc7-dcae20a02868"
        },
        "item": {
          "id": "b3236226-4278-47b6-9677-1a7c6797324a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "25d24a8e-1603-4a34-955c-86a6c174b2eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "404df436-87f9-4e76-91e0-32903c2c53b8",
        "cursor": {
          "ref": "728f0db5-82f0-4029-91e5-ac7bc3d0131a",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "8d5cb366-6e34-49ed-bb28-a6bb71388cea"
        },
        "item": {
          "id": "404df436-87f9-4e76-91e0-32903c2c53b8",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "152c1456-0f31-45db-8d4f-82b16b09c0ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c9fcbee-524e-4acf-b9e5-54c5893913e2",
        "cursor": {
          "ref": "6461f12d-3f8b-449a-8805-46f0be8062b2",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "778c07ef-0367-4415-90de-7a1d54cf62bc"
        },
        "item": {
          "id": "7c9fcbee-524e-4acf-b9e5-54c5893913e2",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c05ad50b-ec8e-41a5-99a5-b17aeb83537a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16b9cd0a-225e-4b92-911f-e6bf47fe7a77",
        "cursor": {
          "ref": "8b251ec9-a878-40be-87db-0e423fc1cc17",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "bd7223e0-65f7-4791-9ec5-5c51273dfe54"
        },
        "item": {
          "id": "16b9cd0a-225e-4b92-911f-e6bf47fe7a77",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "7019c64a-9dfc-4526-a168-5e29f3ac8535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7f5ef05-5871-483e-b539-aca19fc83c01",
        "cursor": {
          "ref": "304361b1-ba3d-4c84-9933-88baefc86585",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "e8c769c7-8084-4129-bc74-d3b0a34fb751"
        },
        "item": {
          "id": "c7f5ef05-5871-483e-b539-aca19fc83c01",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "a56cd315-73d7-486c-931c-f84fd4515dd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d104717d-944c-47dc-9742-85b881101432",
        "cursor": {
          "ref": "7d331a60-0493-4d59-bd5e-6ca10e4b9f39",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "75d5ce2a-7bba-4eb8-a62a-b8800240ecbf"
        },
        "item": {
          "id": "d104717d-944c-47dc-9742-85b881101432",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "642c14ca-4a83-4802-a2fc-57e50f570afa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "750d25a0-0c52-44ba-9574-f71e97d2bb5c",
        "cursor": {
          "ref": "de09a87f-b366-45f4-8a73-b73b91246923",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "6e129510-30c4-4b8a-ace3-6c4f6cd3e618"
        },
        "item": {
          "id": "750d25a0-0c52-44ba-9574-f71e97d2bb5c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "2532e25c-2cc1-4cbe-83a7-1db0bfb27f66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7757407-2530-4a51-8fb2-777041bf29e7",
        "cursor": {
          "ref": "01d29575-5dd3-4aa9-aec7-f0ceaa88eed9",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "a9d1260f-64f9-48bb-8459-b2b21e58a481"
        },
        "item": {
          "id": "b7757407-2530-4a51-8fb2-777041bf29e7",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "bb0dbff6-9161-4cc0-8885-33f0213377ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c11ef06f-36bd-4708-9aea-b07c9d7b0e23",
        "cursor": {
          "ref": "cf6bbf14-e922-4654-93bc-8543fe69dbdf",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "81035c7f-666e-4b29-97ad-489304be5505"
        },
        "item": {
          "id": "c11ef06f-36bd-4708-9aea-b07c9d7b0e23",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "c4612524-bce1-4102-aa35-df77a4fb6bcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f4bdbc5-f4b6-48b2-8ffe-e3ce93d82a4e",
        "cursor": {
          "ref": "43da45cb-bb5f-4183-bb0b-1c709f0b6f7d",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "3115f7ca-67f2-41a9-b43d-dceac754e216"
        },
        "item": {
          "id": "5f4bdbc5-f4b6-48b2-8ffe-e3ce93d82a4e",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "a9bf343b-715e-48e6-9673-5c2cb79d565e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c424fe1d-560a-4337-898c-31873fa5c5a0",
        "cursor": {
          "ref": "99aba5f6-dbff-4781-965f-f0d2e55e4c7e",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "37212954-7b6e-4ba9-9908-5a0f98ef8143"
        },
        "item": {
          "id": "c424fe1d-560a-4337-898c-31873fa5c5a0",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "2c22d0e7-033a-404a-92fe-cbaa3a580fe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0d40675-5880-4a99-b35d-b96b8530faf1",
        "cursor": {
          "ref": "24ed9c9f-5d93-4f05-af53-8c27ef969c33",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "3e40172a-bdc9-4545-9592-93caf3a1f939"
        },
        "item": {
          "id": "b0d40675-5880-4a99-b35d-b96b8530faf1",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d0d25fd0-a129-47c6-962d-9172e3f4d9bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88d4aedf-d0db-421d-961f-afc37e81f141",
        "cursor": {
          "ref": "4a9b7210-f995-462b-b51a-b7281721dabd",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "9dc4c4fd-3259-4ef4-9cc4-0441c1824b75"
        },
        "item": {
          "id": "88d4aedf-d0db-421d-961f-afc37e81f141",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "9c730337-09f6-4bb7-b6ef-37f03473fef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c22d46b-8178-48bc-9962-5f652310d715",
        "cursor": {
          "ref": "f7e1e2c4-00cb-4898-a0e1-7dfdb2fd40a5",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a1627f71-2538-4376-a0e7-ec7faa8a48f7"
        },
        "item": {
          "id": "5c22d46b-8178-48bc-9962-5f652310d715",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "c55e0b52-ed74-451b-b095-f99547b78d89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e504886-3703-4982-a519-c275bf34144d",
        "cursor": {
          "ref": "32e301f6-22d9-4761-8c9f-6bd23dedfe8e",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "8f5a0a5d-5e04-4785-a927-5881beb20eb9"
        },
        "item": {
          "id": "2e504886-3703-4982-a519-c275bf34144d",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "a3334ebf-4d4f-471e-9f82-76e7c4ce08f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f675a70-4ca5-4355-a0ad-08e7c4e0c5a0",
        "cursor": {
          "ref": "c592c79e-8e58-45bf-969d-2b945afef758",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "e549e77f-aea8-4a64-b4fc-1e5362e4dc00"
        },
        "item": {
          "id": "0f675a70-4ca5-4355-a0ad-08e7c4e0c5a0",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "251d0076-c85b-43bf-8a97-d799a547a28e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36660a90-1ca8-41d9-bb40-0b86b0db6853",
        "cursor": {
          "ref": "25ba5ff5-f8d6-4e62-9544-75d50e8445c4",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "7deb34e4-240b-482a-b8f7-38618074c231"
        },
        "item": {
          "id": "36660a90-1ca8-41d9-bb40-0b86b0db6853",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "0c33e1e6-932a-48ca-a9d1-d253f117c9eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e7b03f-abaa-42b2-b110-4c551b450f5c",
        "cursor": {
          "ref": "f6aed920-3f30-4ee6-8319-9fa04a2067ec",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "83ac275c-7864-4ed8-9b82-9088271fcbdd"
        },
        "item": {
          "id": "f0e7b03f-abaa-42b2-b110-4c551b450f5c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "cba82e46-c3f1-4fd6-a9b8-415846800efc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a061e7db-46a9-4e34-9327-a638be86956a",
        "cursor": {
          "ref": "c33fece9-e90f-4278-b910-b02467633aa1",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "e5033a48-ee95-4f9d-a63b-8d9232d19012"
        },
        "item": {
          "id": "a061e7db-46a9-4e34-9327-a638be86956a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "df7b29c9-2864-49f0-9056-a1593c279b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb1467ea-b8ee-4453-9060-9d26f3ffceed",
        "cursor": {
          "ref": "479d14ef-c9b7-4fcf-8aeb-101fdfbf0751",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "5a141a3d-bc87-4425-8e47-67b8efd2bd1b"
        },
        "item": {
          "id": "bb1467ea-b8ee-4453-9060-9d26f3ffceed",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "981eb2d4-445a-4c85-b1fe-ad628753e022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dffc437f-16ac-4361-a532-d763f8621ccd",
        "cursor": {
          "ref": "5f36352b-dbb4-4755-8a35-70b788429261",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "4b320c81-622d-4cae-bd72-bfe953e7b0ac"
        },
        "item": {
          "id": "dffc437f-16ac-4361-a532-d763f8621ccd",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "9970de65-3118-4b0c-af24-bd73884aa888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8e42083-1095-4b02-9870-8855e7c85a05",
        "cursor": {
          "ref": "921df73b-716d-4341-8b47-9bc1eed8ba9b",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "ce1e9a90-fa4e-4f41-8bdd-90ee54b1759e"
        },
        "item": {
          "id": "c8e42083-1095-4b02-9870-8855e7c85a05",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "8e96390a-75e1-4293-a752-750d6b74942a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ace16aad-0e52-40ce-b79f-bd9b9468d9de",
        "cursor": {
          "ref": "1f8a2ef4-c373-4524-bb1a-8eef184d0a1f",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "615dde8a-fe1f-43e5-890b-e23f3687fac7"
        },
        "item": {
          "id": "ace16aad-0e52-40ce-b79f-bd9b9468d9de",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "c6c1af7a-8d55-42a2-a0e7-fcceb781430b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35179ac0-983b-4c7e-b065-ba13d5c5d6e4",
        "cursor": {
          "ref": "4ec8e38e-4750-4ba8-b115-d64d11922d06",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "eb95376d-422a-4a2a-b3ee-4eb2bcc99120"
        },
        "item": {
          "id": "35179ac0-983b-4c7e-b065-ba13d5c5d6e4",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "9cf6b16b-793a-4e19-a595-30b6940cad7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc5c0368-94da-4b55-90a1-327e7ae10db3",
        "cursor": {
          "ref": "30cd4fff-5718-485f-8bd5-5ff0697fccb0",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "2af320f9-b1a8-4aaf-82d2-74ddc9c41b91"
        },
        "item": {
          "id": "bc5c0368-94da-4b55-90a1-327e7ae10db3",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "9b29d632-cdcc-45a4-9097-c9c17e10c893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acf7adeb-3422-431a-9cbb-69998aa264ed",
        "cursor": {
          "ref": "32862cca-4d9d-48a4-9f8d-bf24c4be5e7c",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "3f1880cd-395b-442b-8518-933afd33055f"
        },
        "item": {
          "id": "acf7adeb-3422-431a-9cbb-69998aa264ed",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "fe04d82b-f80a-4ae0-ab99-49209e7f422a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd124ac3-216f-48d8-9d99-e95875b5c235",
        "cursor": {
          "ref": "cfd983e3-551d-4750-800a-8decf5ea2fb5",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "f1fcf0ee-975e-4297-99a2-74d4ef827cd2"
        },
        "item": {
          "id": "cd124ac3-216f-48d8-9d99-e95875b5c235",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "6ab99537-6f7c-49db-9dd3-8e0370a21b3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31bc6f44-2a78-4377-ba4c-b8307f6dba00",
        "cursor": {
          "ref": "d6f930b6-4868-43be-bdac-170f94ddc5a9",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "cb8d5b96-a548-4b63-9a69-c57b2e8644b2"
        },
        "item": {
          "id": "31bc6f44-2a78-4377-ba4c-b8307f6dba00",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "91308508-7285-4547-9772-a893610bd081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e36accc-d623-4df8-aa77-4e90b56a79aa",
        "cursor": {
          "ref": "c217442f-f2c1-4420-a53f-bb0fd79fe0a0",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "315da043-7102-4657-9656-6c7e72f2c0d8"
        },
        "item": {
          "id": "6e36accc-d623-4df8-aa77-4e90b56a79aa",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "50c10771-2bd2-427c-9e10-78673d656e82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "807ac39b-680d-4473-975f-3c31357e0d8c",
        "cursor": {
          "ref": "14f81db8-7ab7-4e3b-97ba-fbeae7eba350",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "0abe99b5-66b4-40fa-a4df-46dcefa679d7"
        },
        "item": {
          "id": "807ac39b-680d-4473-975f-3c31357e0d8c",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "3d025342-dec3-4592-96cd-8acc5905812a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b02f3ef-243f-4a88-9d64-13fde94474dc",
        "cursor": {
          "ref": "91759d0c-0673-48dc-a65f-527489c35177",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "61ce8083-5444-444f-9981-fc063defe6c8"
        },
        "item": {
          "id": "8b02f3ef-243f-4a88-9d64-13fde94474dc",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "a85c961e-5617-4533-a7b7-c701ad45ee36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1057ff0-efab-41b4-af7b-acf968e0a62f",
        "cursor": {
          "ref": "be6e7019-0576-4f2d-afa4-733704a62107",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "9ad81509-243e-4e03-b130-bfb1cbc5364d"
        },
        "item": {
          "id": "a1057ff0-efab-41b4-af7b-acf968e0a62f",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "c04e441b-49e5-4d5b-a93c-8d454dcdd766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a340ef48-1de4-4677-b0a3-e8f6f0c77405",
        "cursor": {
          "ref": "97eb45ff-ff0f-4807-b1b8-7a288118bef5",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "74984fc6-c2bb-4334-9a06-e4c45517661c"
        },
        "item": {
          "id": "a340ef48-1de4-4677-b0a3-e8f6f0c77405",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "ff01f506-eef8-4a1d-9d49-4087bb139558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dc2e26d-1752-4a86-a529-128b296ca439",
        "cursor": {
          "ref": "42e215df-268f-4618-a895-093cee5519c4",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "aeb2f1ae-7052-4492-9652-d6d684308596"
        },
        "item": {
          "id": "1dc2e26d-1752-4a86-a529-128b296ca439",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "2d4fc5e6-e8be-4a0e-bc7a-f6789cc89882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "550cd027-6d3d-4413-b175-8422fc422c80",
        "cursor": {
          "ref": "403a8719-a571-4dcd-ba1a-69c33b341459",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "6b952ffd-9021-4294-a56a-3f14b96d2343"
        },
        "item": {
          "id": "550cd027-6d3d-4413-b175-8422fc422c80",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "6bd60e93-1972-4e70-98c3-c6676d33a8cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fc90779-a807-43e9-bfca-5e48fa0a111f",
        "cursor": {
          "ref": "25062ea4-1917-4843-ab3c-9181e1583b80",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "a4862106-ce25-4c50-afcf-a46bfa4d9f0e"
        },
        "item": {
          "id": "9fc90779-a807-43e9-bfca-5e48fa0a111f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "58a69125-b51d-4cad-96e7-0f77a8376e78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b4c5bb8-661b-4622-bd08-3294a42e8801",
        "cursor": {
          "ref": "9dc4ef31-4e67-4e0a-9898-3c9a7f78d95f",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "839e3874-dc52-4384-969d-c353a37029fb"
        },
        "item": {
          "id": "6b4c5bb8-661b-4622-bd08-3294a42e8801",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "19864ee9-457a-40b3-8539-1ff2c9e876b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05ff585b-fd55-429e-ae26-f7473d1453ae",
        "cursor": {
          "ref": "dd4f9e26-dd73-46c3-a148-8af9d66939a5",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "88aef767-558f-4fac-baba-e222b776e88c"
        },
        "item": {
          "id": "05ff585b-fd55-429e-ae26-f7473d1453ae",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "a9cf12c6-2945-4ca7-ae71-e18c8928e896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ad629b0-9c9e-447a-8ea7-00e7ad7335a0",
        "cursor": {
          "ref": "688a1410-357f-4dc0-b2de-33f8d631f64a",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "fcce1611-6678-48d3-8f1c-a5c802b4e2ff"
        },
        "item": {
          "id": "4ad629b0-9c9e-447a-8ea7-00e7ad7335a0",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "eb5e0405-1705-4961-ad12-357e53af942e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9971f88-f086-4477-9029-051cb9fced90",
        "cursor": {
          "ref": "f262248f-4db0-4950-9fde-598e33b8732a",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "2dd3c181-539c-4630-adf6-e7a1ba8ead0c"
        },
        "item": {
          "id": "f9971f88-f086-4477-9029-051cb9fced90",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "e558504a-52e4-4b4c-aa17-c5f115d85be2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2faa2d03-97a0-4f69-bd30-9943244f88bf",
        "cursor": {
          "ref": "8bddb468-7e4a-4a2d-8785-8e78a0e7ac1c",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "3e7d4084-f875-4836-8f16-763088a3f8e3"
        },
        "item": {
          "id": "2faa2d03-97a0-4f69-bd30-9943244f88bf",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "94a4c469-85d0-44c1-b722-e4a38cf13a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf1ffeed-15e4-4826-a9a6-3b8ec390ba50",
        "cursor": {
          "ref": "a1af9e80-ab1c-468b-bf24-2cf1647f518f",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "d6ff9356-2697-429a-ac33-629622b92c19"
        },
        "item": {
          "id": "cf1ffeed-15e4-4826-a9a6-3b8ec390ba50",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "1fef4d04-e639-4e50-b0f8-1c426b387027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3587d668-c56c-476f-96ee-91b95b84a7a1",
        "cursor": {
          "ref": "3a7d723a-d9d3-4051-b459-05a1ad3fd506",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "e2fee9b8-05d3-40e0-add7-98f6dfbb87ad"
        },
        "item": {
          "id": "3587d668-c56c-476f-96ee-91b95b84a7a1",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "b73f8be6-582f-4d7b-a960-6ee3b80890b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee145fae-dfc9-4a59-9984-b8d778507054",
        "cursor": {
          "ref": "a6191cee-ae1b-4db6-beca-53f750057500",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "16021f29-8cf3-4214-bb88-bcc63db1611b"
        },
        "item": {
          "id": "ee145fae-dfc9-4a59-9984-b8d778507054",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "7ec9e4f1-1c4e-40ce-9a8d-49798e3ef4c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0924a357-a855-4b33-aa10-89cc9aaa3698",
        "cursor": {
          "ref": "b71b5130-e83c-448f-8fc4-b6ee2c2a9aa8",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "9d6f0490-243d-4aeb-b5aa-6e6a46b48f0f"
        },
        "item": {
          "id": "0924a357-a855-4b33-aa10-89cc9aaa3698",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "10a0e9c9-f309-4c73-868a-1951fba0c55c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca537035-a80f-4023-857c-b7b31d386dc4",
        "cursor": {
          "ref": "1ac0a69d-5b78-4f10-9565-685983c45fc8",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "90ea62d0-00f8-4fa2-a049-e81ca4423279"
        },
        "item": {
          "id": "ca537035-a80f-4023-857c-b7b31d386dc4",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "db4d93e7-8326-4dcd-8064-3e6a534ed394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c1fb0ec-ebbd-4a24-a7f1-96bc46a066e8",
        "cursor": {
          "ref": "7c3589a6-3aec-430f-8681-441d73b6e881",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "84d6a9cf-1682-4eaa-be32-35b1b96c0cb0"
        },
        "item": {
          "id": "2c1fb0ec-ebbd-4a24-a7f1-96bc46a066e8",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "5de13554-cc0a-4d05-8031-d0d6ec76f188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebd37b99-a945-49cd-9840-1e2e871d47ee",
        "cursor": {
          "ref": "94cc0713-c051-4669-8b17-2fecff562fe4",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "f7ad7ee0-f242-4ea3-ae52-38978a0a9c6c"
        },
        "item": {
          "id": "ebd37b99-a945-49cd-9840-1e2e871d47ee",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "0a122932-21c4-4598-834f-b300fde3606e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f025d16-05c7-435d-843c-c109a793cbef",
        "cursor": {
          "ref": "ac50503a-ea88-4bd1-a762-29261734907e",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b3b40f4d-41d3-4a2b-92a4-b65e9775ce20"
        },
        "item": {
          "id": "6f025d16-05c7-435d-843c-c109a793cbef",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "9f47e602-7259-4462-917b-9e419aed21f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38ff08f4-0c25-4327-8133-5bf18427206b",
        "cursor": {
          "ref": "7e5a87ba-6c4d-40ea-b9a8-18682ab9bdc5",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "da76e059-7593-4447-adb4-2020045e6a4c"
        },
        "item": {
          "id": "38ff08f4-0c25-4327-8133-5bf18427206b",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b13d30e9-856b-40c6-a68c-133699afd7b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba2b1a3a-2df0-4fea-b2b4-266b4abcc06b",
        "cursor": {
          "ref": "8061f3ff-541d-4d45-a4e1-9d5e9b1d1975",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "91cbbc10-efc2-4202-af67-8e947472318f"
        },
        "item": {
          "id": "ba2b1a3a-2df0-4fea-b2b4-266b4abcc06b",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "f638ac59-7259-4d3c-9464-5a2f05b2f78f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 189,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a6bff6d-8597-400c-942b-5f43d193b950",
        "cursor": {
          "ref": "088ccd09-7d96-49e4-bdfd-c6aa4294a052",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "28a3b4d2-fb93-4f80-8103-db1226f335ca"
        },
        "item": {
          "id": "6a6bff6d-8597-400c-942b-5f43d193b950",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "375c1c59-1e17-499a-b7b1-91b5fdfad103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9fabf45-b78e-407b-8f21-c32212aa0c67",
        "cursor": {
          "ref": "49c20017-b7f4-499d-ace2-a24707708122",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "52a2f60a-e8b7-44a9-9802-dd709e49a791"
        },
        "item": {
          "id": "c9fabf45-b78e-407b-8f21-c32212aa0c67",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "f34289b4-2f48-45ef-8aea-b86177d05466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c5da3e3-35c5-46ce-b8a5-2fb4adc1ab6c",
        "cursor": {
          "ref": "90609fca-2211-42cd-b32a-e59dab03ab8e",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "9cab6be6-4a25-4d04-bbeb-51f6579c64f8"
        },
        "item": {
          "id": "8c5da3e3-35c5-46ce-b8a5-2fb4adc1ab6c",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "110261e4-b17e-4138-869e-93e952e213ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "610af91d-faec-4ecc-8e79-f580f9e240fc",
        "cursor": {
          "ref": "41890672-c7ce-4a66-89f9-94a1a3f55cc3",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "7bda1465-bcf0-405a-bdfd-d4cce16bc41d"
        },
        "item": {
          "id": "610af91d-faec-4ecc-8e79-f580f9e240fc",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "ee304634-bb0b-4dbd-ab9b-2fb9eca136d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c30d4ad9-bcfe-478f-9dc4-1dda781a6fb0",
        "cursor": {
          "ref": "32bfdfdd-a3e0-4d88-9351-7515e4a06e32",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "c3f25b4b-2551-4e82-a629-78ee3152d896"
        },
        "item": {
          "id": "c30d4ad9-bcfe-478f-9dc4-1dda781a6fb0",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "33a9a646-65c2-4595-9dfa-c10b3c5aed18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c333a09-aeeb-4de7-b8b3-a7f09d8e48e8",
        "cursor": {
          "ref": "bf804708-e05b-4c79-9edb-a8c6d6c83552",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "22ce4bca-99ff-4a80-a5b6-b5d25f4f8869"
        },
        "item": {
          "id": "2c333a09-aeeb-4de7-b8b3-a7f09d8e48e8",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "1b1cf95e-2231-454c-9d86-bd9b2e2b0582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c94293af-cccd-4800-948e-ef830c78975f",
        "cursor": {
          "ref": "1614cae0-185b-42b8-8528-0c7c096f494d",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "e71bea6f-e580-4955-8b93-6f71c271f17b"
        },
        "item": {
          "id": "c94293af-cccd-4800-948e-ef830c78975f",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "9c9634ae-b061-45cb-994c-87116bf2c4bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b5575c9-d49e-499f-b307-9e60945ebfb0",
        "cursor": {
          "ref": "b2ce0822-c2fb-45df-980f-e170ba9dfe0c",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "5891c2ec-344b-458d-a0a5-ecb7bed0cdbd"
        },
        "item": {
          "id": "0b5575c9-d49e-499f-b307-9e60945ebfb0",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "44f63111-ecc8-49b8-a562-ba3e0ca9a03b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9b03073-fe34-400c-bcf4-dbe1260135d9",
        "cursor": {
          "ref": "481d4677-7468-4503-96a2-a474cbdf3bc7",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "2513f3cc-d596-4331-9825-ec51f481f409"
        },
        "item": {
          "id": "c9b03073-fe34-400c-bcf4-dbe1260135d9",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "2dc6ded3-5036-4b2f-a49a-41fd473d5d3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31fe9b8f-49fe-4bb0-b97b-9ea10f3bdcbf",
        "cursor": {
          "ref": "552a7df8-a3e7-45d5-abab-383c59245037",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "06d435df-31f1-473d-a275-bfaabdea602f"
        },
        "item": {
          "id": "31fe9b8f-49fe-4bb0-b97b-9ea10f3bdcbf",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "d019b4ae-4cf9-4744-9c6f-7dd9bdd2b0cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa3b9f98-a9db-407e-8bcf-8f2c694f6973",
        "cursor": {
          "ref": "4e29d257-38ec-496c-aeb7-788b2ae1a3dd",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "94eea597-5079-4913-8831-f644a611a0c7"
        },
        "item": {
          "id": "fa3b9f98-a9db-407e-8bcf-8f2c694f6973",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "deb4800d-e7e1-4bad-876b-b66f270648da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1966ad6b-d757-489d-afbe-46f41e73eb0f",
        "cursor": {
          "ref": "f58a08c5-a4da-422a-8389-150a371d0975",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "4a59b179-f86f-409e-a183-c4acff11356c"
        },
        "item": {
          "id": "1966ad6b-d757-489d-afbe-46f41e73eb0f",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "1a6aad55-8b15-4c80-bacb-b9ca77ab6b7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2d83683-f4db-4f2d-914a-f3fb6eb8f2b5",
        "cursor": {
          "ref": "903fc660-b0b8-468e-88a3-b1cb45feef28",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "87eb2c63-e7ef-4e36-9eb0-9a03764a60a1"
        },
        "item": {
          "id": "e2d83683-f4db-4f2d-914a-f3fb6eb8f2b5",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "834b1dc7-0718-4f51-a62f-0b47993f7b57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eea4b194-cccc-4d2e-91fd-e35ead905510",
        "cursor": {
          "ref": "13fb073d-bb3e-436d-b9e3-b5974b963b32",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "4037b569-5209-4fe9-80b9-66c42a179950"
        },
        "item": {
          "id": "eea4b194-cccc-4d2e-91fd-e35ead905510",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "5a8d51fe-bb11-49f1-8e89-e44d46aa0a13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbf56795-4efc-44e8-b0da-3b9e7f92e796",
        "cursor": {
          "ref": "2207a164-686f-469c-971f-10c324d33580",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "17890149-135c-44c1-821d-f9e4b268c996"
        },
        "item": {
          "id": "fbf56795-4efc-44e8-b0da-3b9e7f92e796",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "441aeddc-8715-45be-b9c8-09f1c139b449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac62d14d-4915-47d6-9c7b-308b40e2bf2c",
        "cursor": {
          "ref": "1668bd2b-0271-41eb-a941-69fcf9394c40",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "97f2ca14-89bd-4709-b419-75651a4cbbb7"
        },
        "item": {
          "id": "ac62d14d-4915-47d6-9c7b-308b40e2bf2c",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "0e748d2d-0f80-4453-b713-fd1468eb2d3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "203a76c2-7537-4f47-ad81-0f377c13240b",
        "cursor": {
          "ref": "d4ae2198-d500-4ddb-ab20-7ddf6ad4288e",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "cc15c00d-e9bf-4011-a1fe-027a68aa8f3a"
        },
        "item": {
          "id": "203a76c2-7537-4f47-ad81-0f377c13240b",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "3962e110-271b-4397-a2e6-7e970de9f162",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16061c48-2ad3-42b8-93df-0b69a62b70e7",
        "cursor": {
          "ref": "7d83cc3c-f42e-49cb-9700-9d65261b68df",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "ed650f4f-f0a8-43ba-bf9a-01406dfc0f3a"
        },
        "item": {
          "id": "16061c48-2ad3-42b8-93df-0b69a62b70e7",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "8f70714f-13f4-4ea8-b86e-2b09c84b6c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edc069bd-abe3-4392-b88a-5add9bf4440f",
        "cursor": {
          "ref": "f3fb6136-6831-4fb3-9dc6-bfb5d6fb05bb",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "55909c08-63e3-4529-a1b2-a472ff5e098c"
        },
        "item": {
          "id": "edc069bd-abe3-4392-b88a-5add9bf4440f",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "834d36c8-ba11-4031-9fed-bd3b28c57af5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00d46369-0f41-451a-86cb-c36a6f3cfcd9",
        "cursor": {
          "ref": "b16d9694-1221-4c4c-99a2-0d3c350860de",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "11de820b-c6d7-48dd-9346-5f53a7d638b6"
        },
        "item": {
          "id": "00d46369-0f41-451a-86cb-c36a6f3cfcd9",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "60339188-e514-4ce3-b9c8-b2506b667187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85e386f6-99ee-4095-89bb-ede6b9578b13",
        "cursor": {
          "ref": "582d0350-ceb9-43e9-83db-a2d212ad9d5f",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "98e64243-107b-4d82-ac0e-e28bea3cfe33"
        },
        "item": {
          "id": "85e386f6-99ee-4095-89bb-ede6b9578b13",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "e781ad23-6930-4911-93c9-8221504499b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab072cc1-7a07-4a30-9013-eeccdbff7090",
        "cursor": {
          "ref": "2f6d5a5e-5b64-4434-a882-2637fea001b5",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "436b9cd5-7dcf-4e2e-82b5-5777c8222393"
        },
        "item": {
          "id": "ab072cc1-7a07-4a30-9013-eeccdbff7090",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "a8d0e851-fe36-45a7-bfef-de880c76b9ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c97ea91-ba70-498a-9e52-87c1dcba2c83",
        "cursor": {
          "ref": "621a803d-1e72-4ea5-850b-604aa1ce536e",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "711a2be4-8f73-47b6-be8f-f08fbd744a62"
        },
        "item": {
          "id": "9c97ea91-ba70-498a-9e52-87c1dcba2c83",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "6d8034eb-5497-4379-b7b9-923d986b57cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85af0f64-f249-4115-8e1b-0fcaeac11122",
        "cursor": {
          "ref": "9e6bfe52-95d9-4eed-91df-b3914802abf5",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "e091491e-57c1-44a4-aa26-0a9f7faefa58"
        },
        "item": {
          "id": "85af0f64-f249-4115-8e1b-0fcaeac11122",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "70d506a1-3a02-45c1-b471-6051fc0f9fe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "804ddf3d-145e-4795-8dfe-1f2f8025e071",
        "cursor": {
          "ref": "de7725bb-7d8c-4bb3-b4c7-f74266de37ac",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "412dd4eb-dc59-438f-a405-f557ce0ab218"
        },
        "item": {
          "id": "804ddf3d-145e-4795-8dfe-1f2f8025e071",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "82c27596-650c-4a56-af4b-186ae8ec9b66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70b8a94a-c9e2-4ced-9fc5-2af570a4cd94",
        "cursor": {
          "ref": "6bdb3bae-cc06-4882-8465-5c2acfb3e38b",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "29096e2a-8205-493c-9864-a85d489bbc43"
        },
        "item": {
          "id": "70b8a94a-c9e2-4ced-9fc5-2af570a4cd94",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "9375a231-caf1-4376-bb5a-a0048d4743aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4612cb44-6bc6-4d1b-ae74-48f167e0cc6e",
        "cursor": {
          "ref": "e65db7a2-dc20-464a-aae2-1edb12e59372",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "65825cd0-a5ee-4e5c-a4d0-0b8fd36e78a1"
        },
        "item": {
          "id": "4612cb44-6bc6-4d1b-ae74-48f167e0cc6e",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "8f379fb7-93f2-4f3c-a52c-5339b4337249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e7c22c6-88af-4af6-a29a-d1e38bdf1b71",
        "cursor": {
          "ref": "19650ca7-ac76-46b8-8ade-471a826f7e40",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "adab49b0-c70c-4af3-bfaf-561a57ea26e5"
        },
        "item": {
          "id": "9e7c22c6-88af-4af6-a29a-d1e38bdf1b71",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e1409c3e-1a4a-499d-9f8d-8b521bbdee83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51ad95bf-b3ca-4c7d-8646-d63d2a19f97b",
        "cursor": {
          "ref": "8a9f71e1-313c-4d3c-b26e-7d5fe5b478cf",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "9bb4909b-165c-439f-a3b4-bb1f73a7d58e"
        },
        "item": {
          "id": "51ad95bf-b3ca-4c7d-8646-d63d2a19f97b",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "baf3bbf6-c703-4616-9e6a-3469a9ce413c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e0ef55a-7363-4682-823c-6d3fd8671447",
        "cursor": {
          "ref": "ddeea1ff-388f-461f-888f-1a9cd7b6654c",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "4c55b236-4c54-46f1-95e5-fe4936453536"
        },
        "item": {
          "id": "5e0ef55a-7363-4682-823c-6d3fd8671447",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "fe0c06c7-c80b-4ee7-8e1d-be3c71a66af0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a9cb1ef-09ed-42b7-a9c0-ff8cbdf319d6",
        "cursor": {
          "ref": "af920f58-e4a8-481d-80a9-c6d010aef91c",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "a2355aee-c347-48e7-9c83-3bef3f07a7e3"
        },
        "item": {
          "id": "3a9cb1ef-09ed-42b7-a9c0-ff8cbdf319d6",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a89a359f-dbad-4017-9a44-7c00be4a3b7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da585a69-6fc1-437c-9541-b79fb92559d5",
        "cursor": {
          "ref": "dd03b529-ea14-46a4-9559-365e8518e794",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "74a3b9e6-161a-4236-98e4-6ff25ee5716e"
        },
        "item": {
          "id": "da585a69-6fc1-437c-9541-b79fb92559d5",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "7d1a1554-05de-469b-a903-13c16c384830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae384a8d-0214-4290-b429-cfdb1d2265a1",
        "cursor": {
          "ref": "d99b85fe-2795-4304-bf2e-5ddb98b40054",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "9b97b148-7b13-4c21-a681-fb1e795ca26a"
        },
        "item": {
          "id": "ae384a8d-0214-4290-b429-cfdb1d2265a1",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "cb4ac600-cf02-4faa-9302-cc93f6975cbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2e46e39-5118-442f-8202-3bb5913a1155",
        "cursor": {
          "ref": "8c14b9a1-9b24-447d-9105-e0d4f8289aea",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "064c279f-efc6-4585-b689-8ca442fc83cc"
        },
        "item": {
          "id": "c2e46e39-5118-442f-8202-3bb5913a1155",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "1df554b0-821c-405e-a43a-ca55ac364427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f1c26cf-3ab0-4cda-8d12-3abd11f83350",
        "cursor": {
          "ref": "9771dd72-698e-4f5b-a492-a2b823c3a9b4",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "863c42ef-10ca-46cb-a7bf-c3ca86642f30"
        },
        "item": {
          "id": "7f1c26cf-3ab0-4cda-8d12-3abd11f83350",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "290f0592-c084-4ff7-93cc-f6be6ac7171a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "549b1372-96b0-4cd6-8923-2a8b6dc49b25",
        "cursor": {
          "ref": "2350495f-0155-4770-9e39-7947b4153ca8",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "8c3dd745-61cb-4941-8eb1-e1c97dd5762d"
        },
        "item": {
          "id": "549b1372-96b0-4cd6-8923-2a8b6dc49b25",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "f68a9d1e-b9e7-40f7-9496-64049b09af6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96eacb0c-4676-433e-a611-e70014ff3569",
        "cursor": {
          "ref": "60d0e979-f3d7-41d6-8d17-01b439aa54f9",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d0f30d4a-5b41-408f-9cee-e8190632fcf6"
        },
        "item": {
          "id": "96eacb0c-4676-433e-a611-e70014ff3569",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "1a7d8ded-6b88-458d-983f-b4ee37392e6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5411288e-e80d-4b4f-8b71-9e98c41bb4d8",
        "cursor": {
          "ref": "9ca31b52-11ea-4e64-9973-8daa54c2a83b",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "01709f0b-29f6-4a3d-bb14-552b93a41e8c"
        },
        "item": {
          "id": "5411288e-e80d-4b4f-8b71-9e98c41bb4d8",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "df27031d-164b-4cfc-818d-ce467d90ab50",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7517272e-4710-48fb-b621-4cd90051599d",
        "cursor": {
          "ref": "b1d6b406-b69c-49d8-8a77-03999c7655c3",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "5aeefcbf-81ac-406d-9b6e-48b752d0f354"
        },
        "item": {
          "id": "7517272e-4710-48fb-b621-4cd90051599d",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "be55c160-9ada-4ff5-a703-2a660b1647c6",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 63,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2153c0e4-68de-4f59-bd49-98d643e93f31",
        "cursor": {
          "ref": "20f397a6-236f-4238-adc0-fd7d3b239f33",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "b7e5bd4a-a9a9-4562-a6b5-87613bbf96d4"
        },
        "item": {
          "id": "2153c0e4-68de-4f59-bd49-98d643e93f31",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "12dd8b2d-3c68-4e61-aafe-3df960a443d2",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a40d83c-ef5a-4ca2-8aa6-c1ad01f6c861",
        "cursor": {
          "ref": "b5b69be0-f8cc-4139-adde-ed05034bf711",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "794c5fb1-d9be-47fd-b162-1d5adf97f3e9"
        },
        "item": {
          "id": "3a40d83c-ef5a-4ca2-8aa6-c1ad01f6c861",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e3816246-da1d-4d4c-bbab-af502789f5cb",
          "status": "OK",
          "code": 200,
          "responseTime": 79,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f57057dc-248f-4cd3-ac55-08465e0fc181",
        "cursor": {
          "ref": "e21b7ee6-146b-4917-9e60-36aeea27dce0",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "f70141e4-c0a3-49d6-9eb3-2bcaf2b010c0"
        },
        "item": {
          "id": "f57057dc-248f-4cd3-ac55-08465e0fc181",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "51000c14-9dcc-4479-8ebc-01cc479a9102",
          "status": "OK",
          "code": 200,
          "responseTime": 78,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a926b0c9-5f0d-416b-8a43-cb95b3aab679",
        "cursor": {
          "ref": "24399878-205a-47be-81f1-af8d783b430b",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7ff01b18-dd30-400d-8e87-d51f9e0fc310"
        },
        "item": {
          "id": "a926b0c9-5f0d-416b-8a43-cb95b3aab679",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e3e2cc76-9694-4ef2-bb50-a3d3c8cf5294",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a926b0c9-5f0d-416b-8a43-cb95b3aab679",
        "cursor": {
          "ref": "24399878-205a-47be-81f1-af8d783b430b",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7ff01b18-dd30-400d-8e87-d51f9e0fc310"
        },
        "item": {
          "id": "a926b0c9-5f0d-416b-8a43-cb95b3aab679",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e3e2cc76-9694-4ef2-bb50-a3d3c8cf5294",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a926b0c9-5f0d-416b-8a43-cb95b3aab679",
        "cursor": {
          "ref": "24399878-205a-47be-81f1-af8d783b430b",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7ff01b18-dd30-400d-8e87-d51f9e0fc310"
        },
        "item": {
          "id": "a926b0c9-5f0d-416b-8a43-cb95b3aab679",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e3e2cc76-9694-4ef2-bb50-a3d3c8cf5294",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1524dd4-cc6d-4282-8710-b11f26ac38e0",
        "cursor": {
          "ref": "5238e943-8e9a-4c96-a957-6b141598ceee",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "010b8079-8e3f-44d9-8c70-0bd1f93da3a5"
        },
        "item": {
          "id": "c1524dd4-cc6d-4282-8710-b11f26ac38e0",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "985019bf-9be0-4d7b-b94d-d5405211f0f1",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 65,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22ce56a8-3ba3-4b70-ac30-3aaab333cabb",
        "cursor": {
          "ref": "2c5a01f9-a737-45fa-983d-36ac55b9e186",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "81cf3d31-d879-4f3b-8f98-be363b67f153"
        },
        "item": {
          "id": "22ce56a8-3ba3-4b70-ac30-3aaab333cabb",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "e29bb91b-acb2-4f1e-b71e-27fa6516bd72",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22ce56a8-3ba3-4b70-ac30-3aaab333cabb",
        "cursor": {
          "ref": "2c5a01f9-a737-45fa-983d-36ac55b9e186",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "81cf3d31-d879-4f3b-8f98-be363b67f153"
        },
        "item": {
          "id": "22ce56a8-3ba3-4b70-ac30-3aaab333cabb",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "e29bb91b-acb2-4f1e-b71e-27fa6516bd72",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a179410-4c17-4f9f-afea-172e3c3e05ec",
        "cursor": {
          "ref": "63f2f08e-bc19-4bfb-8400-6cf0b271b7e3",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "59d39a0f-9103-44c5-80f3-1c6e0399082b"
        },
        "item": {
          "id": "2a179410-4c17-4f9f-afea-172e3c3e05ec",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "ce2e1bce-b341-41bd-8b2d-ee1e498b40e0",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 64,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db42df2e-c620-4a63-9454-5fbee6995732",
        "cursor": {
          "ref": "7c4a3f22-ccfc-4166-ae43-8046d1abc9f6",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "6b158454-5fce-49a5-857e-df3a50953316"
        },
        "item": {
          "id": "db42df2e-c620-4a63-9454-5fbee6995732",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "9df19f58-e1c2-41b8-b836-2b48712bfbab",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db42df2e-c620-4a63-9454-5fbee6995732",
        "cursor": {
          "ref": "7c4a3f22-ccfc-4166-ae43-8046d1abc9f6",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "6b158454-5fce-49a5-857e-df3a50953316"
        },
        "item": {
          "id": "db42df2e-c620-4a63-9454-5fbee6995732",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "9df19f58-e1c2-41b8-b836-2b48712bfbab",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d941b4d1-662c-4ec0-8ef2-1dc64599f118",
        "cursor": {
          "ref": "66b31fde-bb90-41e4-96ca-19fa652f6f89",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "1ca8fb03-65d8-454e-b197-4116472ac826"
        },
        "item": {
          "id": "d941b4d1-662c-4ec0-8ef2-1dc64599f118",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "4acc0ddd-6a89-4924-9e88-95fd02697c11",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 66,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}