{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "72c7847e-ca09-46b6-93f4-e1e4949edb8c",
        "name": "Clear Cache",
        "item": [
          {
            "id": "885a43ff-aa44-4ac0-9dc2-3863d2f7d8e6",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5ac94d0d-c061-40e1-950a-7f8b00f8bcf9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "93df415f-4a43-43f0-b844-21946d9fc7c9"
                }
              }
            ]
          },
          {
            "id": "08b2e15a-764d-45c9-815f-310d8a5440b4",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5533998d-f4ff-4241-adf8-86c76fab7040",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7e21226b-b927-490b-99ba-36bb0ac4ef65"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "7eba8546-29ea-4931-8782-5440e58b64e4",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "d75184a8-a4bf-4844-9be3-ba8daea0642d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6083a393-357f-4a93-8d20-2290330b7c1e",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8c3c562c-0b2c-458d-aed7-5dc84ea4fbfd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3d3d57b4-cb68-4bb8-941f-eccda9e7d678"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b34396de-6f46-4dd6-bee7-8b9c2c97fc56",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6cd5aa8c-c96c-4ea4-be1f-eacf6d07cc16"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "bb9b9a83-ee4e-420e-b92d-0a86b7eb36f5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "16fa630d-3c60-4641-a5c6-feaf42e36822"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4e60d160-5923-4a96-8183-100df955eedf",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "749de1bc-c98a-4744-a0c5-fe41fc4c3aac"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "84efe793-163d-4341-a5a5-992fcb823357",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "da5e2dc1-fa3e-4660-8b4c-6e38906e2345"
            }
          }
        ]
      },
      {
        "id": "8ed91cbd-de3b-4c23-a0c0-96de0ce3e456",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "7057136d-44a5-462d-b8ba-399eceedc919",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e0d4d358-1cca-403f-b959-8308a6d8c312",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "52487bab-c856-4549-b83a-dca4e2b9f4bf",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6f9630a-8e3d-4ea8-aaaf-56887dba12ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c54c4ded-d9d2-41c8-955d-a1c50fd6a798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fd1e3fa-5823-42d3-acdd-206e65af6b13",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd7883a-5b33-4671-98e4-ab594c7ea1d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a578720f-104e-4b21-af66-0adec7cab4b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eb0def0-a18e-4794-9627-db8f885b4dd9",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61d6f379-1cb4-4f6d-915c-2db84c8d2c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "79e382ad-cc47-48c0-bf13-472c41259df6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "db233a5b-5a02-4ea2-bde5-b69287fc5c4a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c88a9038-3891-43fb-9685-037028367e4f",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9240018-111a-4673-8655-e6c8d05a03cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "da154ccf-6f87-4e81-a630-86668991f366"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf2660a-950a-4cba-9397-bbda32ce38fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6076d524-4372-451e-9472-482c5112c888"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "001e3689-4121-4355-8f88-55e1b7779482",
            "name": "Positive Testing",
            "item": [
              {
                "id": "64c62b38-81f2-4ee3-9cb6-0f6449a6e924",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aaae5cb5-8a5f-4e71-8996-9bd60f2395ae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "8c1fd6f8-4852-4ba8-b7a5-b4960a5668af"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "63b3a941-469e-44ca-867d-3f521387a3b3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "c3fe7802-7a14-4883-82c5-c9ffaccb8a48"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ef0afab2-db92-4343-85b0-42046e914e5e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "82cf01e3-1f3f-41fa-9238-e8c0b0b9eb70"
            }
          }
        ]
      },
      {
        "id": "f22e2556-2057-4d77-af10-f0f774815ce5",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "91acbbc6-a503-4a5d-b069-9c1a259ca350",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f5f57f0e-ebfa-4a76-947a-eff5e3e5d60e",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "86252c90-dd4a-47c6-8a95-1f1b7949738d",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73368788-56c9-4ce1-afc9-afc834d306e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2328ef37-1f38-4454-bb13-bd0a2046d875"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c341a899-e75a-4860-ab4e-0ea39738abdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "902cf385-dc87-464f-90f8-ed773c8007d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dc1fb34-2926-4883-ad5b-cfbd5f6db22b",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35c5483e-68f3-4119-b26a-724bf1548722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8676316-ed11-4fcc-887b-3a6795d32cb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f2aed67-00a3-4e1b-b357-e9b3a618ab11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2aaf6fcd-7d1f-4343-881b-255b10784f1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f09191be-28e3-45db-b559-c83e1a3438b3",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc498ce1-6ba9-4032-9ff3-b534d82ca72f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b24f27f9-3ce3-488f-9a0a-84991553a85b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b840254-fcaa-46eb-bc58-4fb9e4a42962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad7692c8-e8d4-4cf2-9476-1e729384dfdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8595a1d5-6823-4681-9406-38606f0be85b",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4830971-6c89-492f-bc7a-8e6d61ddb4a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8abe8c43-bd60-4f11-b91e-1da51f586fb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dd33e0d-c652-4ae5-9530-5c73181d8071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b50c2630-d4a3-4d46-9e30-8b64d7870bb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "598cf220-fbe5-4675-acb4-ad401a1f486b",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fe28d69-9304-4277-8537-cdb0c2118a32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7be9536f-4c9a-4e4d-99ed-7de52b0e2355"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22f3f6de-bf19-4469-a6ed-30443ad42585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "185b4df3-959d-4639-be66-00b7ace649db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb8ee168-00f0-408d-8668-21c1f8935750",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1dc43eb-e17e-45f3-a79c-a0fb9f2d1e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f6a96ca-c744-4f25-b068-64414f0aaae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f118457-6254-4a70-87e9-1873924c1bd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd35d5f1-a60e-4bf6-b69b-f08126c8033b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79114b81-76d6-4669-9b89-26c63758aef2",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38ca2b2f-f525-414a-b393-0c392007dfc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccf84971-c76e-4ce0-bb7a-fefd0c873dc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "486a3658-8b0b-4591-ba56-cb2bd51c1897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "888a7c35-ee52-4e08-99af-1dda46e45412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baf976e0-8756-4e44-9798-600ffc33bfd6",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16353fae-8b4e-4e01-a390-64cfda7c06d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6a777be-5265-4306-b5fa-291d22f8d108"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "283a5f78-2abc-487a-9f43-a1e31cf57bdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5666984d-d4a4-4571-a59e-12a4f3950751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1431428-ce96-4717-a0a3-c9da3f406c24",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "908d0612-9cb9-41e3-a797-371d39e589f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1622895b-9e6d-4046-84a0-ce3d7822bf13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9779590d-5073-431e-bc06-26fe5854f1e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78594aa3-c09d-4943-b265-a0935fc226b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e7bcf9c-9ebd-4e68-be8c-3cb34c3bff93",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d307f6c4-1410-4d76-a0ee-47f72dc61352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "451bfff1-01f7-4fdf-9896-76190e165cfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39de3121-57ff-4cdd-8779-33d4cb6fa9e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c236a93-ea85-4c47-9712-cd86b636a7c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6608fd61-825b-41b9-a83e-3e4714ff692d",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6e474b9-8680-4f12-9cf1-f10d56be25bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea163cf1-19c8-482d-87a7-6db3e2b8ec32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d50b9bea-8b29-400c-8fd0-921d43427ad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be7d0325-b386-4052-9f80-f5b82831e26a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f37b9d7-bc43-494b-b959-d06488e8ede3",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "600af286-a0c5-452a-b505-0bd6f444ab2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "600998bd-ee36-44ea-bb74-57a9eec9c257"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2c56e5b-0007-4084-a000-74affc1cf9b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c611371-78f8-44bf-ad91-8380b11e101f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6bae6ea-216c-4e33-8ee4-75d8c30455cf",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89f247fd-e1bd-4540-bf8b-fc78957e98e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3fe31d4-c507-4187-8c68-e5a2cc2ba014"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e2db0eb-1c36-47b9-97b9-f6b73f9a5cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3ba57298-168a-4617-8721-8044763aadd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3a97cc4-385e-4029-8f2f-158a8bdaca98",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f543c4a-0e0a-4af5-ad24-9d54f8cf9acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb6a2c8c-3b1e-41bb-9d91-2b2622fdf405"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "054822f9-5280-45a5-80db-4a7bd7a13e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba219de2-3211-40ca-bf57-8ef6214968b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "815e41eb-6bfd-4722-b6b5-57b091597757",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76f6ee8e-6efd-4208-95ca-3c5c9ea62a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3a9fdba-46ed-4b6a-bb74-745a86966f04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b262bb2e-37ff-4c5d-ba2e-8c4435550494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f616eecf-cdf3-4fdd-853a-3753d2b23863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52734a2b-c4f5-480e-9600-77f372df62f1",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c69e643b-70f7-40d3-91fa-1b313b51ca60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3e5f2ef-020c-4274-a232-0a826b6bab3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14a8da49-60a6-4fec-bebc-3154bc808469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c65bc644-8179-431d-b39b-b6eb7ebd0966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27c2a476-a8a0-4e28-b193-1603f949f368",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9264022b-db70-46c8-9aa7-f3585ed34271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1db43d6e-ee8b-4a8d-b5d0-82c02d3be895"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "646e8904-d949-437b-8a9d-b303a487dd67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29a8f637-a50f-4d91-b3cf-a4f79922de50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f09bfce-7fcd-4717-95da-f28a8a9e9306",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73b15a24-38c8-4f4d-8313-8d7d15f7a9da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "893a3247-b536-478e-b2c6-af353c5a37f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abe8c161-eaa0-4cad-9f8b-1abf6549d0f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "442b5c40-fd2a-4996-b59b-fb4f6ce44e0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da52075f-00bd-4fe7-a39c-644b7d7f765e",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cad5207b-a404-428f-9e97-b47dc0d98584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e543ce59-f1c2-41cb-b0fd-d06cf5894adb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2cad689-fb02-4f1a-973a-00f8045814f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e060d8a-a5f3-4d12-987b-da53319ba970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b9ccac0-e1b6-4eb1-b525-a7fd17a5e2a2",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "558b40ed-e031-4141-ad4e-a231490e4899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ca8eb85-946c-435a-ae74-616c60298367"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be882e9b-53f2-48bb-a09d-d1ce330d7b8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6dc4595a-9a18-4d7d-80c0-1fdbc15b2e06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4ea22ef-b6a1-41cd-89ac-4a02ef68ed0f",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d5bc375-83c4-4974-a0ef-98fb9cde296f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07bd4699-4b83-45ab-9941-bee4bf179110"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e921c6a-5ee5-4dc0-b4f9-c3e1cc5c0d7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed75bca2-8efe-40b3-bf9c-67ce61b6e849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ad67aa6-8e1f-41bd-ac46-c7e457203d79",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beb7ffe3-ab8f-455e-ab02-81766ea47922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa3de022-3fe2-47a1-9dc4-212485fe9760"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b019e0ef-746c-4a05-9270-b1caab2aa3e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b084685-dfe1-47f4-929c-034e994ac0bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f9cca32-4f9c-40c6-a985-31327543d767",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b0cfacc-07fe-480d-b917-0727b432c842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad81baf1-bb79-4976-8e5d-80e106ffdc60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e172e1a-709b-4bb1-942a-7742e8f4eb2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d7165140-6220-4051-bcf1-a7668ac454a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e734541-77ec-4102-b67b-a98198355a30",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1f8846f-0bfa-47ba-b714-bf9d826260bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "872920ee-c1fc-4e3d-842a-08134df54698"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f1cab16-a39f-4e3a-926a-c7c974fa2307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7a60e9b-4f41-4084-8e01-4315d2cf062e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63e7a746-3333-4b3f-89bf-2fc818991da7",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d5d6a62-3351-460b-9946-196e4d7a90fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9604f07-b369-4bec-823a-d3eb42ec6a08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e37ee002-6686-4bb1-942f-f6c3b0c7a485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c15197b0-372a-437d-ac35-ac972a0c3092"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23972fb7-fcb3-4bb0-8caa-c727dc06aa45",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fe0a8d5-23e0-41ec-96a6-6ffcfebf45bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbdedab2-b46b-4194-91a2-71d7608b375a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b802e5ee-82cc-4fd2-8793-42c0f4cdbae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a0dc4f5-b51d-4be3-8bf0-c4db4f1e1d7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "807f0338-68d5-4468-af27-e6cbdc59fd11",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8643395c-5417-44db-a448-e5c19055ec20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5345ec8f-a802-4cbe-b464-d46093d3ffd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af0407c4-9853-4a3d-97e9-d62d5776576c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d57e6d7-e296-4c88-9af8-b06fa052e2b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4fda836-98f4-46c6-b67c-c6bd28e3164d",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50287ec9-4475-451e-a0cb-978f649d4b3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9100ef59-0f66-4cfb-a900-312f5b85a83e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9130d097-8eef-4ee8-901a-736ec6ab0697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4eb55ac-0929-43ad-a35c-4c127bb5f802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29eae207-9b62-4b04-a717-a58871f87e9e",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83c3d4e5-1d33-4228-b9d6-e559e29e66a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "277792e5-cf72-4a96-b3df-cace45cb0064"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36ab5061-3f37-44f9-b233-5d800e3303ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed4ab7fc-cafa-44af-a81b-9c004562a69d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12a8ef58-f300-4c9f-b0c9-6c5b6ebc0b49",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9dbec2a-dffa-4a06-9fe3-25b3c1ceb181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97cdd6b3-ed35-4fc9-9b18-85f350da2d4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a175805-47cd-41af-ace1-af973192caf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "320326fe-7d15-4832-8d31-9306592fa3fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff97aa93-44b2-47e6-b251-f3628b5ccdbe",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d205ea49-cdab-4db2-94a7-54b3f460d843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0bd4e65-df05-489f-b7d1-ef485c4cb7a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae9db77e-19c1-47c5-ad5c-e7adebdc1ee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba603bee-c647-4c05-b039-1b514692ca75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b51e08-9a7f-4489-b67c-7c8fedbdc0fb",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dac310db-c6d3-4365-8e9f-7caa7d86ca2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "676e70be-ccc9-46ef-b3c0-27348886ddbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e613006f-7ca3-40c4-8bd3-a1d4638e1ff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "53ada232-825d-418d-a45c-e7374fce3e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a0ecb44-8e0d-4f05-bb50-4dc5b3af0603",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8f0ccce-ae21-4b3d-95ff-cb5ea1c1d459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86531ef5-6787-404f-80ee-a4ecc275bbb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b990967e-7f54-4204-a236-5bcf75463af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f74aace9-6cb7-45ca-b820-fcdbedb296d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bc8c6fd-40e7-4b7f-9006-f33e6c863cd8",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba608473-663b-46f5-8aa1-cfa25d0dfa16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c1dbccc-9dc9-4804-8360-6519f8b099f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55d8fd05-b2e0-4cd5-a342-200590daa865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "289f8e14-a906-4b42-b51c-40f6bc723e88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61a6498d-b0ea-4523-8bad-39aa2303e0be",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eca1d0a7-6eaf-4c92-b8a5-c2cbbba81840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc1ecf98-4491-4f3a-9028-3decbdb30c83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c40960a7-ef4c-4916-bd0f-3ad638bf6283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "68b6bbcf-01cd-4e79-8ec6-3d34498f9d6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d52e6bf9-2143-4f3e-af92-05f337ea6814",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52c2d0fe-afd1-44bd-adab-3c6d34bc3306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "885277b3-3304-4a88-b369-78bb708b4d7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2da29404-1d16-40f2-ba2d-31455ab3cb80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7135b3f9-4f42-49e8-9885-e37373c1fb3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b74a3b13-8ea7-4139-80e0-cf03d87a226f",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15c9dee5-be3a-402e-9b95-0c68e0a1ef75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dac23637-fa53-48e7-88bb-75eaf9665847"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80a03021-5934-4e34-8554-7cd98aa97fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f620b19-b2ee-4285-b1e2-3577b836972a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb08868d-d7b5-4a2b-950d-f5bb2d775ded",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34d02336-5858-4977-b37a-90b55bc6e7d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1004ffc-54ce-4e06-bd4c-4e430c069d1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06fc2d77-d714-4a10-b07e-c24585245b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc1383bb-38be-4646-8b70-c38b6aacdba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1e68b46-1c47-4cbf-a383-9b92e67222d6",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be9a4199-808c-49c6-bd71-51e519556838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8626bed4-4ac6-4d0e-bb3b-870334667ecf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ea8307f-a292-4f24-96cd-f5f681aefe12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "673ab324-34d6-4f92-82b8-c96fd847dcf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a915b454-6305-4437-b0ac-0bcca19a64e5",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27c4e119-f63b-4d42-8c1f-3ac756322e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43329457-0710-40bf-910c-76631fe7361b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6576081-9aee-42bb-bffe-97710ba3047c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2fb34e2-002b-44e6-9afc-1728ddac92a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a88dcee8-5049-4c4d-bf34-a140f968caa3",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d9cf8bd-332d-49c1-9244-f662b8e4d6bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6758197f-2010-4c58-b7d2-1e8622ebc7fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55859745-463d-420f-b490-e16a6af764b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "72e5e226-da77-402f-8a3d-76efd07c4a24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15a5fecd-15cb-42ac-b9ad-29dadc48d09e",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b61d2bf-c8e6-4ada-bd73-a28b89520903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "747bcdca-77d9-4074-8b5e-6335eb75856c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "843baf16-57fb-456b-ab9b-d1b458459047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "f92b2e87-bc6e-4a7b-aaea-1cdaab78ecec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ea135f1-9d5d-41cf-84d6-a9d2886ab33b",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbcd1efa-afec-4192-88af-514bf9cbd278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddb5545d-efd2-4be5-a66c-7e208e4c350a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93e1fadc-2aad-4f84-9310-22ed27d32a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "93e7f466-43f9-4b0f-a4a7-0b97da6d9952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38d362ad-93f4-4fb0-a581-cefd1990e588",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22713465-e15e-4555-aef0-b9265efa1341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82c5503a-7387-48cd-ad08-14ace1c132f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44f808d8-dce1-4d59-acd4-0421435d5b83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ecad7cd-ac47-4535-b536-56d3fa5f9aa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1f5d547-821a-42e7-8402-0cf13b1a8efa",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a558ea2-18ad-4831-b66e-6a138470a28d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a208cdc7-1994-4c05-9ad8-8f0c5c35fabc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c22a13c6-4230-4c7d-926f-bf18629afd73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e806b62-192d-400a-b51f-df74528017c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e48e4d92-e3db-4f1b-b1cc-01d0704fd2a2",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19c22420-955d-417a-87e4-ed32a3241135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fba846cf-d7bc-4043-9b47-3f0df0b2c55b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72fca242-52a8-443f-b4de-0767a9cc80c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "df484826-24ff-4509-bd7f-efb23bf9409e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bbc3fff-52ed-4485-99f5-3254e22c7bbe",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9371973b-2715-4a19-9643-fca5b504af80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2a4b52b-d663-4ece-85a7-c706d2e66b7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44e16f1e-6552-460c-be87-f90e72df2788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2272000d-1c9b-4c64-a85b-23e0ae30e31c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02571d56-f1ba-4537-8c58-67eedd5ffb6e",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f13e274e-df9f-43e2-b58a-b87283dffc05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0608ef51-08cc-465e-a6a1-919661886e1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75b4e5c9-9d2c-4985-963e-26d3eeb283f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5adfa57-c718-418e-a82f-9feda296ea32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15a3cba0-2225-4e5c-97c8-162ac28d92eb",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "353ab014-b8da-4fca-ad84-f6b6bcb76cf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58240eca-cb35-42bd-9ac3-dc6ca9fdf5c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "036fdc24-9c69-479e-97e8-72593df24080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c60870e3-e3d0-4696-baee-184a8215b5af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbe7c01c-12c4-4b68-aa08-0cc8c5deff8b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a1bfe78-37c4-40cb-b81b-ededdeb79180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d02f537a-00b0-4219-86c2-0857e37bd0fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "358f24d6-3724-42d3-ae3f-8f884ffee0ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "24c97a4a-13c7-40c7-96be-6ce814974030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b5f40c6-7c8e-42cc-aba6-7a0b04916bd3",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5198681b-1047-4bc2-8376-44a7ff4f5935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bff46be4-deeb-4ab6-8e71-b6c1e6ca3ad6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83fe3830-33f1-4fed-acd6-55f08d9bb73f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8f8c8a0-2763-4475-bfae-019d08a8f2eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79919064-0469-466b-86eb-15bc376b3a37",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7181ab10-4fe7-40ba-aba3-4d0af3b62993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a08b64a5-fe23-4fbd-b295-cda7a20d9865"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bc0add3-fa8b-4bfd-be01-b69b8e98cc85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "40137b39-8be5-495e-873b-fdc0c14107a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b09a66b-c0aa-4e96-8402-59d6b56470f2",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11ebf4c7-8978-4193-871d-be81a1b035a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad746e5b-dd32-4c8b-b67a-886723e98f81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a67990d3-5263-46d0-adab-2ff9fa7d37a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5dbb6d36-8414-4291-ab60-93c19119e693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0434ee35-109f-4b51-9c34-eadfcffb6dbf",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5611e6c5-e189-466f-88a0-75afe3d4a24f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e604d4f-7079-4ee8-af1c-17542ebdf168"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6582995f-6f9b-47f1-9fb7-fb6ecbb0416e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f567c52-903a-4fc1-b4d5-570667300868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61917079-39f1-429d-af3e-79fac59787f4",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38cdb4c5-7b75-4638-887f-5db077e25d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c924811b-6b01-4f17-aa03-d41d9538a842"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8681020a-d2a5-4936-a8c7-98f0dd9fc902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "592478c5-874a-4e1d-96c1-a67a1d9dc9f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c7e1c19-aea1-425d-838e-8b028e18d878",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f35b9d4-5c89-4014-b034-5fa66d922ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e9376de-fab1-494b-a9e0-2b1ff10157ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3ce9fb7-4922-478e-a5b2-87f0b72100cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "e809039f-8740-4fcb-bffa-ddd03efbe17c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4d6c543-96f6-4012-90fa-4bd54832dc8b",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "506ea7b2-5892-4be5-aa5b-9d5823af0e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29571819-8a0a-442a-8f87-e1ded79ea60b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "719ee8fc-7af0-4277-bd27-350595775910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "74f643e5-5a09-4c8b-8d7b-4702c8fe1954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "559c30d9-563f-4f0a-8105-6c2e4ff16eea",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "180c2de8-938f-454d-9c1c-e86be8717a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36b80a34-9859-4576-96fe-c1e3eafef29f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fd8d1ca-1675-4914-a0b4-e2452ecf7c3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f3d8eeb4-5302-41e7-852e-3bd59b59a2a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0ef86c7-cd08-4a24-addc-798e33b3f23e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fc8afb3-9df6-4054-9fce-82d530b025a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a8da2e6-288a-45bc-b8fe-4e74a22b788d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15cd5647-07b1-4e48-9bf2-e79ac90330f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3aaf8bbd-45e3-453c-87f4-3597451d8ac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e782bebe-11dd-481f-87f2-107a23ae9621",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9f89855-965e-4186-971f-b11ee8af954f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b09e0780-f4e0-4dae-8bfe-feb2934195c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9790e85-8aae-416e-b625-c67e6bf7848d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ef155e86-d201-413b-a9f5-67412dc415c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a0ad9a0-979a-42f4-ad9c-7020b4eedd92",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa7648d0-ec87-414d-ba78-b9d6c947b1a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46dddb86-789c-419d-9a85-bcd3c887ac7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc96d04f-787b-4561-a3bd-05303bc9e4d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "53509b33-c26b-4f9d-96ca-eed46144a69b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b038a688-cae5-4917-acc8-74cd4bcff58c",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1096a17-ff67-4820-bf30-54d9ca2f2614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42066c78-2131-44c9-9c20-b7105af9eddf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbc09f67-de2e-4825-a88d-d4ff36ff159f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "a01be461-a7ef-4d6a-8600-840045556492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07e64328-6f32-48c9-94c8-7cb20f9c1b74",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e21f3ad7-1114-46c9-8894-fddc6a3fb6a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d53233e-b6e3-4e0c-8c49-caf9fc87404c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44f7b1d5-3fa7-4122-9153-a5f33918c595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ef11425-217d-4285-8871-95f4ca0c3b82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ffcbe44-021c-463f-ac0e-01e3678e5392",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66664aef-2952-47a3-a760-8d1906f29c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59faf753-ee67-4a04-aba1-aebdf98de4d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0958f3a-4e3d-4080-8acd-c6202ff146b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6aaa6df0-b64c-4e3f-94a8-3b305107e0b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0360ef6-dab9-40b1-9303-21c5dde01548",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb15a71d-e525-45d0-9f27-c0cb1532d2c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "582e1e79-2372-461f-9102-ec5ea21794a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39c2b727-506d-48eb-b631-276fe3db2099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2cd23070-dadd-46d2-a5ba-94f40442905d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daebad83-f497-46c4-a8b8-b2af736a2b5b",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff63f2ef-1dd6-472a-a063-dcfa9a8e3395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94b7075a-4bfe-469b-ad2c-fa7a4f23ec5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50420ed8-7a51-4a9b-96f6-6a4725f9420b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f9af580-7c62-4725-b500-296fa7e062cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9ea850e-0c07-4311-9622-f3a0d7fadfff",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1f03c05-9089-4390-aae9-91771d184dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d0a2500-50d5-4b6d-bd20-f1bbf9f89c1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a3f1c35-39c5-4794-8058-928bb9bb831f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9ed298c1-e5f0-4525-b09f-df921dd34471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7436fdfc-552b-4936-b331-371b46b61c05",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a4f758d-3f08-4850-a7e4-16c1357ce92a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a965df2-76c3-488c-80d6-61f8683003ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c3c3989-79ec-4604-a39d-3c2d76890bf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0656e4eb-2315-459c-b9fe-9b5eec5aaa10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db9dfe66-2055-4b71-b977-add609338b3f",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba36482a-05b1-4bf6-ad82-58667d9872f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cedc5c7b-772d-4f82-9885-70323b56e799"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e2d0ebe-0d47-4efa-81e1-cdfbc59d9d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "98823d37-d719-4bb7-9068-d9e2c4d09f65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d45ef04-c17c-4f69-a685-447bda38e7ce",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "113464d2-3122-42eb-b91d-8545dbcf016a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2482d576-0ac6-4914-882e-5bbcfa04299c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c8bc781-adc3-4321-a03e-cd0805c1bd61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "64da9c1e-d03c-4842-bd92-d962aeab7fde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b37461e3-acd3-410b-adf7-da28f0dd459d",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f6ba9d-88d1-4496-8164-51c8a7900ad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c94ade41-ffb5-48e3-9aec-0200a5871c9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d08a9a20-3a3d-47b2-8fe3-f3b80fd1fc88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e7f5a62-86f0-490e-9a2b-bea8f1ceb54b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3831e3ac-dfc9-4d2c-87c4-345022c0c435",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2914898-9814-483d-b3c3-a6c340477060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca5d87bd-98a5-443e-b1a6-8853acaf2f03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7265bd65-b8ff-434b-baf7-16c929dc8c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ed8eca0-9ae1-48b4-b866-88ebb584f7b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b75d13a3-785d-4c75-9794-299ef759ca82",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fb47009-686d-4a60-8b82-76c31b5dd46c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f1cdd52-0bcd-4898-a8be-be72dc9ad4a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9181a983-ca6e-403e-b8d5-728a31dd56a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "29902f22-f0cf-4b3a-b85a-351307e982f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e50f699c-33aa-4baa-8905-430ec3affdf9",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d5fea11-cc72-4113-bc74-b042522a1fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d051083-fb49-4891-af55-723186b8d23d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9e1966f-f2ee-4a68-828c-4bd55e7a0a5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7acafff5-3a35-4b4b-a5e4-545542867c8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04fadcc1-ac77-4e21-a9ff-6fb29030acb4",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a803ad59-a70d-4915-a86c-ac12c8c6190b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49149470-25c5-408b-b539-f7d748dbe00c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df29797e-78f5-4590-b3eb-7b38542a0755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "73cd2613-bc78-493d-ac92-171d5a40b46f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "997f3e57-decb-4989-9fe5-7ec9eef61943",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "741ca56d-0930-4f30-9235-2f9d1f282e92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53fbc875-f4a0-4c08-a9a0-4379fa35337d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0720d6d5-84b4-4454-b18d-96a44c3f7a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd56415b-9dc9-4a52-9de2-c675f20c6935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73e5d4da-1c00-42af-8c36-142a6409f36c",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccf3fc71-6e89-41ed-b110-4f1f87f96990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c62cd7e3-d3e9-494e-94c6-c1b736f87ada"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce95bfe7-a9d4-4573-8b6a-b1f178c9b238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc8c025d-b22b-4fa1-8730-8d287501574a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6465aa1-8267-4d5d-b52d-d65ad1b548ca",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "422873e5-cdaf-4383-a68d-95d49f3f9e64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37df4bab-6fe3-44a0-86b9-8e97008acb92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fd77af7-177d-44e2-9472-ceca3b2b5a60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd8e2654-140b-41bd-97d8-5fd9a5577632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97f74c44-2eff-43cd-a90a-1135bba54e30",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02259018-0770-44b3-9fa2-afa7d739b815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5051b604-bb59-4d8f-839d-b38bcb22826d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e04c00da-8f09-446e-92ae-2344904e58a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2272719e-18bb-4639-802c-53b2921f1590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3d7fb43-9494-48e2-8c00-2bdcbc92be0e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db18ec35-7214-4e5d-9469-b6a44c81d307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52f9042f-6b5e-4c8b-8074-9f6d06f3653d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1bab7ea-aa0c-414f-bc21-776dd1ccf1dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dec0b10d-50b9-4d86-aaba-4c55424c7a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fec8de08-2fdf-4d17-a026-8a98888137d0",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53ce3be0-9e03-436d-8d9c-bfa609bd70f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa5fcda7-62b2-47ea-a511-216879d6f4b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03bfcddd-ec9a-47a9-998e-43ecee0138e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c64200cb-23dd-483b-a16f-3cc3bfe54757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45d1da12-a5c2-4469-b0ce-8cdd781e0a87",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f90f0514-ecf6-4391-88db-11002b364cc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f57ad70-06e9-4559-883c-a3ceb8b2209f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22cc3f81-5fe9-40c0-996c-528d0ca7a9fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "97614133-b821-4987-9244-9a1c9932087d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0406207a-eb86-42c2-a46e-11e1dc397b32",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f61f86df-39c6-4088-808d-898db506a4b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f540776d-a14f-482e-a16f-0cf795331046"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a8dfaee-c638-41d5-9654-b6d17190267c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "be640021-07a6-42e7-8c0c-66ff11e15503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36955eb3-093f-4333-94f5-e77c941a9100",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc3e8a1b-0694-4a74-b2de-f157792e490e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a2da452-4023-490e-9b0a-6709169948bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a06527f-3a87-43ef-8f22-b85dc302f565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d499403d-2e54-4ce7-82e2-40efa2ae7a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1dd7b33-a537-4a60-a210-98e3372b5f88",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ade9d0f1-fdde-4f1e-ade5-0b84cb169c4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3a297bf-fc41-44a0-ad41-d5f7df901b2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2dd3647-2e6c-41a6-8362-df4dcd3b71f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4ad64667-9a0c-486c-8ee6-96a5eb7beb87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afdfe359-9252-4367-91f3-e8138580dbad",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e64e0847-12b3-4fdf-996e-df924975d67f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "694938f0-fae3-46f2-b28d-7babe8dd3254"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2355013-d288-45cc-a9c7-b2ffcbbef978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1bddbe51-f4f9-4e61-9c4a-48523b9acd7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aec906c8-4705-4de1-9d00-54fcff17bf30",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9354764a-efd8-404a-88f3-1d428259b421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db68c89e-c315-4d40-b26d-d1dae1d8f272"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebdc2bcc-d8bb-4c5f-9c89-db2c8cd90244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "56ac5afb-511d-4265-a1c5-e67e73e0866c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e11b35c8-a3ec-4ca1-a40f-34065949a67a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0595825e-7ac3-4da8-b286-bbba1620f955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf0e170c-c482-4109-8fe2-90fb801aa53d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d71cd9d1-5a7a-4f22-89b8-43508637fdad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c12db9a-251a-4915-8b41-a374a74f07f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "779fa7cc-5ff8-46d5-86a3-594c72058acf",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0716a6f-b3cd-476f-aca6-47d495ad3b79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06e20e9f-1bf9-496e-a9ae-bd19acaf9354"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a3beea4-b978-4ac4-a990-fe033dfd1fc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea1e6760-60a6-4d4f-9180-068239122c49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0390f53f-74b1-437e-911a-860003ca798b",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f936e83e-cb1c-499c-a274-0b3f67fcd1e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39d85942-3ce6-4b9c-b4bd-ac7f6e585aaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "494bad39-900c-4c74-90ef-adcc9163a6f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c6afad5c-bc16-4923-8d8b-e92ee754b76b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27422227-0164-4e6f-afed-0e39c02b8e28",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e98a1638-1aa8-4040-8e7c-7ffbbf716735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e5484c3-17f8-4fff-915b-cd08a9e6e1c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "803cca34-0d3d-4768-9477-d0c88e2e8713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "46814362-f8a2-4d94-b01a-51b6b2fc84a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcc41ae9-9b59-4a9e-a75c-1c0da208ce39",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0320fda-02b9-470e-9984-e35bbc2473b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "6f7b313d-1f07-40ea-9618-57778b9bb1f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d78fa67-28d6-4a03-8b48-78bb8ba088d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce0f35f8-7de5-4ce1-8c2a-2523cf71271f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0626022c-d7a3-40f4-8237-4800fda32425",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "823d1484-a431-4659-b0f6-6f0ec54dadce",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "086adfdf-d57a-40a4-a2ca-92133cd67de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0fa48e72-b60b-4411-808c-161c831f57d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bf489b1-7c12-49d0-8dad-1765cc4d376f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f8bad838-70c0-452b-a06d-2b4762aa1d02"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7f90f6d2-6a6f-47f4-b788-55c65a1416a6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b916d7be-c970-4b25-b944-2e8a5a37106e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "04bfa05f-fff8-485b-979d-e8cf860a2bcc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3a85a55e-261d-4124-b13a-2e99403d8270"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "db9e711f-1a6a-47cb-9c17-df8aac2a1237",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "10ec38c5-12db-4f22-8089-7569d1684a94"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e5922fce-20d4-4af7-b860-9edf601cc0c3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a437995b-11a6-460e-9bb5-cb425eb3574a"
                }
              }
            ]
          },
          {
            "id": "d90735a1-e85b-4cd8-84de-7da73c4b6421",
            "name": "Positive Testing",
            "item": [
              {
                "id": "dfc94f14-3525-4533-8e30-0035a349dc85",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5a94a86a-6766-4a40-a6aa-dcd794770912",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c59263ab-4d28-4114-b65d-59e3aa5c0a90"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6b9a42d6-d744-4374-8098-c37a275fe581",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "984b06b4-f64d-43ed-90cd-d6219932a2ef"
                    }
                  }
                ]
              },
              {
                "id": "3f9c06f0-c3f0-43c2-9bee-5c0f372c408a",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "99c41ed2-0d57-4788-abe5-1a207391f606",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cc98bd52-8d53-4cd9-abbc-9166e10671cc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "764885db-eb88-4c81-bae3-838de557996b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "97fd94bd-2d17-40ea-8f5c-f6b2edba4ba7"
                    }
                  }
                ]
              },
              {
                "id": "853e8f2b-50ee-4002-bafe-e7fe343daf10",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2f812c96-e73f-4d9a-b45d-ab5758700380",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6ad98785-2826-4cc8-b36b-8c12162c7c87"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8cdd8af6-70ab-471f-a21f-e12e910d4d3a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5914f94d-7c92-4dfa-aff0-fc4b7998ebd8"
                    }
                  }
                ]
              },
              {
                "id": "b8e610ee-b90c-44ef-aa1d-f2af01572d9c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "46359380-2772-4c8d-97a8-997eb9e6014a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "98a40d7e-0c9e-4555-983b-429d4e8b423a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "172194d7-18cc-4942-959c-1de81bc996de",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "642adb16-3697-4518-8ae9-285dfc409ecc"
                    }
                  }
                ]
              },
              {
                "id": "e684a6fc-f1ef-4033-98c4-ceaeef954c7e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "50495cd2-9316-4b90-9031-7ab7cd0c32a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2d3da4b8-9436-472a-bc94-a27e58541899"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7d499309-dd5f-4feb-8aa0-c5a6314ce532",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "145ef7ae-26ae-4cc7-a52f-f91275d8dc65"
                    }
                  }
                ]
              },
              {
                "id": "c33e1de4-4858-4d7d-96af-4c3c86be4445",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f945b832-a4ca-472c-98cd-818dfc87ffbd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8535b943-c698-467c-8ea0-33b2fd7da3fb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f19e7673-b566-46c0-b88c-49d3099126f3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "82c4515d-1893-445b-8d3a-0e5b056866ba"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b88473d1-30d1-486c-bdd7-db8cc5947552",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "68ca8c88-6ced-4c1c-961b-1848bd14304b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "bec0676e-4931-4d26-934e-1c20963c3e04",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0a075e4c-43a6-40e3-8778-c6cddf817870"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a26bbeb7-39fe-46a5-887c-88ac77d2a8a5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "3536f079-79cd-4288-a5a5-e7dcefdc0fa9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2c6e1d55-e96d-4aa1-a400-dce7c69bccf2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "78d29523-f029-4af9-8a32-c9e668204825"
            }
          }
        ]
      },
      {
        "id": "2999e4c3-f2c5-4972-ae38-4aac7afa7af7",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "23f3ab97-f6ad-4790-a24a-bb979c63360f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ac30f4e5-d897-4f0d-a0cb-ac95dbc45044",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2666682a-fd81-4468-b2a3-4dab18da33eb",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dfac1ac-bd9d-4db5-a4fa-3f7e35deba77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8721573a-eb02-46ba-819b-8236bf37efc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "635c5718-5340-41ba-bdd9-257a0fad989c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1091eef-ec5f-437a-b62a-12775fa22c8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7d4243c-6a9d-42a8-9ae5-e53259c9c285",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3d7ec12-57f5-418d-b7e5-e88c8b125952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "033f2e1d-072f-4e56-a4a8-683fb1243947"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7163c953-b762-412c-b47b-6b70f0d8a1ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c124045-7f16-4ffc-a1bf-e5faff39a06e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fe43a14-7064-402c-bbe3-436f034ddb4f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7f41ea0-7b1b-4df0-827a-6901720277f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d6f5c4c-277d-4ad4-a6d7-ec4976bb4b4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2a74774-28cd-4ca7-86ed-72c03c3675e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2da94f4f-b383-4741-98df-732427c74842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08f71f4b-ab1f-4bd2-a51f-81f4eee142ef",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed141322-1e09-448b-b1d9-7da5b901a659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc774145-f35f-41ec-86e9-99467c13b3ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4010891-25a2-438d-ba08-b0b964f343a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "00528167-b8ac-4975-9033-98ff41bd3bbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0520c2e1-3aff-4e80-9b43-6d21184b0247",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65f54edd-6692-45e7-ab2b-6044239be82b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "702c5004-ee35-4deb-9ad4-60588f0803a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "832325c9-14fa-4ff5-b2e3-6336dd5ebea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "98d8db5f-b106-44a8-a5e1-ef4fc9803fb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07929d8c-b8e4-4934-b1cd-d958e7d07ce2",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "001f6440-70a1-4443-b5b0-7cdc9eb60eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c93a70b2-21c0-4952-a055-55a3edd039df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c27d4be4-91fb-44dc-9ad1-543981162a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a9a93290-db35-4795-8bb8-8cd69bd4360c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4810bfcd-e7d5-4591-a7c3-912ab60aaf76",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a576f105-8ec5-4c2f-babb-8c4dd3e19cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c750542-31e6-4e92-9c1b-c1ee6653aa2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8818bcb4-33b6-4a5c-96db-caa3e235bfbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "edbff8bc-07c1-4ce7-b54d-0d7a5746b158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "add0c4b6-bf14-4762-a9f1-e206e5bedd24",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5d190a1-5f16-445b-a0d4-bd1e76c03e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f7a4ab7-6a7a-4191-8bd3-6a1c44e57c6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fec77f30-1e07-412a-ae07-322932c429af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1da542c9-bd8e-4a1f-9732-daef168396fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5dbbfc5-9751-46cc-b0e9-389b3d929e20",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7514528-f5eb-401b-8ac3-4da33935838a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "288b57bc-ba0f-4e05-a92d-c732a3b75f10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6410f901-5c5b-4e4e-a44d-dc6b315abcc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8559d83-ba60-4e36-bfe7-c5117aef2b1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6975f84b-6d5d-4853-ad42-96f38a74b256",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d29c9ef3-023c-4c5b-8f36-65b8caf185af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e168ba5-803c-420f-a2f8-e40fc8dd4864"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96b48da7-5f36-4af7-bb07-53496060d395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "47c1f826-aaf1-4107-b485-e45d1cdfff7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79f8c402-c95a-459b-a00f-787ed0870451",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8488bcbf-ea98-4be3-a20b-f6c9a5649257",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "870c9432-bb5f-4e53-96b7-c032c3143562"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78205a5f-091b-4a62-830d-1fb96efe6fc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "695b8208-7832-4e2b-a66a-9ab4fb73b09a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7b3b001-bb7a-42a7-8871-312e76b14206",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f51362-15b8-4764-bb32-264381a3b037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "166aee8c-f69a-4116-a7fa-aa5cd7e99572"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36833dc4-8425-474c-b482-a32ab3c7f16a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "16444c9b-be3e-4ade-8b3e-3e6ec552cb10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1eff540-08e3-4e34-ba38-8eec8050094a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cff555ec-3bbe-4c2f-8575-a45394f5bacc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2e3f08d-6d57-4dce-9989-62dca68fdf07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c295d11-221e-40b0-93f6-41247e30e783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c906103-b1d8-421b-9713-150c4c35c856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e84eeee-70f0-4194-b647-72fdc27fcbbf",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40c4ad24-9217-475c-adbc-a83194a003b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "082235a1-08c4-4f90-80e2-8667bbb4e602"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6649673d-afe0-4c74-a398-64700b40ddf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "68f938f5-64ef-49a6-9271-369c6bcea9fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0de0f6e-576b-4a26-934b-818006d980c0",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86e2ee4f-3cf9-4315-b799-48def4d800b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28e64ff2-cccc-48e5-bbbf-6276f06f637a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd4d12e7-bb96-49e5-8d65-51b2fa4faa00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7d1b694-c66c-4cb0-965b-4a97f0cb5f2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a9899d6-52cc-43aa-be46-6065d36fd0eb",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6072ecc6-9cb9-45af-9964-6fc6cc9a977e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfdce16d-9f8e-4110-bb27-e329c806d829"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d4689d1-fc20-4d62-99e3-aa7053c875a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c0908be-2885-4139-9152-ab4b3a4d6240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9e14ad9-99ae-4746-b6a1-458ef567712c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c187788-4ffa-43cc-9834-f956d5c99e8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cf902d7-eb9a-4002-89c9-936113205068"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9327a6d-3149-4672-b6a2-c2efd769236c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "db74c843-b9bc-4a87-839b-354aef682d8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fb1afce-d55a-4fe5-8843-b50e322a2f2d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a54d0e16-90cf-4796-b52b-1fa4f0cd9488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eff07d30-d0e3-4f8b-88a2-387d41be4f95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1275366-21f7-4407-ac5a-b3e7b34e9955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "918258b1-31cd-47d1-97e1-83526a1a5066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09aedf8d-ac74-4dbf-b8d3-7345ace0c17b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb59b2af-273d-4eaa-9784-9df1ff3ece85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c207503-18ad-4554-a912-3f345225e1ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf78f96-bda7-41a2-9d81-3e53ea33e995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f93b2c5d-b868-4292-9a0c-ea0338bde5bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0297058-ee4e-4150-9d4e-968963926501",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccbc0e6d-3011-4942-aa44-d67d2e12e19d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ec79f40-de64-4b24-91b2-24eefcb6ab36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "364b6c85-fb4b-48a7-bd10-3ea5ee0eef15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82310c9d-482b-4a60-848f-dd50ebdd83cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "921d266f-214a-43e3-8d55-47ad90a69443",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e21c70a-bfe9-4549-972c-0dbdc3997d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52b38c10-0e3c-403c-8cc5-2493cf624f50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff018066-b131-48ed-a4c0-d118cf411bcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09e5e73c-fba9-4af4-8ba1-6b8e1fe0d036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a37c17cc-bf1d-4c9f-afd0-ca9b17223f6f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9453abd9-80a6-46c4-8f3d-2cc89437d79d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4499757b-b8c5-4ac0-9ae6-4f19faa3c4d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba9585d4-333e-443d-a25c-09fbccf78fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8053eaa6-3fb4-4f88-9355-16779b4b0741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22f3f162-5462-48f4-a5cf-3e32857b8921",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb09b63-645f-4ab4-bd48-5209b8e64646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fab0980-6800-4433-a0e8-b0dd657612b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f249ad54-c671-4fa3-a30c-76d27386347c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbc0db3b-3dc3-4bba-bf3f-a1d72a9860df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94438b07-7958-4852-bacf-ca632707c287",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f8d3466-fdd5-4d79-9361-11ff42974675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7e6acb2-e203-44bb-bc60-60d84fc1f34f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69dd108c-0dac-46ec-adf5-f3d6dc4b1865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "479f1a85-6c89-41f5-bc75-a0fb28e5d193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e68bbf2f-8518-4022-a621-0727fb68ab16",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "983afdfa-4f2d-421b-bafd-aa4514da0e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eea6fbd3-77e7-470d-b345-e186d1253bcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b1679f8-bac7-4da4-9a84-bf50e9f2b018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d8c67b1-9378-4cc0-b73c-053d246ec323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce569c95-0570-492b-a5bd-ad828dab40df",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fda35e4b-6142-4ec3-8657-b5b6fb0df803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50bb2ea1-ea63-4278-bff2-78f04000f121"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6139b604-cb48-4c93-95e7-68e63818d77e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b19aa15-129d-4285-9e64-da0938837d18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fd97a48-b935-4256-abdd-0c17176feec8",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "317ad5ca-0e26-4160-9644-bb5737fadebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1df60d7-0a4c-431d-a844-1b68a6fede75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66f824e5-2ef7-4177-8c5d-e20a267706e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1499789c-3551-4b00-b4af-b2e2e843b199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "432dd22e-f99c-44e0-8fb9-0d5970b6e6af",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df36c0ed-f0e7-4f15-aa8c-70aa1bf2f5bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f9c108f-846e-4e74-a930-ac727c8b9fc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75c57dbd-b8e7-4b89-9e08-cb510df19410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ab381c6-9281-49da-be6e-e873d1e77f64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86dcc5c7-f3ac-4399-89d5-13de40ca6cb8",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "630a8c35-2b19-4b61-b52b-f075ccb226e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "640a3ae6-9a80-40b0-b0aa-cc01fcc47fe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ed74b61-f377-4ec7-8068-ba7c2b716677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa22ab46-597f-4bf8-a70f-4c237cff8959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d638409c-7b95-4771-bac8-a05c776239a2",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47d14802-9494-4a0d-949a-41a7f08aee86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3f9f493-bf3a-42bf-9bbb-d6f68381f111"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdf78f48-9708-48a8-962d-add559550090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8c78701-cd16-45a9-b266-51bd93019d6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70dbcd4b-51f8-4bc5-bc76-d0c6e6c2cb84",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "917654c6-1856-4246-b244-d7b90408c313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40f52fb0-af59-4c97-857d-e929f48894db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c5a217-3fca-4eaa-b434-3adbd53ee12c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6589f051-2853-4d7f-a55a-17a599fe7107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3da3567-db78-4ee6-9c7e-1f4c0af0abbf",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e8ba75-5d57-4cde-8072-838e26ec3207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8e0c30d-a17f-4ccf-a416-19b0b9b10801"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3c2faa7-32d8-4b76-80d2-eea3fa4748bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c62a300-2b38-4dc1-97c7-2d90fd92be88"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f2579998-c545-4f36-9671-4bc185f94a3d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "12123a14-b535-4542-abf7-d88af8bb2f56",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d035828-952a-45a5-977b-3e2bf87fa180",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4c155e28-e675-4271-99d9-596f44c5bd9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "758a124a-0a10-4142-9038-a6495e819c52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d3066388-4c9e-4b47-a172-436e4cebf8b9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2c876f3f-cbe9-4a80-803c-a2f302ab5538",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "378cad78-fcf2-40c4-a775-46eed625bb64"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fb8938ac-1fc4-4ed6-889e-cae4dd03018f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d9b8a904-6692-4c42-bab7-bea4714d94a7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "806f4a30-520c-4d40-b8ba-6d0086a4803b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3e036174-7850-4b18-95fe-7adbc00c7ecf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0e89f2b1-6b34-4f5b-9584-6b066c65e996",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8314c89f-2114-4145-b9b5-c23363e6a472"
            }
          }
        ]
      },
      {
        "id": "7a3c4609-2c2a-4150-844b-c95fac2b1f00",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "b01d573c-fdc2-4415-909e-1ac4174c7d2a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bf98093a-1ff0-4bbf-bc7b-8313ff0589f8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "838b7af5-869d-4c20-9275-d78b20b2a223",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f060c7b7-9b44-4bba-861c-dedb4b54e072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d15bd46b-d60a-4577-892b-46f7117f5bc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ea7ba1c-56fb-4a1d-9935-986a90e1ba96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5cd31f5-b163-4f9e-bc6b-4efefaae9812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f57eb77-708b-4319-8a1a-b57cc161500f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6637787c-6659-4cad-8c1c-0974f27db6ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b21a01f3-8653-4df7-93be-290af61243e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2b6cd93-1638-4b40-a01f-8da62c0f5450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "be5f6a53-1182-4900-9f4b-b6ca5efc4618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfe67064-20fd-43e5-9af5-6b5cf371cef0",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2b3c90f-15dd-454e-a668-795c575af2f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1699f511-8360-4b32-a5d9-bb9ef449fefd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13326465-ae40-4a3f-81d3-b7ccffc032af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3228da3e-5801-42f5-a728-7e2e2e6f3884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45b52559-0461-4771-9b5d-6a1d5f75a845",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ada2c26-7b5e-4ea2-9003-f1ee562b8a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0953771-3eb5-44d0-843a-087eef72c33e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09b5ea7c-42c6-4271-9d0f-7c985658540f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9574094-0c5d-46c0-b649-256ad7e46d14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1129c9a1-8a74-4a67-ac9b-507b576faf65",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "039427f1-263e-466c-9ffa-4dc96f40d30c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a0f2d52-efd7-4689-a996-29dccf8fe129"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a53eccca-efac-4e0c-98ed-2d624e23e7da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2771610e-6f8a-416a-aed6-d4f58c395a7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d622ba1-f43f-4c02-b11e-c30bde0f3e29",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a89e29b-981b-4b67-96b4-568e0d8b08c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b12456f-f0c9-4630-849a-46876e09cec7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2709e63-7a91-4818-9a3b-ad79b0735c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d32fb740-3b15-4c3a-9736-e689e3c8c18c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2936043-51ff-469c-aefb-6da8885336ab",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9be600f3-c717-4692-81fc-7afcbf7c627f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a40417b-6b9e-4cb9-8f99-ba9a7787e818"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67797eb1-e6f7-4b90-8ad7-5668ebc69a53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf579b6a-fc10-40f1-a449-aa9a3bc80fae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6a44219-b474-4ad8-8b49-d7cdb538bcbd",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64e73d1f-f69f-4336-b76d-a572acaa2215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85d36aa0-1bad-4075-a9cc-c28047cd5a42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89fbae88-6636-4f6b-a28b-53317fa8ea37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd1d3432-897d-410e-981b-58d8864ec27d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8743ab7-c69b-496b-bf99-cf281757384f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d8737db-0b2e-4558-826f-5e070a71123f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ef4a749-6d8c-4db0-9b1d-29f54f83ab98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d68a6a91-ea46-4f21-b0ca-12d841dd63f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "90bb955d-6510-4367-8ab9-dcb7486efe44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33c15d40-0051-483c-a9f6-521f36d22408",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b3712c2-1630-4346-bb80-c277056ae46f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00667bce-effd-42a1-b927-565110982186"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e79919f-d826-4b93-9e97-6ca78593d73a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "47b01a0b-04df-4d90-9f7f-b787c717fb42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "352106e9-c981-47a6-8532-ad2d4f9b97cc",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0b5da03-fab4-407b-bd24-a9e4d4c834bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "983d3327-a20a-49f6-aa51-965a12ad69d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3887f97-42d0-4665-91d7-07f097f708db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "39b58a99-a572-4897-a915-c8f13d261416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9728ff73-691c-4c3b-b32f-67f95a6052f1",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d902c7b-e678-4c6f-aef3-a95d490b644c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b861dbc-967f-4aba-a1a0-f9f807f86c6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e52337fd-aa48-4e31-bfa4-7693339cdd1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7757ad43-79c0-42ab-ac6d-d0fd7cd68153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec005a8d-c03b-48cc-b95c-0ddb74df3678",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b634402a-a502-414c-9a56-0c368709b248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e42cb6dc-380b-4a5c-9ff0-714d1c83d71b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cc8e5f8-27ec-4e1c-96c0-edb926178f32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd801e76-3f97-4697-9a71-28b8d827a318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed76d8fa-ecd2-41cc-855b-39e6c9b2c1fa",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c2a0f5-2ec3-42a7-a56c-769e3f4238a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f82b6cc-e8bb-4da8-ad23-ea8f513c47ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24c55479-f792-4153-a3c4-cea521a25239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4a17ea8-9450-41a1-8bbd-d86039b8888c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "477e77ea-1ea9-4d7d-8613-ae73e2702260",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "305ca0dd-1de4-4a6a-94c3-4e1f07183987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2efd3c09-f54b-4b77-a732-14fbf828b7a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f3209cf-d223-4952-82c8-2f741648dd50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d249b618-22ed-4fbb-83e3-a33e1d8f90f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b87c564-93fa-4663-9d27-bea1fc3a4f38",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d74f69cf-3f1c-4262-8b3b-77bf615023b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22e26239-2eac-4169-9e16-0cc02687de14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b770d4af-0cfd-49b7-b303-e21ccd281308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "534f784e-2519-44b4-ad69-271e24f02548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18beaf1b-205c-4291-881e-3c732af08f2f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f501f428-c31f-48e8-a449-b30b3778a182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b34a8395-2c3e-486c-83a3-0d5bd6751592"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f97354ec-93cf-482f-9f4b-8c2d31526cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee52fc42-ecde-4ab5-8e99-2e3f1ef6d55f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3c817aa-2b96-4aa4-9c0d-ae1e4ab4c2ed",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be3250bd-84aa-40b5-89ff-b800f2c91123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ac30268-fb7b-4661-8e87-8d6ae2861178"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b33fa1d-8304-42cb-ab42-056558839e4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d036356-312c-452d-9ef0-635c722ea07d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e60f40d-501b-4ace-81e7-77185dc44ffb",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1740f006-a817-4013-a13d-078d6196bf68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4268ecf4-50ff-44ec-b7e3-4f0e455db0ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39056df6-b64c-4494-8d0a-5d2534c5179f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "958b482c-2fab-41b6-9d0f-71a5a49b3fac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57ee8b96-1451-40df-b0a5-5e5dba09169e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4c4c8b2-3924-40ce-884b-cfd993d79783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddd4e53c-19ab-439f-978f-5692c7332a28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fb07de1-7aba-4e44-b249-a2e782f56359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed7b15d5-cb10-40c8-89e8-51292ef7d968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "053928c5-10c9-4656-8816-465dc2f53155",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d414bbd-d9f5-410a-a9cb-5260cf9d5528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2983c349-f263-4493-9e8c-f0ff49ea0e72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0adba0f-3f23-4c29-bfcb-4d7366580666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bb5cd37-a709-4ae7-b90d-a7d67c5a4de7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7a99d20-5485-404e-9ce1-dbb1fd47a569",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e183ae-e04a-445f-83ca-24b89e45e158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bda62552-bab3-412a-899e-d29a658defb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07028301-4634-4b30-82ae-3dac8a5da70a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90519e1d-437e-4c80-bb88-d5f20d5b2ac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70f2e69c-ccd5-4f1b-b9dd-0971b18daa2c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b723546-e47e-4561-b991-412029de4cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22544f90-d7bc-4a5a-9ef9-db6d8a806f9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6785a5d5-b798-4009-b058-c7f091a411a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac15802d-3b9b-4b99-a82f-da2d6ed359c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51ceedb9-0315-4eed-a276-a53cd8eaaa9c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da2f73a8-9cec-4a15-a839-2042ffe9d40e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95197eae-7730-4472-a098-b4159ff4709f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c21e93f8-f461-4140-941f-a70837b83f34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd7f0df5-6d9a-4840-944f-c3aaddda1734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8c4f943-8730-453f-9d81-5013f8f125ec",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "744b48cf-1dee-4389-b679-4173382e859c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03b59d1b-e0cb-4362-8267-1a4932d3d5e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "591b8ea6-6a47-4b75-b28e-d110b9116200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9626ae4a-7126-45bd-9313-447e4e4fb341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08849987-7e26-4c01-8b74-6f0f8622fc3e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5abc7fdc-7504-4e65-94b7-081f1d42720a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b93a4345-0997-417d-aa2a-a449fbd3cbcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5034006d-9db2-4e86-86ea-c0c35dde5cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0692f684-9937-4036-ab44-b309b91eed5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f9ecce8-16a7-4be1-8aae-f0d674ae6742",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94a63151-d9bc-4386-adcf-8a827be6b6fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "084048dc-1ca9-409b-945e-e112aa489d49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df5734eb-e6f8-45ff-960b-3101de58c6ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d86c2ec0-dc1a-4b0f-b7e0-23941808f606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "281bd55d-b3dc-483b-aafd-88e5ebd72273",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffeec0a4-95bf-45a8-a358-c98ed6e78cac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c78403f-099f-4f09-86bc-9615886f3383"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86f885c2-e032-4eb3-ae97-4a7300db7c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6004f04-c3b4-4e0c-8408-d51157d539e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad3c5a5-0791-4d3f-b175-4d980ef0cdbe",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b71c866e-44e4-40e4-8354-b3f929d46316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08ec13ed-469b-40ba-8865-3d4a75985b22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63aab068-2ace-46c7-ad29-d6bbc1318427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b23fc826-11a7-4207-945c-6cd217989dd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3536c887-405b-46c6-8124-7a4f87f9ecf5",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7f0c7b7-53f4-4f7f-9ecf-b2c1a80c6afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "848cecd2-395a-4d5c-a41e-3429ea7bfe65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c737f541-c8cf-4048-92c8-cdba7518b33c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e08f7772-c9e2-4fe6-80cd-b581d005ea9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b1a4c16-940a-42bf-b415-46720bda3192",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f58dc3-0183-40db-8351-f41cea3537ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32fac5f4-0a48-4284-a4bb-fcd1c4591d98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3f42951-d3e8-41c3-a2ea-c6210ed3016f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e69fbc09-f4b7-4aff-bc98-5e65670e72c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afd80d5d-290b-4bdc-979c-0cec22aac47a",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b824f0f-8cac-4b07-bd16-3ca3cb85d6d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02a1c204-a60f-4fd3-94d9-7dc17aaf7022"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bec3c75d-e2fc-44a0-a5bf-1bd3ca2dc5b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "176a71f0-e240-4451-85bb-25c43c8c8f69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ca0dc24-fcdd-43e6-b0f8-d46f6b421772",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d09e6810-9d09-4bac-9cf2-e924a1c414aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a7e1609-99e8-41b0-80ba-232a491a520c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c054569-948f-42cf-9ed9-adf527b4004d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec376830-fbca-48e5-9ad4-ce595e75e746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32d060fb-e326-4029-bbf2-fe6019b5e92c",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44147375-f7bc-4631-bd4f-38cb81fcf600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e988f599-a73d-43ce-9634-a35661073ee4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51c71b6c-794f-4840-863f-280fef9990f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72e7cfa0-5020-48c3-bc7c-87a39edff1cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e0f18ae-a6d7-4de5-9348-eeca773b4209",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "446cb9d0-e833-4502-bfa2-934f54c85fb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82b539fd-5ea6-420f-8239-2df6b46fc8d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a83989ee-729f-44cf-8884-8be27ca30f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "495200a6-ac0b-422a-916f-a6155dc4cf31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb635860-de3e-41d0-bf81-7e172a18099d",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d69a83f3-60aa-49ef-8582-27872fc7bb52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f853a258-e75b-42ea-88dd-549441bdcd11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f0414dc-c327-463b-8737-c311852ae1b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6aa82a9-1fe4-487c-a450-3f41f084885f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dfc4701-e47f-4d8c-b782-2abfa637582b",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2317c55a-bd32-449c-999d-dc571a7994c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "668611ba-cdff-42b0-a504-4c390ebadd41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ccfefb4-8443-41d4-bf68-337b07fbc884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e66bea1c-291d-4089-a892-b0072e21e7e9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0eb91adb-ff45-47b9-9498-75e68da34794",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "15d321bc-bafd-44ca-8cd6-29d13b96b5e4",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eae4c695-50c4-462f-9d79-873576b73822",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "df478f1d-a562-4fae-81f1-d859e7b0ab82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d950af09-625a-435d-a556-df88416158e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1461a475-be82-49ad-97f3-4d1e90bb091e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "270aac31-8e1d-4a6b-be3e-f4e31d70bfcb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "58703cbc-844d-4f24-8edd-3f3c7aef42c6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "64fdfdff-36df-4078-94f3-e3910b150abe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bfc44662-1ec1-4de4-a245-3731fb5ea5c4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "37216b43-ee24-4357-9be6-56e32e804f5b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "962ebccd-b099-4916-bdc5-330ed351efcc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8a21d034-e8b5-4f48-a112-b0a9f95a9be6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "83df7720-34a6-4c9e-bdef-9d6723ba7749"
            }
          }
        ]
      },
      {
        "id": "b663b187-806a-48c3-abd8-2506fa97abc1",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "0f818596-04e7-4870-9055-2d617f9e530a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6c63d5e7-beb3-4208-8296-43ed080084ec",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d689a2b9-d24b-4d3a-8afa-25c693216721",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e9c86e3-d969-4900-b4ec-7baafe43b0de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e52b7b4b-1366-46c2-b00d-e4939c11cb83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64d3023f-f7a0-49b9-aeff-f7b228149428",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b710146-44e9-41c3-9825-46379d40db95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef556d72-5783-44be-9bb9-907da885b537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dad467a0-cb9d-4cb4-8ce4-dc0a95c2aada",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "915c0055-1959-40e8-a4b2-b8b64e70d44b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3242d1f0-a4b8-473d-9ef3-c9031486c725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b017337e-3e08-4b34-9d71-df797e28384f",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba416e12-0b44-4e76-971c-6d6ff02c0bf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b63ea584-838f-4791-92ac-8811c8a92c3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b717fcf-8c6c-4c74-86d8-b1ff2d1f1e7d",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57ad9f70-a891-4c43-97d0-a3c3e738f5f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5753a817-fdb3-4b21-a9b9-4604d5cf5974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fb86676-2da7-41bd-b92a-17b9469c2003",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7206a8f-6054-4d75-a87e-7343df368dec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d64fe593-2e8a-4c83-b2f4-9b12ffea7645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ef26d6c-c5a9-4bb0-8860-6d3e46cb1838",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae5db387-17f2-420b-bea7-825f7e20e5c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4658099b-5a60-4597-9ea5-d0e4cdd90bfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19516196-57c8-4038-a54a-a785a4745d05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "985b3a62-b839-474d-a2d1-e1a50709a146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb28707a-b92a-490e-aa7b-8f4174cf7b01",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20686488-ae94-41f8-9d2a-16bc00815679",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "022f5959-47b2-4ae9-bc48-b888aedae7af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a114ef52-8b8c-45a1-8d6c-e1c9df5cc4f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27740618-81cc-4113-9bf7-56dd9f89da80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a2c71f5-b5a1-4d42-8f47-ca453941c8bb",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44cebb95-9523-47db-8509-4ba860a47f0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6069ab07-eb22-4f55-8a0f-723e6679c713"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d7eea77-1a61-4730-a524-e7194b98e958",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35372112-16c2-4d71-9c1c-b0143f3d18cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63a228bd-bcc3-4b57-af45-cf2bf3f98344",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb9fc32d-4767-4cb1-93a9-148d31f524d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e152c7a-542a-4b7e-be75-1d07fee53ac4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d464cff3-f576-4e6d-803b-f3b471c1935f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fd8a919-3b09-489d-a90d-4b597a705503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea258a38-2162-404b-893a-61f8fb87d31f",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "219ab2b1-339d-4b98-8da6-0b0f553ade90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cebd6756-1902-426f-997d-2769676aa1ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "486e8f8b-ccef-4443-8495-57c14dbf9849",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b65587a-5664-47a9-8819-c25ee33dd66a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d5286c8-6fa5-406c-b703-b7584d6af572",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20e82391-846a-4fef-8f8d-39797141a8c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f114bc39-4caa-490c-9a3b-3956e33b31dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3950c012-3a26-47e6-82be-3473db095013",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43d07403-2c46-41f0-ae11-add5157cbffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2e207c3-eb71-43ca-ad10-0d0897e46dd4",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "120a78aa-1cc3-483b-82ef-8ebc374d57ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c70641c-1228-452f-b521-bdb399221774"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cebf0926-27ad-4849-a1d5-100a98065e49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c28e7d4-5aa5-4774-9f5b-98cb3fff38b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74d6e22c-2c5a-49cf-bf0a-cf26f9707210",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75480d77-f7c7-4498-b9eb-c156bd3e5d5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60dc7fb2-e696-4d61-bf8c-3d2f1fcd1db7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a88033c8-532e-47b9-abb4-11a8caf7e6e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5da9f124-eb4b-4a5a-a832-008500f44c26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b703484-e6c5-463d-84c8-8353b975ecf0",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d34c1f70-09aa-4f71-ae3b-acb91da6f97e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc4f7986-6649-455f-a449-67149e2b8555"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ef1af4e-3ff9-42e0-b184-7d8d42e0002c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94d0d7de-5b32-4ecb-af70-470a00945e5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a51a7b89-69a6-4d32-9290-a440647f95a2",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41fc420e-4cbd-41c4-97e0-0bb6e9d70eff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f3c2070-6f13-40eb-b9f0-fb369ab24d4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "604b4af6-4759-469e-8058-e7426057c83d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c517000f-6000-4ac5-ba10-0c0d44182907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2354c36a-1409-4936-a809-ea5137041090",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b1c978b-9650-46a8-b26e-75e2ea1dfc2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be4831fa-22dc-4563-bc4b-19a126ba583d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7b4bd25-4fe9-4aee-b44a-276a722b9452",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4261fb51-7764-4e7e-b559-088890a85a31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "460bb24d-9e81-4d56-bcc9-57cef4e07630",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b2c11f-8ec9-4c0d-8ce1-d170b11da22a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad8c2646-7ab0-47b8-8aa1-8e43ea0ac772"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d5e687a-9bd2-48f8-b1d2-9d29f98375e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01de76c8-ca26-4892-acca-5fb22857c9fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f6779c9-b90e-4d5b-b01b-bdf60228cb57",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c03693f-3696-4572-bfbc-c6f33d2bfcaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4bd0306-3714-42ec-9409-50ae4102d950"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f38860de-7672-4cd9-ad90-62d5c5582196",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d34f35b-6068-45ab-9bfb-6bc34445625c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab544834-8f8e-4d80-b190-05e6046238f6",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c88a605-4c0a-4734-958c-c649f6a8c3f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13739dc6-b6f4-461d-a387-375974929ef3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7e9685f-3938-4d65-a9de-91bede7cc795",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c737887e-fd61-41a1-acf0-c20a6b276c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fcbb36c-9b66-4381-86a7-eabd7ce15221",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61546ba2-e33b-46f0-a870-67f4217c8255",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39deb7af-2760-4f85-9e3f-de4e54b82d06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e089ab57-def8-40dc-bc6c-bb3170a06d08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84858309-233a-4cb5-a66d-dd0d980691dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8b718e4-5041-4601-b483-902067dc1576",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6c5c1b1-36a2-4294-91d6-73a194dbd895",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ff9807c-28d1-4766-9891-24c73668d1c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e06de49-53dd-4993-b4a5-ee41c29b0f44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f8ac781-e195-4439-a3ca-d8b938efe9fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9abbf22a-f950-4982-89f6-50cb39773513",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7131a362-3d37-44d6-8073-0ff2007dd57f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a963eb87-e5b2-404d-bfc6-b6fa463a2c5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "709ce9b0-9dff-4a6d-b8f1-a37d94b3a6d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cbf7aeb-af42-4fef-8831-6f7cc2ba3d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dbbcf1f-aa49-40f8-9fd3-794e12566487",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9653fb31-10cd-45dd-a4cc-2e2fb78eda82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d19559cd-e9b7-406f-b291-12d90b550f23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85cd47bb-a10a-42e7-add4-78dfb2c65813",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af39650f-3615-426a-8055-1fd263976b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "071598f6-62a0-46dc-a066-7a6ac9f1648d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5fc8722-c9bf-4562-acf7-5f5d44bdaf45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d3dc0e9-9153-4571-848b-bc9af531e007"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1664477-11b2-478f-a59e-e9e561e94060",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c682982a-f64a-415d-b0a9-0873e11c8f2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d56820f-9fa9-4403-a63b-cec4251622f1",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4d08660-92a3-428a-aed3-e5173d4fdf2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a7654f0-f19f-450c-ad4d-8f67abaf0577"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "804e3028-34f9-4cd0-b542-d010351fdc97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e13a70e-e52c-4a3a-98f2-e541a7fcd96f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f733f28-d4cf-4d6a-b0c1-b3c73ad306f8",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99ed7294-af0e-474a-a162-8fa074f117a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e359a00-e6af-4e54-9429-85db68126a0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57d97733-6e76-411e-baf3-a4928a4c0171",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98f7076a-3874-4085-89f2-b1143521f77f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "682cd4e7-97ff-4769-8f96-a4dc53bc7068",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "842e3a09-ba62-46d0-971c-185e1f83d6c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "329e9d17-42af-4af6-bf9d-43d6be726948"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80939b92-f97c-4409-990d-451498d633fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65242842-c282-4a93-a4f5-df1bae984a3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "675c63df-0f87-42a4-bb3a-f4d81bef9d27",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b5a9494-cd3c-4479-85ab-dac1cb25763b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77b9c101-83b3-4fd9-8911-282e1b31fb26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd590e6f-8fb4-426e-9407-ce55f5fefaf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c430994-e3b7-4320-a617-e65903392185"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc8af8a7-f5cd-41fa-941a-865269eb278d",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "198a097c-69cc-4951-be4e-922d4f610369",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "441bf18a-b3ac-4079-bfac-22a7e86562b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee889f0b-e602-4fc3-89c9-a0f24b9d046d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e06e9d7f-b30b-4c4c-8e02-a37bb3dc3737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6bf02b3-edb8-44ae-be00-56c4e3b2e96e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c8adb50-1fde-4b15-899a-4afcc54b6aa7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d51308b6-4be3-441a-b4a5-3ccf02c7a6da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd641752-4190-4327-9f0f-a0f7a06ee4ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae546171-d085-45a4-a5df-2a1be860f397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7a0e3b0-8a55-41a8-9f16-45fc1402a92d",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab2ba905-d17d-4364-9a58-ffc6c8f16171",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3af2c78c-0be8-4bd7-9454-7e03d24255cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09c39992-6e27-4ea1-99f1-3a2cc4fa5668",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "987bc4db-8222-4dd0-ad81-86d1c85ebc1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc10e122-7c30-4574-a468-0f053bb163a8",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01db1cce-6aee-44d7-952d-59b9be408e56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68d19604-0301-45fe-a35a-2a6fb6bdb987"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60db5d3f-98e5-4d2e-b20e-e60d7a382768",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51665cfb-832e-4602-985a-e885671708fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aebc650-da65-45df-bfaf-e9dc33684b47",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f71d4c4d-c62c-4e38-8262-67cf02b15c1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5671679a-882e-4f50-9380-2416775f5b1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff432d34-ad1d-4b1b-b672-506f6231e680",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77c1d7f9-fc56-4757-85d7-54e7c4740ae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6831d9b9-9435-41df-a012-39fa594a7ce1",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "694ebc56-85f6-4491-8840-582cd2cd8c84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3946e69f-28d9-4ebd-8be6-7ba47c653191"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6dfbdb5-5c37-4634-90c3-01b3a38f3f24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "564f0adc-0999-4666-a2a8-dac78e76494d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ac401b6-685c-4a47-9d7b-cd24496a344d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fae1fa6-8066-4885-8934-d67f7aa42ca7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1feb1571-b826-4246-8744-2068a39c4024"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0923b01-d007-4276-9db8-939371fd27d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38a46da8-a520-4d37-85c8-23b99f27ab80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f8d8e7-eee1-46d2-b0f3-a3e0cf8c9777",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b50102a-8655-449b-9d35-36d554f5794b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "666815aa-3452-4554-9a7f-1b3cf21a3ba9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0306d022-07cd-46ae-99d7-ee874e737b67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a86dd864-5bdc-4ee7-be74-ac7a7e0a2848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f669d9e-f1ef-41f5-887f-667cddcceffe",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca0fef0c-a008-4fed-b9ff-57612fdcc03a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7423c02b-9303-4a71-ba58-4c68a96e9741"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f19e8a1-7267-49bd-904f-f17c7e84dd92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5008c767-9e7b-42a5-91d0-48d8804d9fae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14010f7d-d341-474a-ade0-33f094238920",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e387dec2-a812-4911-897b-71a9eca772da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7a5a322-7852-4cbd-b6b5-d5c573d11754"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1e6c4ec-6ffa-4ac7-9255-3a965a5bf707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df4239f7-2455-481d-81e0-020fe655f619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfd778ba-9808-4088-8ea1-30d5520f2790",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14d8f201-daa0-4073-8353-5f3e9855bb06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d6ecf20-5379-4554-82c1-735bc772f9e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d38996f1-947a-47fe-b865-464e29de0b36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdf82a7b-79ed-4ebd-87b8-96de5942f07e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ee65c93-fe83-4da2-904f-feeb7126083c",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38df8d9a-d93d-4385-b94c-1a3e36235cd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0f169ef-f77a-4aaa-93b0-3e7de7932eb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62b22d85-0a72-4c31-b051-5ee174e16298",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4466c7f3-da4e-4b45-ab32-1733297e8f64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "496a1278-86c5-4eff-a871-40f78688a3d9",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "565e6025-ea4b-4d08-a6eb-fccfdbf6ec00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "158d8085-461c-4043-a047-dc4d69513dee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f011271-2f12-4556-a778-227360c30d61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b254a1d7-3296-4b25-b13c-a2a0c5e49c9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6892c702-e9ca-4f8d-a528-5e228afc944b",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f8264ce-fb32-4151-908d-b55f62afdf56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11de2a79-5d0c-46e5-bd98-0c4ea7cb5a21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07e9ab9d-d438-44ff-95e1-5c67e3fd5901",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c1abf0b-65a3-4fa5-85c8-3db2860d5e62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "590d8298-2710-4bf1-bd35-6454476f24a1",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79c4c212-1889-4943-9b6a-6438349cb024",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d443707-2286-451a-a76e-bb526b0dcb38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7da5bf0-03ae-4515-b3cb-7c2040fb18d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73eca836-9ed0-4f6a-9130-4480818f4215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "624e2eb2-cf3f-4185-ab33-f90988f03616",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2481a578-a639-47ab-911f-278d39613c92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f33b2457-44d9-48cb-b62c-4ab4851e760e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3766c14-ae73-47cb-9104-fa3fa9e58b79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9a3f8fb-83cd-4907-9963-17a0edb509d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "425bfbb7-7191-435e-865b-7701c7507d0a",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc0b050c-d01b-492f-a7aa-e9d77ad50bc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a782e47b-e66b-4f63-8f9c-292102cdad11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "571dfce6-d50a-4069-ba0c-4abe1e106af6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eaea8a7-8ed3-4c44-a96c-0465874ac083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f2fa974-6827-42ff-af3e-4cc91923bb9d",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "843e5b55-0088-4f1b-b682-048e20d9105a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8de6220c-2ccc-4dcc-b751-4796fc0385a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54404f32-c9f1-4d32-9418-97c992c7794a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dafb9cf0-1a38-44e1-8d3b-ec92322b83b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26c23e4b-3af7-4c7f-8e68-a52ffe0919cf",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07a16076-a0d7-4154-a5fd-e05f88be7089",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ca46445-f77b-4b76-9f31-be96f8a1d78e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f53a02b-4e01-4fe6-825e-b8f156b6a2fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "758bc8a9-2d11-4eda-82a3-a380e0b261ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f386ff33-5992-4007-8c8b-eeff268864c0",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "362c526b-d37e-446a-bb2c-4727d48cf06e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "484e29d8-6beb-4d9e-989c-f58ffec43321"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6cfd8f9-6f92-4959-81d5-e68afdf5c79a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1b35244-c391-4365-b95d-757a37196e4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40db0ad2-bfb0-4621-b9f8-afac4bf8e9e1",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8993758e-eb48-450b-9e64-0c86a54d82f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b48d2622-3afa-412b-a32f-83f925f0a20c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0803771b-acf5-45f0-af4e-e09506f03ae8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95fe50c5-c914-4649-94ab-318b6735ee85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8b046b4-2cc9-4a08-91bf-4b75005096d8",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "250a5ac0-b736-4921-a356-632c43fefe11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87184208-f214-4659-9748-6698ca5a1c6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1df111ce-e73a-470e-b27f-b201404b3b34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e15c5eee-9548-4f04-a654-1920c3257e11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26023e54-f1c3-4588-8e3a-632ba32c4c84",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1882dce-5bba-4674-8e6c-2a5b75cbeb32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b392c931-89a9-4fd4-8d6c-cd75cbffc0ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "747c0086-5ec2-454b-a560-64e6b75bfc3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0e5ec61-2b8d-4aa7-abcf-e05040db355c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4424bed6-bdbf-4041-9216-1e833c3358db",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b00844c-5bdc-4bfc-8e3f-8d5c56e36303",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14add9ee-2863-40cd-9c6e-894a70933486"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d95014f2-b714-4076-8979-6b94f76dba04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5d569f6-29cd-4d66-a512-399a1df4dac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6a75031-3def-430a-8f8b-fa2297c5a141",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1e9e112-fac3-4d35-b63b-37534af892ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40379a6b-2314-48ba-9d00-a385f96a0f4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33b32042-af65-440a-8aa3-0a258833ae07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85921665-eb66-4a92-abc7-593593a78ca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48944669-d8c4-429f-a91b-1d80b8147f58",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aef86dc-8917-4f80-91ba-dc7edc0d84f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f2751ab-41e9-434d-8065-696ab05892ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b303f40-1844-42fd-bd33-dad20a9b9c10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4c2e9fe-5a39-419a-817f-08c76ef7c06e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "476bdaee-9223-48f1-b075-01f8116533dd",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffa485eb-4fee-4f2c-b82d-52f1523e89f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acb5caea-5c40-416c-878d-ef883cede5d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61460d96-e746-4c44-a4cc-898e2945a6a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c20a4a2-486f-4983-97b0-43908f7c03e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e03f821a-c50f-4e5b-9f66-9c18e9d484b6",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2c658fb-c40b-4d9b-bbb4-44640ca17e71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a197667-8bbd-4058-96f9-62d30cf1b65b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96b66360-8a88-452e-a228-a230a3bf5eee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ae83fc8-7c62-4f6f-b69c-980444e01284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dcc455e-60a3-4677-aa5c-f00aeb447aa4",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "800b4208-b3d4-48bd-b8ea-64a7a8a60ce5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64daec90-e34c-45db-a604-3bbfe4fa5988"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e64a93ef-2fd9-4ec0-a11e-8eb330c0e5aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7253fc21-35de-45b6-a7df-130b9639c5a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9c204f2-cbe9-4751-a5d1-c7021ad972fd",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49f9cf04-2b78-4361-a49c-7c2560a10b4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47561d30-73c6-46d3-9096-66e5a8d7e6de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e32d469-76c2-42d8-b6c2-0f6f77a9e426",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33c1dd3e-41e9-4117-84d6-4d65c191e4b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01f6a542-3146-4cc3-a5c9-6c2b07183daf",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19823789-7f9e-4f9f-a62f-9965dcfdd8a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc31a74b-08bf-4a0e-9c00-c17bb9bce25a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acc55ec8-0c3d-46d7-aa0e-aaa40fb49905",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19d3e6fb-ea79-42db-9f19-3ea4a8d27623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e059d3a0-695f-4554-98bd-c2e14cec24e6",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08457f04-b122-41c6-b0ab-cb5f419776f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38b2da4a-a61f-41f5-a689-c9e08de22a8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c0c1a56-fab3-479a-ba49-f7401a7a1941",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a38dab93-4786-4f16-8d73-939b3c86262a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e12c7dc-4b0c-4046-a6cf-1945bb143706",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "171583b6-95a0-4388-b635-d1c56605eb94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a67e8617-0bf6-42e7-b0e3-cdb8ff4f12e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83442d2e-1184-489b-a5f0-5db8ec261897",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e30508c2-f4a8-4bb7-a138-8e7dcd8cfa30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41809a8e-9a0b-495d-a652-a200d14aa436",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ea5870f-dd93-44e9-bc03-bd887b04acf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a00ad14d-3434-4267-a70f-e99d4916451d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35cac9ee-c111-40a5-be76-6b804958b372",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18476dca-25f9-4bfc-9482-7b8c2aac34da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67fb07bb-8a14-4ed0-8d62-cab529178317",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42c6aebc-e0c2-4239-abde-f9c9d6387528",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f2b6a6d-c1b9-4be6-bd04-f2028c767db7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "452c508b-954e-487d-bc88-d4de19a62586",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bb03b05-e81a-4bbe-bf1a-2cab6d419a82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee0da6c8-7ae1-492a-9a6c-43684e390077",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3ffd9df-5874-4a3f-9446-a09b506007dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0f050f8-def5-4baa-9eca-57f07553a6a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "202b62f5-9de6-4456-95a2-8046714cc4ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5aad23d-bdce-4552-87e6-c627c7d2d2e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd99aa09-76a6-43c1-8a4c-4f8f8d8981be",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50d2c230-3bbf-4da2-986a-7e52a3087f2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13477165-d3fc-4337-b0b0-4497ca7c3bb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dda8953d-11ea-4691-a895-42bf80e4a789",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ef55d8d-71cf-4cb5-9e22-9ba6c40fdad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea758771-0d93-41f2-85c7-00ee2bd4f0b5",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6b93590-a8df-4c77-b98a-bdbe1e055aa4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4804658b-6c2f-466d-9105-63a84d19f367"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fda7bcb-c751-4ff7-b782-afb4b1f2a36b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d41f1d49-c5d4-493f-b916-b1d9bb7b49cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8496343-2f22-498a-9d10-585c43d6bc0d",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2cf3e2b-89a1-483c-9445-e209d6bf80e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a682432-d383-45b2-84dc-2dd950dcf564"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba0825f2-cb9e-4a3f-9634-a79be9bb62cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a32a9d5b-3386-4913-a9e1-5b15a43dcd24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff9a61eb-c57f-4fe8-8dfd-4f93084efcba",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d52e448-fbeb-47eb-9efc-030d277c4dbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ba47146-1776-4a77-9de9-082422b87ed5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6daa9097-257b-43d0-ba0d-7a2bcefa3fcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab9422ee-cb12-4e53-874f-a7b6a79d9546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbb12eb4-2931-4223-af2a-96a7d5b52b82",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bac7265-2574-4f5b-bab5-d4a64c0cb6a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b9b0d55-1c25-404c-a8a8-adc9a48bbf19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "777015ba-6325-4c4b-b1be-186214acfcad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d27c4e9-0cc4-4384-b4d9-0fef61a2d587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca357ee5-9662-45eb-9140-96849094dd30",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8a136b9-605a-464c-a335-da830f1f0cf8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "069b820f-0f39-482a-8ccd-b9037c0a8379"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f95dcea-e207-410d-9fc7-b60e6e660cd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ecdd5f3-3592-4294-8bf0-068f502040ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "859cceb6-f091-4931-b658-242e752ddf64",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d12c9822-2322-466d-8295-79c988686f54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b453768c-b469-4d7b-916a-2e57e093e9c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1f6168c-8c15-4838-8780-4716b3714e95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "720e4e6e-0413-45f5-ab6c-945d5de36284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c24d70-1eee-460d-a152-af80de6f129c",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33556de5-2140-4758-8890-b97b9556f419",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c51cb959-53cc-4e52-85c3-b0d2a5acce82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a5c029-d3f4-4320-a41d-a2ccd9742be9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5d06159-e5bf-4cda-a018-a9a8f811b384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea51bf22-cb61-45bf-8718-f45e570b6606",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e5a5271-53ca-4fc0-9d87-33c944cba372",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b4198fc-2ba6-46b8-9a97-c9069d90004e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05b53690-bbaa-4a4e-9284-4bfe12139e01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6484dd0c-fa6b-433f-8f45-97b68378f669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b39c3b9-abf3-4496-95af-3aadf7ff8e14",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1231dafb-3757-4903-95ce-ee5e1f8c7b15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73bc8d30-df24-4a07-b76e-e95fafd108b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57d68589-1ba8-4d75-8c68-793cdd2cb2b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c60e613b-d0e4-4c4f-8460-bab7fd8de980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "842496c2-f371-4ebe-b6c7-3cc525161423",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e78fe2-902c-4135-be39-9389ab8c31cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a82b5c37-9f80-40c4-8111-937c8dbf96d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0d2d93e-126a-489d-9137-279e76d5726e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee0f74ba-e577-4936-b7a7-d8bba36f8ff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "567d69fb-b679-483f-84db-e472fff665ea",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c93494c0-b5f1-49c5-8354-db1265d9f28a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "407e2a3c-2598-4a88-8435-b8f840177a58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5611f80-c32b-4e42-a97e-c306b0a985bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95034390-b07c-4348-8a61-be9098240f6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb769a50-9ba4-4696-9e44-3f89d3bddb78",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e286e387-71fe-45a2-865b-efaba5193bea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d9edad0-810a-4794-bb94-373039c6822c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2ccaef9-5152-4a79-8b10-4d10509d1383",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21055af6-dbef-4fca-a205-c3a28a804bab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "696ab7de-ac1d-4b80-9a3c-766d7e4ee096",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f2df40d-9eff-4129-b3a9-ab9bbf9f3f54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50aee0f4-d38a-4ae5-b719-82ec4bb7c50a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d2ba4f8-ea6f-4437-a821-f8fe1b6760e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8038bf5-a4d7-48a7-bf56-4d42ea07bcd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51fbacdf-4358-4020-8515-7525a8e7ffcc",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3465c20d-229b-4925-b86d-0c836c8e1230",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4f16c17-676f-4d25-a0f7-dccb632266ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61acc44d-0648-461a-9c8b-a936087665dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7507bf61-0d1d-424e-8f78-85fa145d10c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa467311-15b3-4824-b322-fbabe7d56e91",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac5da254-a228-43ce-bc23-70e70b20a962",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f7e26b8-5604-4648-a6f7-0ba3daaa352f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92ac5645-fdad-48c4-a475-8017d326fb87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "538160ba-e0ac-408b-9128-8298c339100f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43164143-5a74-4679-b2e0-4a0cc2b275cf",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04c70884-f21d-4318-8d00-30f45d6629c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d244817d-7f9d-4e7f-9c48-a856d79743be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e27ea5fe-31f4-40ee-8af2-146675d1597d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c97ca2f3-99ab-4c91-a0d8-bcb94baa2333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "533e434d-e5f0-447a-9d0f-22fb0fa7a5e5",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bac73473-ab34-44e4-8dc4-5fabc84a9859",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e1ea034-e539-4553-9132-dd560adfb749"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c455119-d19a-48c5-b61e-73219f00856c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d3223b3-d61e-4def-8933-968e5ecf5076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20470c60-9afa-486c-8377-9c821c272354",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da448945-2be3-40d5-b617-2876e94aa6d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46ed1af3-9d8c-49a4-93a0-a0ec60c23022"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36ac8e45-d36f-40dc-9d04-362c3ac428fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "216755a6-eb0d-4b66-8bba-cda01c5711ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c71bedb9-25de-4394-959d-97e65eac52fa",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c9106a4-d296-412b-a644-0b067b556ad2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81df4908-3fc8-437f-be60-bed01dc061e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41b0d2e2-1fe8-43fc-b08c-7e8427d2ffa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53e0e690-6263-4b70-bf05-0e6a12e37090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c40c3c1f-6232-4627-83e6-a78ab5c68b2e",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf090cf4-1587-42a5-b2db-1932dd044fd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c4d6762-f5f4-4d8a-b3bc-7dde4c7f41c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23f51a10-3541-4465-b713-3af2b7dc98ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aff337e-39bc-44a9-a479-88ac2a48bf96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1478963-8448-4a10-8063-2b1cf6ecfe17",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02a207ef-0cc4-4173-a036-3e0868ca2933",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d41ab0dd-3010-4edd-bfc2-64c00f569aea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de6beba6-a2b1-4d46-beb3-fb847dbf4794",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91701217-963f-4944-b5bc-108c2971ea3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "492fabe8-fdbb-4f4f-a1e4-53ebb49e8319",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f4e9e23-d732-47f8-bd00-06fb7daf1866",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43d498c7-0553-44fa-be5a-48727f7957b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d604aad2-d758-4bab-8806-293dbd556fa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0be332da-b63d-44cc-af93-ccec961a00a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46fe8037-b392-4c87-83cd-adfd5e7b4ea6",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "694b54dc-6049-4a5a-a6ba-34b1825cbcb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0be46bf7-6c36-4f05-8167-fd57f9f8b941"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddf3eab8-855d-4ea6-ad9a-e31c2a40b842",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5ec6a45-0007-46ae-8981-f027e4fcd90c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "127d89b4-acfa-4a10-8fc9-c065c7fe7a75",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fb3ba02-23f7-4371-b592-a4b61cb9771f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "661372a4-fdb9-48ea-b17e-3665d9b6ce09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8251402-1e7b-4448-aa1f-5021dae7d9bb",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fd1bc82-1362-42a8-a6d3-e0016e15e93b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae3c740e-40fe-4421-9406-fcff636dbb09",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6146b69a-079d-4a9b-b4ad-eb66c0ec148d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b19c3f8d-bec7-4887-887f-160998321161"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c74c699-780e-454e-af83-bdc972c933ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff4302bb-78db-4f75-bd73-2df61431d6a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccf3d5a3-3240-4fcb-824d-a5f249422b42",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47358841-fb38-463c-9fdb-81720a4daacb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f5b3ba9-2b11-4e91-8583-07ba565ff91a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eec55091-09f2-4ea3-a777-7b3789066568",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af5f81f2-a837-40c6-838e-f31c2f4fc3c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2800f103-20d4-4929-aef7-af623cfc1eaa",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ed85e63-e0b5-4aa6-b928-e638380fc7ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33798b90-1314-41f8-a859-e379d1181405"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a1b5095-d4cb-413d-9528-e623dbdaff4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97649ff9-7cce-46b7-b7fb-369d46fb9b49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d22aa5e5-61bf-4ef1-9c74-c9f149feb3a2",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e3f224a-ee7a-416f-8a58-d1882537f399",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fcec4d8-b6cd-4c67-8875-c3cd2fe3cbf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df92dc6-d2b3-4622-a7a6-a49c9f1cbd9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "637de262-5dbd-4608-a952-57b4192e2f3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa20c221-0f29-4e2a-aaa5-fbfe97645d70",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25b4c12a-44d5-4623-a8c8-b0828ac4c0c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7357607c-3ef8-4564-85f5-cd7fdffe063d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "948f3293-ebf1-4a20-ad70-1b004a266832",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b5e90ec-c62d-4b3b-ae6d-d5f34f2ec960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7cc960a-f80a-487e-a772-9c0cb3f37fb2",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc971831-7ce6-40dd-9661-ea2f90e9c9eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0be2b86d-0809-4166-b626-80b748a183d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c630da-7ee0-44e4-b463-cf696249914d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17ed63a6-d0e5-42db-9c57-5f7c13838df3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a99be80a-6249-4f6e-b3c3-d7df364f0c98",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "238dfc70-5221-4718-9f0c-aeb3000c0bcd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bac95bf-e3e7-4b5e-ab6c-1c5a26e7218c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96a6227b-f7aa-4101-bdbd-49086de4dc72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99b42dbd-fc61-45fa-8f31-2b4552e115cd"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1e990de2-e831-475c-98bc-4ba315796be7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "41018e09-1fc3-490e-8775-371cab1e1e7e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fdc9e11c-e0ad-4e7a-b660-f8e40db8f1fd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d09a36f4-c1be-4599-a2e6-db529512945c"
                    }
                  }
                ]
              },
              {
                "id": "44fb20a9-3a4e-4846-a0c6-1b208dedb306",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dca14288-56a6-4a0a-b82e-52e45bb62f1c",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4b313b5-d5e4-4378-8f17-582f804bce1a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "af07aeba-eb6b-4a38-ad67-e0f7e9a8949e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9e3acff-49f0-425a-b619-99074147ba3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8e0ab9ef-dd96-4a20-b8fa-d91195783a7d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0662cfc8-5b79-4d66-ad13-19b3304c8b86",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "323b9474-2ae5-4e73-9c59-bca145466aed"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cb38492d-08ab-41ca-947d-ffda059f7c29",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9c8ea96d-9a22-443a-a564-1788682ecc11"
                    }
                  }
                ]
              },
              {
                "id": "36961692-4c7f-4e20-911e-df187e61efe6",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "73cdc173-4b8c-48ee-b9bd-14bad3ac6e62",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d4b94b6-3e84-4434-9203-552dd719b6e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "0b749425-5fba-4b64-a41e-27b16a1b7488"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edeab759-4e04-437f-8923-5414cc6c3d15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d5b1f9a-addf-42bc-b9cd-c337d0b5a8e5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7c5d1475-5649-4699-812b-80a642ef4c2f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "90190cc3-36bb-4014-b0da-32176d5b9161",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7d1fb424-ec5a-4f36-bac9-8c719cff4a0a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "92ae9445-00a3-4ca6-9e40-ea81ab26e1fe"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "80912903-81fa-49c8-bded-bbe19b24486e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c55ebf19-9267-4cbe-bd25-920922d0b7ee"
                    }
                  }
                ]
              },
              {
                "id": "c2ba27a7-1722-48d6-add4-01dcaf88e590",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "826eb8c7-f440-4708-a11a-e913913b9972",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "56f9c34b-30df-43a2-8c52-856e571381d0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b4407903-244c-4736-bbdb-3b2e4a3bbc64",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db82f26b-7abc-473b-9e5c-9ecd5177d18d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7072657c-aa34-426a-a755-346a80d48b2e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "040af7fa-e5f7-49e0-9060-764f4b750b99"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f2f171a7-98f4-4570-9a47-9c0e02708900",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "36de626f-54f8-49bb-ace5-428002b9a3ce"
            }
          }
        ]
      },
      {
        "id": "d8ba845a-093c-4061-bdec-32945f3aae82",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "8ca93ca3-d6ae-4cc8-bcdf-a1a316bdd03b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "089ad983-9f2b-41ca-b949-be8804002478",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "943b499b-d279-4e97-a839-2b8d164350ca",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72c8f02a-7a40-4d69-9372-aa882daf32c4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "394afdd7-63ef-4f2c-a205-6a0a4a2bd8f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbe954a8-3435-408a-b421-cc5b51324635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6a6e08ee-1702-44c2-a20a-eb068450b08c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d7d0f169-50c0-40c9-a270-a240f90f37e3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2a0a1db5-5ed4-49a3-995d-a0e31d499b25"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "745fe080-34de-4e51-a26a-caece7e6f923",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "02d9b001-f901-4970-8c72-96437998ff30"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1dfed91f-7b13-4d01-b427-3b8266d0aece",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "56d0bb29-8af6-41d8-9a41-71b1a7e43797"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "06e5373d-b8dd-48ab-8c76-98ae2c935f45",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4101ae2a-63e9-4e1d-a35d-493961615ae0"
            }
          }
        ]
      },
      {
        "id": "f6f425fe-4f00-4ed6-9791-d1206545eac6",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "9cf0225f-7905-44d6-bfcd-84c3634fb8a2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5f8433a2-1fe5-4d8b-a377-07c0dfc94851",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "219532f6-4eee-400e-9ce9-e33fffb2720f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fabfcb17-9a6c-4798-b33a-a53cb87f7b8e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d7b817f3-12dd-44fe-8a31-30de8630af23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8b9c300-fa58-44e6-af46-1da77da1a007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8dec6178-af17-4e33-b6f8-d7ea4ba806b5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cc0f6c8e-e3fc-4ba6-9518-8cabf3a89a32",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b128eff5-3d66-48db-a1d1-e9b4cf9e0952"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d7d18591-c959-4647-9839-89e02f0932e1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b2ddddc2-2ca2-464a-90ab-20e3bc31e32e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c74430e8-6e02-413d-95ce-6fb8cfdd98fd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9d67d897-c1d8-48f0-80a0-7b976397dc8b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "44b09754-f556-4f40-b8f5-2449fa362f95",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b903fdf2-0f6e-44aa-bd7f-b19990cec3ae"
            }
          }
        ]
      },
      {
        "id": "bdf5b28d-3412-4578-8e91-5d17b61b508d",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "5f0465eb-307c-4e74-895b-32b5af1981b7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9115249a-a96e-4c5c-8151-bca20ff32c5a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "de4a5762-7f71-468b-8785-5be57ac7cebf",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7401bc58-81e5-4edc-9769-d1f378cc2cac",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "18a1bab3-0836-44b9-8d69-6325e50ab822"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8684eea4-4ea7-4427-98da-20887b2887a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9721f6cb-fcff-47f3-bdac-3cf668d0196a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1549768c-8ea4-4e68-9e61-b900bcece225",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1509b680-9e19-4a56-b251-b4131eec24ee"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a406b207-9fcb-4f98-9a82-f24ed418dbf0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "63bc02ff-e5d5-41b2-8575-9cc8ad849218"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "28280a76-cca5-4498-a874-5d4c633d8da7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9a17459e-1034-4157-bd3d-96407e23b77a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5ce8d1b1-c036-439d-9dbd-b7baaa7521c5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2fd46c45-4427-42ca-8fb9-c5ee973922fb"
            }
          }
        ]
      },
      {
        "id": "e25c43ea-01ad-4c26-819d-f4fa996a651e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fe8ff8bd-e2af-40dd-a95d-4da034a00b55",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9e72277c-7933-47e6-98dc-ca4f6e80247e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "de22cefd-46b4-42e7-b21d-52fc23ce734f",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0c1418f1-3b39-4f02-84ff-d1c4ca99aa97",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "88c535df-dcb2-4cf0-b4aa-6b64cdecd652",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 34.000000000000014,
      "responseMin": 18,
      "responseMax": 278,
      "responseSd": 19.735932768772816,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1688950093376,
      "completed": 1688950114568
    },
    "executions": [
      {
        "id": "885a43ff-aa44-4ac0-9dc2-3863d2f7d8e6",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a5482e89-844f-4173-8941-6fe3e13717f8",
          "httpRequestId": "dd40b4a1-656e-4174-87a7-8cce79351740"
        },
        "item": {
          "id": "885a43ff-aa44-4ac0-9dc2-3863d2f7d8e6",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "2d96cc4a-9ef6-4f4c-bb10-a0620d94e0cf",
          "status": "OK",
          "code": 200,
          "responseTime": 116,
          "responseSize": 0
        }
      },
      {
        "id": "08b2e15a-764d-45c9-815f-310d8a5440b4",
        "cursor": {
          "ref": "ba066d00-346b-419e-a07e-ebc0cfb23a47",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "076ca803-6934-4047-9bda-9c843d7b4d8b"
        },
        "item": {
          "id": "08b2e15a-764d-45c9-815f-310d8a5440b4",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "f55fd0ae-d5b5-4079-8550-e088274cc133",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 0
        }
      },
      {
        "id": "6083a393-357f-4a93-8d20-2290330b7c1e",
        "cursor": {
          "ref": "9c943140-5b21-4f19-a105-299fffc8c544",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "7d4425f0-eb3b-4916-ad96-1d64fe081f43"
        },
        "item": {
          "id": "6083a393-357f-4a93-8d20-2290330b7c1e",
          "name": "did_json"
        },
        "response": {
          "id": "b1aacc4e-acfa-4892-9077-0921cf0b8380",
          "status": "OK",
          "code": 200,
          "responseTime": 142,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52487bab-c856-4549-b83a-dca4e2b9f4bf",
        "cursor": {
          "ref": "ae75f355-3928-4c6e-a944-01a55eac66aa",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4645ad28-9464-411d-831c-4604913d6613"
        },
        "item": {
          "id": "52487bab-c856-4549-b83a-dca4e2b9f4bf",
          "name": "did:invalid"
        },
        "response": {
          "id": "a371384a-9b91-4cca-9712-324a2d771c1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52487bab-c856-4549-b83a-dca4e2b9f4bf",
        "cursor": {
          "ref": "ae75f355-3928-4c6e-a944-01a55eac66aa",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4645ad28-9464-411d-831c-4604913d6613"
        },
        "item": {
          "id": "52487bab-c856-4549-b83a-dca4e2b9f4bf",
          "name": "did:invalid"
        },
        "response": {
          "id": "a371384a-9b91-4cca-9712-324a2d771c1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fd1e3fa-5823-42d3-acdd-206e65af6b13",
        "cursor": {
          "ref": "1ce146fe-2b3e-4640-84a5-2cb17f280ec7",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "127c6fa6-b61d-4cc3-8cb1-bbacc3ebe51d"
        },
        "item": {
          "id": "7fd1e3fa-5823-42d3-acdd-206e65af6b13",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "087b982f-6ced-4939-b613-296f6a794cdf",
          "status": "Not Found",
          "code": 404,
          "responseTime": 76,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eb0def0-a18e-4794-9627-db8f885b4dd9",
        "cursor": {
          "ref": "2b77cddb-77e7-4250-8690-dbb374b76474",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "9da49df9-b597-45af-bff8-37f0b076dcda"
        },
        "item": {
          "id": "6eb0def0-a18e-4794-9627-db8f885b4dd9",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "988440fa-172d-4427-b1f9-5401c66965b3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c88a9038-3891-43fb-9685-037028367e4f",
        "cursor": {
          "ref": "9f7069cf-a29f-4e4a-86c3-d3ad8b0d4b81",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "e663b17a-3aae-43be-8cb2-0c87ed88cc88"
        },
        "item": {
          "id": "c88a9038-3891-43fb-9685-037028367e4f",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "58530abd-211a-418e-96b7-7d951ae552e3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64c62b38-81f2-4ee3-9cb6-0f6449a6e924",
        "cursor": {
          "ref": "eafc65c7-b7bf-4228-a24f-84d6a4eb934a",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "7b3bbb47-c608-4e88-a4c2-df482d383772"
        },
        "item": {
          "id": "64c62b38-81f2-4ee3-9cb6-0f6449a6e924",
          "name": "identifiers"
        },
        "response": {
          "id": "c36a4ada-6c06-4906-b95c-6af6167b547e",
          "status": "OK",
          "code": 200,
          "responseTime": 78,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86252c90-dd4a-47c6-8a95-1f1b7949738d",
        "cursor": {
          "ref": "9c0a079a-984d-43ab-80cf-584ac6e1ac72",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "3cb77e73-8dca-4d09-a162-702b7a52f1ae"
        },
        "item": {
          "id": "86252c90-dd4a-47c6-8a95-1f1b7949738d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "5ae2d4db-610d-4714-9750-0892f3b92166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dc1fb34-2926-4883-ad5b-cfbd5f6db22b",
        "cursor": {
          "ref": "81d36b45-9471-493a-8fa7-8bd8710b0609",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "f9c12d31-52be-4270-a720-8cc3ec390c66"
        },
        "item": {
          "id": "3dc1fb34-2926-4883-ad5b-cfbd5f6db22b",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "b626ed4a-8c27-4fa3-aac5-6f771dc0d4fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f09191be-28e3-45db-b559-c83e1a3438b3",
        "cursor": {
          "ref": "85a4942f-491a-4d9a-9e3b-adeef997b6d6",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "eac0065e-5e48-4c2e-aa40-1e524efca419"
        },
        "item": {
          "id": "f09191be-28e3-45db-b559-c83e1a3438b3",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "8006095e-a086-4396-88fa-bad4ea27b167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8595a1d5-6823-4681-9406-38606f0be85b",
        "cursor": {
          "ref": "ad7b1f41-b899-4320-bd17-add15cc42f18",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "dadfdcdb-e23a-4d9a-a40a-5e95cc3ee8bc"
        },
        "item": {
          "id": "8595a1d5-6823-4681-9406-38606f0be85b",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "057165b1-1da5-4f95-accd-ebf362aa828b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "598cf220-fbe5-4675-acb4-ad401a1f486b",
        "cursor": {
          "ref": "78c7a0db-f8e5-478c-afab-d1565ffb7d8a",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "3155ebcc-35fe-4551-bf9b-83e059e48296"
        },
        "item": {
          "id": "598cf220-fbe5-4675-acb4-ad401a1f486b",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "f44aff1b-baa9-4fc9-a4cf-2c49629057a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb8ee168-00f0-408d-8668-21c1f8935750",
        "cursor": {
          "ref": "3cd61376-a2e8-47f0-877b-38509cfea109",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "bde0dd53-0117-434c-ab7e-d82e676627be"
        },
        "item": {
          "id": "fb8ee168-00f0-408d-8668-21c1f8935750",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "ffbeceed-dc66-4fb4-8c62-ab9a9d0eba56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79114b81-76d6-4669-9b89-26c63758aef2",
        "cursor": {
          "ref": "7e122cbc-0906-42bc-af3f-ada6f7ee3853",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "42e7c6a6-a32d-48f2-b37b-89f77d629e6b"
        },
        "item": {
          "id": "79114b81-76d6-4669-9b89-26c63758aef2",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "47a021d0-4a43-4f50-83b2-420f9133d8e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baf976e0-8756-4e44-9798-600ffc33bfd6",
        "cursor": {
          "ref": "12276b80-c9df-4ea9-b260-4857287451cf",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "4f288194-1692-4483-8b07-e4da88d0ce74"
        },
        "item": {
          "id": "baf976e0-8756-4e44-9798-600ffc33bfd6",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "58e1bbcc-ec0c-4956-b915-c8b612f797f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1431428-ce96-4717-a0a3-c9da3f406c24",
        "cursor": {
          "ref": "ed56e4be-f936-4058-abd5-e1dc373d316b",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "7cf6d129-c676-40d9-a094-02a08044896e"
        },
        "item": {
          "id": "e1431428-ce96-4717-a0a3-c9da3f406c24",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "de1bdfdd-a062-4d58-bc48-2972fc79e861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e7bcf9c-9ebd-4e68-be8c-3cb34c3bff93",
        "cursor": {
          "ref": "4bcd843d-6a48-4339-b102-e2957a6aeb90",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "c9b643bf-7b53-4e7c-8dca-fe03e2ac6275"
        },
        "item": {
          "id": "4e7bcf9c-9ebd-4e68-be8c-3cb34c3bff93",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "0ce440be-1259-436b-bf46-2f9dc48717f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6608fd61-825b-41b9-a83e-3e4714ff692d",
        "cursor": {
          "ref": "198715a1-74cb-4ecb-a23c-985a1b295235",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "875553b7-5b00-49a3-9860-92ed3725f16b"
        },
        "item": {
          "id": "6608fd61-825b-41b9-a83e-3e4714ff692d",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d5297d63-a8bf-4962-9e18-0285878d879a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f37b9d7-bc43-494b-b959-d06488e8ede3",
        "cursor": {
          "ref": "c420806c-b391-4f61-b2f7-b98285f7bf61",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "3ad0a41c-c991-4cad-8d3e-bb1f4edebf26"
        },
        "item": {
          "id": "2f37b9d7-bc43-494b-b959-d06488e8ede3",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "c3d3c84e-d02d-4fc6-b7bf-79e8f18eaee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6bae6ea-216c-4e33-8ee4-75d8c30455cf",
        "cursor": {
          "ref": "affeee83-74ff-42d4-8664-6ecc6c8d0bce",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "067e0558-ec01-4849-9de3-162faa462e6e"
        },
        "item": {
          "id": "e6bae6ea-216c-4e33-8ee4-75d8c30455cf",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "280c70f1-cc9b-4ae7-a4ab-53c574501683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a97cc4-385e-4029-8f2f-158a8bdaca98",
        "cursor": {
          "ref": "2d57f6e6-01bd-4d7f-bf8f-1dccd7071616",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "d629930d-35da-4bcd-a510-7fa82503f667"
        },
        "item": {
          "id": "c3a97cc4-385e-4029-8f2f-158a8bdaca98",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "f5ef5174-1be3-464c-b7a7-7d8aac3b8314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "815e41eb-6bfd-4722-b6b5-57b091597757",
        "cursor": {
          "ref": "44c8e094-dedb-4fa9-9c14-088462456fc1",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "34977e8d-571b-4992-b4e9-6f4aa304f818"
        },
        "item": {
          "id": "815e41eb-6bfd-4722-b6b5-57b091597757",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "b1037ab3-87e5-4f3c-ad84-f1ce55e51bce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52734a2b-c4f5-480e-9600-77f372df62f1",
        "cursor": {
          "ref": "b7ba4c20-97fb-4f97-a544-64ddae4dcd27",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "29ef8480-39cb-4d61-8b98-13418ddb9244"
        },
        "item": {
          "id": "52734a2b-c4f5-480e-9600-77f372df62f1",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "69e7473e-9fcf-4c57-8d37-df6681d3bb9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27c2a476-a8a0-4e28-b193-1603f949f368",
        "cursor": {
          "ref": "0e7b98ff-a60b-449a-9a3a-6daa6d49ab69",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "1574c384-4645-42d5-9637-e29af6cfbfa4"
        },
        "item": {
          "id": "27c2a476-a8a0-4e28-b193-1603f949f368",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "31263c2c-9990-4dc0-a7cd-ffae6150d48a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f09bfce-7fcd-4717-95da-f28a8a9e9306",
        "cursor": {
          "ref": "ea160f8a-36e6-4394-87cf-ae81df3f558e",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "4b384bd7-3c91-476d-9616-21abf312befd"
        },
        "item": {
          "id": "4f09bfce-7fcd-4717-95da-f28a8a9e9306",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "bc75e263-63f3-45a3-941f-afae22fc7111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da52075f-00bd-4fe7-a39c-644b7d7f765e",
        "cursor": {
          "ref": "708e239e-4bda-4095-99b3-da0814dc534e",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "2f05d6c3-4adc-442d-8854-5efc37198b4c"
        },
        "item": {
          "id": "da52075f-00bd-4fe7-a39c-644b7d7f765e",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "0a734e40-4026-474e-a49d-694c59f605af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b9ccac0-e1b6-4eb1-b525-a7fd17a5e2a2",
        "cursor": {
          "ref": "b4d97cb9-e3b3-414a-8cb1-cd5c3ad12ff4",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "8b3070fd-3ecf-44d7-b8e1-802cff11682b"
        },
        "item": {
          "id": "8b9ccac0-e1b6-4eb1-b525-a7fd17a5e2a2",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "a91d68c2-c627-4a8f-a365-402b6072f0a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4ea22ef-b6a1-41cd-89ac-4a02ef68ed0f",
        "cursor": {
          "ref": "e740b5af-4359-4d5a-814b-45a66f3adbcd",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d6745557-d72c-410c-b40f-50a18e91d0cf"
        },
        "item": {
          "id": "e4ea22ef-b6a1-41cd-89ac-4a02ef68ed0f",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "5ff5ff53-21ff-424a-a21f-ef4a7457773d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ad67aa6-8e1f-41bd-ac46-c7e457203d79",
        "cursor": {
          "ref": "75d84c1c-4fd9-4f00-97be-023a82c4991c",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "67628064-f71b-40e9-bb62-539c0fb8f75b"
        },
        "item": {
          "id": "8ad67aa6-8e1f-41bd-ac46-c7e457203d79",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "3a43eb46-8f09-4936-81dc-aa74907c5b53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f9cca32-4f9c-40c6-a985-31327543d767",
        "cursor": {
          "ref": "c429d609-06f5-49f0-96d0-4de8eb339004",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "da4fe7ef-e82b-436b-93b8-4330bb0cd1bb"
        },
        "item": {
          "id": "4f9cca32-4f9c-40c6-a985-31327543d767",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "e6076ed8-f95c-45af-a08e-4c8913b04b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e734541-77ec-4102-b67b-a98198355a30",
        "cursor": {
          "ref": "4c72994c-f393-43a6-ab23-d2e012763cc1",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "b2acd6ad-047b-4530-9f73-c84d237a39d7"
        },
        "item": {
          "id": "5e734541-77ec-4102-b67b-a98198355a30",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "db02c7c0-3cda-4fe9-b6df-33f60ca279d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63e7a746-3333-4b3f-89bf-2fc818991da7",
        "cursor": {
          "ref": "88329812-da29-4db9-b8af-64510eb187c5",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "62532018-27a4-4236-a0d2-40881145c17b"
        },
        "item": {
          "id": "63e7a746-3333-4b3f-89bf-2fc818991da7",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "27a1e7aa-1557-4abe-b2e3-120370a61553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23972fb7-fcb3-4bb0-8caa-c727dc06aa45",
        "cursor": {
          "ref": "28cf11cc-f2ee-4445-a987-60ebb13c9832",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "62953155-0fef-49f0-a1a4-394f23b998f7"
        },
        "item": {
          "id": "23972fb7-fcb3-4bb0-8caa-c727dc06aa45",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "dc62bf1b-d1f9-472e-819d-445e6be0d02c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "807f0338-68d5-4468-af27-e6cbdc59fd11",
        "cursor": {
          "ref": "a1c71b1c-170c-4588-9d1a-259d323d0746",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d6bf7495-a57f-406b-bdfa-0357e1488ab8"
        },
        "item": {
          "id": "807f0338-68d5-4468-af27-e6cbdc59fd11",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "3b3d60df-4520-479b-b40e-34a3d7644fad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4fda836-98f4-46c6-b67c-c6bd28e3164d",
        "cursor": {
          "ref": "2ca5a658-5839-4034-9265-493cdaef2917",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "5b6cea85-75d2-4371-8a26-ab772a517a45"
        },
        "item": {
          "id": "f4fda836-98f4-46c6-b67c-c6bd28e3164d",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "42a591d6-21b5-4836-86cf-5dbd63405602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29eae207-9b62-4b04-a717-a58871f87e9e",
        "cursor": {
          "ref": "7cfb5cd6-dc0c-4fa9-861b-0da70777f49e",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d04115cd-fc8a-402c-b813-e062d70ecb36"
        },
        "item": {
          "id": "29eae207-9b62-4b04-a717-a58871f87e9e",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "67c3e719-e864-45b8-895f-484851591b20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12a8ef58-f300-4c9f-b0c9-6c5b6ebc0b49",
        "cursor": {
          "ref": "82b8918c-9891-41df-902d-faed123b70ea",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "a2b91162-d0db-43a2-9be5-5189933f103b"
        },
        "item": {
          "id": "12a8ef58-f300-4c9f-b0c9-6c5b6ebc0b49",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "15549b81-60d0-49b9-a915-4100d5445be2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff97aa93-44b2-47e6-b251-f3628b5ccdbe",
        "cursor": {
          "ref": "55018cf3-e1a5-4123-a746-8bf4f12e1c6b",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "34ed718a-c87e-41f4-8956-915972391a69"
        },
        "item": {
          "id": "ff97aa93-44b2-47e6-b251-f3628b5ccdbe",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "52d110c5-100d-43c9-aeb4-058d1b4b0209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b51e08-9a7f-4489-b67c-7c8fedbdc0fb",
        "cursor": {
          "ref": "eaa1746d-e5b2-4052-b083-4c0be798d81b",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "89aa4b7c-f152-4757-b96b-b3ba2e6216d7"
        },
        "item": {
          "id": "d5b51e08-9a7f-4489-b67c-7c8fedbdc0fb",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "d3a1eeaa-4f58-426d-b000-eb081b9f98b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a0ecb44-8e0d-4f05-bb50-4dc5b3af0603",
        "cursor": {
          "ref": "502ea9b3-f5cc-4699-9edf-e351df89462d",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "96dc0de5-fdd8-4665-95ca-5f255592a8d3"
        },
        "item": {
          "id": "2a0ecb44-8e0d-4f05-bb50-4dc5b3af0603",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "074cd8bb-0ca7-400d-99bb-a87324f5ce08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bc8c6fd-40e7-4b7f-9006-f33e6c863cd8",
        "cursor": {
          "ref": "d1705675-3162-42a5-b054-5993047bba6b",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f8c02236-47c9-4b24-a2e1-8f3f9a8ca586"
        },
        "item": {
          "id": "8bc8c6fd-40e7-4b7f-9006-f33e6c863cd8",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "fb6ac065-cfea-49ee-8395-df2a02fd2d16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61a6498d-b0ea-4523-8bad-39aa2303e0be",
        "cursor": {
          "ref": "e8264069-0976-41fe-8197-b89e4f822553",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "1a667eb1-6191-4e22-bc0b-b5a3012a408a"
        },
        "item": {
          "id": "61a6498d-b0ea-4523-8bad-39aa2303e0be",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "e5dd6e26-33db-4360-aa37-e73cede5844a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d52e6bf9-2143-4f3e-af92-05f337ea6814",
        "cursor": {
          "ref": "c7f998af-72a7-4635-8656-d70c2ce8a558",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "6ed4c149-2afa-4d0c-8c2b-2e996d539461"
        },
        "item": {
          "id": "d52e6bf9-2143-4f3e-af92-05f337ea6814",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "5f85e0bc-dbe9-41fa-aab8-b2fe3cb51bec",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 39,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b74a3b13-8ea7-4139-80e0-cf03d87a226f",
        "cursor": {
          "ref": "68af8131-a981-4ac1-a508-e51a08ef04ba",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "7019a716-a44d-4161-8f2b-3719d3b0e1aa"
        },
        "item": {
          "id": "b74a3b13-8ea7-4139-80e0-cf03d87a226f",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "97f6a59f-901c-4b8d-8b50-ccc9d8eddd4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb08868d-d7b5-4a2b-950d-f5bb2d775ded",
        "cursor": {
          "ref": "0e854059-3df0-413d-8ea4-7d0b1585c0a7",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "86cb3b1f-c0aa-4b16-a9cc-fbaebf4540e9"
        },
        "item": {
          "id": "bb08868d-d7b5-4a2b-950d-f5bb2d775ded",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "09ac26f8-e15b-40c7-82c4-c587768ad3db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e68b46-1c47-4cbf-a383-9b92e67222d6",
        "cursor": {
          "ref": "df6f5134-05a7-40d7-a682-4a2c2b4da6bf",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "18b3f86c-3884-4958-b58d-d829d92d6ec3"
        },
        "item": {
          "id": "c1e68b46-1c47-4cbf-a383-9b92e67222d6",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "8de71094-d375-46bd-88af-6116f0015dfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a915b454-6305-4437-b0ac-0bcca19a64e5",
        "cursor": {
          "ref": "f341bef0-b1f4-4941-b65f-dbe8ddb680b4",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "afa989ae-b7f6-46bd-bdf5-5199f0de0680"
        },
        "item": {
          "id": "a915b454-6305-4437-b0ac-0bcca19a64e5",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "16fe3f57-4a83-4e3a-b249-4f0117a6dcff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a88dcee8-5049-4c4d-bf34-a140f968caa3",
        "cursor": {
          "ref": "4ae6ab72-1d3b-4da6-8cc1-7e46d04715b9",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "bc33eba3-989a-43db-9d47-01dc84088220"
        },
        "item": {
          "id": "a88dcee8-5049-4c4d-bf34-a140f968caa3",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "146b0efa-1fa3-4422-a79e-91341cda2fe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15a5fecd-15cb-42ac-b9ad-29dadc48d09e",
        "cursor": {
          "ref": "6df67e80-5420-4579-a1f0-dc0162b39510",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "2ecd5faf-dd7e-4648-93a0-8f2841167915"
        },
        "item": {
          "id": "15a5fecd-15cb-42ac-b9ad-29dadc48d09e",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "eeafd0d0-c522-4880-a8c5-370901c815f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ea135f1-9d5d-41cf-84d6-a9d2886ab33b",
        "cursor": {
          "ref": "86dbb7b8-74ec-4f67-b7d5-4e6ed749f293",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "9395ba20-2be4-404b-a4b7-7f7e563ab38e"
        },
        "item": {
          "id": "9ea135f1-9d5d-41cf-84d6-a9d2886ab33b",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "04cf2960-a06e-47ee-a223-521ee4126b30",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 39,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38d362ad-93f4-4fb0-a581-cefd1990e588",
        "cursor": {
          "ref": "657c038b-9833-4f50-bb19-f5e2b347605f",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "f7a464c0-475f-464e-bf62-70dcdde15c52"
        },
        "item": {
          "id": "38d362ad-93f4-4fb0-a581-cefd1990e588",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "fd3334fc-9212-4cc8-a8a9-0102c67fac97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1f5d547-821a-42e7-8402-0cf13b1a8efa",
        "cursor": {
          "ref": "bd7c47db-290d-4b22-b23e-257ee5b6c834",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "0e8a69c3-6f7a-4172-a649-895b19be047f"
        },
        "item": {
          "id": "b1f5d547-821a-42e7-8402-0cf13b1a8efa",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "eb8b70a4-b074-4382-9681-88d0364ba0b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e48e4d92-e3db-4f1b-b1cc-01d0704fd2a2",
        "cursor": {
          "ref": "046832fb-5d24-4bca-8a94-1b235bd39f63",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "3b40eed1-5f11-4c24-b388-b7334892eb6e"
        },
        "item": {
          "id": "e48e4d92-e3db-4f1b-b1cc-01d0704fd2a2",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "6be8d322-7922-406a-b50e-cb789f214acb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bbc3fff-52ed-4485-99f5-3254e22c7bbe",
        "cursor": {
          "ref": "7e1bd307-69fc-42ff-870b-801f4252bd80",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "14e3eb33-865e-41a7-b8d4-c0dfbedc9045"
        },
        "item": {
          "id": "5bbc3fff-52ed-4485-99f5-3254e22c7bbe",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "c9408572-9f5d-4214-9153-462b5c3f3450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02571d56-f1ba-4537-8c58-67eedd5ffb6e",
        "cursor": {
          "ref": "c8635021-7ecf-4a39-9bb6-b1c3440eebe2",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "176e5c98-e20f-443b-8a00-c86f786e0ddd"
        },
        "item": {
          "id": "02571d56-f1ba-4537-8c58-67eedd5ffb6e",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "2bec7994-3707-43d6-87ab-9eac92ac48a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15a3cba0-2225-4e5c-97c8-162ac28d92eb",
        "cursor": {
          "ref": "31e46835-1e6f-4ec1-befd-79df53029eac",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "62275e00-f8a2-4fbc-988c-e5cbb28c6930"
        },
        "item": {
          "id": "15a3cba0-2225-4e5c-97c8-162ac28d92eb",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "ba553104-67fd-4efc-a934-88fab2ea6ace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbe7c01c-12c4-4b68-aa08-0cc8c5deff8b",
        "cursor": {
          "ref": "948cd19f-1d6c-4e74-bde7-6fadcd7b55bd",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "ded835a1-c7ee-4d08-b6c8-b8e38c71b6ec"
        },
        "item": {
          "id": "cbe7c01c-12c4-4b68-aa08-0cc8c5deff8b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "9d7d5419-29b1-4bf1-85ae-2819119aafc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b5f40c6-7c8e-42cc-aba6-7a0b04916bd3",
        "cursor": {
          "ref": "18d26012-d15d-4e3c-bcbb-a8b826eabcce",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "b13fd10a-63e5-4947-af95-a66c952aa039"
        },
        "item": {
          "id": "9b5f40c6-7c8e-42cc-aba6-7a0b04916bd3",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "4be78406-b1cd-4f3f-8e6c-48b6c43dd572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79919064-0469-466b-86eb-15bc376b3a37",
        "cursor": {
          "ref": "94be015f-fecf-48cd-985f-4fccc55aa9bb",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "2c6045eb-1fb9-4485-affb-b2160db29bf9"
        },
        "item": {
          "id": "79919064-0469-466b-86eb-15bc376b3a37",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "f1dc48e1-af59-4d40-b19a-889d20db816c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b09a66b-c0aa-4e96-8402-59d6b56470f2",
        "cursor": {
          "ref": "b31909c5-99ac-4ad6-a6e4-d793c8ed31b3",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "f741ef26-3686-4186-83ba-bd14d5f8aa1f"
        },
        "item": {
          "id": "8b09a66b-c0aa-4e96-8402-59d6b56470f2",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "6c94b41f-af79-41be-af6f-3ec1f0f8278b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0434ee35-109f-4b51-9c34-eadfcffb6dbf",
        "cursor": {
          "ref": "4a327cce-5c47-4ae6-a33b-a503d5fd6c07",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "7986e6b1-548e-48b6-a047-cb8270a70948"
        },
        "item": {
          "id": "0434ee35-109f-4b51-9c34-eadfcffb6dbf",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "d06d86e5-3eee-4942-ae70-191edfa0e02a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61917079-39f1-429d-af3e-79fac59787f4",
        "cursor": {
          "ref": "efa55df2-3bcf-4ce2-9bd1-c8155e03697d",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "484b0b6d-8d2a-444a-a2e7-ba0fcd2900fd"
        },
        "item": {
          "id": "61917079-39f1-429d-af3e-79fac59787f4",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "7aa1d3ac-583a-4748-9420-45452d9587af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c7e1c19-aea1-425d-838e-8b028e18d878",
        "cursor": {
          "ref": "adfd3bb0-4bb6-47e0-9a81-fedc8a4d78cd",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "f6f42174-c757-431b-9e1b-d7e3728358a8"
        },
        "item": {
          "id": "6c7e1c19-aea1-425d-838e-8b028e18d878",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "f870c062-3fd0-43ce-ab3b-79279a64a684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4d6c543-96f6-4012-90fa-4bd54832dc8b",
        "cursor": {
          "ref": "a8d04298-5807-405d-9ee1-dd62dbecb512",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "41ecf8d1-2cdb-468b-97f0-dd0bf96b1e8e"
        },
        "item": {
          "id": "d4d6c543-96f6-4012-90fa-4bd54832dc8b",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "ee0acaaf-fab2-4c2a-a27b-fb808dcc254b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "559c30d9-563f-4f0a-8105-6c2e4ff16eea",
        "cursor": {
          "ref": "efb0c207-d7c5-415f-b191-5542990f409b",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "cc7ad09d-f8d2-467f-9edb-cf9b23fd5f5e"
        },
        "item": {
          "id": "559c30d9-563f-4f0a-8105-6c2e4ff16eea",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "8eb580a1-ab8a-40f5-a6ab-cc127192de5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0ef86c7-cd08-4a24-addc-798e33b3f23e",
        "cursor": {
          "ref": "a8f6e78f-4447-4171-8633-4d5a2afd3446",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "5d0ca9d1-74d1-4ce4-bdcd-b2e8a5a1c78d"
        },
        "item": {
          "id": "b0ef86c7-cd08-4a24-addc-798e33b3f23e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "edc82ed4-bd3e-4c7f-8e20-1eb3935d8e9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e782bebe-11dd-481f-87f2-107a23ae9621",
        "cursor": {
          "ref": "9f654c70-ae08-4dbc-b01e-54235695c61f",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "cd5b01db-bc72-49e3-9971-1bc7dc5c4a4c"
        },
        "item": {
          "id": "e782bebe-11dd-481f-87f2-107a23ae9621",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "8479dba2-2727-4ad5-a53c-56beab58076d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a0ad9a0-979a-42f4-ad9c-7020b4eedd92",
        "cursor": {
          "ref": "4a74755e-4361-4b05-8ce6-ed74610ad5d1",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "4f5964a0-913d-4938-92c1-a1ea4b771cc3"
        },
        "item": {
          "id": "1a0ad9a0-979a-42f4-ad9c-7020b4eedd92",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "994f8a99-5bab-4472-bd96-b40370375a1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b038a688-cae5-4917-acc8-74cd4bcff58c",
        "cursor": {
          "ref": "f2fbb749-4b89-4952-b14a-6c1cb79074e6",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "2a5eec70-dc82-4fa9-9cf5-66257e3fa86a"
        },
        "item": {
          "id": "b038a688-cae5-4917-acc8-74cd4bcff58c",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "ecaa3db9-86c5-41a5-87b8-13bd6355e73a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07e64328-6f32-48c9-94c8-7cb20f9c1b74",
        "cursor": {
          "ref": "4eeac18d-66f9-4016-a2d0-905d6216cd58",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "57277306-ea22-4909-96df-8c441cd96d53"
        },
        "item": {
          "id": "07e64328-6f32-48c9-94c8-7cb20f9c1b74",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "39669fa6-57fa-4d56-aa16-e5e4e0d4e982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ffcbe44-021c-463f-ac0e-01e3678e5392",
        "cursor": {
          "ref": "3daba70c-c7ea-46dd-a6ae-4af08ec03547",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "ebc37d6d-83d6-4efb-9fdd-7ddea73ccd92"
        },
        "item": {
          "id": "9ffcbe44-021c-463f-ac0e-01e3678e5392",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "f155f438-fd6a-4aba-8eca-1cc3533b08e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0360ef6-dab9-40b1-9303-21c5dde01548",
        "cursor": {
          "ref": "50058f32-13e0-47b4-9949-9f8b3cc16a9f",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "c80fe769-1e28-40eb-a264-772f652b40e2"
        },
        "item": {
          "id": "a0360ef6-dab9-40b1-9303-21c5dde01548",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "680bbb56-7b7e-4546-a07c-704e9c4f8960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daebad83-f497-46c4-a8b8-b2af736a2b5b",
        "cursor": {
          "ref": "53ad3f2f-7076-4c4b-af13-ebb6a6462dca",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "299263df-58dc-4c6a-a57a-b7cc0fc2e40a"
        },
        "item": {
          "id": "daebad83-f497-46c4-a8b8-b2af736a2b5b",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "607b688a-db5a-4249-b7cb-7ce8ac7fc729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9ea850e-0c07-4311-9622-f3a0d7fadfff",
        "cursor": {
          "ref": "bda883ae-a727-4ede-a9ba-4f6d342d54cd",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "992dc63d-317b-4fdb-912a-fd7e86925422"
        },
        "item": {
          "id": "f9ea850e-0c07-4311-9622-f3a0d7fadfff",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "4cd056e8-0418-4067-845b-4f77abeb6b8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7436fdfc-552b-4936-b331-371b46b61c05",
        "cursor": {
          "ref": "41e929ca-64d1-47d4-a626-37c75a91365d",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "f9591958-29bb-4226-afb9-921785e0baab"
        },
        "item": {
          "id": "7436fdfc-552b-4936-b331-371b46b61c05",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "81099d7a-d92d-4511-9e7b-2c97992f6edc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db9dfe66-2055-4b71-b977-add609338b3f",
        "cursor": {
          "ref": "6b885e3c-b4a8-4b1c-9f04-6737c87b7acc",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "a558599b-0a7d-4f09-871e-bd87ba179b59"
        },
        "item": {
          "id": "db9dfe66-2055-4b71-b977-add609338b3f",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "4c82c3cd-5cbe-4db6-ae74-960baec7e21c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d45ef04-c17c-4f69-a685-447bda38e7ce",
        "cursor": {
          "ref": "4a8c0d81-eed8-40e1-b750-e70fe3f6f8ab",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "43890dee-44a1-440a-b285-03afce41161e"
        },
        "item": {
          "id": "8d45ef04-c17c-4f69-a685-447bda38e7ce",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "d897545e-867b-48ad-a54a-b6f573d7d3cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b37461e3-acd3-410b-adf7-da28f0dd459d",
        "cursor": {
          "ref": "791eb880-42ef-4b5a-8e7e-00f59f91b61f",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "892b97fa-75e7-404b-a563-eb1467be59d6"
        },
        "item": {
          "id": "b37461e3-acd3-410b-adf7-da28f0dd459d",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "31130da1-29a1-4d6b-813a-0327543ac8b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3831e3ac-dfc9-4d2c-87c4-345022c0c435",
        "cursor": {
          "ref": "b34e5407-7974-46a2-b908-864b0f41ce47",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "ea6ed328-9d61-4261-82a0-45d25dce4be0"
        },
        "item": {
          "id": "3831e3ac-dfc9-4d2c-87c4-345022c0c435",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "b3a738e8-ccd5-4782-8811-cfb3172141b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b75d13a3-785d-4c75-9794-299ef759ca82",
        "cursor": {
          "ref": "49437ca4-892a-4074-abf2-661bc991714f",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "72734d89-fe37-499a-bdb1-c65958353004"
        },
        "item": {
          "id": "b75d13a3-785d-4c75-9794-299ef759ca82",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "894e769b-c471-4fcb-b14a-11dc47cc1157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e50f699c-33aa-4baa-8905-430ec3affdf9",
        "cursor": {
          "ref": "0a31211f-71d5-4f21-90e0-04f1303d5e74",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "afbddc28-e25f-47c2-8d5e-306fd1dbf7bd"
        },
        "item": {
          "id": "e50f699c-33aa-4baa-8905-430ec3affdf9",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "ab125738-2916-472d-8552-637259d2dffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04fadcc1-ac77-4e21-a9ff-6fb29030acb4",
        "cursor": {
          "ref": "009e4054-0332-4703-818a-8e17cb44d135",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "3a62499f-5ab6-4392-a9b1-f55678fc476b"
        },
        "item": {
          "id": "04fadcc1-ac77-4e21-a9ff-6fb29030acb4",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "72566275-ba0a-4912-8700-96e445ae1367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "997f3e57-decb-4989-9fe5-7ec9eef61943",
        "cursor": {
          "ref": "3d12d741-abdb-471d-b50e-b5acd41650d8",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "d0e6b5af-6b51-47aa-90fb-bd7c5673a4b8"
        },
        "item": {
          "id": "997f3e57-decb-4989-9fe5-7ec9eef61943",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "f46d50bf-6170-4ca6-84f3-45013b9e84a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73e5d4da-1c00-42af-8c36-142a6409f36c",
        "cursor": {
          "ref": "87263ad8-d858-48f1-9b43-a78fda67a4c7",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "b052aca1-7994-42f5-a3c3-875965d39a47"
        },
        "item": {
          "id": "73e5d4da-1c00-42af-8c36-142a6409f36c",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "1d4cecb2-8b75-4460-ba8f-22f453a484f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6465aa1-8267-4d5d-b52d-d65ad1b548ca",
        "cursor": {
          "ref": "d27a7d4f-7370-4bd9-9d68-c67c97ddaf8e",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "72c14c96-0f64-4f15-83bb-f7e6924497d4"
        },
        "item": {
          "id": "a6465aa1-8267-4d5d-b52d-d65ad1b548ca",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "f6a954a9-f2bc-45c8-83d6-2f0a480892b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97f74c44-2eff-43cd-a90a-1135bba54e30",
        "cursor": {
          "ref": "df932abf-266f-472a-98ae-150c69d0f5ef",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "38e8d304-eaa9-4da1-a815-0ede86293931"
        },
        "item": {
          "id": "97f74c44-2eff-43cd-a90a-1135bba54e30",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "0e59bb6b-b7ab-48fd-8ab7-b2495cc8a425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3d7fb43-9494-48e2-8c00-2bdcbc92be0e",
        "cursor": {
          "ref": "3d667ff5-054d-459e-b407-65eafe192c3b",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "60d552e6-d710-482a-a072-2ac907f2f887"
        },
        "item": {
          "id": "a3d7fb43-9494-48e2-8c00-2bdcbc92be0e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "f195ea3b-d38e-45d1-bf28-175bd625d23d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fec8de08-2fdf-4d17-a026-8a98888137d0",
        "cursor": {
          "ref": "4d8118ad-a8f2-4752-8962-480ad01efc9c",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "4ecc317a-8f59-41ba-abeb-f88b987d31d6"
        },
        "item": {
          "id": "fec8de08-2fdf-4d17-a026-8a98888137d0",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "370d8818-e5ce-4132-97ad-60a43d179f54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45d1da12-a5c2-4469-b0ce-8cdd781e0a87",
        "cursor": {
          "ref": "2c08080d-b89e-4452-be7e-6721dd29b8ce",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "c6e6df7d-3480-48aa-8298-f4165fd6fc6d"
        },
        "item": {
          "id": "45d1da12-a5c2-4469-b0ce-8cdd781e0a87",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "1bcfdf8e-08d1-47d4-b5fa-7ed1a3e1fe8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0406207a-eb86-42c2-a46e-11e1dc397b32",
        "cursor": {
          "ref": "6f0fc9e3-bb99-4fde-a771-58ac46dcaf8a",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "81a841f5-9569-405e-8ce5-4f0861242036"
        },
        "item": {
          "id": "0406207a-eb86-42c2-a46e-11e1dc397b32",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "9769e1a8-9fd3-45f6-9e31-d6e793f4c446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36955eb3-093f-4333-94f5-e77c941a9100",
        "cursor": {
          "ref": "ba7c15e3-eab3-4061-82f8-dc2fb4be2c88",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "f6ce9511-f779-428b-aadc-f0aa4dc790b0"
        },
        "item": {
          "id": "36955eb3-093f-4333-94f5-e77c941a9100",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "c8849172-b3d9-48f6-8f6a-b85a0234f7ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1dd7b33-a537-4a60-a210-98e3372b5f88",
        "cursor": {
          "ref": "5715b252-e5a9-4331-986b-1993b27ca8fe",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "0f539843-c65d-421e-89fa-52b4c017d78d"
        },
        "item": {
          "id": "f1dd7b33-a537-4a60-a210-98e3372b5f88",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "d237968c-5092-44f3-92e1-7d515b1d8b69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afdfe359-9252-4367-91f3-e8138580dbad",
        "cursor": {
          "ref": "cf0d192c-0096-45da-8a56-f6bfb4b794aa",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a4d390c4-4232-4833-a69d-f8624d9e227f"
        },
        "item": {
          "id": "afdfe359-9252-4367-91f3-e8138580dbad",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "14ce16ed-9365-41db-a2d0-4147c8740627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec906c8-4705-4de1-9d00-54fcff17bf30",
        "cursor": {
          "ref": "734c1fe9-aaea-4a20-92a8-2378dd3e465a",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "6d7328c8-88fe-4f83-a159-5915ac8b8330"
        },
        "item": {
          "id": "aec906c8-4705-4de1-9d00-54fcff17bf30",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "dd91cb52-682a-4f3d-8c15-f48451dfaf37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e11b35c8-a3ec-4ca1-a40f-34065949a67a",
        "cursor": {
          "ref": "94c96c61-76ba-48d6-8377-0b79c70e4151",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "60a7c695-a390-4a81-95fd-d0afc989509f"
        },
        "item": {
          "id": "e11b35c8-a3ec-4ca1-a40f-34065949a67a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "41b8b188-6386-40c3-9d0e-d8dcfee591cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "779fa7cc-5ff8-46d5-86a3-594c72058acf",
        "cursor": {
          "ref": "be5b5eb9-6146-4e98-9d59-d322886b4729",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "8ab94dac-256f-4492-8659-37bffa9858b2"
        },
        "item": {
          "id": "779fa7cc-5ff8-46d5-86a3-594c72058acf",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "b1b13153-fbe7-4ce1-b315-774284ac5fd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0390f53f-74b1-437e-911a-860003ca798b",
        "cursor": {
          "ref": "2c3b2e79-cae1-4a2d-b9c9-69f0ad5834c2",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "8bdd4fa3-b314-46b5-91d0-c91eebdda751"
        },
        "item": {
          "id": "0390f53f-74b1-437e-911a-860003ca798b",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "8d96feda-e616-4942-8a0f-0926a24782d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27422227-0164-4e6f-afed-0e39c02b8e28",
        "cursor": {
          "ref": "556e0e15-6efc-4af4-9411-23fc8474b047",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "f9e2a658-77dd-4a79-91ec-01922032eeb0"
        },
        "item": {
          "id": "27422227-0164-4e6f-afed-0e39c02b8e28",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "55f70443-d12b-4ab8-969c-dd62b9190dfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcc41ae9-9b59-4a9e-a75c-1c0da208ce39",
        "cursor": {
          "ref": "0299c363-39b2-4725-8a6a-ea505fc9db0a",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "b3253018-89a8-4c06-b8d3-5dfb90950fb8"
        },
        "item": {
          "id": "bcc41ae9-9b59-4a9e-a75c-1c0da208ce39",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "8ebd48f1-56d8-4377-8789-5ca9f8cc6ed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "823d1484-a431-4659-b0f6-6f0ec54dadce",
        "cursor": {
          "ref": "985a88b6-57ae-4ad3-8301-193bbcf202c0",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "a24856c5-02d3-4cc0-b584-31f90b7e5071"
        },
        "item": {
          "id": "823d1484-a431-4659-b0f6-6f0ec54dadce",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "6d778c67-1eb2-49ca-a1f6-5eadfa449ceb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfc94f14-3525-4533-8e30-0035a349dc85",
        "cursor": {
          "ref": "0308d88e-a254-4368-b748-e3df0f4404f0",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "e9ab9e86-6416-4344-a1c5-b40bbea002e9"
        },
        "item": {
          "id": "dfc94f14-3525-4533-8e30-0035a349dc85",
          "name": "credentials_issue"
        },
        "response": {
          "id": "1eac3b25-9e8b-4a92-b35e-25e7cfe1de7c",
          "status": "Created",
          "code": 201,
          "responseTime": 50,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f9c06f0-c3f0-43c2-9bee-5c0f372c408a",
        "cursor": {
          "ref": "614f3d3b-ba20-4909-bda6-a37878e66e0c",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "ea935a67-8805-458e-b454-0f3d73793e01"
        },
        "item": {
          "id": "3f9c06f0-c3f0-43c2-9bee-5c0f372c408a",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "806a6b26-2a42-4e25-b75e-01ba8e013208",
          "status": "Created",
          "code": 201,
          "responseTime": 158,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "853e8f2b-50ee-4002-bafe-e7fe343daf10",
        "cursor": {
          "ref": "fe820923-2318-4c71-b5cd-2580e62da4a9",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "bd7f57e4-50cc-48b7-8fad-ab71c2eb04d9"
        },
        "item": {
          "id": "853e8f2b-50ee-4002-bafe-e7fe343daf10",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "4b234c1f-8a1d-4368-a35c-a72144b893cc",
          "status": "Created",
          "code": 201,
          "responseTime": 65,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8e610ee-b90c-44ef-aa1d-f2af01572d9c",
        "cursor": {
          "ref": "2117aa31-3be6-49a1-8f43-07c558f0ed49",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "8de5da21-058e-475b-982a-0c1604915be3"
        },
        "item": {
          "id": "b8e610ee-b90c-44ef-aa1d-f2af01572d9c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "3d10bff6-829c-4536-a0b2-6bfd8490969a",
          "status": "Created",
          "code": 201,
          "responseTime": 50,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e684a6fc-f1ef-4033-98c4-ceaeef954c7e",
        "cursor": {
          "ref": "f97008b6-00f7-4dd2-8dae-d7bb6da958bf",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "8645ee66-9970-42c9-baff-687d39b3065a"
        },
        "item": {
          "id": "e684a6fc-f1ef-4033-98c4-ceaeef954c7e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "64874e0b-3029-4901-aad7-174d315adfe6",
          "status": "Created",
          "code": 201,
          "responseTime": 48,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "c33e1de4-4858-4d7d-96af-4c3c86be4445",
        "cursor": {
          "ref": "04f0b4d3-03d1-472e-acb8-8de7a56717c1",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "90425f90-06c8-48b7-ae4c-31ff829dcfac"
        },
        "item": {
          "id": "c33e1de4-4858-4d7d-96af-4c3c86be4445",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "cc44b4d6-cef0-4a10-aeb0-23bb77af255d",
          "status": "Created",
          "code": 201,
          "responseTime": 52,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2666682a-fd81-4468-b2a3-4dab18da33eb",
        "cursor": {
          "ref": "c9d213eb-5529-4a83-8360-cd7f0fde5be6",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "88faad54-aec0-4dcd-bf90-c64e8abe802c"
        },
        "item": {
          "id": "2666682a-fd81-4468-b2a3-4dab18da33eb",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5dd8e043-aac5-4981-9bb4-03c00ae9aa14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7d4243c-6a9d-42a8-9ae5-e53259c9c285",
        "cursor": {
          "ref": "002b5fdc-49cb-4d16-b22a-105c4250e052",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "3e8942b2-2559-444c-bbd4-c73f813b77e9"
        },
        "item": {
          "id": "d7d4243c-6a9d-42a8-9ae5-e53259c9c285",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c3fdebd4-32a3-4d2c-af6c-b33cfe1acba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fe43a14-7064-402c-bbe3-436f034ddb4f",
        "cursor": {
          "ref": "86d0e36b-b5d1-4e07-b644-2bf63cc41b5e",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "4b6c84bd-1e9c-4fc0-a492-574a2f9e411f"
        },
        "item": {
          "id": "5fe43a14-7064-402c-bbe3-436f034ddb4f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "950b0bbf-8c99-4ca2-8c40-c4dfd257cf88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08f71f4b-ab1f-4bd2-a51f-81f4eee142ef",
        "cursor": {
          "ref": "c848d95f-e452-45fe-8d7a-d50f7f3fb856",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "60175dee-8f4e-4049-aa61-fc4ae6686e38"
        },
        "item": {
          "id": "08f71f4b-ab1f-4bd2-a51f-81f4eee142ef",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "82373b01-2e8d-420e-9b9c-a3c31d450128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0520c2e1-3aff-4e80-9b43-6d21184b0247",
        "cursor": {
          "ref": "327accb0-3213-4875-ae47-e8ad2765022b",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "46c4e636-4288-465e-9413-89f44f13b2d3"
        },
        "item": {
          "id": "0520c2e1-3aff-4e80-9b43-6d21184b0247",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "5a65abd4-89d3-4784-9548-0dcde4292b69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07929d8c-b8e4-4934-b1cd-d958e7d07ce2",
        "cursor": {
          "ref": "1db26748-635d-49eb-aa4f-b16619d0bf29",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "48bd2ed7-34cb-472b-b354-4839cdd001d4"
        },
        "item": {
          "id": "07929d8c-b8e4-4934-b1cd-d958e7d07ce2",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "82232e45-de1c-43f8-9fb3-a426a41752d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4810bfcd-e7d5-4591-a7c3-912ab60aaf76",
        "cursor": {
          "ref": "7ab8b6fe-e0c9-4696-9163-cc648ba7d3d7",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "10f2cc5f-d41a-491b-99ae-3f15d813be85"
        },
        "item": {
          "id": "4810bfcd-e7d5-4591-a7c3-912ab60aaf76",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d7f9cb41-f167-474b-a647-93a691b6b21d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "add0c4b6-bf14-4762-a9f1-e206e5bedd24",
        "cursor": {
          "ref": "1e25534d-622b-4778-a30c-657e51e75ee3",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "3fcb5fed-839f-4d84-8ce1-ccd256d97a46"
        },
        "item": {
          "id": "add0c4b6-bf14-4762-a9f1-e206e5bedd24",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "eb82a819-54a0-4103-bd06-7af36a0c7a30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5dbbfc5-9751-46cc-b0e9-389b3d929e20",
        "cursor": {
          "ref": "27be3269-e79f-4840-979f-091b72dea178",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "89a6764c-1ae8-4666-bf5d-d608ea9f7432"
        },
        "item": {
          "id": "c5dbbfc5-9751-46cc-b0e9-389b3d929e20",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7a3d5edb-b706-4d6d-9a26-018c0ea3162d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6975f84b-6d5d-4853-ad42-96f38a74b256",
        "cursor": {
          "ref": "8fbd4572-48cf-4e0a-a380-71334a6f0edc",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "15943fd6-181b-4d5f-8afe-d14ceb1dd3ba"
        },
        "item": {
          "id": "6975f84b-6d5d-4853-ad42-96f38a74b256",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9b41d7f2-5b8e-4a47-97ef-a08449f02596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79f8c402-c95a-459b-a00f-787ed0870451",
        "cursor": {
          "ref": "c4ed9e32-1c8f-4149-954c-82e8844ed0af",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "82e731fb-5ffb-41c9-ac97-96456710b3c9"
        },
        "item": {
          "id": "79f8c402-c95a-459b-a00f-787ed0870451",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f398a2ad-207b-4142-ad4d-9ca955099fd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7b3b001-bb7a-42a7-8871-312e76b14206",
        "cursor": {
          "ref": "a6bcaeed-6729-4c6e-bf13-a5ee439f94da",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "272880be-192d-4eff-96aa-af8a965e14ab"
        },
        "item": {
          "id": "d7b3b001-bb7a-42a7-8871-312e76b14206",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "47a788d0-e6c1-4fb7-9c34-2c2a8c6a3583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1eff540-08e3-4e34-ba38-8eec8050094a",
        "cursor": {
          "ref": "4f1b6cc3-72a9-4642-b432-18749e65ac06",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "307b413b-7ebc-4fb6-b341-5c49da3fd9dc"
        },
        "item": {
          "id": "c1eff540-08e3-4e34-ba38-8eec8050094a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "4a9a0572-a449-4913-96e2-5b867c41ac27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e84eeee-70f0-4194-b647-72fdc27fcbbf",
        "cursor": {
          "ref": "6819402f-2332-4ce5-aed6-ad893d3af133",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "12ec1aa0-97a9-4dbc-933a-203cc5a61ff2"
        },
        "item": {
          "id": "9e84eeee-70f0-4194-b647-72fdc27fcbbf",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1e05a11d-9350-49a7-98be-c6b1c812b426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0de0f6e-576b-4a26-934b-818006d980c0",
        "cursor": {
          "ref": "b93b1567-44f2-48f8-8b37-e6ec86d485c4",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "bcc3bc7d-5219-4ebc-8dc7-dd96ef1bd57d"
        },
        "item": {
          "id": "d0de0f6e-576b-4a26-934b-818006d980c0",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8cec3630-0f52-4505-8811-04c316bc6f9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a9899d6-52cc-43aa-be46-6065d36fd0eb",
        "cursor": {
          "ref": "fa0a3497-2ed9-4e18-9fc9-87e62c8d6765",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "0df17213-f2d7-4a75-8feb-dfbab31c1659"
        },
        "item": {
          "id": "8a9899d6-52cc-43aa-be46-6065d36fd0eb",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e67a6f7f-e18d-4706-bf81-f5b91fb3aa73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9e14ad9-99ae-4746-b6a1-458ef567712c",
        "cursor": {
          "ref": "5449449f-b780-496d-9297-18a96f10e34c",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "bf997d10-4616-40e7-8a96-a43536e46093"
        },
        "item": {
          "id": "c9e14ad9-99ae-4746-b6a1-458ef567712c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "efe75f07-4570-4902-af7d-8f3adb15c9c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fb1afce-d55a-4fe5-8843-b50e322a2f2d",
        "cursor": {
          "ref": "a34ccbc0-d042-4035-93a3-018eba609107",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "634e6f9a-5a70-49ff-a7fd-6e0893687b5d"
        },
        "item": {
          "id": "8fb1afce-d55a-4fe5-8843-b50e322a2f2d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7313231c-148c-45d2-8593-646b03be9bc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09aedf8d-ac74-4dbf-b8d3-7345ace0c17b",
        "cursor": {
          "ref": "f6b1dbf8-f6fe-48d4-a3ea-e3247a6944ce",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "bd4dad59-ecd9-4dc4-a13f-a9acfdf04a09"
        },
        "item": {
          "id": "09aedf8d-ac74-4dbf-b8d3-7345ace0c17b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "11a59a14-2109-467d-b0bc-2a02dc51e8aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0297058-ee4e-4150-9d4e-968963926501",
        "cursor": {
          "ref": "4dc51cfb-ed2d-4486-b85f-e040d5888688",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a4e131a3-897d-4a54-8a54-dff29d119f2a"
        },
        "item": {
          "id": "b0297058-ee4e-4150-9d4e-968963926501",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1cd1976b-cd5d-442f-be42-7824522c5c6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "921d266f-214a-43e3-8d55-47ad90a69443",
        "cursor": {
          "ref": "109ecbad-daac-4df9-bc37-2432fe4eb4e4",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "05a3e389-8eba-4a74-8b09-fb7427bfcd36"
        },
        "item": {
          "id": "921d266f-214a-43e3-8d55-47ad90a69443",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e9e916e3-a30d-4f85-afec-66e0d20d06e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a37c17cc-bf1d-4c9f-afd0-ca9b17223f6f",
        "cursor": {
          "ref": "257175f3-52da-4b5e-aa6e-1e06e23de90a",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "4fec30b0-6028-42a3-b7cc-d9d4867f1084"
        },
        "item": {
          "id": "a37c17cc-bf1d-4c9f-afd0-ca9b17223f6f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "da534918-5620-45d0-8b13-e42ad8a88f08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22f3f162-5462-48f4-a5cf-3e32857b8921",
        "cursor": {
          "ref": "9ae49e25-fd38-4df9-97ab-450cd492b68c",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "cd7abc62-0621-4b78-93e5-a23ff39872dc"
        },
        "item": {
          "id": "22f3f162-5462-48f4-a5cf-3e32857b8921",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6a298b25-f1d8-478a-b229-5d5886f21a68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94438b07-7958-4852-bacf-ca632707c287",
        "cursor": {
          "ref": "92e02422-7cac-4551-a1cf-d2eb6af19d16",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "b9bb413d-0dbf-4449-9934-2fe52407a881"
        },
        "item": {
          "id": "94438b07-7958-4852-bacf-ca632707c287",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "40a1c4eb-afce-4fe8-92b3-48f64a96deb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e68bbf2f-8518-4022-a621-0727fb68ab16",
        "cursor": {
          "ref": "a754698c-ffa8-4665-bd9b-be939df6a7c8",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "79d84c78-eb6a-49d6-8533-6507b4298ca3"
        },
        "item": {
          "id": "e68bbf2f-8518-4022-a621-0727fb68ab16",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c2ff54c5-58d2-45cd-97e8-624c6217a5f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce569c95-0570-492b-a5bd-ad828dab40df",
        "cursor": {
          "ref": "f8f7fa8a-9598-4c18-abbe-542a46b26a48",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "e0b40fad-8c33-4248-86f7-ae960261d071"
        },
        "item": {
          "id": "ce569c95-0570-492b-a5bd-ad828dab40df",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "439358c0-ac72-40df-9609-85b8bb3cffa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fd97a48-b935-4256-abdd-0c17176feec8",
        "cursor": {
          "ref": "332ae2bd-310a-4904-ba4d-9f473c128cfb",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "f1140aa1-4e56-478c-bd67-373d807d8719"
        },
        "item": {
          "id": "8fd97a48-b935-4256-abdd-0c17176feec8",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d44c93dd-1440-4f19-baab-11239994088a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "432dd22e-f99c-44e0-8fb9-0d5970b6e6af",
        "cursor": {
          "ref": "d70b5760-d4e7-4111-a71e-4fd3bf564d1d",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "890370f6-a1a6-486d-a0d2-6b6a9a29e91e"
        },
        "item": {
          "id": "432dd22e-f99c-44e0-8fb9-0d5970b6e6af",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ffb2e13e-ec28-4a72-97ad-12a3693d40d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86dcc5c7-f3ac-4399-89d5-13de40ca6cb8",
        "cursor": {
          "ref": "01d1f1b3-d3f2-497d-8cdb-6b496ab968f1",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "e9148387-ec3f-4d2d-8674-2a7d25714001"
        },
        "item": {
          "id": "86dcc5c7-f3ac-4399-89d5-13de40ca6cb8",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7f5aba8b-57b1-4dd8-8ef3-0e03df5a729c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d638409c-7b95-4771-bac8-a05c776239a2",
        "cursor": {
          "ref": "70494576-b453-408d-987d-be41d9bce514",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "b6de6b00-3eab-41af-a48e-49ca1e4ae5ae"
        },
        "item": {
          "id": "d638409c-7b95-4771-bac8-a05c776239a2",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9099ef9f-6635-4188-ab39-0352ba96bbf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70dbcd4b-51f8-4bc5-bc76-d0c6e6c2cb84",
        "cursor": {
          "ref": "7647a703-754c-4b9b-8684-4d9288996c95",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e1f6e4b6-df21-4bcb-bcaf-d38d1acab7ad"
        },
        "item": {
          "id": "70dbcd4b-51f8-4bc5-bc76-d0c6e6c2cb84",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "defde27c-bfe4-402f-987f-674fbb102b9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3da3567-db78-4ee6-9c7e-1f4c0af0abbf",
        "cursor": {
          "ref": "dd381f21-7adb-4f5d-991e-40c59d1c270d",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "04fd9bea-049e-4eae-8b5e-dea60d1b6529"
        },
        "item": {
          "id": "b3da3567-db78-4ee6-9c7e-1f4c0af0abbf",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "92667ee7-e226-462b-b8aa-dd67add718eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12123a14-b535-4542-abf7-d88af8bb2f56",
        "cursor": {
          "ref": "67327be6-dcb8-4812-96b5-644b52db721d",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "fa9277df-f1a6-4c38-83f6-cda5a02c838f"
        },
        "item": {
          "id": "12123a14-b535-4542-abf7-d88af8bb2f56",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "1f937a25-9784-4af4-bfe6-f315454e2ad7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "838b7af5-869d-4c20-9275-d78b20b2a223",
        "cursor": {
          "ref": "0a8aac9c-b352-453a-902a-2208d9e36ddd",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "f180e2eb-b42e-4f28-9b49-1984d421e534"
        },
        "item": {
          "id": "838b7af5-869d-4c20-9275-d78b20b2a223",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "1498b5da-0bc2-47dd-a61f-0d99aa650ab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f57eb77-708b-4319-8a1a-b57cc161500f",
        "cursor": {
          "ref": "53f7b6bc-c363-489c-a6bc-085a3dbe0b8f",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "ce38cc7d-9b44-4a8a-b8fb-b9130343d8b8"
        },
        "item": {
          "id": "5f57eb77-708b-4319-8a1a-b57cc161500f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "064c6f3e-54b8-4243-8cd3-dc9a2ff4a4bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe67064-20fd-43e5-9af5-6b5cf371cef0",
        "cursor": {
          "ref": "add2e7a3-4155-404a-b4d4-3cec1f04adac",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "d240558c-6283-4d35-938a-e5024b32ad23"
        },
        "item": {
          "id": "bfe67064-20fd-43e5-9af5-6b5cf371cef0",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "461673ca-cae3-4939-b034-1ec48021f9e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45b52559-0461-4771-9b5d-6a1d5f75a845",
        "cursor": {
          "ref": "a6d8e5a0-2f66-4c13-b2fa-6692cd4a4aee",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "8df4b32f-1975-4c6e-a63c-6d7de0a0bc4e"
        },
        "item": {
          "id": "45b52559-0461-4771-9b5d-6a1d5f75a845",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a6e30c57-a888-4d40-bd2b-54e4250c2fc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1129c9a1-8a74-4a67-ac9b-507b576faf65",
        "cursor": {
          "ref": "8c882516-8a21-42e1-91a3-b3d6ab566f83",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "1af1fcac-6943-435f-a4eb-9052e9271743"
        },
        "item": {
          "id": "1129c9a1-8a74-4a67-ac9b-507b576faf65",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "599e3e82-3fe3-41e9-825e-9138d7034ace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d622ba1-f43f-4c02-b11e-c30bde0f3e29",
        "cursor": {
          "ref": "d71e95a7-8f84-4d7c-bbb2-c85cf16a58c3",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "7af5ef02-5e28-40c4-9c45-9a8c50caff5b"
        },
        "item": {
          "id": "0d622ba1-f43f-4c02-b11e-c30bde0f3e29",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "263e2cb8-419e-485e-88e1-e87602e71fa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2936043-51ff-469c-aefb-6da8885336ab",
        "cursor": {
          "ref": "786b8720-6543-4888-ae52-436ad577af50",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "fc77aeb9-67d7-4657-a924-c2f7300f071b"
        },
        "item": {
          "id": "e2936043-51ff-469c-aefb-6da8885336ab",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "8f1bef38-80e9-4c4e-b6b7-696a2e33d83c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6a44219-b474-4ad8-8b49-d7cdb538bcbd",
        "cursor": {
          "ref": "179da81a-4800-433b-aff8-1f89efe8c6ee",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "29dae45b-580f-4f2e-ba11-099f4142a540"
        },
        "item": {
          "id": "a6a44219-b474-4ad8-8b49-d7cdb538bcbd",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "097e967a-85ae-44db-bacc-e8f72612480b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8743ab7-c69b-496b-bf99-cf281757384f",
        "cursor": {
          "ref": "f669e15d-e61c-4e3b-bb7d-b496428995b5",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "82c1a5ac-8b2c-414b-aa17-98bc3233763a"
        },
        "item": {
          "id": "c8743ab7-c69b-496b-bf99-cf281757384f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f48b5e3d-21c0-4d72-b64a-dfa73f9ec2c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33c15d40-0051-483c-a9f6-521f36d22408",
        "cursor": {
          "ref": "20f9a936-ff55-4dac-a8bc-71455a686333",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "c0f942b4-473f-4b1c-80db-d51d8f4e67b4"
        },
        "item": {
          "id": "33c15d40-0051-483c-a9f6-521f36d22408",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "3a7a5772-ed08-4c63-b5ba-eaa6fcd5db88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "352106e9-c981-47a6-8532-ad2d4f9b97cc",
        "cursor": {
          "ref": "01c6f1b7-96ba-4961-a5fc-9e4704aaa704",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "da3f7324-371a-495e-bd34-9acc95efa618"
        },
        "item": {
          "id": "352106e9-c981-47a6-8532-ad2d4f9b97cc",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "48554d5c-6041-4f4d-9ef9-a36a9d4cb1bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9728ff73-691c-4c3b-b32f-67f95a6052f1",
        "cursor": {
          "ref": "aae1e58e-eba3-4572-b5c0-7b2933b5f3c7",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "d8e31278-934d-45ae-8b31-10615859a04c"
        },
        "item": {
          "id": "9728ff73-691c-4c3b-b32f-67f95a6052f1",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "817efb06-e50b-4eb6-9852-622b26a53266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec005a8d-c03b-48cc-b95c-0ddb74df3678",
        "cursor": {
          "ref": "4c57b663-a981-4a07-af6f-30a5784daaae",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "456399ea-c62e-4831-aceb-53c184b41b54"
        },
        "item": {
          "id": "ec005a8d-c03b-48cc-b95c-0ddb74df3678",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "db4c014a-c889-4ddb-a5cf-fadd953f73d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed76d8fa-ecd2-41cc-855b-39e6c9b2c1fa",
        "cursor": {
          "ref": "6a38f2a3-6b57-4ebe-a3d1-33056d49c17e",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "40d4935b-43d5-4ace-86fd-a3a968350176"
        },
        "item": {
          "id": "ed76d8fa-ecd2-41cc-855b-39e6c9b2c1fa",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "6e3fa13a-a1ea-4956-b9a5-f8a02d567089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "477e77ea-1ea9-4d7d-8613-ae73e2702260",
        "cursor": {
          "ref": "6049d774-3965-4fd6-8c3a-ec883ed2b8a5",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "5dc83fc9-fab1-4932-af0e-b2030e2f46f3"
        },
        "item": {
          "id": "477e77ea-1ea9-4d7d-8613-ae73e2702260",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "5d325e42-fd69-4e04-bbd4-0775826b903f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b87c564-93fa-4663-9d27-bea1fc3a4f38",
        "cursor": {
          "ref": "87e86b33-7043-4a6b-ba59-c34a2bd48de6",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "0826eb9f-d126-490b-a650-a2bc94387605"
        },
        "item": {
          "id": "5b87c564-93fa-4663-9d27-bea1fc3a4f38",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "500ad1b4-8138-4981-a987-6945891abe91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18beaf1b-205c-4291-881e-3c732af08f2f",
        "cursor": {
          "ref": "68f4bdd3-9429-435a-8ee6-47b3e4429173",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "3eca1d8f-808e-46e2-a573-c1e572677b3e"
        },
        "item": {
          "id": "18beaf1b-205c-4291-881e-3c732af08f2f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "0c633524-04ca-41b8-a936-508042d1cf10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3c817aa-2b96-4aa4-9c0d-ae1e4ab4c2ed",
        "cursor": {
          "ref": "b2904f64-5b69-4baf-b112-bfb2ee6fafe6",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "45ab16c8-11a3-42ee-bc37-7c1a63311e5f"
        },
        "item": {
          "id": "d3c817aa-2b96-4aa4-9c0d-ae1e4ab4c2ed",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f8314db0-c818-4b25-b1ca-e938141a0dce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e60f40d-501b-4ace-81e7-77185dc44ffb",
        "cursor": {
          "ref": "bd710242-4ccf-42a3-9f08-98474fc12e1b",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "76d8b239-d1d0-4dba-8fc2-a959e4c01ffa"
        },
        "item": {
          "id": "9e60f40d-501b-4ace-81e7-77185dc44ffb",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "fd1f1737-617a-4912-b1d0-1abfd21fe821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57ee8b96-1451-40df-b0a5-5e5dba09169e",
        "cursor": {
          "ref": "95b19210-06af-4705-b6ef-6da27bb27c28",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "84481273-2658-4bcf-97ae-4105531dcadb"
        },
        "item": {
          "id": "57ee8b96-1451-40df-b0a5-5e5dba09169e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d70f65fd-a83b-4960-90aa-17e37679b022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "053928c5-10c9-4656-8816-465dc2f53155",
        "cursor": {
          "ref": "504a926c-738e-474c-8a35-546beb041665",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "e551483a-89bc-4f82-a962-77b94b0456c6"
        },
        "item": {
          "id": "053928c5-10c9-4656-8816-465dc2f53155",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "202ca7e3-972c-49d8-b1e5-3e1e473f0e8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7a99d20-5485-404e-9ce1-dbb1fd47a569",
        "cursor": {
          "ref": "b82443b7-7a3a-4724-9404-c219a20a2b3e",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "4ca2661a-16e8-4ccb-9e1f-0d750c66c331"
        },
        "item": {
          "id": "c7a99d20-5485-404e-9ce1-dbb1fd47a569",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "89937121-5d0f-4bfb-92f2-6ae31b2252e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70f2e69c-ccd5-4f1b-b9dd-0971b18daa2c",
        "cursor": {
          "ref": "d7ce352c-d77b-4ae9-abb2-a26c497bb928",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "1ff314f8-2c45-41ef-8764-580fb19f6a29"
        },
        "item": {
          "id": "70f2e69c-ccd5-4f1b-b9dd-0971b18daa2c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9d4b3eb8-6581-4780-b00b-bae56873b5ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51ceedb9-0315-4eed-a276-a53cd8eaaa9c",
        "cursor": {
          "ref": "d5a24598-60a3-4fa8-935a-0acf4b110ca8",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "32d32625-2e5b-461a-8613-e43d1d2e768e"
        },
        "item": {
          "id": "51ceedb9-0315-4eed-a276-a53cd8eaaa9c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "032719e9-639a-4ede-aa12-e0ad3bce2e9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8c4f943-8730-453f-9d81-5013f8f125ec",
        "cursor": {
          "ref": "dcbbd672-0795-4b3b-baee-d04c2d4e995d",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "1f53cf98-54c1-4b5c-8264-361dcf87df52"
        },
        "item": {
          "id": "d8c4f943-8730-453f-9d81-5013f8f125ec",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "fcf85fb6-2108-4622-8c98-a712c7e7e778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08849987-7e26-4c01-8b74-6f0f8622fc3e",
        "cursor": {
          "ref": "f98d81ec-01a4-47ed-bb5b-a270e833bf16",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "4e74dc09-c9a4-45eb-ae7c-fab24d3bcc9f"
        },
        "item": {
          "id": "08849987-7e26-4c01-8b74-6f0f8622fc3e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "fa540031-250a-4332-b0fb-9d43efd1fffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f9ecce8-16a7-4be1-8aae-f0d674ae6742",
        "cursor": {
          "ref": "d76ff7c7-d167-4d06-b36f-c565762317a1",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d446c580-0bcb-4de8-aea7-e4eea2b1a045"
        },
        "item": {
          "id": "9f9ecce8-16a7-4be1-8aae-f0d674ae6742",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "fe0722bf-4906-4116-8f65-8ceb12a7cc18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "281bd55d-b3dc-483b-aafd-88e5ebd72273",
        "cursor": {
          "ref": "dcabe1b3-ea42-4c38-835c-dd50e641046a",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "d8cbe578-5ed0-47e6-b065-6da7dcb2bf09"
        },
        "item": {
          "id": "281bd55d-b3dc-483b-aafd-88e5ebd72273",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "a67bb878-db46-40a2-8ee2-1ddce2029642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad3c5a5-0791-4d3f-b175-4d980ef0cdbe",
        "cursor": {
          "ref": "5e32dcec-c3f9-4839-b186-70f8aea0bd7a",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "4336440a-46fd-43ef-9cae-7a74ca9c78fb"
        },
        "item": {
          "id": "5ad3c5a5-0791-4d3f-b175-4d980ef0cdbe",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "1c31fab2-cca2-4032-841b-554173e78a4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3536c887-405b-46c6-8124-7a4f87f9ecf5",
        "cursor": {
          "ref": "13ee7c34-e205-47a6-84cd-28b42d6ee1cf",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "9b0f871f-9c9d-45bc-8afc-786e23fb7f80"
        },
        "item": {
          "id": "3536c887-405b-46c6-8124-7a4f87f9ecf5",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4f66270e-41a5-4923-a445-684da1dc860f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b1a4c16-940a-42bf-b415-46720bda3192",
        "cursor": {
          "ref": "08c505ac-8f53-4481-9ef2-9fb6bd6e811c",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "074c2c76-5b2b-48f9-82ed-3e722b2b0f8e"
        },
        "item": {
          "id": "1b1a4c16-940a-42bf-b415-46720bda3192",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "6323ab58-127d-4b45-8f32-749bf5c1cd43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afd80d5d-290b-4bdc-979c-0cec22aac47a",
        "cursor": {
          "ref": "a458e858-8ec2-40f7-9564-40057c427b04",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "f2136d42-8631-4050-9bd9-c120b014e78e"
        },
        "item": {
          "id": "afd80d5d-290b-4bdc-979c-0cec22aac47a",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "142302df-e789-4307-98e4-2f677eeddfcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ca0dc24-fcdd-43e6-b0f8-d46f6b421772",
        "cursor": {
          "ref": "fc182e8e-030f-4476-a025-66fa802324bb",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "bb08ab90-bab5-437c-85b9-c9e3eed71e89"
        },
        "item": {
          "id": "2ca0dc24-fcdd-43e6-b0f8-d46f6b421772",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "d0eef699-02b6-4b78-afa8-8562b225b974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32d060fb-e326-4029-bbf2-fe6019b5e92c",
        "cursor": {
          "ref": "8b5fff37-9cad-4c12-9ff5-aefb4902c754",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "31e06561-fbc8-4e7d-a40b-d9a5418e2ac5"
        },
        "item": {
          "id": "32d060fb-e326-4029-bbf2-fe6019b5e92c",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "17008fad-76c2-4b82-bb17-1452d34db5d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e0f18ae-a6d7-4de5-9348-eeca773b4209",
        "cursor": {
          "ref": "8aaafde3-f3e6-4a01-a4a2-205c460aa739",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "943bad75-c008-470b-ab4f-f4d66bca2de9"
        },
        "item": {
          "id": "7e0f18ae-a6d7-4de5-9348-eeca773b4209",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "1010c3bc-b2a5-4c3a-8f02-9de88b59d358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb635860-de3e-41d0-bf81-7e172a18099d",
        "cursor": {
          "ref": "0890c5b0-3234-44f1-b86a-5a1425d27576",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "37822610-f02d-4afb-9b5f-1e1439138705"
        },
        "item": {
          "id": "eb635860-de3e-41d0-bf81-7e172a18099d",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "a2788cc1-3f40-49da-afb0-9ab1d681f727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dfc4701-e47f-4d8c-b782-2abfa637582b",
        "cursor": {
          "ref": "21be2c9e-4eb9-4b66-9e44-f42d7d3fab5a",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "7018192d-514a-46d4-b2fd-cca2a69cb1af"
        },
        "item": {
          "id": "5dfc4701-e47f-4d8c-b782-2abfa637582b",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "678a4f02-c262-47d3-9151-833843398c96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d321bc-bafd-44ca-8cd6-29d13b96b5e4",
        "cursor": {
          "ref": "87fde81c-fdea-4a85-a0c7-f979a189b820",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "2b725ab5-83b8-46a0-801b-70dfe21edf9b"
        },
        "item": {
          "id": "15d321bc-bafd-44ca-8cd6-29d13b96b5e4",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6d4d5c6d-6aee-4189-9d3d-e987faa2647e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d689a2b9-d24b-4d3a-8afa-25c693216721",
        "cursor": {
          "ref": "b84fece0-1b94-4e8d-8c6f-4476860ec85a",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "f10ec9f0-c4c7-4552-933c-50fe29fd8fd5"
        },
        "item": {
          "id": "d689a2b9-d24b-4d3a-8afa-25c693216721",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "58f1cd1b-7509-4fa1-aa12-b7b27d2bb3d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64d3023f-f7a0-49b9-aeff-f7b228149428",
        "cursor": {
          "ref": "b2de1dda-f6a3-4f61-b22b-8a777ae9cabe",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "2d0d0131-ab04-4380-8496-85b54bfe03e4"
        },
        "item": {
          "id": "64d3023f-f7a0-49b9-aeff-f7b228149428",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "3a508704-37bf-415f-a16b-300f1409d8fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dad467a0-cb9d-4cb4-8ce4-dc0a95c2aada",
        "cursor": {
          "ref": "c430a949-0be4-4cf8-9dcb-556d901b1e39",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "10a56f9c-d622-4bfe-baf4-e5c4b1459730"
        },
        "item": {
          "id": "dad467a0-cb9d-4cb4-8ce4-dc0a95c2aada",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "ec960ae4-588a-495f-b282-67d3a96d1c79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b017337e-3e08-4b34-9d71-df797e28384f",
        "cursor": {
          "ref": "8c754694-f707-4718-a28c-08217d09b696",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "f2b28b75-45ed-4ebc-9dc2-8e243265de55"
        },
        "item": {
          "id": "b017337e-3e08-4b34-9d71-df797e28384f",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "76ba2f4c-c1a6-4731-974d-3ae3de8b0503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b717fcf-8c6c-4c74-86d8-b1ff2d1f1e7d",
        "cursor": {
          "ref": "c68b6233-4062-4d8c-8326-8ef2294a0cdb",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "f3fdb360-8f04-415d-a001-3849e9e829da"
        },
        "item": {
          "id": "4b717fcf-8c6c-4c74-86d8-b1ff2d1f1e7d",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "6c6ae5b8-f766-4e5d-826b-2bc0d60cfc37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fb86676-2da7-41bd-b92a-17b9469c2003",
        "cursor": {
          "ref": "2cff495f-0785-479a-8f28-4857407bc8c9",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "ca6e72cf-4a26-4c8f-8dab-962e45fbc313"
        },
        "item": {
          "id": "3fb86676-2da7-41bd-b92a-17b9469c2003",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d18e1d2e-3357-4f9c-bc94-a4502fa481a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ef26d6c-c5a9-4bb0-8860-6d3e46cb1838",
        "cursor": {
          "ref": "edd2d838-af13-4195-9247-20d7195659fd",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "49c1a5bd-c5a7-44fc-9ed9-0beb7ddac365"
        },
        "item": {
          "id": "2ef26d6c-c5a9-4bb0-8860-6d3e46cb1838",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "01569c2b-6ca1-45b9-afcc-11d136000d41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb28707a-b92a-490e-aa7b-8f4174cf7b01",
        "cursor": {
          "ref": "1aaf4229-a499-4d90-8159-f545805aaa88",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "c5d3a0f5-d36e-4aad-a18a-84df425bd215"
        },
        "item": {
          "id": "fb28707a-b92a-490e-aa7b-8f4174cf7b01",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "951cb7d6-bb5d-428a-aec0-aacca6c38972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a2c71f5-b5a1-4d42-8f47-ca453941c8bb",
        "cursor": {
          "ref": "aafd7a3d-d14b-43a8-a69e-d3176e493f80",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "2c9d0c03-a08e-4572-b6b8-11a56cd0ac76"
        },
        "item": {
          "id": "9a2c71f5-b5a1-4d42-8f47-ca453941c8bb",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "a1e9d3fd-46ae-40a7-9e73-5025fddc190b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63a228bd-bcc3-4b57-af45-cf2bf3f98344",
        "cursor": {
          "ref": "b2489c45-d325-48d4-8e46-dc33344b171e",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "d7e7a3c4-3531-41a6-9ba2-2e396da21244"
        },
        "item": {
          "id": "63a228bd-bcc3-4b57-af45-cf2bf3f98344",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "a23e6c96-c8f7-49bf-97b1-bb97c4141513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea258a38-2162-404b-893a-61f8fb87d31f",
        "cursor": {
          "ref": "996da17e-b852-43e5-82bb-268160755310",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "cb684c5b-628b-4fcb-9f32-7e79d5df62b8"
        },
        "item": {
          "id": "ea258a38-2162-404b-893a-61f8fb87d31f",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "27c2a782-5049-409c-9331-cbd0aeb3d010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d5286c8-6fa5-406c-b703-b7584d6af572",
        "cursor": {
          "ref": "5bfb8f63-d06d-40b6-8313-4ff03a668a83",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "0510b940-bd18-492e-8f48-89787fc06180"
        },
        "item": {
          "id": "7d5286c8-6fa5-406c-b703-b7584d6af572",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "53f7d87a-3145-41b1-8288-dae529b72525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2e207c3-eb71-43ca-ad10-0d0897e46dd4",
        "cursor": {
          "ref": "cd0af5f6-83c6-429b-8c07-27a833cc78a8",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "4883c4cc-ddba-410f-acf7-13e345050c63"
        },
        "item": {
          "id": "d2e207c3-eb71-43ca-ad10-0d0897e46dd4",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "46be363b-d946-4993-8f7e-09041c6cb73f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74d6e22c-2c5a-49cf-bf0a-cf26f9707210",
        "cursor": {
          "ref": "58d19851-74af-4033-b1a8-51ea365af8d0",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "2bab26ad-60f4-43fd-9592-4ae8afc0a686"
        },
        "item": {
          "id": "74d6e22c-2c5a-49cf-bf0a-cf26f9707210",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "ea2f2ea2-10b3-4b67-83ef-de356d426a1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b703484-e6c5-463d-84c8-8353b975ecf0",
        "cursor": {
          "ref": "55cd4fd7-d1be-4034-9247-ed91d3ff90b4",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "0a4fb540-aee5-4419-b907-d03040c6d753"
        },
        "item": {
          "id": "9b703484-e6c5-463d-84c8-8353b975ecf0",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "d5f9a121-f5c4-45e5-868e-21c5c822e23f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a51a7b89-69a6-4d32-9290-a440647f95a2",
        "cursor": {
          "ref": "a06706d8-2cbd-42e1-a198-530376b7f6be",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "93bbae1c-ae8c-4f5c-9e2e-f9ea5a4d1ce9"
        },
        "item": {
          "id": "a51a7b89-69a6-4d32-9290-a440647f95a2",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "5e9d1ad7-0676-4072-a03f-c03b9f4be8f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2354c36a-1409-4936-a809-ea5137041090",
        "cursor": {
          "ref": "405472d7-5720-4af5-a34d-52a1f8cfe9a8",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "7eeeaa98-8d09-4acb-aac5-5e97840bb0d9"
        },
        "item": {
          "id": "2354c36a-1409-4936-a809-ea5137041090",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "0cb3c512-8877-4cac-aaa1-1da16800cf73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "460bb24d-9e81-4d56-bcc9-57cef4e07630",
        "cursor": {
          "ref": "1b738b65-51d0-4dce-ba3c-d8eb1d237573",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "b3a45e17-b363-4d0a-83ec-efa93a7896ea"
        },
        "item": {
          "id": "460bb24d-9e81-4d56-bcc9-57cef4e07630",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "0638dfc8-8ad1-4e48-8b44-39ee011d7e5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f6779c9-b90e-4d5b-b01b-bdf60228cb57",
        "cursor": {
          "ref": "03a29d03-55d7-4297-8c17-bbae5437f4e1",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "ac63c459-29dc-48e3-a258-0ab56d35eecf"
        },
        "item": {
          "id": "5f6779c9-b90e-4d5b-b01b-bdf60228cb57",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "3e1633c5-e5b9-42cf-949f-a17631755760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab544834-8f8e-4d80-b190-05e6046238f6",
        "cursor": {
          "ref": "adf76200-ef3a-4ea7-8035-fe675111481c",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "3b4c5af4-3ce2-459b-a6e1-2d573bd44e3e"
        },
        "item": {
          "id": "ab544834-8f8e-4d80-b190-05e6046238f6",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "4535f472-103e-4784-b8f3-ad58d607fc34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fcbb36c-9b66-4381-86a7-eabd7ce15221",
        "cursor": {
          "ref": "2ee7dca4-632b-41d3-b05d-61336f0d9125",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "dd45721e-2606-45fa-ae64-b9d2f9846e6f"
        },
        "item": {
          "id": "3fcbb36c-9b66-4381-86a7-eabd7ce15221",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "4c851f94-0281-47e8-acb5-434e02af7caa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8b718e4-5041-4601-b483-902067dc1576",
        "cursor": {
          "ref": "6e05d8e0-9a47-4003-b820-dbbc2770cb59",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "9a86ff88-c895-4b0d-ba99-1c199b72156c"
        },
        "item": {
          "id": "e8b718e4-5041-4601-b483-902067dc1576",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3e9ea818-7375-41ed-899b-e0b324d6f280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9abbf22a-f950-4982-89f6-50cb39773513",
        "cursor": {
          "ref": "665c517c-7047-4e65-b6cb-20d78685d00f",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "51d92438-c2bc-4182-b97b-d49020d1ba3f"
        },
        "item": {
          "id": "9abbf22a-f950-4982-89f6-50cb39773513",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "081ce1be-d9d0-43b9-bb99-158bcb8cd978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dbbcf1f-aa49-40f8-9fd3-794e12566487",
        "cursor": {
          "ref": "cec62234-cc77-45ce-b5e4-3f34725f5bce",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "28616d5e-bd70-4009-954e-ac953f59e727"
        },
        "item": {
          "id": "5dbbcf1f-aa49-40f8-9fd3-794e12566487",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "f2dc825a-125a-404f-9bbd-7d0af32fd3b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "071598f6-62a0-46dc-a066-7a6ac9f1648d",
        "cursor": {
          "ref": "131de912-fe6f-4f6f-ae15-45a2e88d0b3e",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "0d656237-db6b-4749-bfa4-2225af343242"
        },
        "item": {
          "id": "071598f6-62a0-46dc-a066-7a6ac9f1648d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "55c85b4a-2c63-473c-a724-2ff93f75f6c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 118,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d56820f-9fa9-4403-a63b-cec4251622f1",
        "cursor": {
          "ref": "680877a0-d431-4ad2-a385-b372b0be8447",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "6f6be768-5cf4-472e-94ff-aeab4b4a4a04"
        },
        "item": {
          "id": "9d56820f-9fa9-4403-a63b-cec4251622f1",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "17ec3391-632e-41c5-89e5-13709e670eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f733f28-d4cf-4d6a-b0c1-b3c73ad306f8",
        "cursor": {
          "ref": "02b4dd37-e898-4492-878b-455e8553558a",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "b9353b19-6b10-49c9-bcdc-631e7b02b575"
        },
        "item": {
          "id": "1f733f28-d4cf-4d6a-b0c1-b3c73ad306f8",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "df2e6aed-9273-441f-bfad-e2ad2cec1eda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "682cd4e7-97ff-4769-8f96-a4dc53bc7068",
        "cursor": {
          "ref": "cdc40720-4b56-41ae-86fc-4912559b4f2b",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "5ef88fb6-7caf-4091-8821-90513d337625"
        },
        "item": {
          "id": "682cd4e7-97ff-4769-8f96-a4dc53bc7068",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "035f3025-ed14-468c-bc33-b2e1689f7142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "675c63df-0f87-42a4-bb3a-f4d81bef9d27",
        "cursor": {
          "ref": "baae742d-af21-4392-9528-d4973e2e6260",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "2218a433-ab57-4de9-9724-aa49bdd44d42"
        },
        "item": {
          "id": "675c63df-0f87-42a4-bb3a-f4d81bef9d27",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "e6c5b939-fa64-46e9-8a74-722ff302fb4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc8af8a7-f5cd-41fa-941a-865269eb278d",
        "cursor": {
          "ref": "46e1ec7d-3a3f-4f4a-aaf8-12c15934749c",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "66e7526a-10ea-4ebd-9fe1-aad37ceba609"
        },
        "item": {
          "id": "bc8af8a7-f5cd-41fa-941a-865269eb278d",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "81b22d7d-cf49-4eb1-9118-d9a47459f252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6bf02b3-edb8-44ae-be00-56c4e3b2e96e",
        "cursor": {
          "ref": "2b5e7734-2467-4d51-995f-eda5242d94d7",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "ffa35fc2-8479-4b4c-bbcd-dbbb80f00da0"
        },
        "item": {
          "id": "e6bf02b3-edb8-44ae-be00-56c4e3b2e96e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "22a377c2-311f-4145-8f20-0842652dfc53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7a0e3b0-8a55-41a8-9f16-45fc1402a92d",
        "cursor": {
          "ref": "6330ea73-65ba-486c-a7c7-bf1c9ab2863c",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "931e0c86-8068-41da-b542-e24fbaf8b0a7"
        },
        "item": {
          "id": "b7a0e3b0-8a55-41a8-9f16-45fc1402a92d",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "5bf1c655-5faa-4bd3-944d-08a558e394c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc10e122-7c30-4574-a468-0f053bb163a8",
        "cursor": {
          "ref": "d463e915-1fb9-4999-b2de-efc922829dc8",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "6cdc05a4-5f52-40c2-baa1-8c5d400d5e0d"
        },
        "item": {
          "id": "cc10e122-7c30-4574-a468-0f053bb163a8",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "0aee076d-960c-4f50-ba5b-dfe2359dccb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aebc650-da65-45df-bfaf-e9dc33684b47",
        "cursor": {
          "ref": "d22384ac-e2b5-4355-844d-48537dc6349b",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "3b34d6dc-db56-47a8-9d2e-8b4cfc214098"
        },
        "item": {
          "id": "3aebc650-da65-45df-bfaf-e9dc33684b47",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "b3ec519e-9f3a-40f6-bb65-f35bbf60ecea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6831d9b9-9435-41df-a012-39fa594a7ce1",
        "cursor": {
          "ref": "f7f48545-a434-4d8c-bae4-99128091bf78",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "88b759a5-ba47-4b6e-912b-415d4679da0d"
        },
        "item": {
          "id": "6831d9b9-9435-41df-a012-39fa594a7ce1",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "56eec0fc-16ba-4a32-bc62-ba627b847a7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ac401b6-685c-4a47-9d7b-cd24496a344d",
        "cursor": {
          "ref": "c284a109-c4bc-4b28-92b8-f288ad3f0178",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "a38c0fe9-374c-4068-8bc3-c8295e7c6f63"
        },
        "item": {
          "id": "3ac401b6-685c-4a47-9d7b-cd24496a344d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "0d80470e-aeda-44b8-823e-fb6c1bd304f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f8d8e7-eee1-46d2-b0f3-a3e0cf8c9777",
        "cursor": {
          "ref": "e90edc1d-f232-4d0c-8588-7c89143250d2",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "bbc505f5-1ece-4128-bfb2-b090ce71f8c2"
        },
        "item": {
          "id": "a6f8d8e7-eee1-46d2-b0f3-a3e0cf8c9777",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "79a20221-5a51-4d74-a038-02202f8dcdf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f669d9e-f1ef-41f5-887f-667cddcceffe",
        "cursor": {
          "ref": "9c6b7e41-360c-467b-b1b4-60624501594a",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "04481c5c-5e61-4b5a-bd33-e2ae65846ed3"
        },
        "item": {
          "id": "8f669d9e-f1ef-41f5-887f-667cddcceffe",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "335e50fd-eeec-4e85-8ae0-cde609f7ae9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14010f7d-d341-474a-ade0-33f094238920",
        "cursor": {
          "ref": "2cc6d51a-ddb3-4d86-a852-a491e164becc",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "c1ad79a5-3e4a-4ee5-93d2-601b2a60d880"
        },
        "item": {
          "id": "14010f7d-d341-474a-ade0-33f094238920",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "1113396c-6d54-480a-bd3c-e97488516296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfd778ba-9808-4088-8ea1-30d5520f2790",
        "cursor": {
          "ref": "71e42635-af0b-4314-b68e-7d2a17c6735d",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "c06367de-888a-497a-b750-8f94e18d9a56"
        },
        "item": {
          "id": "bfd778ba-9808-4088-8ea1-30d5520f2790",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "d3eb204a-64c6-4a03-b8be-40a539790730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ee65c93-fe83-4da2-904f-feeb7126083c",
        "cursor": {
          "ref": "99aee9f0-a7ee-4f24-8c39-987de713b51c",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "d3763205-7047-4613-83ab-d07336e321fb"
        },
        "item": {
          "id": "6ee65c93-fe83-4da2-904f-feeb7126083c",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "38ec9143-2c30-4e29-9ab4-af33c4de294d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "496a1278-86c5-4eff-a871-40f78688a3d9",
        "cursor": {
          "ref": "6390b44d-6fe2-4051-8796-565dc30cb3d3",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "eeb337e5-36d5-4793-bdfd-6753f34bfe8e"
        },
        "item": {
          "id": "496a1278-86c5-4eff-a871-40f78688a3d9",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "1ca61544-a247-4497-b6c8-3f61cbf3e39e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6892c702-e9ca-4f8d-a528-5e228afc944b",
        "cursor": {
          "ref": "0b50c313-052f-492d-b43e-00293644325f",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "68872e36-99ab-4ef0-aa2c-44ffbb230699"
        },
        "item": {
          "id": "6892c702-e9ca-4f8d-a528-5e228afc944b",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "9474dfbc-6e36-4242-8e0c-f765fed551fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "590d8298-2710-4bf1-bd35-6454476f24a1",
        "cursor": {
          "ref": "bff2c025-d392-4cd8-9ace-02214c4b814c",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "2b09c66a-cd4b-4fe4-abbe-dccf65610dbd"
        },
        "item": {
          "id": "590d8298-2710-4bf1-bd35-6454476f24a1",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "3bec2223-8b67-47b3-bf1d-92e3d7e13435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "624e2eb2-cf3f-4185-ab33-f90988f03616",
        "cursor": {
          "ref": "540ba39c-0073-493b-8eb3-35c5f4f1e716",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "b9fa9e0f-990d-4e77-8393-3041fb0449d0"
        },
        "item": {
          "id": "624e2eb2-cf3f-4185-ab33-f90988f03616",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "332bd758-5bb1-4ed6-96c2-f046179b0974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "425bfbb7-7191-435e-865b-7701c7507d0a",
        "cursor": {
          "ref": "316ecc00-1757-43a6-89ac-244910e575f6",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "5606b8d2-1e5c-42a5-b832-3415709a840f"
        },
        "item": {
          "id": "425bfbb7-7191-435e-865b-7701c7507d0a",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "ce3a6322-ee83-444c-8d1a-f92301e9d5e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f2fa974-6827-42ff-af3e-4cc91923bb9d",
        "cursor": {
          "ref": "ff3cb52e-ac30-411a-b62f-4b6bd2e75b3c",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "e1d105ab-421c-4567-8f32-18e5aac8b782"
        },
        "item": {
          "id": "8f2fa974-6827-42ff-af3e-4cc91923bb9d",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "ae9ed5b1-f265-4709-9bf0-5b6d51ab5195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26c23e4b-3af7-4c7f-8e68-a52ffe0919cf",
        "cursor": {
          "ref": "938de488-b765-4195-b776-5e7e4514f957",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "fa9079ed-410a-4c72-a330-bda14d740bf7"
        },
        "item": {
          "id": "26c23e4b-3af7-4c7f-8e68-a52ffe0919cf",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d72221f0-4f78-4b57-8ff8-df1dfdbe1bc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f386ff33-5992-4007-8c8b-eeff268864c0",
        "cursor": {
          "ref": "2a5e8627-ade6-4658-a88b-5c29d6d29546",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "e68a1176-58ea-4d16-a59d-ebb45c860528"
        },
        "item": {
          "id": "f386ff33-5992-4007-8c8b-eeff268864c0",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "5abb6906-bcee-4c96-b033-aaa92a2f7423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40db0ad2-bfb0-4621-b9f8-afac4bf8e9e1",
        "cursor": {
          "ref": "5399a6c0-f209-42cc-b7ac-49e9886123e9",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "4bebd450-d64a-483c-b36d-8aaa1520561e"
        },
        "item": {
          "id": "40db0ad2-bfb0-4621-b9f8-afac4bf8e9e1",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "c2611724-9b9b-42af-9577-7b56bfd380c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8b046b4-2cc9-4a08-91bf-4b75005096d8",
        "cursor": {
          "ref": "74032253-791a-4644-b2b0-fcb9ab86792d",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "4778dec1-32ec-4120-b8ca-3060068c4cde"
        },
        "item": {
          "id": "c8b046b4-2cc9-4a08-91bf-4b75005096d8",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "b8cbac58-0ab3-47b3-8f5a-bdab221087ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26023e54-f1c3-4588-8e3a-632ba32c4c84",
        "cursor": {
          "ref": "2f03a55b-5c72-4570-bc91-36422d3082d5",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "06fbcd0d-56ee-4d2b-a8fb-f10285b830ca"
        },
        "item": {
          "id": "26023e54-f1c3-4588-8e3a-632ba32c4c84",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "dd1439ad-a91d-4805-9a30-20fb584ac86c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4424bed6-bdbf-4041-9216-1e833c3358db",
        "cursor": {
          "ref": "2498d1b8-43c4-44ef-a198-cdff19c57a1e",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "5b603138-24d6-46b9-b20d-6d6ee7ab1b2a"
        },
        "item": {
          "id": "4424bed6-bdbf-4041-9216-1e833c3358db",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "07d1f5f5-91f8-4ade-b34f-bec1ddbcdab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6a75031-3def-430a-8f8b-fa2297c5a141",
        "cursor": {
          "ref": "f2fb383a-6a72-454e-9da2-e6a2405163ae",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ea5e4988-e83d-415a-81ce-097d64337934"
        },
        "item": {
          "id": "d6a75031-3def-430a-8f8b-fa2297c5a141",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "74103f83-18f7-4f40-8e39-c6a916a46c32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48944669-d8c4-429f-a91b-1d80b8147f58",
        "cursor": {
          "ref": "fb5b65ad-9254-4f76-ac9d-597f3222c586",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "86bbf5d8-2200-4e0b-8438-157bff8c0da3"
        },
        "item": {
          "id": "48944669-d8c4-429f-a91b-1d80b8147f58",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c6262b6f-63ca-413a-be08-362a678a5b9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "476bdaee-9223-48f1-b075-01f8116533dd",
        "cursor": {
          "ref": "4b923fc6-6675-4fce-9471-a2a3ecb28abe",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "a0366911-413a-40cb-b684-21c7c4f88842"
        },
        "item": {
          "id": "476bdaee-9223-48f1-b075-01f8116533dd",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "af6d87b5-59c6-49c0-9e09-9c0d9e4963f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e03f821a-c50f-4e5b-9f66-9c18e9d484b6",
        "cursor": {
          "ref": "3b2f64a1-947b-439d-8c65-aa225b43e053",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "0d946801-1296-4ec4-acca-3a5d7c942669"
        },
        "item": {
          "id": "e03f821a-c50f-4e5b-9f66-9c18e9d484b6",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "93b8eb0f-c7a1-4590-8016-6230afd1ac6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dcc455e-60a3-4677-aa5c-f00aeb447aa4",
        "cursor": {
          "ref": "4fbe50e8-b58f-4af1-90c3-9881a92e7b4f",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "687e1d61-9a7e-43c7-8cad-12d9ae05c409"
        },
        "item": {
          "id": "4dcc455e-60a3-4677-aa5c-f00aeb447aa4",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ee609204-172b-4320-a3f1-745433b3e084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9c204f2-cbe9-4751-a5d1-c7021ad972fd",
        "cursor": {
          "ref": "d5da005c-e87d-46c1-b942-e3dc36c45986",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "a30a1fd7-9937-40f9-947f-ede4c7215346"
        },
        "item": {
          "id": "e9c204f2-cbe9-4751-a5d1-c7021ad972fd",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "44de3e9e-8020-47b9-b98c-af66097f140c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f6a542-3146-4cc3-a5c9-6c2b07183daf",
        "cursor": {
          "ref": "9de3d13e-2b14-44c4-aedc-f3c29b3d4f8d",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "8190c2ea-5bd1-43a0-93a8-9418f0c9c7e7"
        },
        "item": {
          "id": "01f6a542-3146-4cc3-a5c9-6c2b07183daf",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "815cebe5-cfb3-4a6b-857e-d6983f6f9b4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e059d3a0-695f-4554-98bd-c2e14cec24e6",
        "cursor": {
          "ref": "955959f4-761f-442f-b6f2-25a0f8ad5898",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "c2358000-4f93-401e-80a3-cfb518c9760a"
        },
        "item": {
          "id": "e059d3a0-695f-4554-98bd-c2e14cec24e6",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "48824c52-ecfc-4acb-909f-f1226d91c2a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e12c7dc-4b0c-4046-a6cf-1945bb143706",
        "cursor": {
          "ref": "ba5d169c-e5a9-4251-b977-e9dbfcc29674",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "8b3b9b04-dee2-4ec9-8f0a-826e46ee9453"
        },
        "item": {
          "id": "1e12c7dc-4b0c-4046-a6cf-1945bb143706",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b78f2a51-4e4b-4591-9a85-d0f391a737a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41809a8e-9a0b-495d-a652-a200d14aa436",
        "cursor": {
          "ref": "d99532b4-a5fd-4a36-b0ea-40bd5283f60a",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "ea8c5242-6e82-420e-892b-d4effbe42490"
        },
        "item": {
          "id": "41809a8e-9a0b-495d-a652-a200d14aa436",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "21c9947c-3f6c-42a4-b1f7-53cef3711e25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67fb07bb-8a14-4ed0-8d62-cab529178317",
        "cursor": {
          "ref": "065d7e31-949b-4b4e-bab2-fd5c949ea66c",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "1a63bbfc-e73b-4bdc-bef4-3696f82205b9"
        },
        "item": {
          "id": "67fb07bb-8a14-4ed0-8d62-cab529178317",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "cd8f5a5a-92e9-445b-8f26-239747022639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee0da6c8-7ae1-492a-9a6c-43684e390077",
        "cursor": {
          "ref": "561ede2b-1fc1-43db-b90e-529f2b043718",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "79a51f5b-750f-4e7c-978d-7c578f9fcb90"
        },
        "item": {
          "id": "ee0da6c8-7ae1-492a-9a6c-43684e390077",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "1996f592-3b3f-4d86-b23b-98ef2dd54040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd99aa09-76a6-43c1-8a4c-4f8f8d8981be",
        "cursor": {
          "ref": "f730bcda-4f09-4af0-bf9e-306319c06f77",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "83dc8b06-6533-48b2-95c5-7dfebd2dc21f"
        },
        "item": {
          "id": "dd99aa09-76a6-43c1-8a4c-4f8f8d8981be",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "97eb2f9f-d929-4321-ab5f-b17697486e42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea758771-0d93-41f2-85c7-00ee2bd4f0b5",
        "cursor": {
          "ref": "ad124bca-dc73-45ac-8528-b1c2671a89a8",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "54c0d0e1-97d9-4b7a-aced-5ce7a44e6ee4"
        },
        "item": {
          "id": "ea758771-0d93-41f2-85c7-00ee2bd4f0b5",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "4e627dbd-bb5b-4d70-b863-ed2e33a18a53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8496343-2f22-498a-9d10-585c43d6bc0d",
        "cursor": {
          "ref": "6180d82a-8056-40e7-b5e9-ee24f6462879",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "1f7dd0d3-df3d-4d43-b5ef-a5cf6d8c8839"
        },
        "item": {
          "id": "e8496343-2f22-498a-9d10-585c43d6bc0d",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "b1107baf-292e-49e3-95ea-c4b4703975b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff9a61eb-c57f-4fe8-8dfd-4f93084efcba",
        "cursor": {
          "ref": "de79ef85-fbb2-4cde-9b0e-c0109aa27497",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "579931bf-abaf-42c2-b982-6dd3150b1713"
        },
        "item": {
          "id": "ff9a61eb-c57f-4fe8-8dfd-4f93084efcba",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "6755a57e-6ba2-453d-9219-103266c2a1b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbb12eb4-2931-4223-af2a-96a7d5b52b82",
        "cursor": {
          "ref": "346ecf02-699d-4e03-9a09-787799d9a364",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "fc01d74f-b0c5-4e69-be0b-8275371831a2"
        },
        "item": {
          "id": "cbb12eb4-2931-4223-af2a-96a7d5b52b82",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "40e4c803-3dd3-4ed3-8db7-29780fd84ea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca357ee5-9662-45eb-9140-96849094dd30",
        "cursor": {
          "ref": "2a4121ef-accc-43fa-ad06-4f027c703417",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "e2a7c23a-8fc8-4b59-95e8-3a2c6dc4d06c"
        },
        "item": {
          "id": "ca357ee5-9662-45eb-9140-96849094dd30",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "f150dd31-ed02-4f28-a5cc-c6e47ebe8a3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "859cceb6-f091-4931-b658-242e752ddf64",
        "cursor": {
          "ref": "ae320e94-a8fb-4a51-8db2-fc85cdf72821",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a72bdfe1-4ad1-400d-bed8-8f39a1981b59"
        },
        "item": {
          "id": "859cceb6-f091-4931-b658-242e752ddf64",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "2f3b6fb4-323c-493b-8e73-bf3063c3a830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c24d70-1eee-460d-a152-af80de6f129c",
        "cursor": {
          "ref": "53d68aa7-4d37-4653-8854-0712334f07cb",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "a099382a-b07a-4f97-a262-ce99360cfa99"
        },
        "item": {
          "id": "63c24d70-1eee-460d-a152-af80de6f129c",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "fd2be92d-91f8-485c-842e-a825540e6a27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea51bf22-cb61-45bf-8718-f45e570b6606",
        "cursor": {
          "ref": "d56b8e6e-c8b8-4a4d-ae91-d2e634d2e6ee",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "84480a04-bb79-400b-95f0-270032c9944f"
        },
        "item": {
          "id": "ea51bf22-cb61-45bf-8718-f45e570b6606",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "dbee2442-60ae-4617-b0b4-85c0616856e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b39c3b9-abf3-4496-95af-3aadf7ff8e14",
        "cursor": {
          "ref": "c13378a7-1715-4031-b74d-d0141e021103",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "7bdba7e0-51bb-4fc9-bf45-36f0463be7a9"
        },
        "item": {
          "id": "4b39c3b9-abf3-4496-95af-3aadf7ff8e14",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "ae343aaf-0522-4ad3-b38e-d8b43b143cf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "842496c2-f371-4ebe-b6c7-3cc525161423",
        "cursor": {
          "ref": "0e93a787-e94a-4e63-ae1b-2198571bcdd1",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "f8c9e6b5-fc70-45f2-84db-485ffb8eb243"
        },
        "item": {
          "id": "842496c2-f371-4ebe-b6c7-3cc525161423",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "759346d7-1792-4439-aab5-e0e5ffc88571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "567d69fb-b679-483f-84db-e472fff665ea",
        "cursor": {
          "ref": "846556b5-2862-48f9-9071-f0864a2a1613",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "967bea95-6a23-412f-b1ec-84180bf5a927"
        },
        "item": {
          "id": "567d69fb-b679-483f-84db-e472fff665ea",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "010cfeef-3e68-435f-b8ba-05bd1ace79c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb769a50-9ba4-4696-9e44-3f89d3bddb78",
        "cursor": {
          "ref": "56d2d890-f3a7-4d44-ad86-265bd21bc0f6",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "20bb15a7-5635-495c-a9d5-42ccbc14ea60"
        },
        "item": {
          "id": "eb769a50-9ba4-4696-9e44-3f89d3bddb78",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "62aa99d6-c81e-4991-a2b1-a95708ec1913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "696ab7de-ac1d-4b80-9a3c-766d7e4ee096",
        "cursor": {
          "ref": "597c4517-187b-4dde-a27f-f093b6106582",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "226b8b9c-5383-4b4b-abac-2c364f4b5cd3"
        },
        "item": {
          "id": "696ab7de-ac1d-4b80-9a3c-766d7e4ee096",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "2923b5b8-67d4-435b-8c07-e4ff794d1ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51fbacdf-4358-4020-8515-7525a8e7ffcc",
        "cursor": {
          "ref": "cb94dd21-eb0f-4fd5-80e8-d1ff67ce1bff",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "0928fc35-4a51-4835-9db0-fd3fe99cb82c"
        },
        "item": {
          "id": "51fbacdf-4358-4020-8515-7525a8e7ffcc",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "af2eed08-89a9-4aca-a86c-820b9bcf5b5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa467311-15b3-4824-b322-fbabe7d56e91",
        "cursor": {
          "ref": "f6777b38-34a6-4751-b2f2-0774628aa882",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "22c72bb0-3652-4d8f-a354-1b5bd7132cf9"
        },
        "item": {
          "id": "aa467311-15b3-4824-b322-fbabe7d56e91",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "e6ac8db5-14a1-42d9-8302-6138648a23dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43164143-5a74-4679-b2e0-4a0cc2b275cf",
        "cursor": {
          "ref": "9ebfb889-2cb7-4983-9361-bc55ecbcad70",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "b5f11423-1bc7-4ae3-aca0-7ef9da13640b"
        },
        "item": {
          "id": "43164143-5a74-4679-b2e0-4a0cc2b275cf",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "e9e69b75-374a-4a82-a0f1-38e82e031e52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "533e434d-e5f0-447a-9d0f-22fb0fa7a5e5",
        "cursor": {
          "ref": "6f107b70-1eae-41e4-9433-d3696da41ed9",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "d6a37f7b-74ec-4d34-8a54-934cfdc3d846"
        },
        "item": {
          "id": "533e434d-e5f0-447a-9d0f-22fb0fa7a5e5",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "b64ad0bd-a764-4e5b-a1b0-4bbc49a574e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20470c60-9afa-486c-8377-9c821c272354",
        "cursor": {
          "ref": "ca26c8f0-d9c7-43a7-91b8-01eaee4f6316",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "216af8ba-e4ee-4ae1-aff2-7225714e9bb9"
        },
        "item": {
          "id": "20470c60-9afa-486c-8377-9c821c272354",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "84e649ba-3525-4446-936b-0faa954bd5bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c71bedb9-25de-4394-959d-97e65eac52fa",
        "cursor": {
          "ref": "fda29df1-fbb7-47b7-a082-6d1812c129f5",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "24636bd7-1a75-4b1d-afe9-9530c4df87cf"
        },
        "item": {
          "id": "c71bedb9-25de-4394-959d-97e65eac52fa",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "3634f759-f806-4e95-8f01-a36f801b4529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c40c3c1f-6232-4627-83e6-a78ab5c68b2e",
        "cursor": {
          "ref": "105f4fb2-b86a-4d1e-a53f-ba027ecae3b3",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "c5f58c8d-6b16-44f9-9b8c-da105dae768a"
        },
        "item": {
          "id": "c40c3c1f-6232-4627-83e6-a78ab5c68b2e",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "82032558-defd-49fd-9a96-f8bd6418d024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1478963-8448-4a10-8063-2b1cf6ecfe17",
        "cursor": {
          "ref": "ef51f301-69b7-4db8-af1c-a538a6cd5511",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "3875e8ea-e545-4cca-baac-cb6ed91e9f4e"
        },
        "item": {
          "id": "c1478963-8448-4a10-8063-2b1cf6ecfe17",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "a10c48ec-189c-4e30-9a14-6ddd8b604647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "492fabe8-fdbb-4f4f-a1e4-53ebb49e8319",
        "cursor": {
          "ref": "d8ba42dc-cbd9-4462-a7e1-93a95e094c9e",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "0912a850-c1f4-4824-b68e-48b54661bec4"
        },
        "item": {
          "id": "492fabe8-fdbb-4f4f-a1e4-53ebb49e8319",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "5bcb4135-df2d-47b4-b136-a0fb2a6e3685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46fe8037-b392-4c87-83cd-adfd5e7b4ea6",
        "cursor": {
          "ref": "97b5cab9-861d-414b-9135-c38bc7e79900",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "841223af-2e74-4dce-b56f-7735a7d56cdb"
        },
        "item": {
          "id": "46fe8037-b392-4c87-83cd-adfd5e7b4ea6",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "606e45ed-4403-4fbe-b180-18f990260026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "127d89b4-acfa-4a10-8fc9-c065c7fe7a75",
        "cursor": {
          "ref": "ce157a44-fd08-47b2-90b4-b4d833ca9738",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "31ce850a-c277-4a17-824f-3ca7c6f0fa46"
        },
        "item": {
          "id": "127d89b4-acfa-4a10-8fc9-c065c7fe7a75",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "57f114d5-986f-4c07-8a3b-e7b9803247cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae3c740e-40fe-4421-9406-fcff636dbb09",
        "cursor": {
          "ref": "040f8b1a-88c9-4e86-a204-d6eff81170cb",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "396e3569-98bc-48ef-879c-c5c31560d46e"
        },
        "item": {
          "id": "ae3c740e-40fe-4421-9406-fcff636dbb09",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "c7da853e-81f3-44db-82ab-fb5642660d2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccf3d5a3-3240-4fcb-824d-a5f249422b42",
        "cursor": {
          "ref": "78ecfb39-ab68-434e-aa83-ee53d2a3ea02",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "e93bbb60-bee1-4675-88d1-07a5c7b9b27d"
        },
        "item": {
          "id": "ccf3d5a3-3240-4fcb-824d-a5f249422b42",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "0a66ade3-98d5-4859-83d1-eec9aec1d822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2800f103-20d4-4929-aef7-af623cfc1eaa",
        "cursor": {
          "ref": "d05cb0cd-3baf-42e8-a809-78d03a4b6dc5",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "b31a45c2-562b-4550-9296-c9d1d5b44092"
        },
        "item": {
          "id": "2800f103-20d4-4929-aef7-af623cfc1eaa",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "1b393c74-dfc5-4f55-b574-78f907a3de7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d22aa5e5-61bf-4ef1-9c74-c9f149feb3a2",
        "cursor": {
          "ref": "65193d53-1135-4add-bbba-fbdd2e3e47e5",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "e77506c4-e183-4d31-83d8-b8f70b49b11e"
        },
        "item": {
          "id": "d22aa5e5-61bf-4ef1-9c74-c9f149feb3a2",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "558fb3ef-2215-4794-ae4b-4967d593006d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa20c221-0f29-4e2a-aaa5-fbfe97645d70",
        "cursor": {
          "ref": "c3e97b26-3ff6-4668-95b0-609c87fd35c2",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "d4d255a8-db31-4d24-b228-e7fcf536a530"
        },
        "item": {
          "id": "fa20c221-0f29-4e2a-aaa5-fbfe97645d70",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "e7027a43-be19-4bad-8afd-4edae1fdc0e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7cc960a-f80a-487e-a772-9c0cb3f37fb2",
        "cursor": {
          "ref": "d159d0af-dd17-41af-8756-35554e06a763",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "bead717e-8a7d-4d7e-adae-26a93579e367"
        },
        "item": {
          "id": "e7cc960a-f80a-487e-a772-9c0cb3f37fb2",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "b1c27b98-2d63-4cf4-a0da-0d9fa6711c00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a99be80a-6249-4f6e-b3c3-d7df364f0c98",
        "cursor": {
          "ref": "667fe80a-45b9-43c2-be87-e549d7944d72",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "05b287f9-76c1-49de-aa6e-15f7c11b6994"
        },
        "item": {
          "id": "a99be80a-6249-4f6e-b3c3-d7df364f0c98",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "2c72db24-589e-46fd-b723-09fa2d83a4ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dca14288-56a6-4a0a-b82e-52e45bb62f1c",
        "cursor": {
          "ref": "5611ab80-22fa-464d-835f-1b98d457dbbf",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "14427c44-2a7c-41ef-9d73-d6d626d50d5d"
        },
        "item": {
          "id": "dca14288-56a6-4a0a-b82e-52e45bb62f1c",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "d99987ee-fdde-4e52-b2ca-429542942239",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73cdc173-4b8c-48ee-b9bd-14bad3ac6e62",
        "cursor": {
          "ref": "716787ff-c272-4e8e-802a-21c671c3214d",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "539a4b6f-5d8a-42c2-851f-d97ad51bfe3a"
        },
        "item": {
          "id": "73cdc173-4b8c-48ee-b9bd-14bad3ac6e62",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "e75b8b73-996e-476b-a815-51ff11ae8fde",
          "status": "OK",
          "code": 200,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "90190cc3-36bb-4014-b0da-32176d5b9161",
        "cursor": {
          "ref": "43b7bd03-b512-4a7e-83e2-d112d812fc34",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "9d8912eb-bf80-4a83-958d-8642ed22e08a"
        },
        "item": {
          "id": "90190cc3-36bb-4014-b0da-32176d5b9161",
          "name": "credentials_verify"
        },
        "response": {
          "id": "12a92c7f-6cf0-47d7-abcc-30c9b46dbe3d",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ba27a7-1722-48d6-add4-01dcaf88e590",
        "cursor": {
          "ref": "6e11bd59-f5d5-4692-85cc-0053ab92750a",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "8ecdfcaf-7a7d-4f4e-8ecb-f3f61a1cf304"
        },
        "item": {
          "id": "c2ba27a7-1722-48d6-add4-01dcaf88e590",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "b56f6a28-f88c-47d6-bf02-e16fe7ca66bf",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "943b499b-d279-4e97-a839-2b8d164350ca",
        "cursor": {
          "ref": "9639fe74-ad9d-40c6-930a-7859cd652a1a",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "83022cc3-448a-4224-9058-8bb3f453e11d"
        },
        "item": {
          "id": "943b499b-d279-4e97-a839-2b8d164350ca",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b998b6b3-46ba-453c-a5b8-20d595d3b0b5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "943b499b-d279-4e97-a839-2b8d164350ca",
        "cursor": {
          "ref": "9639fe74-ad9d-40c6-930a-7859cd652a1a",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "83022cc3-448a-4224-9058-8bb3f453e11d"
        },
        "item": {
          "id": "943b499b-d279-4e97-a839-2b8d164350ca",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b998b6b3-46ba-453c-a5b8-20d595d3b0b5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "219532f6-4eee-400e-9ce9-e33fffb2720f",
        "cursor": {
          "ref": "fd74535b-785c-4094-8e4c-bd90a4c85d7e",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "8ed71880-6740-4549-8755-dc4ed1793972"
        },
        "item": {
          "id": "219532f6-4eee-400e-9ce9-e33fffb2720f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "179dacb3-b73c-4e93-8d36-c4bf45d000d5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de4a5762-7f71-468b-8785-5be57ac7cebf",
        "cursor": {
          "ref": "91bc4b3d-ec94-42e7-bed0-244d68dcfda0",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "b1163808-6a8a-4dcc-8626-c9af991e58f0"
        },
        "item": {
          "id": "de4a5762-7f71-468b-8785-5be57ac7cebf",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b9185df0-4175-4927-8ca8-e7e2ae787193",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}