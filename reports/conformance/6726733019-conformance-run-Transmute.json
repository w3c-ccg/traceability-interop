{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "77e9b6c5-5798-402f-9b0e-6ddef2e61923",
        "name": "Clear Cache",
        "item": [
          {
            "id": "10078b11-cfc3-468a-b14f-29aa6f27492f",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4f7f550f-8c26-459b-9616-be6d092249ab",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "773913dc-f4f8-4571-bac1-6df73802eb27"
                }
              }
            ]
          },
          {
            "id": "a9043346-fd45-4514-a2ba-c129a57a0379",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0551870d-b054-4c37-9db0-5a92aa7676c1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6ae12bfd-97d8-411a-9b8c-c165dc92a626"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "c991767c-c5d7-4013-b0a4-568d4b7722d4",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "f8b4f9da-af38-4306-9c95-0079f3955483",
            "name": "Positive Testing",
            "item": [
              {
                "id": "eab2d347-85ae-41d4-8fc7-732b7719048e",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a876fda9-0d74-455c-9c4a-9510a77eef2f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8f9f02d0-9897-4604-a04e-b87bfbfa46c2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "47dc2822-eaf6-4f9b-9403-9a2173a10c6f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d17a40b5-994c-45fb-9c1d-855ab6f6c78d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c330eefc-a054-4dc7-84e1-5bee58e55f67",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "427e4a5b-b45f-4d41-b169-5929cc12822f"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "22fcf805-5b09-497f-9756-23851e983323",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "ad0e5a46-e231-4a90-982d-b688c6dae0de"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8318ea82-894e-4106-8f38-9fe733a94b86",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e6f10b25-5bfe-4665-bcc8-02d6ae5b4994"
            }
          }
        ]
      },
      {
        "id": "563a83ba-9a5f-4ca5-8a83-18e1d0df4eac",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "abb684e1-0489-4814-8b54-bc9b980ab24a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fcb634f4-f97f-45c4-87b4-8a594f314451",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d3ffc709-1707-4e23-814c-31f11c6f2e60",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f786d11-3ec9-4755-9ab8-b1cf8de2e085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5af1ce1e-6670-4894-8bc1-fc45197d9109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7535afc-45a1-46db-8a01-b249f0c6b3ce",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c802e804-6385-46e7-9139-14bcd6c143ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "97ed7391-6e91-49f0-ab0f-3961a7c5bbb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "425119b4-6564-4c6f-8a80-daf311bb7158",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4cbe4d0-8893-4722-bffb-d2419bd00f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3a71740f-3567-4a64-b5e9-303141ac1929"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6d453c67-b619-482f-bb65-c843c19a6323",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e5cb2772-251f-4b4e-8317-ca01fe13b666",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3688b2b1-f73a-4a3d-8ef8-00d3642b524a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "53b934c5-2baa-42d9-9c90-c79814356ae9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "416ff14f-68b3-46c0-9b5d-db4efd4807d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28de3a06-e825-444b-aff5-e265e8f601dd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "08ec6b2f-cd8f-40f9-80bb-041aadae71f9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "226093f4-860c-4004-80fb-3c9dcc8d7966",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "22849d9f-6410-47f7-804f-a66aaab31ee0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "cbc97413-09fc-4ddf-a00c-6b94dc0bed39"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4bc79e89-331d-4459-bc27-a2e10fd4b1d0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "c24a9660-a325-496a-886d-2eeccc1f0369"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9e8c24d5-cb66-457f-936d-6f4b4d2b106f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "776fb214-76e9-4002-b216-caf1d374d78c"
            }
          }
        ]
      },
      {
        "id": "a697aebe-ba89-4362-b151-4a1b12cc17ba",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "a47a4b0e-35f7-4042-aa19-af664e63ba3b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ac4e7fb1-8214-4eef-899a-ee45eaa771d0",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "1acb3d51-051a-484d-a3b0-bea978dd2bf4",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf6dfe3-71bf-4801-87da-160a76604f45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb2ac2da-e52b-4e9f-9c46-85594e595a0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fedf500b-c7ce-4efb-ba0d-7a40efeab1e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5e73c095-7daf-4733-bc3f-41af74c3009d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09c6496f-8167-4802-9a09-1f83ac4ff77c",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c53ee532-28c1-480c-8fdf-5efc6af0f4a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff4a9984-f53e-4cdd-910d-39210974ca28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc0598c4-083d-406a-86ca-1f311bc68523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5857ba04-972f-4992-bace-4ca0b61598de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09fdfef4-83da-405d-88be-8b2e4d7b6a86",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "936d2899-5722-4093-88cd-5917801fa277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9543965e-c737-4485-9ba9-626b2550731d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8e2f6ea-86b0-4f3f-bc6c-f01334ef4a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ea36ae4-2254-42d8-a1c6-b0f4cfc0d37d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "902a42c8-c7c4-4740-b019-65b3a6119fec",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e13513d1-c5ab-467d-8f24-b35b857f4d9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b74f7eca-4230-4205-808e-c83e8d67eb64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04d0a796-a047-46c0-996f-8db2e65ca0ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "02ff99a3-3569-4d30-8d76-e19ba9726130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "619906c5-50da-462e-befd-5fc2ea92bb65",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14f39233-c531-446d-9982-60531af8af49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79347ace-5938-40b7-9af0-3a5b7fc97715"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62bec1e7-2ef6-43e6-945d-f5b62b4b4a87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bdac864b-8745-41b8-9076-8d29ef1a3f9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dea5b41-0825-4a43-ace3-b7b3ff7b6aae",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0febbc1f-9cb3-408a-994d-7df42ec25222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "562cf09a-7469-4917-a76e-74986d9c6719"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "788dfb11-148d-4d19-8170-9fa9554045c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4ae6c81-abcd-4c67-a36a-011263fe0c7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "197c1069-17b0-4152-98c9-4665d2a4611d",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67c2a063-bc5d-492e-add9-86a82ea1d78a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "963dfb96-4760-4719-8da5-c2b75abf5d7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09431b3b-e415-4dd3-b11c-2315fb696ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6bc6b87d-8894-415d-b023-aa503ba7046c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44842798-5565-4b49-b03e-3f8452860b60",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e84442c8-984a-4d12-b52f-e0f4ffb286f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91ec75fc-cc5b-42b5-b069-2ba10755271d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb315470-2860-4506-94d4-b89d98471eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca7eefd5-2e53-4826-8e98-dd4d3c9687e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "601305ac-82d6-456f-983e-23b3060e6329",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed26844c-05fe-4c44-8a4c-8927ed1ad3d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "990f53f9-a540-45ab-a8ac-fc23bc1856e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bee2221e-50a0-4658-9b3b-7be1e59c6aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4bac9f8f-061d-4d95-ac0d-7ae2f75f5c62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c79e12-e8ac-4284-a056-77f3f3d21271",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12d8f019-b79e-487a-8972-de2db8fc4e09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d06778c-5a28-427a-a7f5-3d15b65b6a18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e38101b-25dc-4402-9bf8-7f153e30428b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "454490fb-8793-4b07-aaf2-3a4eadac07fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e91ab19-0239-4c44-a7b8-53e3614b4b0f",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31e926d5-8654-46aa-9ed4-1656d314875d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87467645-7594-4662-91f3-343ab4d2b0df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4c47c66-62c2-44d7-9a58-72f9acea504a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "07cf5aec-830e-4155-a81d-50a2944b5aa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "831a019f-8812-48e3-b171-67dc29e3c262",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea7f50c-b03e-4eb8-9bcf-576b66ce142b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "094bb168-39d2-47aa-852a-0d378cf10d79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c53ccb6b-5816-44b8-ba03-e3760d73453f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "951d7418-7f0b-4162-91df-907fd22216ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b3a04a5-df13-4395-854b-cfed8ab01e57",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78f83db5-33b9-4123-b8b8-4dd836dff5f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c1a1c81-aedf-4dd3-95a6-1031e3d2d1cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f09b9f6-46eb-4654-94a7-92b3e49cb2be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6420244f-536b-4d30-90bd-440b997548bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "977cbb55-b97e-45ef-889f-f20ae9893302",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f403d20-bff1-4eef-a9cf-dcf3ab0e1817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97992a62-5acf-4b00-915e-9014875cc416"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a4e1304-9eb9-47f7-9ec7-c44554ed2aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d982836a-074f-4ae0-9632-685483871ed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6789ce5-f359-4387-a04f-bab51b0a5341",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1620a9bc-9e0b-4c2a-bc44-265847bbc13b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1cf077b-9485-434d-a018-b397d858eb8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2df1aa62-01fe-4685-9b46-7634cf3de892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "65855c1a-88fd-4e93-9209-897a4ce13e4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beb3452d-4428-4195-9858-3130ab3a09a6",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f42c67c5-f3e6-47f2-91c3-f99a10d7b4a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21967e99-ad6a-4c0d-93da-6f735fefbae6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d72263cf-9244-4eac-8c20-dc5ecb9e27f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30e89c6a-62ae-4b1c-9544-45fdd0543a3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2c8dba5-35ca-4763-ab49-013c698546fc",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0949771-7dc7-4525-81cd-2b1412cf78cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82a1a1e9-1d3c-4196-9d2f-bcb221879c67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28e3608f-adc9-45c0-9532-b725c49a587b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fbe130aa-0739-4d9c-b11c-513b90565b62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75ae7b18-27d8-4650-b087-809a384fe813",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d97176b-ff43-4be9-bf16-79f9b2ca1c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca0a0499-a2db-4e67-be79-b7ecf04b758a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13b60cb2-c500-4179-8e87-7ada3b8621c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2659d8d1-9080-4adf-ba16-713b1e81176a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfe3f0da-e4fd-452e-b008-bff140b3ad5e",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e7c8fe7-f87c-4422-a7a8-1adffb283884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1033eab9-b54e-4269-a8f9-a2ff7f4be509"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d623f94-64e0-49ce-8f26-4d1d0b86a877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "163c3b35-7d8a-4033-98c5-a1843aed4c93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f07784fc-0a06-47e7-bcc6-0ab052d8906f",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaa21ed1-9493-4e5c-8c97-1d84b2282676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c036fcf-db4d-4b22-908b-837c71f96b59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94159e8d-2d94-46fa-9598-41c36663a160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "36695215-62c1-4106-9ed8-c999ae3f10a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba7c1f7a-8d57-4f21-a97e-db6d3c881120",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a867e2d-c6a9-46c4-9d33-03fb12f2629b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcc82cd6-6b2b-46ba-8162-bd12b17aed47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f012729-ad21-4074-afb5-9c866b41e07e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "42827805-989f-4a98-a98a-e1e2299b1f85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed7ad7b0-2956-4468-bf9e-afcdd04ac0df",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caedcc0d-4b90-45de-8fc9-b9fd5f50b65e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db0172ac-deb2-4b12-9d2e-d05e64e749b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cc9c060-156f-4a13-a20d-e25fd1952ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6334358e-ed32-403b-9694-d3ee3a20e3f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5b7e55f-8f3c-426b-9913-cc167952dc1a",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6983b50d-469d-4692-b821-7bebedf2c04c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b236edc-f8d1-4a0f-932c-5b531dc5a18a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d099aca1-fad0-42cb-8796-82622f5fe927",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "13c52ba3-3daa-4c6a-8158-c6699d90245c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97ff5915-7570-4f76-bc71-27d5ec2935ee",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7132213-b0b2-4f72-8e02-e236be371d56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5754f33f-9b88-45f6-a0c4-3296f310ad92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c8642ba-91cb-466d-88e0-af17459b9908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "538f532c-cbe4-4819-9c7c-bc9eb0fe7a36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "555c19fe-1f29-4938-a2ad-94addc1e8679",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0696bda3-8e6b-402b-8dcb-a06ec2130948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24bec315-aab4-486d-ae6f-ff3fadebc0f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "806c0780-1105-4ac0-89d6-cc17facafe58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bef4240-fde4-4a73-a79c-f815041af5d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d240f880-b44e-4d0b-a2cb-a0973396e5e1",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9087dee-f127-4897-8358-73263419933d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a58c359c-a97d-4908-b12c-d86dbb4fbfad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45818e19-f5d6-40d1-86af-1e9d9750be26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "728647fb-16ee-490f-aa55-6ec7ddfe2686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62b81bcf-4a46-443d-b45c-24d68680be50",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c9c2693-4e9e-41ba-95f6-1b44d1f7ace3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08e4e4b9-02f5-47dc-9774-2684fe0a3f72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dbe28cb-53e6-49a3-9721-0093020265ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7f0a724-467b-4874-ad93-fc513372c34d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6b5908d-fe42-418a-98a5-18968846d0a2",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a633422-1242-4d04-9a1e-2b7e4df96a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90be1bba-6dbc-4c59-840d-e51ee802dfd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0934584c-1b55-4775-8ea9-1a5dcb4a7483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b250f60-9af7-4267-a410-4bdb556ded94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "644af045-bb81-465c-b974-ad26faf2bb9e",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e596a2d4-225b-4351-b766-7e616abc2eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e7976ff-b6e1-4677-b648-53acd27a5b1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4da87f4c-f016-4393-9414-64baf33a25af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b15a4c6-92d2-4bac-b3e7-76d807227dfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42751fb4-22a7-4d60-bd7e-90341c93ec82",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b683e42-e6af-4416-80e3-b3996433a779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5323567c-09e7-4a55-9546-a53a97b24fe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ad2e46a-0ae7-4be6-8380-d6de528fce93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "aabd6267-bcc4-478b-9527-06c3e2a27f61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c2dee8c-1d4f-4919-aa96-e02309d32767",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5983cd54-f310-43e2-ba1b-2f625972e21f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4daf697-ca1d-45f0-927a-3e870ec25305"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2892464e-eb4a-4888-9fe5-c89facc887ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "54f23df6-9c47-4e98-b5b3-1f945ac028f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aff33e9c-5660-4e46-8536-b9d33a0c6b81",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edac4418-50f2-48c7-a4b7-83d9b0c95df7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cf67e30-802b-451a-ba76-c5863336a32e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54a0d76e-7434-473e-a201-47136f0e909d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4ca3922-0d5f-4512-a40c-b74ec98728fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4749d0e8-17bf-43c8-875d-efd87f4925dc",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde87bdf-e92d-48a4-8466-12658a1dadec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5235e85-47ec-4f5c-a8aa-58d4a3426d1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1cb3e7e-da46-4a6b-9b09-d9cc5da009d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "49f05d1a-02ff-41f1-8a75-9a98b572bd6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef444984-5ca2-43af-b708-54c226189f42",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8cf9562-10fe-4556-ab87-24263357a82a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef447ff4-4187-4d08-a02d-523e9d184110"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d89b43cf-e6e8-4c46-a644-de803ab03d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "55b14cd9-97b8-4dc4-9a4e-99e82cf34238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b695996f-70cf-44f4-a207-3aee950296c0",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e836a5e1-8faa-4d6d-867b-c6b551ce654a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e92986b-0d73-423f-ae0f-e466b3a8b192"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaf7cb29-0a26-4ada-966b-07947c92c3b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "1544d3aa-3bee-49fc-9c7e-9e385611daab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfd2e9fe-9329-4555-8120-0171b3c6589b",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f7778d-c051-4a0d-b998-1c8f9c8fa540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2dcc558f-9bdc-491b-af5f-f3ad4568daf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12102416-4a6d-46dc-8ae8-734734fc1eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e9fec851-5c9d-47b9-b0b5-6ffbfe337fdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa45c0af-fce7-4903-ac78-a5e24060484b",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "327cf372-4144-47be-9b8a-bad8e862c67f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75a67f60-f65c-467a-8918-3eb820ea5bbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bed4d062-e2bd-4cd5-8c51-85dd9ea6d035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b278c82-434d-42c7-bce7-8a037861ec67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f2d3a2c-df5f-468e-87ae-eadad62c0110",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7fe140d-43cd-4d52-8505-83683d55429e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "523d929c-f3ad-410f-8348-634098131647"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ac07ebf-5018-4dba-b3fb-6f2b3a4cb57e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "edab420b-4670-492b-9f0b-31953c837011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04689b50-b674-4972-91c8-97311d5243b1",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75e49b50-bed9-42fe-8683-25c04f966882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ade649d9-d16a-493a-bf89-7854895db1a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80237f76-0da5-4cb3-b589-a79efa0ff8a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8501d851-8381-40bb-8dab-4c4472bd6f21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fac0f781-64a8-45dd-9685-9ff893d60e6f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7edf62dd-bfeb-4cce-85bd-f9515995ea5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac5e1725-8cb0-4967-a949-a22bff48afb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c993ceb-a3d8-42d1-9f98-8a01654acf22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "123847da-b289-4903-9f39-90c81fa2c8e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7539d679-decd-4518-997c-9e50485eb88b",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8df42f10-75ad-4ec9-b13c-4bf8dd13bd48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47b7c0fe-526b-4fbf-a86b-e5a1e0c3b57d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e49d1629-ad9c-4b20-afbc-3947ca412190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae6975f5-0fd1-4cd2-aefd-db4b893e7f0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a16b8db5-69a5-4796-b707-9e166208b105",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f779d319-7e41-44ab-b71d-1e89f5104a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83c1bca1-173a-4593-8995-2a86fe13d1d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f03f2e-c655-4fc3-bffd-299595bac0b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "90bd944f-4bd0-4dc2-b67e-fe0b760bef9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb738527-cdc1-4c49-8c46-ee2b1ca50827",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22f5f401-4873-49a7-84c3-6ef39ba1ba8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d36d1a96-42cd-422c-b2ec-23d0beed099a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9e14555-910a-41b2-a44c-77c2d9097ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "78cdc85a-2ade-4418-a7d6-5fd2a69d8d43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc958319-7220-4e04-a565-dcd8db7318be",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33d69055-bc6c-4908-91f9-6d20dfa23146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb97bca9-4903-4af7-8230-92cfb0930143"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e72a5e36-bd6b-4993-b7ff-cd8ff2113b7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4403409-e24e-4f2c-8840-c4ddc197cc12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8740f538-44e0-49f3-bf6b-38bdf53db399",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae3f7ab2-c35a-4e68-b21c-f682c168afde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caba20aa-f1a7-4f7f-863e-2fd250039d4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae4f7f45-fb27-4590-b907-fac93bba8ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b346265b-c075-43de-802a-df84db688631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6dcf8bb-8248-4dc9-9cf4-af3bab5a0e15",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58a859c7-4712-41f1-8dab-17f18c8fcfd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7ba7950-e0ab-4f44-9dc8-3de12d961a08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90060ae5-cc1c-4827-99e0-a5f013cd8d4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "962e0d04-c532-4536-8f3d-e082ce78f066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a18dd0e1-71f2-4ecc-9dbc-e9513d5d64f8",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1ea51ac-470e-4bac-afa7-a66ce40e5293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0179e2a-61c5-4c35-bca2-429b74406854"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "232ba5a8-e0e7-4e78-8809-7797a28ecf44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "13b63109-3655-40cf-9677-91b64f4082d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ac09bc3-db17-4a81-8ac6-91b8d36c4dc7",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13fb69ec-cc2b-4337-992e-7c3a4367cb2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1455ad0e-97d7-43e7-b560-3abf7cc3c7e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a292e36c-2f24-49a3-a2e4-f910cd92ef56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "298e8743-6f7b-43f0-bea2-7f2bf5bb1957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fa279af-79f9-45e9-acdd-ee3f41bbd64f",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80dc2ecb-166d-4f7f-851f-bd722a4b7ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b546785b-344f-4ba0-9149-d1d0653b6a01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69aec1c6-dab2-4c88-a5b2-819a1a63b7fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "18820d68-8e5f-45a8-8cbf-665ae1a75c5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc35b128-2ee9-49ed-96f3-ccd4da7cc885",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "806ab1d1-65f5-4d03-b409-d3a2ecab4846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "826ab906-4ba8-4940-8cc7-ee04e3a222b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49dc7789-d96a-4220-b0da-0b970e7881b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e6b52f36-96c2-4e06-92ff-a9334521395f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e912e586-8b00-4eae-99f4-3e0aa243df7b",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c1ab018-f260-4837-b3f1-0cf1e3b065eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a628e738-239e-47e6-bbb8-d68b9eeb2d04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3368a51-a65b-42f9-8334-ac5fe60b2c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cb4a3a0-262a-4aff-a635-56c97fc576c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe879672-35eb-44d7-b946-506ec6a224f9",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38738bcc-eded-4a2a-9ef9-35d4aa21c15d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56c5d3c7-f317-4580-aec9-e68bf6dcfef3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f73712a-192a-45be-a141-340b6dc188e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "632bd323-a037-4b77-b52c-808a3bf04447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20e98646-204b-4efc-81a8-b250f1e4e67c",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab24f8d6-5ad8-45d0-8eea-62d5daa30fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09e6b562-c021-4b98-be07-d52c8a918063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "597171e0-6d30-431f-9f37-348c35928775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d795f70-fc24-4bd5-855d-626a885b4925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c84ea5f-7c7d-47aa-811b-7d111a01ceb3",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e79f1bea-2c78-40dc-be98-996c450602e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7581c53d-d4d9-486d-b7d7-e211b40abd0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c518aeb-5a49-4832-be49-8750b4009517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "317a90a4-7a50-4770-a7f3-cb4e3e0ac0fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6efb706-acd5-408d-ab03-52c046d36879",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0d799e1-0553-497f-b3e4-645b2bd7f582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f243eca6-aaa5-4ed1-a0bf-b9dfa1dec409"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e846517-78f1-4fb6-842a-f1175380f71b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "804d32d1-479a-4cd7-ad36-fc58a5cf85b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe66eaee-12ad-4e15-9d0f-b9f441ffcfb5",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0cdebf5-7080-4e95-98eb-f759f0d1d4c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "779f809e-56f4-4df8-8e5f-2569b38b52b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a90c6402-4ab1-451c-aef8-22f9be311f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "fbe6ed51-880d-4cf0-b18c-a03c197cc38d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc359ba1-e142-4e8b-a638-ec5c55ecc90a",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78b2a98d-1758-45a4-9cdf-42490f2b5d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf78855d-0b72-45db-82f1-870ac87664ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d91162b3-1b96-4c9d-8644-9577c9e132a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "04928539-65f1-4c63-99c9-d0a8cfa0c38e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "431bac9c-5a88-412d-a285-2814427a2689",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2cf8666-603c-48f1-a0f1-2f08a65336a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43dd68ea-295b-45ec-8d07-8004b0580ae9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac0b07d5-5e7d-4a01-b2d0-33abe7289df7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e90e9173-e4e4-4d2d-8070-d134bfdfa8e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15dfbabe-a582-4fcc-98dc-12f8e6ec235e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a27efce-51ee-407b-95f7-b093b1528afb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b921d30-f4de-4263-9039-2f923e49e4d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c812662e-ed78-4c54-9b5e-71183078bdcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3bd97643-33fd-4c63-8be0-e5b65c916082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e849790c-9496-43af-8a14-9a3eab2968f6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a529fbe-4981-4dd3-a83e-6aafc65a3a1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41492475-485d-400d-8119-012c1ba206b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0dc47f3-d620-4a2a-81f3-d588c4cad0e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4086bb91-16da-4edb-b223-2c4e92d59424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0da2ceca-ce36-44ae-99c0-91b3710108c6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8a19c34-5fc0-4725-857d-2096449a8c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0ef937e-1f58-44d6-b3ed-3aac4952ba9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9ebbb69-ee2d-47b8-9b84-e5b5a136d896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ef69247-1353-4802-a4df-715f7c608737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04af70a1-7351-43cd-82c2-cc39fbb4f52e",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b28864-b554-4d08-8628-26fbf3b9c655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc083f3c-98e0-48cd-86b3-eccd2017cc68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f3189f5-f2fa-48d0-9907-e0f791ad3e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "713180f8-7c1e-4b93-aa03-8a3a02cf25da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11f07940-036a-4904-a2ff-77410872a5e5",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9e11647-b56e-472c-8c4e-6b348e966a7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ff6f871-4b80-42a7-aafd-be31f0461be9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c863166-1cac-4746-9aa5-710b09a8fb07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "984b5079-62fb-48b8-94cc-01e4782c18b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb7207b9-a451-4282-950f-4c40887be271",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "896590ec-b9f8-47e8-a174-d8bd72693415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f21c247-b2e0-4df5-95d4-8c1195fafa78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e898d7af-0cc5-499b-9543-6c781727f586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e55a440-c4fe-428f-82bf-c9a87d01b7b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a30d82f-371a-44b1-b015-4db6be8813ea",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56aa3a56-221a-48f6-9b67-2655500ddb66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6985e219-92b3-4166-b544-8027c1eb5b9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dae7851-cde4-42dd-868e-55490b251609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d19f4c5c-be6e-4378-8b6e-895f87b5cebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afe87ab7-0356-4e29-9bb1-149d40ac55be",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03587774-b7ac-4fcc-b6d7-30a598e34622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f347100-9c64-4796-8802-e8b0d3f878ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc29793b-36d7-4e08-847d-7a3103207b73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8c046df-7295-4ec2-8626-84c1a6862575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "711c8029-be58-4139-9c28-1e81a3bc4d9a",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ea49f22-0bb3-48aa-b201-ce77b038ceee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aea29cc-19d3-48c8-a958-abca9e1ec98a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5108264a-1360-4d6e-8de1-4d1434b1e99e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "aa5c1a2b-3cb5-408d-8955-bfd47d8e05b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80f29980-5683-4663-b632-44fc437f1691",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8d81316-f8cb-4068-9fa2-8801623fb28e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2de059da-1cf0-40c2-9596-9cea5a7269aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8903589-fd04-4fa8-b084-625feb176c27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "80d2ebb8-95b0-40cc-8ce1-bde085fe6cb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f10b045c-a503-4b8e-a750-06bc84ae20cc",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcfdaf58-42fd-405f-b6d5-a6e2470a3225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05a4330d-1ed8-4e23-bd21-f75cfe022929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db097093-54b4-4bb4-9731-0e724e25860e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb2d3aaa-aa3a-4b36-996f-4ac6995afbb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1b1369c-51c2-4891-a153-669013de0b40",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75b59567-ba99-4561-a893-609e36a94962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ca44ede-3891-4638-8ee7-ef544af7aa7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce03a5b0-be5a-4bc9-8e44-fc3f7b78cb9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0e7059b-31fd-4924-b22f-21ec85cda206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2fa3833-c67d-4916-9392-985fbaa50a7f",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6307826-24de-411f-8ceb-282c18058b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3860a450-d720-485b-921d-d94704521c53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e04dbe3-04be-405d-a0d3-23d35548d670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a0ba0a9-ed5f-404f-b11a-d6ce09ee7015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea040a4c-4403-4383-b578-f3016fc45472",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2cbe300-3daf-43c2-ba45-a1ba3cccbdc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c770a97-7099-4396-b37b-810b70638e8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f175cb0-98c0-40bd-bc37-c202f30392e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbf17357-a3da-4986-a8b7-e32348e2ad75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45763cc9-f9a1-4878-872c-c899f56e5557",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a2aa9d8-f8c7-4901-b836-c77aedc0ea3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff09f10d-66b8-4809-be07-01191259f922"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "430f0cd7-2355-4ac1-b840-81d876d7dbbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5fc4bec-5c09-4996-b69e-b1cc155e8c21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd33ee67-198c-4299-8b0e-f728419a8ada",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fda28dea-74e4-439b-80f3-56a4cc17f3fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fc17a3e-1131-460b-abfb-89f978eb0f06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f427f4f0-9dc6-4f5f-a602-3700a9d19664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dadfcf27-4f3d-4073-b624-d92f6ef659e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "888792ad-5740-403b-b861-0c9dbe3069ad",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b71b8db0-73d0-41c8-83db-91c3090e18b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5951e09-681e-42fe-be19-78f9135b016d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92a24136-80f8-4afa-9d8d-f1edce3f97b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cb5cba9-4b5e-4ff8-a323-23d67b37c4d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15a217a1-4293-49e7-b570-0e36aabb21f6",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43fa3df1-c333-46f9-afdb-1f3ba2621653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1536e88-87fa-44c7-93ea-9afd8e2cfd68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64673ca0-fc4a-44c9-8790-f42de36a9afb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e0093fe-9f19-43fa-9140-1883fc7f0b71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dac3f3a-f44b-464a-a356-34dea6779e96",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39fa7f56-21fd-44a9-810e-600263024055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5a4481d-cbd4-452a-a653-30c1d65e3f70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "662a5555-907f-4a30-8472-f3e61d8e8b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa006cce-d242-4b31-9ab0-ff347ca62506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ec3ac12-b194-42d3-ab14-5d1a54816463",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47b7a8ea-0eca-49d6-9882-5c276b132cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e301074-cfa7-40d5-93a7-f898dbd8b260"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb2e4d14-4afb-4a80-80e6-d3cea0399652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca61f128-c23b-4abf-a3d1-f5e8826c33e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c37eaed-1df2-48d7-8604-e4d3c9e15653",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2b3fae9-9ae1-421a-b100-5518ef931680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad404ed6-9f41-41c8-9d6f-7d3ebb965e10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9227162d-1d7b-48d4-9ccb-6d88aa59e47c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "51467e68-38e5-4601-9db5-24af9aa1256b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f41eec5-e193-4058-ac55-ec06791bea06",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4474b944-809c-488c-ade5-0610230ab83c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42e07a28-b1f6-4fcf-a77b-67b8848d957f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15bcba61-e1b6-4a09-9085-f3ae7c31a225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "617a7548-6134-4e27-943f-0bba01fd9fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85b60aba-c961-442d-b344-eccdba1e35e9",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a8b64c7-7294-4ca9-93d5-39f7c0b709af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c017a5e-62df-4c1c-8775-d83abab51a99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3852aa2-c0de-40ed-8989-feb391af544a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "28105bf5-6292-4d53-b1fd-1137b57804ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d2d6af8-cee3-4577-9b77-90545461c913",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecfa1e70-3448-47d1-89ae-8bdec60dcf03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "564d13a8-49ed-4daa-8ec3-833f659122c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81673ec6-fe31-4c3f-a200-60eec148e638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f207c3c0-9aaa-4d51-8fc7-7b6a1000e0f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "838a87c1-824e-42fc-b0b0-df20a8c4bfaf",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5be98148-8ff3-410a-8144-03cf25dd0bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c314887-7fe4-4c7d-85e1-9bac4c6df71f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29d9f5b4-4a6a-41b8-bbe7-25d2b0fe5c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "063fe833-b588-4508-90b4-0e7d225d1446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b16320f9-59e4-4e0a-b916-aa3c60927847",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ac1766b-8833-4801-ac9d-f96a3c9332e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "838eff27-9dc5-4096-9c63-6f2936e51c47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6be08743-4b72-492f-bfcd-a8c342cf40e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6e1c8a3-fdf5-4733-8137-63936c13df25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b4f8ff4-990a-45da-b630-a52414dab072",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51b4e1c4-f2c1-4151-96b7-995e11318288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c3e9d1f-fbcd-4221-be80-83e221865927"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "658a4a24-8a28-4b04-943d-e43b47f5dbab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b9026202-0d00-4c0b-9954-b834961f1dd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2a59e18-daaf-40ac-9be7-f15adb278ac4",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f51e2838-8124-4e1d-8eaf-62689fbdd956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1811e1b-ead5-4613-9f78-55f9158d636d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42d41ee5-b4c8-4d21-926e-44b15d135fe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f882c1b-8fc6-4717-ac75-003774e75cf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28455141-5a2c-4521-9164-2f4ba3022c7d",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edba544a-c5f4-4918-a6c6-1eb4fb70d505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a2d0179-2fa0-412f-a2d4-2100e53983d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6842dc69-78ab-47b2-be31-930075ccd51b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6af3cb8d-f67c-4947-aeb2-e6d8a81b84de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3367e40-6d40-4263-9e44-3405aa9251e1",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f94f3b57-450b-42a5-ab00-dd840e81b5e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70d5919a-e8ef-4756-9629-78d231cfddca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "162103d2-4f36-49a1-94b8-f3acc8847475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "be741529-6e73-4e8b-99df-564e6cb6e613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "163446c7-2909-4e5f-a4d4-83e1ae38f517",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81588028-0638-4f34-8004-01e8fc58d7da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3808fadf-5629-4344-8b31-f101f66106f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de3dba9b-399e-479b-bb12-dc5e15e8e209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "501cf751-c137-4f78-9200-6469628ffd5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d8be795-34e0-455c-adde-529e70b51d22",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ece6d4d-abe5-4d93-ac27-bc0a1e1a74e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2018e54c-dd64-450f-981f-ec286b1224a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa19f96f-321f-49e6-8722-7a177a79cfee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "93da3467-825a-46cf-9fe0-32787684287d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ba040f0-f2c1-4749-bbee-1538c71964c2",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d12ba7b4-a1ba-432d-9e2b-f5085206abc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fb3e041-4395-49a0-afa7-bfffdac76e42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36f65869-a7b2-475c-ba69-27ae076f6b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed7c1e6f-e423-4371-a8a6-3212d20b0e3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45b6ea19-602a-454d-98ac-d01de408a3d4",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "660f4e1e-4126-4399-878b-b62300bf8867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "beea5330-88e6-41fb-b217-4e229a5fb843"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67bfa2b7-1b6a-4219-8503-41a0069587cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b3c9c85-2423-4332-9e59-d738e2c7ac78"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "61b95160-acf1-4eb2-a44f-91838276e85b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "30d7e5a4-d019-416d-a2af-871796faa5d9",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de3bb542-fb75-40db-83fc-e0fcda1de587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "06c29393-8652-4966-9fb8-13e9953e09eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "712bcd75-2a11-4b25-9bd9-c785297adec7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d0e7be9-cc5b-4d77-8783-5f8fcc4840f3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "501b74d5-5b93-4b31-a930-ff98da06afe7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c036c44-e2bb-4e69-945e-ade54a2717ab"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1493aa0-7dad-48a1-9832-be981b2c6d60",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "64e771ea-1e00-4d72-b702-7695cb030db5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "acad0cc4-02c2-486b-ab3b-2a166ca83c24",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4fd6ea99-7e2c-4d79-8ba9-b2ac2168352b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ed1e1e9a-4118-486a-9007-537ee757a821",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d55c34f9-348b-4b5f-8a63-1e43ff55c44a"
                }
              }
            ]
          },
          {
            "id": "6467a776-43ea-454e-8646-1da986331bb1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cd0e9161-3e05-4de7-b1c5-fe5525f1335c",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "ad00e293-0256-4e5f-a287-f669aa6579da",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b0f45e8-aae1-4d01-8edd-80bdbc20b5a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ec575394-d198-4209-94fa-82a18e841700"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "889da370-a7bd-49d4-a236-a3638fdb6f0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45407919-4682-44d6-ab98-979b51d39735"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "eaf6d180-26c1-4210-b102-ed312d605be7",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6d802ea3-0af8-4389-93c3-26c7b78de078",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0a22eafd-7802-44e9-b90b-363100646b67"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bb72c9aa-7f1f-4b17-a233-9c7e3ee25e87",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5999c23d-15ad-41eb-b2b9-0193c9640786"
                    }
                  }
                ]
              },
              {
                "id": "4ba1c64c-9e41-40cb-a344-fe549e9ef762",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6865e960-aa9e-4071-877f-80c6cbfd7760",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "08903c17-eb39-4730-be3e-9d0588bbad73"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4a69b3ac-157e-43c5-acaf-aca29496fc21",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bd52b527-aad6-4be5-a689-15f1466ec18e"
                    }
                  }
                ]
              },
              {
                "id": "e2d378d2-3e16-43a3-afd7-284245eeb2a2",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6d22e1cd-a354-4fff-88bd-2a791ab71a40",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4ad775c3-f29e-4b0a-b08f-4b1d46b810df"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ef5b16f2-ce6d-4a33-a0f2-b10c7a564bc2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "211b4fe7-8240-46d4-a865-5486bb62b3bb"
                    }
                  }
                ]
              },
              {
                "id": "a0608ea1-1755-4721-b968-0cd081ec8445",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d76fa825-b63b-4881-94c0-01ef39fba698",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2b69fe8c-57b6-4c01-b3c1-252925e16a65"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fcb37bc9-7a0b-4a45-8179-b71d638a3e6a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "4f3c5acc-3525-4664-a9b4-116bd8d56c9d"
                    }
                  }
                ]
              },
              {
                "id": "422d5c6d-e864-4f84-9c6d-4cc7c5b494dc",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f3da63c-81e4-40d4-8d02-3aa03b67b159",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "397005fe-a766-48a2-98f6-a7e0827844ae"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4b39b265-9330-411f-9824-70145012592c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "073ac239-3dd6-4ff1-99f5-08a27160894e"
                    }
                  }
                ]
              },
              {
                "id": "1f6f8829-28e3-4d69-8d01-37837dce914b",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "497bc7c3-0f49-4f67-8dd6-eac1fdb8b4b4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b1e2976e-d7d7-4a3a-991b-1ff97e6fa204"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "55137876-6b60-40ee-936f-2a1b31bb30f5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e8c91e0d-5e97-45ea-a736-146dcf743ba5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ffc811c8-e868-4425-b693-4ad196f315d6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4bd685d5-418a-46c3-81bb-8f4948a84e73"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "aa8d850e-c6eb-4b93-bda2-70f34eebaa57",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "960d8f0c-85fd-4b47-8490-1e799c39dd71"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c7102768-f20b-4e51-9bb7-08bf2970e1d6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "b842a6fc-d8c0-42db-9059-1715bacbf444"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "910ff5c5-95eb-46fe-82c8-31d7250eca1b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8860fb42-850c-403e-aa26-69f7e89d665d"
            }
          }
        ]
      },
      {
        "id": "368e819d-2be1-44f6-9e6e-96d4addc2a00",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "a7cd75f9-8a47-459e-bea0-950f45bfb0c5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "468c85a4-fa63-49ce-9ca4-2b05edf04675",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1ddd0d4c-33c8-454f-9126-e4304bff3c00",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "868021f5-6015-4a52-aa8f-de4117f35216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e913531-6fe3-49f6-8e1a-4e7b40fbdc60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66683ecf-e5ff-49ec-8df7-a987c60bbed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9d4647d-161a-4314-8746-5bcacd53269d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e04ceb64-88f7-4c98-8e8d-317506e1c043",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d94f669-7a27-4b94-8ce8-fede41ea6cb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2d51317-0bae-44f8-b0bf-9292cb50f415"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0c7b19a-8997-44a0-b90a-c7c2f334462a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fde574b5-993e-4af6-97dc-c149bd1d63ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4de25336-d308-4d5d-afb0-4a145fe822e6",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6773aff-fc14-4a20-a101-3b88d8bf4eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22eb5605-dbce-4ef0-a731-adf12e412762"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd1a9044-b604-4123-b570-c254e1369356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ab567db-15fa-4b7c-bfb5-2d1dd7c830b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "121b0c07-7e8b-4fd5-aa8c-6fbf90dfc36d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49c50a78-92c0-4fee-924b-26b94ddea088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6844c021-af61-4f73-a72a-d391bb0da7fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44746fdc-3b42-4f54-806e-c9f35ab4de33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "219326fb-d872-4088-adbc-58d2fae5ec78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5659a6f-7712-4482-a12b-5a2ec69d3d07",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3afee9b-9772-4726-9f00-bebc9572003b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43807837-286e-4971-9404-346c6e09f3e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11e15405-5646-466a-b2bc-ec5a935c7ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "76b15663-041c-4ca6-aec5-c8f6c8abc760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b9593ac-f2ae-4988-87c7-7fcb6dfc74c2",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f616f66-bf04-441b-bcf2-17efc1a85445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cae34df-38f3-4ad1-89f9-134580cadee7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e0ba09b-c8f9-4e7c-81d4-934ca0e77ce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "702f0193-69fe-4df5-82a4-a39093ec6b1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "021cbf6d-a396-42a3-a80e-0c0cd6e5ebb9",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87aff961-0ac8-4de4-bd64-d222b7f718ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c70d6598-aba9-4321-b3c8-5483cabd67cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "565ca864-afc1-4eb8-944c-42e94fd92970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "21730714-21c5-44ff-b4d5-39a3dea683de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b59d0b50-4f94-43d6-9927-f4b2509020aa",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "738a9744-8677-436d-bf1f-49c3af9aa5f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b066fa9-c43a-4d2a-a5d5-f88f89dd79c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1887957b-038a-4f10-b42d-78d436ee23ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "35f43968-f581-4720-ad9a-84eb2f8ecd8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cc7e3fb-d710-4826-85de-f3f11f31afa8",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1617d60-c6c6-482d-a140-dbb37d7e36b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f42b374-91e8-4d60-a153-926aa9a544ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "252b9271-3afc-46e2-a422-c060ed31b0aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fb9207d-6d97-467a-b6ad-62235a879632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2d007b9-be7f-4140-9829-5d63d36e8688",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d4882b6-166b-4dc1-a0ff-58fcb6cdc059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "320132c2-a0d3-4f2d-bcd6-901426a1171b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27fc6df6-9698-45db-b589-eb8d7fed84d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa8c6c48-3169-44b2-b5e4-09f8baa4d37e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2b98c81-70b1-4c42-a43c-3666c0b2cb73",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dae452bc-48e6-4e75-8da3-e04ce07ae6c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de886000-31b9-4fc2-98e1-ef9beeb3979f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f8165d-78c5-447b-b28a-80065720360f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "5316c34f-ed1f-41ca-aa2f-8f85d330de34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d9d1e50-9527-46e0-828c-eb8fcc954793",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c04bdcc1-f9be-4b05-a09a-9041fd331693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1d5e545-a485-4060-a7b6-f80e83ae0ebe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58d07e73-cc10-4bdc-9a44-ac45984fbb34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "17abf635-17e9-4662-a365-57721606091a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfe262cf-7146-4d6d-bc68-c17fbd2ee1b8",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5e600e1-6ded-483d-8903-40fb62c16321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb6ce2ce-d5c9-467e-b25e-acecbd3144f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d77e03e0-79a6-4272-a7ea-ddc6dcf27db9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "045d2623-0f48-44a2-815c-00c3a9a88b49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09578a88-dc5d-47ef-91a2-bed472604336",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ac68e45-8ccc-42cc-9d59-a16c66270ffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a89d3713-5ab8-4ae9-8f9f-99ebeb2cfcfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09c81cb5-5373-4df8-b6d4-c1ec887c18f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdf86107-1e8e-46f5-b4fa-43c1c0b8a121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65cc79da-91c3-457e-bb26-11d849457fc6",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a29eeb0-eaf2-48e2-8483-41a8988a5910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b87e572c-15b2-4652-b8d7-5aed919d85a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4a4508d-c72e-472d-a315-9eb20306e895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8140731b-12ff-486e-9225-495946999498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e276c9d-aea8-4648-ace7-58d9331ceadd",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31b55315-530e-46bf-a38c-44fbf7e65a52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba4f0716-28e4-4699-b917-752d6bb6d8d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40c5b36b-063a-49d6-89a4-5638f7837295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "da3da918-6804-4771-87f8-59cde6949523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49117852-acf1-4e3c-af02-5333184e71e6",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edbd8377-f837-4e37-9dd5-e66a30d824d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c2d7c03-fb3a-4cd2-8dde-18478bfd1f44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f935163-7760-483f-8850-a4f797871a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e24588a2-c913-48b6-bff7-c343998bc290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "373a2b3e-6ec8-4cd5-872c-b96d1e875a6b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b804858f-8918-4830-a879-04f27b33a564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "694dafdf-44e4-4675-9fea-5df914070b82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c1597bc-26a6-4579-b146-eb01c55df3dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b020ee5d-9547-4100-b2d5-e66376e5f1a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38374839-1c45-45c9-9eea-fafc40c7c0fb",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33ce56d6-3484-498e-bfb7-c66cd3846c87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cb27fd0-226b-4a91-88bc-239e743b31c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5067b0c-ea43-425a-8e0d-e71bfa3b854c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e22cd4e-61a9-4306-b0dc-b4524e29eb9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e31b3b6d-9737-4bb8-b09c-f36f1105fe3e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4149a90-888b-4948-a792-6d5b403caf94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4b66490-957e-41ec-9d3e-c21147d1931a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef7ef14-44da-4f25-8cf3-6e8510f2416f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14d517d6-a257-4901-9bdf-121d8549369e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd0e4327-714f-4f83-b2b0-2af7b99867bd",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a8c3ee8-b6ba-46af-89d5-8e06f967fa34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98a94890-c6b7-4694-a964-dba97e388e6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d103aa74-3861-4894-be57-74ddd58b59f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d915220-855e-40ae-a341-d33df633b458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26a56eec-4d73-4225-a784-11cbf455a059",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d28e0da-aae6-4450-b3c2-c542f6c1b4cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c22308b7-6707-40a5-b754-073d97f542fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4470f4c-5c3e-4460-939b-f9b5c54b2de5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "297f0cdf-c37d-449b-bb83-b67812cd57e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f532709-6123-4ce8-96df-6afb2d6ba290",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cd8e9cf-3ca6-42f1-ad2c-cce714196900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "908e9116-cf12-43f4-a650-86c05ba09588"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23191921-3d8d-4261-a62d-c8ea0d31cfa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1aaa12c-9ad1-4573-bb38-c4873ab164ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7882b50-a232-4f78-acfd-02ed7e1931c1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2026a3af-f912-471e-beda-3db45070b7d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeac14e4-0497-430e-ba41-38125dc159ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f1fb88a-e4ca-456f-bd53-daa9a69c1c6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15819c6b-9af5-4db8-9bdd-7620c8b2334d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e98d28d-6a24-49a7-8ee7-d2696000ff49",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "040cd5fa-6c99-47e5-a8d9-0ee3aa914a3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a7795a6-169b-4844-9f72-835c6b2770f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f3d0921-82c8-40e4-b1e6-402ab2ed0744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "557f6679-7fa4-4a98-a748-0dcdf396d2d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d343a110-3d80-46f8-bad1-ee37747585e6",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0279170-84aa-4058-97f5-362bfe9c93ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8667c417-f5cc-4173-97c6-ec364a31de59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0519b767-4610-4969-91f9-77e7165529e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9256fabf-5f8f-4321-8e00-e80236374c19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25e998b6-c5f2-42de-a2d9-e1c35a09db03",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4911decd-c759-4ae4-8649-9a6d0dfbf911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94a99f3a-7b5f-4efd-b85e-f32d1589f7f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63944dbe-3e33-4202-ae47-a65c67995cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbd9a4bc-b4df-48b7-8ff2-8903a8f386a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35098c61-084a-4575-949d-07581a224acc",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b853ddef-bf36-4b93-ab48-422dcacdf4d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c7244b5-b83d-43d4-85fb-2ba574195c1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1ed9388-30c1-4f27-8699-a0bc929b1273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "887a06b3-489a-4714-8c1e-24d46fe5102e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b41d4f6e-a733-40a5-9def-0ffa124e0369",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb39be2b-96c3-4ac6-a1ed-938ed9e46634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4af81244-c519-464f-b7ad-f9b10721a538"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d43fef3-73e7-4fc5-a871-acf7ae392f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da56a77f-2cac-41f7-bb2d-27c4fbccf203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d72e04e-5abf-44f1-8b24-acbc427b094d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4e2f244-014f-4fd1-9648-40ec8a09ddbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7bca39c-ba63-45df-b600-8c6398bd4dd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "465a46f2-d81f-4667-8acb-08fb3a6d9165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "36223cfe-5132-4aae-9434-639a8d8b23ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bebb460-3501-475c-8cb8-02a5834051f8",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "def47160-41e1-41ea-a2ed-36786e0783b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d232d455-1810-43d1-ba6c-4fa9dfafe531"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f41257b-d64d-455f-8910-f83bce85f2af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9afa4fc5-d90e-4104-8690-b988cf1435bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87c1537e-4a9e-4a5e-98ca-02c530cec362",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a526cfe-89f8-49ca-ba1c-f0ac543863e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a91dc715-07cb-489b-a96c-faa72ae6c381"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79485e27-f3a0-4969-aa7d-f2bebee4b0a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2174483b-11c9-481f-9ce5-b6b721d01d16"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "82095ab4-4596-4606-8768-1a06fca9f5d4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7a2c8732-3750-4a33-b541-3359704e5315",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b84a89a1-1ecf-4dad-bb39-bf31f41d91d3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3ba0b16e-baca-4ddf-a85c-dbc3205b1802"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e134e30-99e1-466e-9833-0f9428c03668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fc6a8eee-1ab6-47f2-80d0-8666f69e4a6b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8251c1dc-9e42-4ec6-a8bf-e0543d2840e0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4701981e-41a6-4221-87b9-8fe918a4a0c7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "69cef349-ed9a-469f-884e-ca816ef779e6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c8775462-c04a-4ea0-b666-c71fb3fced65"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "01ab9053-1bff-46ef-b094-1e1f42b07e46",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "cef1bfc1-340e-4a80-8c55-57f0fddb9731"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "08843c0b-4217-445b-8dd1-7f21541e9ae8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a3c8f4f5-52b7-43cf-9c0b-49e6a2ba119a"
            }
          }
        ]
      },
      {
        "id": "ca4206fc-51a8-4192-b17f-68d290a8760b",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "058101fc-4b81-4bee-aca9-f7f320f92e08",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1a22c20d-e58c-4b70-978d-05c4afa52ae2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "168e1a7d-5ec7-440d-8df7-3c1f07fafe25",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d52daf1-fe93-4aac-b1a1-a90982aef4b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04440bd0-9359-4086-b2b3-d82c21abd502"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "193a46a0-fff3-45c3-a5a4-0f7edf25dacd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a326bcc-76fd-4ded-b16a-af3b7eb3dd12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90bcbf54-f255-40ed-a88c-0fba0f4c9408",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3222af55-2787-4cc7-8b03-1484102b366f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dec9b7d-dbbd-4ad3-b118-9b8257a30d3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc48be7f-75d2-4acc-a03d-0b52d5f77755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c988da63-1265-4c5d-8754-1dfa3dc572da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdca8258-7b87-4c41-9c05-c3582b783890",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50fc3f20-c49f-4120-ac96-bc9b1c2f1d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "107fa9a3-fa2d-486b-af7a-d592b67dff77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d434ba3a-95e5-4b9a-a918-15b1fdff5d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1494850e-9178-478a-bf90-ecd3ec85a306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cdd9825-7f9d-4ef9-a530-ed91706806bc",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32f2bf15-342d-4092-92e9-bbd25866f41d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a057670-5f3f-4216-947b-f539ce9a0a43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5ecc0ca-5b7b-4420-8fc7-609c66078071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0aecb8c-69b4-4119-865c-15881bd56cfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19ae7510-44b1-45be-8f8f-6804bb9623da",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96a50029-0130-424e-876a-e88f8d32bd16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e429c474-f198-4c4b-905b-05b57596a5c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a0141b5-7845-48d2-b71b-325ad78c2383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4787faa-085d-4b2d-b52e-5c7b1919ffd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88c767a9-956e-45c7-b699-901e8b955186",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7e09a15-11cf-4c80-b09e-92f44a39a99e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78d44138-b22d-4465-b8a2-26709ccd4f7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e37fb4f7-e237-42c7-b757-ba15d21491c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1dfba8d5-0cae-46af-bac9-96125a9cdda9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bc300e7-9877-4273-876e-b11b562d8981",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eff13729-62a5-42ae-a6ca-810335de4052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e752445e-fe8c-42bc-8deb-4575388f51b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51a31e40-356c-4123-84aa-45a8a75818a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "3414e01a-035f-47d1-ae37-06aef233755a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1474f27b-8b26-4351-ae17-43f346efb0b0",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f76453a-5c15-408e-8c98-8161d9421f32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bee6b5a0-c4b8-4ed8-9ddc-80e51490e11a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a7bfd5d-064a-4fcf-929f-73d0d3993825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "52fb1488-f35f-4ec2-a6ad-a9d2a026701c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a3c45f9-0c66-4450-b8b6-0b4b26727d84",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25d3023a-d01a-4343-b7aa-5728f7a63637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c7ead67-4454-4b22-8dcb-6e4ac77dcb85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcfe1c27-0abf-4205-81a9-e72cc43c1582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "04b9c111-f331-4d7a-be8c-64411618775b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fc3abbc-0ea9-4b4f-b7a8-d6831ba37ae2",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99df1d10-347e-4840-a35a-c65ab83a8a29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8edebe21-e5db-4f79-860e-9d530465878b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "286ceef7-5618-4109-902b-c37a0ce9ffae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3a265b8-9eec-493f-b6a2-a2b0fca8c233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2660906e-12ac-4c8d-9d48-18cb5d9197ba",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31431224-157c-49c9-ab3b-f9e511f3bdf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94e6cc71-98c4-46f1-90bb-f5eb25eda091"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d46d9b74-e796-429c-a3af-66d129b37d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8f58faf1-1744-41e7-9144-0e21dd787f6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "854267d6-c528-4aad-9763-5da79f297b33",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3491e8ed-4624-4d54-b322-ffd4c3020d9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bebda12-ebf2-487c-9621-33fbd21e6401"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1317870-44ad-4e43-b012-e90c248eb026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "67d842c8-8aff-47cc-8d61-d851d29fe665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13467d72-c903-4c37-88bc-038900ea0363",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "557375e2-b062-4649-b311-b6ef53e65552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "979ac4c4-c5e0-4000-92c0-da8cb57f23b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "731d56d1-15ae-4cf5-85b8-e570d222c5a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c331707-d1cc-4448-a2c2-94acec655433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2add1d27-321b-4e3f-a935-5629a2fd529d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58a6acc8-9b95-458c-a6b9-757109b70df6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51a2cadd-a50b-416f-b2a0-a8e9ace91253"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5cefe08-e9c7-44b6-858b-62a357fe68be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "7236f43c-22e3-473f-8b8a-45916fe2f7b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3686bdbb-a1d1-4725-aaed-992bdacfbf82",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eaf8f57-463a-4f2b-b48c-1bea9d5df129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af440634-2d17-487d-8c27-6241508e8318"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4ee37f4-b654-48f9-810b-ead82ac3cf6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "237ca45e-41a3-4273-bd7e-f4561e32f59d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99588c4b-9f8b-43c9-8c6d-bea1cb009e56",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "538fde4e-58b8-4b8a-b7cc-2480310b5fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9169712f-53ed-4bc4-87a9-c3ef02278211"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ec01c6f-c885-4d58-a738-d9d0bf32ea59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d23e90c-4736-4b55-bb75-7681e8c9214a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb734d7e-ecc6-43e9-93fe-5f41143cd2e3",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc38fb0f-403e-4094-ba57-7f02b80b677c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1b7ffda-bec2-42d4-85eb-0b3e1593f909"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edfb439b-b671-4f05-9863-81b054f2a881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "81fc349a-fed1-4852-9d8b-d8adc97d24e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeb47534-c575-410a-808f-dfbf11aa2ea0",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb775afa-24da-4db7-b26c-773f98174adc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69e78336-487a-4a0c-8512-6b9a414175de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "764b8aaa-4438-4dca-b8e2-ac891ba795b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "129c699e-c026-4b25-a245-90f1938f9802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38126dce-3e43-4562-a4fe-5b7475dc729f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b23b270-6bbc-491f-ac55-c28af3e09848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4244238a-d9d2-4a80-812c-dd46a2eff129"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3616e5e6-d58c-483d-ae7a-1a5eccbd1ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e880b60b-db70-44b1-8570-a7721917733a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d75f2e5-c3be-4196-8977-d933ba837567",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd317aa5-09e1-4fdf-bf61-41e6989045f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51cc15de-d39f-4ca7-bd83-594827fa1097"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d90dfe7-ca47-444e-b9f1-b9110a1b88d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e49ee539-7b64-46c3-887f-9cccc7748259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84a60686-000b-4516-b8b3-615f77d8a379",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0471f1b1-ddce-4e3a-afab-0d6056042b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7683a95-d3c7-4228-893f-f368242a7306"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75dcb0d9-0bac-459b-b1bc-7554e3a5393f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba526a6a-4aef-40d8-baaa-80eec57fc7e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "972d073f-b749-4db5-8b82-97906b784c9e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67df7d86-08f2-4319-822d-fadb1ee5d58e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21e81bb8-409a-4014-83b7-8ca9615f3ca7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3af56e37-0e70-4373-850b-f01ef4d48c1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fed715a5-4f58-4003-bdb2-008fa2fec9a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bd56d8a-4e6c-4ae0-a383-ff6b29a3a0db",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cfc6f5e-f575-45b3-8228-80e10b1bc9fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf1f9ff8-1100-4a9b-8d6d-b0344975c318"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26c37af5-6909-4c05-b0ec-d859db8af619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c222b9a-1b0c-4c4e-9a9c-260ce837fd0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "650f8d56-bcd9-4263-9116-d72d75bfaa1d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0b4b6f4-13c0-4348-9373-703d32e3bc8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d128af2f-d4f7-4b82-a610-bf76ff69a24a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7588bfc-88f0-4399-8081-df6e13c36c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5815d0da-d06a-4bf3-8eb9-e52157d01041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87a4a442-d6ed-45c5-a94b-2a198efda111",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41f18321-1b88-427f-bc03-e96e4aa9005b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfce04f1-d5ec-4c1f-81ac-2dc7df85719a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "389a9809-c53e-4c6f-8d18-44aec3b2cc6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b23b05be-20b1-4172-8269-814938fe660c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51826268-0971-469c-932d-439b27416f5c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd1e5b1f-11e8-48c9-a733-bc9e04296a4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f610d0dd-a0b8-4223-8932-835b5d28c1f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdf44fe1-9ae1-4674-95df-a5490ab9a17a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "169a8918-5164-4065-ba0f-318aecdd1888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f791133e-d0bf-4539-8fe8-a2003f994864",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b16da4a2-428a-4023-8ccc-f070779c3ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8117a59b-9604-4e73-999e-ea6292a51fe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f32bc8d-192a-4971-ae69-41a29b62304f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90641a06-e4e9-4ccc-b7bb-6a67ac7f0258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74f60d2e-899f-41b5-a430-38315730cdca",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75a2149e-4649-4bf3-845e-7a915d4a3e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86514a6d-978c-4be9-87b5-d67979493c2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "498902d8-5c30-4780-9068-e07068a73db1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcec5476-a27f-42d1-9097-0f8254e623f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "650808ea-b9bd-4daa-b3a8-7eaa55037e91",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "235be1e6-2795-435d-be20-ab6614af9336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "874273fa-a025-4128-af0a-be7d4c4b0fc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "429a718a-9305-45fe-91ee-a0f186b2a4b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18a8c217-5466-4170-baae-1bd667ff0b4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b456f704-e717-4cc4-b00a-279e67acbb39",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71e64ed2-2628-4dd7-a01a-3ff66cea8d4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c1eaa1f-d80c-4219-a31a-f3a80e56e414"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bff66046-2d34-4958-af45-4d676f53bb02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25792497-084e-4385-a9b1-6cbbdb88b04f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4fb80a8-9f02-4919-823d-67b408e32ca8",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6929d61-db35-45e5-8ed6-33d0db314f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bec093f-fed9-450a-b74b-62817d2d1433"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43a6299a-beb0-4996-bb42-d006b4df493d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "080433d6-dab0-4e53-8157-ce4d240bc912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ebc1d85-b790-4520-a8db-6c88191029a3",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df41d65c-690d-42a3-b207-8315e38d7ad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44647284-2b4a-4c79-8a5f-f60bb7b974be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "178660e7-d80c-4f24-b48c-6e6a2cd63c96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43fd6f4b-4c29-4072-8473-58b49d3d12f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a4e3569-c3fd-4f1a-b8c6-b0d0498ba247",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a21b008-2861-4701-938b-088ba2e33975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32986d5c-fbb8-4b05-bd5f-0060a70cb596"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ba8949c-e986-44e4-b4ba-266c18bbcc5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0051511-5498-4d30-b688-a840bc9ca557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef804a5e-9ca8-499f-b415-b1e4d2b46e44",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4bdfed5-a6d9-4ef9-a27b-2639a1cdc5e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d921e026-b9ae-49fa-8abd-d0245a1bd622"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5693868-d9fc-4f00-a23b-17f35a7fdd18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cade727c-71e6-4b6d-8504-4e4171009642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58d3b325-1bec-40fa-b3e8-84f3a74b85ae",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e26014d0-46d8-469c-a717-44f33facb785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e69ce047-8218-4207-8da9-f3c4b352625f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a51e9c8b-58cb-44c2-aa35-15b0dd481e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "044585f4-ff5a-465d-b5a2-108ef1a3f69a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4819c19-1d61-4fc6-9741-382199753102",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb76f571-d90c-4727-a46b-4348354a619e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adff0117-129d-44f1-9786-141dfbfeb68b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6d7bcf2-ab51-44dc-8846-22e5bb56e2ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bafe342e-5707-41c3-b8da-d8d028713394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f0bbc6d-e3f7-4949-954e-119f595d6c95",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b103b9f-4773-4493-abaf-b2cde1902f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c57be404-13bb-4f13-b4d2-035aa3a94101"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b1e6f77-6926-4d51-ae61-bf86a77c5b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6722890e-758e-43ff-a2f0-c2e1192de563"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "838ddeab-aaa5-495a-b1dd-91bd384691f8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7151147d-faf9-4caa-b5b9-5eee6ec60b69",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c40d3b-4fad-414f-b30e-7d62337473d5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6a5e1d9d-9302-4ccb-b903-118f820638b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6a44c99-7921-4b8e-8f26-89c9093a79cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eb8024d1-4b91-481c-b57b-9b7f8d4a0f5c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8db44b3d-5ba2-47d5-846e-b47c0b4de501",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0e2efc8f-3249-4b93-81cd-854572dfe4ed"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a8bcef18-bd65-46ae-9c4a-7b1e930994ba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "df737d0b-9b82-49ec-88cd-d7a0c70a4fac"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "21c66a2e-b787-4241-88c3-8913d5a8dc81",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "187c48f8-08a1-4161-8fd4-c4f42378616f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e112ed08-370e-4a3d-a2f6-7386d5c01a27",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eb1ed3b5-1cd2-465b-b7fd-3957b8a4783b"
            }
          }
        ]
      },
      {
        "id": "8f17b51b-096e-4e7e-94df-e4bb520d0ba0",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "50476d94-92da-4985-8266-0209efd31645",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a110fb46-eddd-42c2-8a09-8b361a583588",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "14b4e8ff-1c95-4c97-8dea-b843a03d50c0",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f21f48e-47b1-488a-a473-caf6539535f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eb2a991-409a-4b03-858f-fb63d4d7c16d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "113e960d-1abb-461b-94e5-96222c2b6691",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad81dc45-feff-45a3-8977-08248f671ff6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61adb489-bfef-4f21-88f6-6c406243ed53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22c71f11-e9dd-4be0-976c-ae54b6c04973",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a3031d0-1832-4a9c-834f-87c15b9ad295",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "707a7f1c-1087-422e-86a1-aa858d9538b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a82d4975-a3f4-4292-8b6c-324fb79fee80",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07172d2c-d971-46a7-9282-a81f1dd0e17c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d960ca13-84a9-40d4-8442-751904ae5cab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af94eb92-0b1a-4c64-9bee-620d6bcc5bce",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91232fac-cc54-44f1-ae06-936149971bb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d0afc88-4fd2-47cb-960f-9e69453ea573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "287c9984-8dd0-4597-9227-7e70ca9ae24c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4e11033-4f6e-41e5-8529-390143530239",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3b50329-4f6d-497a-849b-0804eb4e5b07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4424b25-eb49-44ba-9128-91c2b88de29d",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a413ed4-7960-4664-8aeb-bd157ddc1418",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d5ceecf-2abd-4b8a-8005-55f9ea00845e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dca00926-0f78-4447-a721-157f13520894",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adafa56b-6996-43f4-80a3-8adbb079c206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f6d3dd0-85cc-4155-988b-324e78555f7a",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc2b81b4-b8fe-4bb1-827f-01a75d3e9b75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30f58935-1fb0-4ed1-8972-5ff698fc6755"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b5bb08b-e096-4637-b388-016b1b937b86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efeed264-5c2c-4ddd-a7d3-c45c9da351cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93c01e31-b3a6-4cf4-8c94-0bf21cf8da4f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4676bd92-7da9-4b08-9891-7884f6806200",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69b9ad01-2069-45e8-849e-c9cc77a9594e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b24467b-c6da-4d88-9902-d1f332aeedac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60d30501-a917-432e-a615-04af04bf73f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23799a29-8d25-42e3-a66d-bf8e20c584a4",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54a2f796-42f3-46a7-938a-950a80d79b8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74a91261-5208-4873-a4db-39a55e0675d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d05784b-4cc5-4788-be8b-4fb386ff4416",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f71c048-70fd-417a-8cc5-4c60dcf3111c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "303092d4-77e5-4f5d-b8ad-6c6962df1be7",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79e1ff46-103e-41a6-950f-745c953633a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af800968-cffd-4e6d-b310-ed505d0cc8e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5958332-5c9b-42a8-bc8a-d23e06e1e72f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bbc5e1f-7472-4563-9cc8-815bc1a693dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "056a16fc-3946-43e1-a48d-4da59097281f",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3f7b641-0207-4fbf-8dda-48d2250dd6e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fffbf9f-bbc0-427a-9308-6f4a048bb0d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "175e606a-cf72-4e66-9330-6ab8cfdba9b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d785d9ad-9429-443d-9f74-6a28fe57f8d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb23fc86-01d6-4e80-9792-0e89b1bbed26",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1cff7a3-a7cf-46ae-bb49-847032c0e792",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7885b47-47c6-42e5-9e76-a7998a9e4b92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b478c1b-a468-4a12-8e18-e6844159a10e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1877c444-9766-409d-b894-9d2c60f72b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1753e447-a3ad-44a1-ae95-10b500e94b33",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1521ebe2-f101-4db6-b4b0-380c77feb560",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fdaa231-5a0e-41ac-bcca-983ea62ecfde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e0a399d-b702-4d5c-8dd4-1f0ae9d76bf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5f2802a-4a9f-43dc-abbb-e63a1c83712c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c045d21-f3d6-42a9-8dde-7edca85cc895",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "463c9e85-8dcd-45bd-af13-0f146feb23ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4077bb0-89b1-4446-bc6e-7abc1f033613"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25e6f555-64e5-4246-8b48-aa5168029927",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d86a247f-51af-4b97-8684-22fd3fb71a0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6d032be-c1f5-44d3-b896-ab06fb455d56",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a32cfcf-5f83-4620-aab3-2f761586b22f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb604f16-dd3e-4cc3-8b8c-8f32d84868bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5241dc3-e3c0-4010-9a50-f3320f0fe477",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fd25116-8788-4e9b-aa91-f4e273c98175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ce6a889-d474-47ef-b8ce-268588f495e0",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8822cc80-4f1a-487d-a64f-d013bfd765b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52cbe96a-5e40-443d-a0c5-01b234137384"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5251930-abb9-4b98-b90c-96a3ae37e7ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c419f915-7a38-4249-99ab-7d180a9454a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd72ea86-3e91-4723-b505-385b51b034e0",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60b1e25f-f897-408e-bb5e-0f3e164994fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33ec4464-45c5-46ba-b1d5-15b85ae632cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28b212f2-41db-4137-8a6a-7d3dbb7adde5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b0b4e00-d0f2-4215-8851-f5878a0fa129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e250fb5a-0b16-454e-82d4-a206e3cc4910",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0edfd2f1-df1e-4244-b6a8-4362985debcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22377bd8-0a6c-4347-9e87-86a91f0dacdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "230e671f-dbe8-4f4e-b799-8247b0e75fe0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31222f5f-0b5d-4891-b73d-45bfbc4171da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "512f2fbb-dfc9-4b3d-9fa3-fbd4fda709d4",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02d0f319-d6ce-4ee3-950f-6efe9015e38a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb88f10c-166a-4ca0-ae54-ce1239c3a681"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ae43bf3-b202-4fc8-bcf9-56393610813f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77133393-17f5-4edf-943c-349a8b65a5f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9d4c893-87a1-43ae-8f94-1790fa2aabec",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b7f0de9-ba52-4800-96bb-82b28e6e13b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faf6c4c5-f417-4e14-b1d8-0997cc3cd43f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cadc5f38-18e2-41e4-8d14-75a27f8d97c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d2bef32-1133-497c-b297-3a5044d26c0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b37071a2-8fa8-46c2-a441-2c015fbd3f42",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d49296f5-12fb-4c90-8372-a785dc722c3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aa5d7c3-c7af-4ae7-9e3f-d94e344efcd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4f5dff4-c4db-4013-8c44-a69712bbd8e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c0b346e-f6cf-47c6-9269-3fba8f72217a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5626618d-c6c8-47f6-8e8d-19f06abb0ef1",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df08a762-8e29-451c-b932-6cce9960d961",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f5693d7-6ec7-4770-bd62-7fccc7c3c0d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d539792-7e3b-49d4-be10-f8a8340b04c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61daa2e4-234e-4ce7-b3e3-7fe5c04d7ef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4ae9f9c-1cbb-4e82-8d37-09c0bc4185fa",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "916deabe-1a44-48f1-bd44-b940a9270526",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86706c73-ac12-49f5-ba0a-f8db95f8e27b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a60eb8c4-bc5f-4ec9-84df-b36670bd33eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "884cc44c-0483-4e41-9067-900746e7dc9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e703a69-538f-49a3-af73-948cd2989c42",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7ae0b79-849f-43ba-a421-b49633ca2b77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c103e62b-157a-4770-b243-68bbd953b02f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a4730c8-c679-47ab-9bc0-d3f49f7d4a8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f56a78e2-db7b-4c6e-a0f8-5d64e369580a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd29c61e-81af-44e8-8f56-099689b64a98",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30cb5a1b-ae0a-42db-9bd0-479f28a67c6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dae0904e-c7ef-46fb-bdce-4bbfa7081bb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "654dafee-36d9-4f4d-938f-20aa95f4121f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c92883f9-487f-4050-80b2-82a90836fa6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d5cb470-b286-40fd-9e70-2e65ec8f87ce",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c73e8ad-4bc4-46de-a27c-1976546ca62b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22964a99-4811-47d1-8594-ecd422b2c5fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b0269c8-d126-41b1-ae73-5df41827c966",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a4e9b0b-03f4-4d0a-bae4-7fbb5b8e7bc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74bb3d85-2087-44aa-b33c-92b32a28264d",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77864600-eadc-439f-a6d0-9b0257b4dcf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1cf14ba-9d82-4843-8799-41e41f49eab2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ffecc18-9c4f-45a2-8701-e63cfff10eaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb25fa8f-b51f-4ba9-b28e-5f8a6f4bef7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "622ba29b-742e-458b-afcf-ac876282afef",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f5f54f6-2847-4d02-9abf-41a7a26b25e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d6083ee-3f43-4386-93ef-daa9bb7aa834"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8376f3f2-9d93-48a8-93bf-b0e93ed47962",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c256ef5-e74e-441d-8992-4078f5c2976b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f2821f6-0464-4ad4-aa1f-d800e37ba561",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87fdc6bd-06d4-49f1-aa78-460c1f30d366",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69e7a7ac-df4e-4dcd-9948-8017c03bdc70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c35c3bcd-7333-4b43-84df-77df41e3da7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8cb9b79-b740-4682-9f77-9bd5014b3a30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d43cda00-307f-4d6f-8ace-e17e936ddc07",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdabf778-0bdc-4220-a4c4-a42b86d1fb46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a3ffb0e-c36f-4e0c-9dfb-3ae4bb249125"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5c8276a-ba0b-46b9-9c19-2382efb45f2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f6c0de6-6082-4ddc-9405-49322dbb84b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a781b87-603d-4cb8-afb9-5bbf5e7ce785",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41e85546-34d8-41fb-a1a3-8fcfcbacd2ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f02d2f2-55e7-42c9-9a17-4219425b8f35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6944bf5-da59-4f7e-9360-f30011c138e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d9cb524-210d-4907-9682-e0ba9409049d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d84ce4a2-7b1e-4427-8cf1-fd8a9e4a1829",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd0557c0-4eac-4f1d-8ea8-007948bce0b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e60ca635-af56-4b49-9ef0-b160c9dc0d4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5b72074-b52a-4f37-865c-47789fce033f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e606b1b3-4830-4e92-96b6-853bf52e7927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89846c11-3905-482d-be3c-669ce44ae407",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0393d671-a8d8-4f39-b19e-141865b8df22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccce8eff-f941-4788-ab24-bb3fdae7ab68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc3fa474-c023-43c7-bc10-8d44edeb824c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51642054-01bd-482a-a407-d8032b2de5d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d202b6c-030c-4745-8bfc-1b54124f2c62",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57267acb-f0e8-4e16-895e-a0c2d7dad07e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aaa0c31-26d1-4bac-ac86-4ec73fa66b76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76b589f5-1c82-4839-bf3a-4ce7d4b4ffd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3d8cfda-8dd7-416b-aba2-417c29b95939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e05efa3d-76b6-4a94-b6e0-c672d06d8c18",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c25688e-b6c4-4486-8272-64fd64718a3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4d8ee60-ac26-4a9d-b84b-5479e72d63a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dada00c3-4773-48a7-a04a-da66bf23bdff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb93b192-c79a-4083-bbad-400a2ffc5e91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fca944c4-6dbc-4487-9319-a95a51af5049",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dc296cb-5213-400c-8494-e61cbbd817fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef0f9357-4022-4905-a888-460f52c00f62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53a6e4fd-fc6c-47e0-815a-2ec1ba61e791",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3161a0f-b0cd-45cb-afd0-9983807dd762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a412ae3-e5c0-4e48-9a70-34eada7a7d2b",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "660179c5-5d49-4c4c-b8de-bff6b33847bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8780754-ad20-4cdc-8897-ca3dec7f893e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7240d10-ce55-48fa-9b34-3e00315f8539",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfc3e575-e30a-440f-a84b-a9b343431913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbfefc2b-a9f7-486c-88ad-e4a47aecfd1b",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bce789ae-b600-4777-ade9-7c7c1f0785c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e65357b-e62d-4a42-9b4a-ce3e6ce3d318"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a786b908-551a-4134-9008-98cae77ed15c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63215e4c-4f07-47f2-96f0-0219394a8ebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b4cc4d6-d343-45dd-90e4-600ca4471b89",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ad523f3-8cb1-4724-82c7-e56c89c1dbdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cef2a13-5726-42d5-ab95-376397fe4576"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0460b9e-1691-49f5-a11a-59a5bb9977ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a68d481a-d8e4-4a2d-b0eb-66040ea31ea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "444fd7ba-bb17-44e4-8591-affb6b30d821",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1862e7dd-7154-4c76-9194-e9d37e73931f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da45728f-a1ab-4b6d-88e4-9c1490d32d20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a067ffe7-d689-45cd-a48d-ac83ef959971",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3604449-a1ed-49cf-ac93-517400c2c8ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b00349ac-3741-478e-b29c-438411364870",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2880b11c-2de5-48ee-b406-cba82ce34448",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84c604c6-dbd4-4b11-9464-d7165121137a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eede6b19-9a06-4f19-b670-aa3306a63296",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b83dc67-850d-4c91-945b-6b14f3ad3b8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66c2a757-fd9d-4053-bff0-21da84f6d4e5",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09dfcb3d-515a-432f-a071-3ac4b8ede621",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1898eb98-cca8-4a30-b0f2-5377551a0b1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "393863e6-3460-41c3-b998-9e0a7b70aa67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bd59218-37ea-4a14-8e8e-f8f52b95c0a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63441334-40c3-4b44-a755-843bf76db208",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c38ab3fb-0b2b-4028-ba4f-c2fbf3d691e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f7177a4-9514-49be-bd05-b4054e496110"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73cf0f61-06d3-4761-a55d-647cc60a970c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccdc911a-8bbd-4101-b5f5-b84f7fb006b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4adbf78-8b69-4744-aa4c-2247dc46e221",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d324cb9-0818-4528-a5d8-ebbf0beb6bdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "632fe8e5-3765-4955-a179-e43e6c5c839b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22020662-3a4a-4962-b09d-f31729e39fe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a372c62-f2ad-47b1-b50a-24d0863fd75c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a1e1f03-a8ce-4637-9ddd-cabe5745e3a0",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad0349b0-aac3-4e14-b31f-fc2f0eaacce7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d2d10de-0d02-43a0-b0ee-63f6ceb8d095"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5012ace2-49d6-44b8-b39b-b828cd746e37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed120114-bfd1-40af-9e87-008c8e78dd24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95f01832-17b0-4d6f-bc02-37f114c237ed",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2286b8e-c517-42a4-81d2-9a71494faf4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41621ad9-5600-473d-afa3-a91d825c0a49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "566ba355-b07c-4900-ba89-91e33b8860d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "241434f2-c420-4ba7-ab1b-513c8768e16c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4bbb235-42c3-4bed-8bfb-5d98894ff7f1",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62891e6c-1185-483e-a106-b0dd46a51657",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36e3e873-e284-4eaf-9a11-34a0ce22b55d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee4c2039-4d7e-4970-8a21-f005303c0704",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "165bbab9-4575-42e6-a85f-80013bc97090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85e24c28-6679-4a9b-8709-12079eb6b507",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8ee8d8c-0e44-4716-8e85-bf2331fe7bec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44590c32-b7ef-42fa-91ae-a6f22374dcb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "474bb1f3-33d9-481d-8a0c-4e28fc1b895a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53654f9a-b6c6-4ddc-8928-2af8b638f194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aa26e85-d4ba-4288-b98a-67d6cc806268",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cae1f86-011c-4976-980e-51a726cba283",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31636306-99cd-4810-b7fc-417545c9876b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cefa5df-5164-4bdb-95e3-5e4c8bec9ad5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bacb994-469c-43ba-8206-a85588a12ba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acd82925-d5d0-4bbb-b22c-907057313e7e",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bed7572-3a3f-4d5d-a4e5-707160a39796",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3fa69d3-f9de-4ddf-9657-ed8cf43b21b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6f2857-4033-4176-be68-adc2d30cc09a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fda18bd8-7059-4e5b-9fb4-7742736e8c44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09fd6372-16a4-4f37-835b-6c40aa4924cd",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c88965-982b-4635-a3f3-0bd0e6a65ef0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a93aecf-dc23-448c-99bf-73a4bfb546f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76e61e9b-7c8f-4af7-b369-2143c4763c4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e967047-b922-44c4-afc9-cba49a8dfd1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2294c9e3-d132-4c40-8ccf-307eb682b564",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59a9cb13-9440-408b-83a4-bbcf452bd035",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "518dc1a6-b103-4599-bfe7-0d6d6053dd4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93a67049-ef71-4516-a804-da281f751b90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f5a563f-76b9-4057-a24e-58085f538e65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1475073-017f-4d49-9ec6-0b248074a982",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28cf59c2-e852-455c-b8d8-79d22c41eff4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f523829-c9fd-40fa-a864-e6bb9dcf5992"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa633b3a-6e20-4abf-83c0-8c8871aa3982",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98de7d5d-3e42-4f50-b946-8345a50d8eb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73205f66-a80f-4bfd-b0ac-6100783d21af",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d1036a1-7294-41d1-be79-5de6fa6d4432",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de1ad330-83f9-4361-94c7-b24067ba86ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "182bdfb1-bdb3-42de-b40b-3121b473cfd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e50bcea2-1ccb-455d-b230-11429cbbd7cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "677c1080-fa5f-4d2a-bb8e-7d7df0d29af9",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9083ddb-8c49-4edb-8e00-b0eb541b84a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44fb645e-de6d-4974-be7e-dc8d722f19d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55008fcf-5136-4f57-a51a-6449d564ac7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b91c5ee0-8d11-4007-985c-c48044632579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "832a84fb-c4f7-4a3e-afbc-1f1bfdee6c0a",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e516ff49-5b78-4da3-81c3-a4583f98b457",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06f68e97-a5e3-4ac6-b35e-39e226e11284"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd862135-47ee-45df-83d5-10d733dca685",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2a3d732-a4c9-4da9-a519-cf083c03ed02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ac06f08-be71-4365-afe3-7eda6f6702f5",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7646eb5-0b09-4794-a09a-919b67e2b9e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5d40058-8517-4ebe-95ec-5778819e9f1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "399ee9ec-58a2-4ab6-8239-1bcf67e211c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc4526ce-0985-420a-9dbb-c24b55f7ac83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a04835c7-c9e3-49ba-b226-646f060fe9cb",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5b7dbfc-c50a-46e4-8ecb-59d52d9836b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c35ea965-a3a8-4674-a183-b9b64c153adc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b41da045-9db1-4f71-9781-34a247e6f350",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a416536-1b03-4fce-a0fb-4d1d77d1d5bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72304cde-fb58-4369-9102-a70ea774b7c7",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f77a758-71f9-4fa7-b060-26fc4122f039",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb036935-4784-4404-adba-400cd250d19f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f99cffa-ad34-4872-bf38-6a263c6a0ae1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4589c013-f17e-4da3-acea-987d08c4606d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b03d61ac-0c77-4fbb-a4ba-02d37589c89f",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbf99c50-d443-453e-a8ba-458352fe0913",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0d4f4f4-1931-407b-b2af-a48c27af5546"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c1685b4-cd5d-4daa-9292-1270ae1dfa79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce9ed836-4c20-43ee-af31-1322c0b4db0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b428af8-1ab5-4ec5-87fc-4fd2b9a01f24",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52e40498-0060-4974-8930-7d967d8cef79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb7ed5a0-b88d-4496-a60d-a98ece545ccd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f4a284-bd12-41a9-b79e-c1df8acbeec7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ff2c93c-8521-4ba3-9e64-8568a0253725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56c49be3-cb52-432f-8723-2b22df46369e",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f7fe073-f3fd-4317-adb2-1c4d778867c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66ddaa14-490e-4b26-9f8b-e7a6eea8b53c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "179bf955-f2c2-47a5-939c-aab039873c45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4b28253-4403-4e6a-840f-e2cced3203e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ebac8be-3763-4222-bf31-487122cefd5c",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd499be9-6a51-4fb5-96a2-49775c665ee2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f052dd79-333d-410f-b3a1-01e255935ba9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dce69fe-41ea-4576-b987-10a66cf88a49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ef90579-5c32-4312-b89f-617201ce054d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e811316-9121-47a8-9570-4f54c956bca5",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e7f55b5-07dc-4752-b1ee-a8834cf3361a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28cf9d90-3241-42ac-b214-a027e3ebad1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9256236-0ef1-49cf-b99c-82c5000c14a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1506868b-19c9-4419-a6a2-833d80e243d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "749e1544-d4fa-4397-b3e4-4f5ca7b00580",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44180d86-0f41-4c19-b10d-ab52ee7ad145",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbe0a61d-ecf5-4fa4-b4dc-82ded0464235"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df0bb434-eac1-4345-8b61-691cdfe4efe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5233c15e-64a3-451c-9fc1-a77176aa22e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "082712f0-6b5b-4a9f-b33c-15a682e83fc0",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "577b1863-221c-43d3-8374-b3a6aa30d077",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4092213-21aa-4b86-8822-b179c54107cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41966a07-15b0-40c1-9efc-247073e40c16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d86208e8-892d-432b-9247-8c14991427df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa084b9b-5619-42c2-b249-61e250bc6c55",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17065367-6d9c-4a8f-b46c-2e60b37ee2bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23953b01-2237-4a29-bbd6-0c3ef99f7d34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cfda2ab-469f-4817-97ea-3ddb31cc5fdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "901f06e9-f53e-492a-ba77-10cb6ef49514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "439f58a7-9198-4c9e-aa04-c612c281f55a",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1fbd106-8654-4ed3-93d9-8375abcb8dbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db1b75dc-adef-48d3-b761-4cfc760990ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b1cb0f4-c202-4539-b61f-c40c6c8ede51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c67bfbc-841d-4572-a2e8-2a8fb7e8a14b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9cff3e6-ed0f-40d8-84cf-464b08f6121c",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4f66fab-16ba-45d6-af49-c030f14b9fbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "174363bd-6932-4963-a548-f1e063be8c85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd68f65d-be1d-4b51-a53d-ddd4bec5165d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a96cbcc-5ab8-4ea6-8cc1-71cc90830659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca8bc5ee-f0a7-4682-b7e5-8f99ca08db7b",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56deece4-e5a8-4bf1-ab9c-026f496e883d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08d9b71b-3c02-4698-b4c2-84df50b6813f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1292087-93a1-400e-a747-cdd9200191ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34308a35-c16b-4c68-8713-57132c841f50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3e1705a-49de-4776-9bfc-536a751c1499",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37984314-deec-4680-8d94-f90d91bf9d7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6448f4e-78a8-4159-b5a9-1a506d2ac1cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bd60303-0cce-41f0-8aa4-9ddafffb63be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92e6c050-48f2-4665-b18b-190e5742691d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38dc4c0f-355a-497e-a298-c06acdfe3747",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe7c1458-286d-4b92-8f6d-8002b9857352",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cab4593-f512-4ec0-adc4-411d3f9e36e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32a31f2c-35f1-41f8-b1ea-4c4a99144bb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bf80fd7-8524-4ce9-abfc-1846a4e3fccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0083d902-442c-4fac-9150-5f41bf2fc413",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7403f64-4ea1-4e7a-b421-cbdc59553911",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1b5f470-d9c3-4b86-9981-b97d79a06dc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a47526a-9348-4afe-a421-d8bfe1fa9613",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffccbe70-adf7-4f35-8f9c-0858ca29e5fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23c46f0f-9fbb-406e-bfad-9ccb45781047",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "490b51ec-5bc5-4bf5-9bcb-f9f24d557e68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd3c87b4-ef99-4b5b-9ef5-9730157ae91c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa055bde-0fda-430e-8a70-3f8ab61ce48d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ab26734-c221-4a73-8367-8db7a137f037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c1906c5-3492-4db8-9791-2617432a5219",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b11430-ecd5-44a5-a30b-d51d8ffc5d53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fd893ee-9ab2-43a1-957b-238d88f134f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e496e779-f1c3-4e59-96b8-b941914f2fea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "825428db-5fc9-442c-a228-012b35788790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d49e6a4-bfe1-4470-bce8-a132a6ca8cf3",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0ef1525-4e25-4768-9e66-58fd704ef1ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "328f7afa-20c2-403d-a213-b43ab981aae4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "844b45d8-92cd-4937-bf63-98aead4a5ebe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9647091a-90eb-4679-8784-182ef4b0c2fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "631a5eba-8eab-4615-a4d7-5c519a13e35f",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b19190cd-edac-444d-85a3-0b5613d28abb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3e53eb3-7559-4f28-8d6a-57e7b0035bbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73346f2b-3468-46a6-8173-8cc04b092a33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19876471-fc68-4d35-8f37-b0bcbe80e245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f149feb-1d8c-4c81-9568-cf837d07fe04",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39b11331-41d2-4c7a-97de-61129de41bac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09301d0c-27fe-4339-90b0-e64e7c139c0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e084f6fa-3daa-42bd-ae57-e6ebaa45a2b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b3efcaf-834e-413b-90d4-fb3ae256f56a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58be85a0-662e-4ef7-aaee-8a1b8561c1cb",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f290aeb5-bb33-4af6-94e7-4199cdee3788",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7faf657c-ead4-4986-b810-f98df3bc3251"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca4e4e29-86d2-4130-9c09-b015c9bc3a63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1758bef0-8643-484f-bee8-628f95ed5818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca406fba-4b4b-4cc9-9665-e17a958c663f",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0990fb7c-c50d-4ce4-8233-c074ed9145d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe1b4450-e6f1-4108-8026-1644617f48e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21481971-b520-4758-9580-c04b0584ca7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17e75982-8c56-4bc6-a66c-10227a3d59f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65cd8b92-ff5f-4d64-9a66-973fc7dd24aa",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0bfc1e4-0297-4912-a586-4711c1ffe690",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0548acb3-cf01-45e4-b33e-4366e9a30efb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb339a58-3fba-4e48-af62-d52476f88a32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88adc600-3b5b-49f3-b381-5d4a330fb9d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0ef49e7-0bda-4eb8-8070-72e3fe51f6b2",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77b17d9c-ccb8-4f1a-805e-63dd81d580dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23adf08a-adf8-40af-aae8-06c882084c5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc43d0d5-16ef-41ef-ae07-5a677e4ab5e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb927f6c-d9c2-44c5-b0c0-9bdac9af8254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fca500da-ac53-4ce8-9420-74e640ebd7be",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9b43def-0fda-43fb-8eb3-45c9cd9a0fab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a940fde-8632-4fc6-87c5-51ad3a2ddb0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efa878a8-2736-4a25-adc7-b9ca4056dfd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43b148b4-0143-48e6-85c5-9c6f7d577ba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6036e6c-5ddf-4174-9712-e3998543c3f9",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9fd82e7-c70a-43ed-8f8b-278fb32e3f54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e971a7f-5ffb-4178-b50c-ec06cb8b26d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d70c95f9-7ce8-4189-a4f1-6e1a13712360",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf371e3e-5d5f-47e6-b1a3-a120c1542188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4d0db43-5555-47ce-b626-17c85f536c4b",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b3df68f-ad0d-49ef-8c0f-993950528b59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "643b5f44-b2c3-4a99-80da-713e9c975342"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcd6670d-fda0-4be9-87b9-0c188f0c6edb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c081220-3edf-4a43-8bc5-7621a3f6c4d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c7650db-40e4-4203-8d48-22f9168e566b",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af811213-28e4-4db8-8aa7-f571d745a80e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ed2eb52-4420-470d-991f-d6937041a6d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b456160b-08e6-46c2-a1e8-f6a19279b83a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f273ef7-d187-40af-9e63-2f37b8de3061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e71cdc48-89a9-4fbc-8a4d-4f672ecffa7c",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd3d1ef7-2fe8-4029-a50e-750d2a5dcb69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b787aee6-0fae-4e31-9fdc-f7ffcceb6f69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71183c59-aedc-488a-a8ad-f6b96e986bd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cf504a3-8f89-4d39-bf46-c57aef2e1da4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ac08a42-e08c-4870-87c8-1dd7f494695f",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef806d0e-f27d-424d-8728-1ae9b02290d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e91bc43-f5d1-4457-9da6-ec5427e4ecd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67fb4617-b6ba-4b2a-8995-29fa150fbaa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0efa0b08-84f7-449b-abff-7d133671c690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d7688be-6ca6-464d-a3f7-f5837c15618b",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b6911b6-b3f2-4bc1-9795-f6a562baf478",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a879ee32-5037-4a6b-9d8e-12f91c5ed4a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b034bca9-c69e-4a57-a8f9-cc5397dc0b10",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d607977-5eb6-436d-be98-89f7eed653b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa8d374c-591e-4bf3-b39e-c56f496465a0",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35318c6c-a2e9-45b3-a31c-a59074b3f979",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f8a0d19-a5dd-470f-a324-55c80f54c664"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1be80250-3de7-4891-9588-bcd3439d60ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5af02cb-04c7-42e2-8e68-9e793e61109f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eb4aa98-2181-4a64-9e84-85d12c897123",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f24cd50-ce86-4f12-be88-76ebf038ad3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6133990-ce44-4926-9f28-a726eac3bba9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87b60e49-1617-4525-afb9-6a06fd103ef0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e35a450a-ee4d-41c5-9318-b5e53479ec5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aaa6d99-e155-427e-aad8-b5d841d8c8bc",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "256a07ae-46f4-4f13-baa1-e5809f795baa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac34265d-3b03-4b57-981d-f777d702f964"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71610ae0-ebcf-431d-b9ed-d3582f44fdf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91407c53-1cf0-4daf-b4de-18fc4bd4f2ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8817c8a8-d375-4a96-9457-a66f91b79ce9",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "796ee83e-862f-40d4-880d-3f093c31f739",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d376107a-4ea0-4058-9889-93ac29047a89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60d61427-b88d-4a82-ad56-e65c720bb504",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba4baec2-e00f-472d-99b9-2061e9ca5684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de3db0b8-165f-47d4-ab63-10e09ccd0fc9",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a81d7ab-97d6-4716-9c42-e918e5de324f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b743b63b-74b5-4bdb-967b-177b6ac3c723"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36d6a55b-05c2-4f42-9c49-743eb41f1f25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f045876-32f9-4776-9ecd-d3c1a7adf6a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6cccf9a-9b97-424c-8ad0-b40700e5e328",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4838606b-f2c6-46a5-b3f2-192eec9b5aba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10bf635c-6b3f-45cb-9e9a-1c01df1e440a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa72d94f-f914-4742-a35f-7580f9379221",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a1422ca-510c-413e-b394-832b9a02b5a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f083d6ce-3e2e-4d38-967f-0cbb28f35e03",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e0cbbc8-ed77-4a6b-9754-68c2dd06c6d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "606e64dd-b743-43cd-9312-392f023af0f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9be809b-1974-4602-acdb-1232c2eeb3dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9877582f-ca7d-459f-8709-791b873936cd"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3ac6dbe7-cd64-44d7-9f37-571bf00eced2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8943080b-f839-4100-9315-da764f7ab945"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8b7b5522-2064-4d3b-8de2-7aafdd16d557",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ed9c61a1-14e4-477b-96a6-197cb25e3176"
                    }
                  }
                ]
              },
              {
                "id": "0a14548d-8fe3-45b8-9c82-8e5e796f4e33",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e6a75f67-ef57-4ed4-b0db-4a18a5ffd874",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1748829e-5dfd-4000-ba16-000f8e735a77",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "5e85b629-a0e7-49f0-89c5-3390f84110f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a73304f2-86c5-4801-8a99-542e3e91e237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9d99ea74-40a1-46e7-8273-561e5b7df7c9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4bdd3be2-0151-49b8-8b59-c901ca5ea497",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0f8f644f-24bd-4511-ac6b-1674c0518187"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c27ce58f-ff10-44ac-8b00-040658718bb4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "efe75b80-7fa0-44d7-81c6-89720d3d6f2c"
                    }
                  }
                ]
              },
              {
                "id": "b6a07bc4-119a-43c8-9826-8dfd4644644b",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "c77bbb9f-6c25-4818-9fde-6246c7cf55ad",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad432a3-d3bc-4e1b-bb58-12f3aafda546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "1f1ad720-976b-4225-9428-e506de972c65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "284eaef9-f5ae-40e1-8762-511a75db0703",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b041ae87-5110-426f-b6c0-5b9b9b78f04b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "526333a3-5e5a-4b0f-913f-68b676b11f82",
            "name": "Positive Testing",
            "item": [
              {
                "id": "01a39f40-2d4c-4cf8-bd7e-ab9c7d3e33a9",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a354e7db-d15e-4353-8c31-1852d0b356c0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b5eb346f-9b37-425d-9162-5d810891da83"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "55fccee5-1cd3-4410-8135-0a7e7e770b5b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "60deafba-5021-47fd-ab03-42c87a609cae"
                    }
                  }
                ]
              },
              {
                "id": "4de8f642-2f3b-433a-87f3-e297c852c821",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d389986c-153e-4afd-b565-57a06514b5f4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "502ed765-7992-48ba-ae6b-76fedc118f05"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "51781977-90f7-486e-bbd8-2d790488e540",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8fa65ba9-188a-4e4a-b936-9cdf208de311"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0ed689d7-0c0d-4a5b-9a5b-b725144773f3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "77a5eb78-cd7e-46de-9b6d-f6b8f5bf5267"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3bb8fb3b-4e05-49ed-952a-a97c7b7207c5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7facf026-210f-471d-9358-25696a49e8b0"
            }
          }
        ]
      },
      {
        "id": "aa06f831-35fe-4c2e-821f-77e383996c65",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "601b3445-30aa-48bb-93e2-eec009301055",
            "name": "Negative Testing",
            "item": [
              {
                "id": "27a41b9b-29e1-445b-9a5e-3b6532586c74",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "19b038db-ed4f-4e27-81fb-065482bc8c94",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24e3ccf0-fa47-4517-97bb-ea162e69913b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ceb70e1b-4eb8-45f7-b8ca-09acaa4839e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69732e84-c2f5-49cd-8c0d-f2f021836f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eb84451a-5f5e-49a4-9b4e-fdc320a3c913"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "371d56d6-7aab-4318-8eb3-d6f34c27cfd8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3563dd98-a917-4886-82d6-a274f43e39f6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c7c21ae1-9bf8-48ae-a35f-864970d080ef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "751a6e7b-725e-48c6-a99d-88faa9ce3a20"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1828d4de-6d7e-41c9-a4c9-605e9b2bb4a8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "7c1adb83-1085-4068-96eb-3086958e4034"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "669db9bf-8386-4398-91ec-b17fed4cc7ec",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6f0c9436-4057-463d-906e-829b4df9d653"
            }
          }
        ]
      },
      {
        "id": "dc6f2066-d62a-4496-85f6-2cff0c602355",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "5e8a26bf-1247-44b2-889f-efa2048be3b8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5e6ff235-8a3b-4f22-9907-5acc7dd64c5b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "df5efb52-3989-46c9-b691-68c331a5a632",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24a773ae-47e2-4ffc-ae54-918c68e37b88",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "afcd6202-6cc1-4aa8-b1c4-78c7c7a71e32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13882b8f-ffe2-4f88-97a5-de5bfcb2460d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a1bac387-c3df-4912-8cf4-8743a5d32756"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fd5e0646-105e-4813-abde-287dfc465af5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0c4d6c7a-fffc-4d85-a189-a032be3793b2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "82721b7a-9d09-488e-a7b0-cdd8b163a911",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4e28b43e-0d8e-43a9-9760-a238c409b152"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9864c31d-2cca-41b1-a66d-6c4402cdf03c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1d0695c4-a3bb-4a78-8bb6-08d924fca4bb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9bf32218-58ce-44aa-9b8c-d58268e2763b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3d951b92-2160-4aaa-84f3-e5a2c4cb4488"
            }
          }
        ]
      },
      {
        "id": "c0887f8d-ad83-470b-9b0a-f8f55b2ae5ef",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "3899caac-4187-48e7-8cf5-4c7294ead6c3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3bbdf91e-cafe-4f80-980f-defc587b8946",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1d642c2d-5a06-4cfb-b06e-066620230dbc",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6598383-b34e-432b-b5f0-4f8118caf115",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d8b85777-7174-45fa-b871-38267a2e564b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d335b597-0405-4c79-9774-449ad2aa9db6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bbbee085-6f36-49b9-94b5-2f22893ea912"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9d90f51f-3f23-4366-9894-381f321e129d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "69a4e536-5b57-44d6-95b4-693a6418426a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7183437c-5a54-4c67-9c53-15e0f39de3d9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "18538212-c74f-4f0c-bbaf-4c30cb508c24"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ec3d3fc0-1886-403f-84bc-9869cb2a3f5e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "20649a3c-c1c5-4e1e-bed9-8ddd15dd34a8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2a79eb2a-8a03-48cd-9a62-d63c0891efe6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2da2a7f4-5d51-4870-a45f-1cce8a3cdb6e"
            }
          }
        ]
      },
      {
        "id": "29da9c63-f6a8-40ed-8b56-78c9ac60b481",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ed9fca54-c71a-434c-9214-9839e8158af5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5122ab14-c3ec-4816-9e74-8be8881c4cc6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "da629ba7-b41c-499d-8835-a3bf2cb73df6",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "41168a2b-4527-4c25-876c-54e98eac6d4f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "672769e2-b160-4b7a-a787-41f07fbed8b5",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 272.621052631579,
      "responseMin": 7,
      "responseMax": 8897,
      "responseSd": 1100.6534025474323,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1698885231148,
      "completed": 1698885323282
    },
    "executions": [
      {
        "id": "10078b11-cfc3-468a-b14f-29aa6f27492f",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "8ca03253-6215-410b-9d0d-2c2375ce51e3",
          "httpRequestId": "96f1e387-d0c4-4a53-97d9-fda6f707a174"
        },
        "item": {
          "id": "10078b11-cfc3-468a-b14f-29aa6f27492f",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "61b7e929-fa0d-4512-acb6-ae7e9ee19253",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 0
        }
      },
      {
        "id": "a9043346-fd45-4514-a2ba-c129a57a0379",
        "cursor": {
          "ref": "45631b30-af88-4194-b98c-a3008598fdd1",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "34a19e8f-c37d-4548-8ec3-bc264d4d2f28"
        },
        "item": {
          "id": "a9043346-fd45-4514-a2ba-c129a57a0379",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "07200425-64d3-4d15-b5e9-4cb2b6d2fee0",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "eab2d347-85ae-41d4-8fc7-732b7719048e",
        "cursor": {
          "ref": "d0607594-bb03-4c5a-9c4a-a917af30bc4c",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "821d2046-ca5d-4637-bb31-f207ec51f253"
        },
        "item": {
          "id": "eab2d347-85ae-41d4-8fc7-732b7719048e",
          "name": "did_json"
        },
        "response": {
          "id": "a322bf21-fe24-48f1-aad7-0f39664e70cc",
          "status": "OK",
          "code": 200,
          "responseTime": 1683,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3ffc709-1707-4e23-814c-31f11c6f2e60",
        "cursor": {
          "ref": "b7392863-6495-470d-98d1-3bf0f8ee9301",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "87d0cc80-e83f-40e7-ac1c-45abc1cbadea"
        },
        "item": {
          "id": "d3ffc709-1707-4e23-814c-31f11c6f2e60",
          "name": "did:invalid"
        },
        "response": {
          "id": "f0570aab-c897-4a27-b8bd-ab2d8b28e391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3ffc709-1707-4e23-814c-31f11c6f2e60",
        "cursor": {
          "ref": "b7392863-6495-470d-98d1-3bf0f8ee9301",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "87d0cc80-e83f-40e7-ac1c-45abc1cbadea"
        },
        "item": {
          "id": "d3ffc709-1707-4e23-814c-31f11c6f2e60",
          "name": "did:invalid"
        },
        "response": {
          "id": "f0570aab-c897-4a27-b8bd-ab2d8b28e391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7535afc-45a1-46db-8a01-b249f0c6b3ce",
        "cursor": {
          "ref": "dda8e6e1-bd01-4531-842c-8bb432453ac2",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d605ae99-ec29-42b1-94e5-b01c2b8e8ecf"
        },
        "item": {
          "id": "c7535afc-45a1-46db-8a01-b249f0c6b3ce",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "3d052140-bae1-4a6a-aa7c-b3c816bda7c5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 189,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "425119b4-6564-4c6f-8a80-daf311bb7158",
        "cursor": {
          "ref": "d625359e-7a62-4ce3-9c8a-5b59407fc360",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "0d14f549-3b60-41f3-ab19-73a06242cfcc"
        },
        "item": {
          "id": "425119b4-6564-4c6f-8a80-daf311bb7158",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "ce7b4b83-936b-4c95-8753-b33edfd50b3c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1050,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5cb2772-251f-4b4e-8317-ca01fe13b666",
        "cursor": {
          "ref": "90637672-3b2b-4a16-abe5-a39f48aab45f",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "692f7244-cb6d-4579-b739-445768ed4d84"
        },
        "item": {
          "id": "e5cb2772-251f-4b4e-8317-ca01fe13b666",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "14d24a90-62d9-4050-b978-f2ab4f5026ab",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 82,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "226093f4-860c-4004-80fb-3c9dcc8d7966",
        "cursor": {
          "ref": "76eeb4af-4478-45c4-b28e-ed5629dc24fa",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "69ed2b6d-333b-458e-ab6b-c849ac9b2ba2"
        },
        "item": {
          "id": "226093f4-860c-4004-80fb-3c9dcc8d7966",
          "name": "identifiers"
        },
        "response": {
          "id": "679fc722-61a4-4fe9-8932-db9112d31ef6",
          "status": "OK",
          "code": 200,
          "responseTime": 1239,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1acb3d51-051a-484d-a3b0-bea978dd2bf4",
        "cursor": {
          "ref": "076a6999-2253-4dfd-a522-debb60cf5545",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "42aa4afb-6347-4179-b17a-fadce1e8e20f"
        },
        "item": {
          "id": "1acb3d51-051a-484d-a3b0-bea978dd2bf4",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "e702a870-b62f-451e-a222-231c05d0b83e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09c6496f-8167-4802-9a09-1f83ac4ff77c",
        "cursor": {
          "ref": "03c7f2da-3c26-4d17-939c-2b6812fc9113",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "fe4376d3-2b33-424b-bf79-b96a8c7834c8"
        },
        "item": {
          "id": "09c6496f-8167-4802-9a09-1f83ac4ff77c",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "5e12301d-c698-4449-bcc9-a09b7e5c4f0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09fdfef4-83da-405d-88be-8b2e4d7b6a86",
        "cursor": {
          "ref": "f59c8f93-3435-4978-91f6-f91d4f8af157",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "adcf0f94-9d03-4971-8150-edcc322dbe36"
        },
        "item": {
          "id": "09fdfef4-83da-405d-88be-8b2e4d7b6a86",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "5fbc9b41-3d4c-4e1b-a482-6f5619978f2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "902a42c8-c7c4-4740-b019-65b3a6119fec",
        "cursor": {
          "ref": "20e0e029-13c2-4646-ad33-4510be17fc35",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "5e536b8e-8c17-4157-84be-b8f2eeb95bd6"
        },
        "item": {
          "id": "902a42c8-c7c4-4740-b019-65b3a6119fec",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "87afdd5e-c41e-4829-9256-eac096ab5942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "619906c5-50da-462e-befd-5fc2ea92bb65",
        "cursor": {
          "ref": "1991d9ba-6dee-454d-8693-d40914821222",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "64fece70-54ae-483b-9f90-e9a71250348b"
        },
        "item": {
          "id": "619906c5-50da-462e-befd-5fc2ea92bb65",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "4b412e0f-58b6-4fce-9767-0f703f46ce91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dea5b41-0825-4a43-ace3-b7b3ff7b6aae",
        "cursor": {
          "ref": "b6737d39-bbed-4ac0-aa46-7addb9a0ce34",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "247c2bf3-fc16-4e29-8ead-ee451f9efc78"
        },
        "item": {
          "id": "1dea5b41-0825-4a43-ace3-b7b3ff7b6aae",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "49fd8304-80b2-45c0-b3b5-c68beef0fc1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "197c1069-17b0-4152-98c9-4665d2a4611d",
        "cursor": {
          "ref": "b2e95c98-c151-40dd-a5d7-e053ae519b64",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "39e8674c-221e-432b-90e1-517080107c9e"
        },
        "item": {
          "id": "197c1069-17b0-4152-98c9-4665d2a4611d",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "7f1bbbf4-ddf9-47e1-8bd5-3ae3c61ffc78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44842798-5565-4b49-b03e-3f8452860b60",
        "cursor": {
          "ref": "16c8aa03-370d-45b6-a209-ff27a16fc712",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "b9047b16-9629-4c9b-895e-f474b6994a7d"
        },
        "item": {
          "id": "44842798-5565-4b49-b03e-3f8452860b60",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "fe59ff1c-eb2c-4341-89a6-1e5b59c1f3ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "601305ac-82d6-456f-983e-23b3060e6329",
        "cursor": {
          "ref": "5aa0e983-472f-46e8-aef2-ec64638022fa",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "f2c0fd7b-1e8c-478a-9b71-2cff944a8136"
        },
        "item": {
          "id": "601305ac-82d6-456f-983e-23b3060e6329",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "900ced58-6ee3-4435-b0a6-a868f3e8ceec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 118,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c79e12-e8ac-4284-a056-77f3f3d21271",
        "cursor": {
          "ref": "aa42408e-8b40-430d-a7cc-02d13f674b00",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "d9c65e38-c82c-4e7e-8474-b537d13d3cbb"
        },
        "item": {
          "id": "06c79e12-e8ac-4284-a056-77f3f3d21271",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "d60f446b-f2ba-4d3e-821e-fc51bf7bb6b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e91ab19-0239-4c44-a7b8-53e3614b4b0f",
        "cursor": {
          "ref": "db37954b-0394-456a-97bf-c9c18689ffe3",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "48df3e69-a91e-4cd7-8052-ad6e54fcec26"
        },
        "item": {
          "id": "5e91ab19-0239-4c44-a7b8-53e3614b4b0f",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "81fbe560-9b36-4ba9-baf0-3659d927a23a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "831a019f-8812-48e3-b171-67dc29e3c262",
        "cursor": {
          "ref": "34debeba-5acc-4358-9435-091a14788ff2",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "77dfbd07-957d-4924-8dca-1566bb40ee9b"
        },
        "item": {
          "id": "831a019f-8812-48e3-b171-67dc29e3c262",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "794853f8-8efc-4a8b-afe8-1aad1c7cc451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b3a04a5-df13-4395-854b-cfed8ab01e57",
        "cursor": {
          "ref": "3af3f74b-a87d-4f73-98c5-d99a7bb43422",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "5c21d934-4810-42c4-9b78-5d8371b8d414"
        },
        "item": {
          "id": "3b3a04a5-df13-4395-854b-cfed8ab01e57",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "66ba73f1-af6b-4d67-a589-87f334982d0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "977cbb55-b97e-45ef-889f-f20ae9893302",
        "cursor": {
          "ref": "46fecb6f-e78e-431e-ae04-fd4102bf120b",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ef0c0f42-35b0-4e2d-b181-74b7c94223ad"
        },
        "item": {
          "id": "977cbb55-b97e-45ef-889f-f20ae9893302",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "e81e1ea0-23bc-4dd3-b33a-2ba0118cb419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6789ce5-f359-4387-a04f-bab51b0a5341",
        "cursor": {
          "ref": "42052d24-7559-412f-bf45-4f50c670280b",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "dfade9ef-5f3a-4947-9e03-e9f468ef16f3"
        },
        "item": {
          "id": "d6789ce5-f359-4387-a04f-bab51b0a5341",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "1582a151-68b6-4303-8c01-c9bbecb38afd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beb3452d-4428-4195-9858-3130ab3a09a6",
        "cursor": {
          "ref": "5290c28e-b238-4aaf-9c47-2178fab44a8b",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "041e8707-d7d6-4057-b8c7-bd131fbac069"
        },
        "item": {
          "id": "beb3452d-4428-4195-9858-3130ab3a09a6",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "99337e6d-f2a5-416c-ba38-19fa4df74c92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c8dba5-35ca-4763-ab49-013c698546fc",
        "cursor": {
          "ref": "ddef480a-be47-4387-ba0f-8a6c535cea88",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "8f6f7f84-7f62-43b2-80eb-4fbc713d7de3"
        },
        "item": {
          "id": "d2c8dba5-35ca-4763-ab49-013c698546fc",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "53aec160-a021-46da-b94a-5dd76ba228c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ae7b18-27d8-4650-b087-809a384fe813",
        "cursor": {
          "ref": "f77b9bc6-1f38-4679-b0be-7161af353c83",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "2ba53562-bb7f-45b4-9984-08d6bd9074d8"
        },
        "item": {
          "id": "75ae7b18-27d8-4650-b087-809a384fe813",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "a6dd159b-70eb-4e91-997e-c597e24317d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe3f0da-e4fd-452e-b008-bff140b3ad5e",
        "cursor": {
          "ref": "dd8e491f-ecd6-4076-8731-a27624cb3c11",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "8730f71d-eb39-4b95-b6ea-927838c5a2d3"
        },
        "item": {
          "id": "bfe3f0da-e4fd-452e-b008-bff140b3ad5e",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "071d796a-a5e3-4c62-843e-c6f6cbdf67fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f07784fc-0a06-47e7-bcc6-0ab052d8906f",
        "cursor": {
          "ref": "18e88527-d405-46e9-a0fe-4e624884fae6",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "04248d00-c0e1-4a90-b904-f49e6d0a6d64"
        },
        "item": {
          "id": "f07784fc-0a06-47e7-bcc6-0ab052d8906f",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "6ca8ec5e-6a55-459e-83f2-3d944f4b3768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba7c1f7a-8d57-4f21-a97e-db6d3c881120",
        "cursor": {
          "ref": "714120d7-d47a-477b-a778-c760591cf435",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "88177c14-0a2f-4be3-a7a3-f2f2f16778e3"
        },
        "item": {
          "id": "ba7c1f7a-8d57-4f21-a97e-db6d3c881120",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "10dd7264-f412-4b01-a259-1df3f75b8760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed7ad7b0-2956-4468-bf9e-afcdd04ac0df",
        "cursor": {
          "ref": "83176254-273d-4c98-b3c5-4feb5ad29158",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "dc77dd1b-2510-4b4b-9cb0-768dfefb1d8c"
        },
        "item": {
          "id": "ed7ad7b0-2956-4468-bf9e-afcdd04ac0df",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "e1fd6691-03f2-40f0-9755-fb65ec5fbf26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b7e55f-8f3c-426b-9913-cc167952dc1a",
        "cursor": {
          "ref": "d788aa51-9408-4059-b166-08da91335d92",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "863bb7bf-7975-4f67-8a8f-3866a29d23f0"
        },
        "item": {
          "id": "f5b7e55f-8f3c-426b-9913-cc167952dc1a",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "e0f4c39e-8c93-4b7a-b9b2-ceec3ee3ce0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ff5915-7570-4f76-bc71-27d5ec2935ee",
        "cursor": {
          "ref": "838c9d7c-b499-4339-b7a5-11fd796c39a7",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "87788330-031a-4376-84fc-aa21829b90e9"
        },
        "item": {
          "id": "97ff5915-7570-4f76-bc71-27d5ec2935ee",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "f8b6fb88-28d6-4613-b864-b092686f675f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "555c19fe-1f29-4938-a2ad-94addc1e8679",
        "cursor": {
          "ref": "221e08f5-9fc7-4a05-a9c5-75d65ffb41a8",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "e8cf0703-1fd9-4c83-88be-3dc76fcdc01f"
        },
        "item": {
          "id": "555c19fe-1f29-4938-a2ad-94addc1e8679",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "41cb113f-3a0e-40b0-bd82-6bed0595708d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d240f880-b44e-4d0b-a2cb-a0973396e5e1",
        "cursor": {
          "ref": "4a14935b-39f2-48e4-94ca-d00ea28a4218",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "fbe497cc-92da-4c82-acee-344560a77501"
        },
        "item": {
          "id": "d240f880-b44e-4d0b-a2cb-a0973396e5e1",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "eefc9672-5fac-49b1-8e2e-51a2b2e69519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62b81bcf-4a46-443d-b45c-24d68680be50",
        "cursor": {
          "ref": "f23e0816-e67f-4453-ab07-84914a7f59b5",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "fc1f0627-b5aa-49fc-acae-f68ad4ad6497"
        },
        "item": {
          "id": "62b81bcf-4a46-443d-b45c-24d68680be50",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f2ed8ba0-dd8c-4913-adf1-914051b5095b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6b5908d-fe42-418a-98a5-18968846d0a2",
        "cursor": {
          "ref": "83a69672-9bb0-4c26-b371-ebb332432b4a",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "31212d9c-199a-45bd-8d70-71f8cef0af55"
        },
        "item": {
          "id": "b6b5908d-fe42-418a-98a5-18968846d0a2",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "74103883-e435-4804-a0a3-b12a27e7fc69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "644af045-bb81-465c-b974-ad26faf2bb9e",
        "cursor": {
          "ref": "b595a990-2fe5-40d1-88e9-27114ab1c30f",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "83ba40cc-429b-4ff1-a65e-735032c82b24"
        },
        "item": {
          "id": "644af045-bb81-465c-b974-ad26faf2bb9e",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "32cf6534-fea7-4e21-bdcf-1430ab0fb14b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42751fb4-22a7-4d60-bd7e-90341c93ec82",
        "cursor": {
          "ref": "57c92550-caad-45c5-878a-b57e13fbe63d",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "f3606af7-72d9-455f-9d8f-e6e63ee4b34c"
        },
        "item": {
          "id": "42751fb4-22a7-4d60-bd7e-90341c93ec82",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "679e554c-f4dd-4b18-99d8-17d0b84623a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c2dee8c-1d4f-4919-aa96-e02309d32767",
        "cursor": {
          "ref": "4cad12d5-9983-4032-9a5d-424ff63f9584",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f9cf6749-5662-4133-8b0d-b8f34f20edb2"
        },
        "item": {
          "id": "3c2dee8c-1d4f-4919-aa96-e02309d32767",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "fe4ec9a6-306a-4a97-b3e2-1a48853e6e2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aff33e9c-5660-4e46-8536-b9d33a0c6b81",
        "cursor": {
          "ref": "100d08a3-d756-4d32-9ecd-7930958936fc",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "276eb891-10b9-446d-baaf-e1baf32dc708"
        },
        "item": {
          "id": "aff33e9c-5660-4e46-8536-b9d33a0c6b81",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "a64a73a4-20ec-4e4b-be44-2e04fa66b23b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4749d0e8-17bf-43c8-875d-efd87f4925dc",
        "cursor": {
          "ref": "ffb8850b-9c7f-4648-af98-18d337ab583b",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "058edfe1-61f2-47b8-a861-517ffb871f10"
        },
        "item": {
          "id": "4749d0e8-17bf-43c8-875d-efd87f4925dc",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "9216a273-a390-4384-90a3-7412ac69e44e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef444984-5ca2-43af-b708-54c226189f42",
        "cursor": {
          "ref": "8cc7a819-a6db-4fae-bb40-4f821631e641",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "c210e02e-fe39-4fec-92c1-f2f3cf4f94af"
        },
        "item": {
          "id": "ef444984-5ca2-43af-b708-54c226189f42",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "5d77911d-61ea-4695-b509-7b3f9c0ef5d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b695996f-70cf-44f4-a207-3aee950296c0",
        "cursor": {
          "ref": "82aa88fa-efb7-406a-82fe-1ad3f0731eb3",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "2dd40216-5613-4808-a241-7291af4de363"
        },
        "item": {
          "id": "b695996f-70cf-44f4-a207-3aee950296c0",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "a715ff8e-8dd6-40e5-b270-fb81296a828d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfd2e9fe-9329-4555-8120-0171b3c6589b",
        "cursor": {
          "ref": "ecd53d26-a211-4816-b5c2-e1ffd2c981f1",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "36fc0bc3-3743-4e30-93a3-69cc04c55368"
        },
        "item": {
          "id": "cfd2e9fe-9329-4555-8120-0171b3c6589b",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "315b2267-181d-43c8-a441-4dbbb98b414e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1536,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa45c0af-fce7-4903-ac78-a5e24060484b",
        "cursor": {
          "ref": "a20c7c07-0b7e-4fb7-a999-814e450f3df0",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "7d781c23-aa7c-4d90-a820-1bea13a77d21"
        },
        "item": {
          "id": "fa45c0af-fce7-4903-ac78-a5e24060484b",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "127f93b1-77c8-4d21-996f-92f067b07065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f2d3a2c-df5f-468e-87ae-eadad62c0110",
        "cursor": {
          "ref": "566a2e9a-beef-47ba-b57a-dc6e85133344",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "00d0ff41-2f65-49f6-9ab2-eb9ee69f67b8"
        },
        "item": {
          "id": "5f2d3a2c-df5f-468e-87ae-eadad62c0110",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "80d579c2-e7ed-4d73-b518-83381f68429d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04689b50-b674-4972-91c8-97311d5243b1",
        "cursor": {
          "ref": "c4db17f7-09f3-4278-be70-cae345d8c16a",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "5aa44f74-191d-4c30-8163-deec9de0f194"
        },
        "item": {
          "id": "04689b50-b674-4972-91c8-97311d5243b1",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "64f88d42-ba96-4038-a4a9-e0f5c3517b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fac0f781-64a8-45dd-9685-9ff893d60e6f",
        "cursor": {
          "ref": "d4fc9527-09f0-4c9a-980f-9b5f731f0c2c",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "943a89a2-5542-4f87-a93a-0ca47ff4a027"
        },
        "item": {
          "id": "fac0f781-64a8-45dd-9685-9ff893d60e6f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "1111630e-038a-41b0-b25b-8d600ff163fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7539d679-decd-4518-997c-9e50485eb88b",
        "cursor": {
          "ref": "ea533e7c-78c9-4e88-810d-46060ac5edc0",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "2b0fd046-4dad-49aa-bef6-1d184c8b13ae"
        },
        "item": {
          "id": "7539d679-decd-4518-997c-9e50485eb88b",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "e32dc632-a5db-4972-a395-e22047ba476e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a16b8db5-69a5-4796-b707-9e166208b105",
        "cursor": {
          "ref": "98b019de-25f0-4bbf-8e99-1136fc7d9c2e",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "848ddd5f-64e1-4eec-b2f4-99372e71e1e6"
        },
        "item": {
          "id": "a16b8db5-69a5-4796-b707-9e166208b105",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "3a5009eb-7738-40b0-9f68-853e9b74f4ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb738527-cdc1-4c49-8c46-ee2b1ca50827",
        "cursor": {
          "ref": "b1723bd6-f290-4f4b-8b92-6815b4afb2e6",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "a8728812-e87c-4171-bea7-1d9e6d970509"
        },
        "item": {
          "id": "bb738527-cdc1-4c49-8c46-ee2b1ca50827",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "48787125-3af1-4516-8d00-3cd4c65e5047",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1501,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc958319-7220-4e04-a565-dcd8db7318be",
        "cursor": {
          "ref": "9a0ced12-7cbb-4ed2-8eb6-f88bec3f3245",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "95c8dbc6-068b-4768-8bc1-9aad18a9331d"
        },
        "item": {
          "id": "cc958319-7220-4e04-a565-dcd8db7318be",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "0de3f990-ac81-40f9-b946-fe4ccd537e29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8740f538-44e0-49f3-bf6b-38bdf53db399",
        "cursor": {
          "ref": "aba04232-9857-4256-9669-a97a7c79a1da",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "112f2b91-617f-4660-8eb7-0f051bcc6fd2"
        },
        "item": {
          "id": "8740f538-44e0-49f3-bf6b-38bdf53db399",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "6d9cd2b7-ff2c-4e88-9b76-d424ba70bb4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6dcf8bb-8248-4dc9-9cf4-af3bab5a0e15",
        "cursor": {
          "ref": "398266af-c355-4cb5-ba54-6650a752b9d1",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "187190b0-1260-456e-8627-97f13490e45b"
        },
        "item": {
          "id": "d6dcf8bb-8248-4dc9-9cf4-af3bab5a0e15",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "bed9284b-8328-4154-bb79-c1068d3e7316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a18dd0e1-71f2-4ecc-9dbc-e9513d5d64f8",
        "cursor": {
          "ref": "bdc19025-a99e-4fd7-92e1-043df3b1a2df",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "2fa76d7f-2de5-41a1-a490-af01ce79e55a"
        },
        "item": {
          "id": "a18dd0e1-71f2-4ecc-9dbc-e9513d5d64f8",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "dce9c135-76ee-4836-aa6b-a15d39ce4c6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ac09bc3-db17-4a81-8ac6-91b8d36c4dc7",
        "cursor": {
          "ref": "383efcd2-5681-4d2e-924a-f95c4298aeb8",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "a986adc1-736d-41ec-ad22-577427876599"
        },
        "item": {
          "id": "4ac09bc3-db17-4a81-8ac6-91b8d36c4dc7",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "68f941d1-c590-47a5-9040-c2cf8a20f64f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fa279af-79f9-45e9-acdd-ee3f41bbd64f",
        "cursor": {
          "ref": "e368ac7d-08b9-48ed-846c-344317c4a054",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "309ff16f-d50f-4309-885b-310258856975"
        },
        "item": {
          "id": "9fa279af-79f9-45e9-acdd-ee3f41bbd64f",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "98f636da-385c-495b-8bf8-a03639a38f0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc35b128-2ee9-49ed-96f3-ccd4da7cc885",
        "cursor": {
          "ref": "6a871df0-6dfd-40da-a73d-db7b15f77fe7",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "8d465e7f-a815-4347-81b0-3a09ce377bd5"
        },
        "item": {
          "id": "cc35b128-2ee9-49ed-96f3-ccd4da7cc885",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f75b7212-86de-4d11-8718-92a20a8894b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e912e586-8b00-4eae-99f4-3e0aa243df7b",
        "cursor": {
          "ref": "cc39ab9f-215d-4bfc-a575-daecf5263fab",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "9a336560-4d48-4eed-b9d6-d3726d350943"
        },
        "item": {
          "id": "e912e586-8b00-4eae-99f4-3e0aa243df7b",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "9fde369c-4d9d-4b8e-b986-26b644d75103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe879672-35eb-44d7-b946-506ec6a224f9",
        "cursor": {
          "ref": "bbabcfc4-fa4b-4685-9ab6-c99d3edbd7c9",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "aed2a3f9-cdb4-4bd0-83db-745228946f24"
        },
        "item": {
          "id": "fe879672-35eb-44d7-b946-506ec6a224f9",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "99f7e2a3-f931-41a5-8366-5c78f8d22bac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20e98646-204b-4efc-81a8-b250f1e4e67c",
        "cursor": {
          "ref": "6f3c2465-1b07-457b-b5ae-6e905d7aaa24",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "5033b691-a946-47c2-a2f5-8cc8874e6f65"
        },
        "item": {
          "id": "20e98646-204b-4efc-81a8-b250f1e4e67c",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "3c9225a5-022a-4a41-99f5-9656f1ff50cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c84ea5f-7c7d-47aa-811b-7d111a01ceb3",
        "cursor": {
          "ref": "4137f463-b411-4682-830b-a5acfc0b8d76",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "c8861a80-178a-4ff7-b6e8-2991bcb55058"
        },
        "item": {
          "id": "9c84ea5f-7c7d-47aa-811b-7d111a01ceb3",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "5d84eed5-e7f7-4f5d-8cdc-c2a95ad1e4d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6efb706-acd5-408d-ab03-52c046d36879",
        "cursor": {
          "ref": "3452fea6-ac41-41d3-9c63-000c9de4e3c0",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "554e16a3-f2df-407d-927f-58e4c1cded99"
        },
        "item": {
          "id": "c6efb706-acd5-408d-ab03-52c046d36879",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "4182a2a1-2fb9-4bf2-acfa-30c6257d84eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe66eaee-12ad-4e15-9d0f-b9f441ffcfb5",
        "cursor": {
          "ref": "cf1ff329-6418-4478-b2b6-c841fc0b9e46",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "bd06b704-3be7-4e18-903d-f63d68bc2a59"
        },
        "item": {
          "id": "fe66eaee-12ad-4e15-9d0f-b9f441ffcfb5",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "57543a60-0e47-4ee6-840e-c03bd8a85b93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc359ba1-e142-4e8b-a638-ec5c55ecc90a",
        "cursor": {
          "ref": "e09cd59f-d96c-4161-9ef7-2a4256be5f44",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "67272c9c-7871-4d1c-94a0-df3dfcc0ec92"
        },
        "item": {
          "id": "dc359ba1-e142-4e8b-a638-ec5c55ecc90a",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "91826ea7-b182-4ec9-abff-841aafa7b5ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "431bac9c-5a88-412d-a285-2814427a2689",
        "cursor": {
          "ref": "3171019e-e679-4f58-b413-844509cde285",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "8a86823e-8c84-4cfb-89c9-a61a658e0898"
        },
        "item": {
          "id": "431bac9c-5a88-412d-a285-2814427a2689",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "ec976b53-73ed-4b21-a3c7-5350c1021254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15dfbabe-a582-4fcc-98dc-12f8e6ec235e",
        "cursor": {
          "ref": "66224678-e407-48f6-82b7-c10fac8191bd",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "cec42a0a-236c-410d-878a-44c5ea23e274"
        },
        "item": {
          "id": "15dfbabe-a582-4fcc-98dc-12f8e6ec235e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "6312cc7c-7954-4611-98a0-4af7a15ab686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e849790c-9496-43af-8a14-9a3eab2968f6",
        "cursor": {
          "ref": "bfaf463e-2ec4-4a22-9fec-6757232d4e9a",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f4597c1f-e1f2-4341-a6c4-fffc37c9a7f4"
        },
        "item": {
          "id": "e849790c-9496-43af-8a14-9a3eab2968f6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "400f5b7e-a985-435e-b634-824fc2df9c0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0da2ceca-ce36-44ae-99c0-91b3710108c6",
        "cursor": {
          "ref": "3b63b54c-6f8c-4591-9833-624c39c61ff9",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "48699200-ad2d-4d93-a7fa-f2bd156ede3e"
        },
        "item": {
          "id": "0da2ceca-ce36-44ae-99c0-91b3710108c6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "15a87f38-eaa7-49dd-9687-159acbab931f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04af70a1-7351-43cd-82c2-cc39fbb4f52e",
        "cursor": {
          "ref": "e77f1bd5-50ee-442c-8a6d-a386ef8519f5",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "88fd2b3d-0e75-4e4f-a141-ac5cf27234e7"
        },
        "item": {
          "id": "04af70a1-7351-43cd-82c2-cc39fbb4f52e",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "15076450-dd7a-455a-a323-09fa91c7f389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11f07940-036a-4904-a2ff-77410872a5e5",
        "cursor": {
          "ref": "6d91a0b0-4f72-498f-a7a0-0caef0ef9045",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "1f432084-e472-4d61-80f2-2fb38d310d22"
        },
        "item": {
          "id": "11f07940-036a-4904-a2ff-77410872a5e5",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "a74082dc-5a4c-4916-bf82-e59f5fcef820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb7207b9-a451-4282-950f-4c40887be271",
        "cursor": {
          "ref": "a41eb228-8940-4474-a69f-b2315fbbf6e8",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e4e38e03-2210-4c0f-94fe-5485643646ff"
        },
        "item": {
          "id": "cb7207b9-a451-4282-950f-4c40887be271",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "9f6bf0e8-1d63-4a31-be85-221ec0cd5510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a30d82f-371a-44b1-b015-4db6be8813ea",
        "cursor": {
          "ref": "87343cf5-2318-432f-9dbd-562d274af706",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e283ead6-f41c-4529-88da-ef9731e48730"
        },
        "item": {
          "id": "3a30d82f-371a-44b1-b015-4db6be8813ea",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "0dffbefb-5d64-483a-917e-168f3ed7ceb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe87ab7-0356-4e29-9bb1-149d40ac55be",
        "cursor": {
          "ref": "6c179bb9-d882-4067-8716-1ddb0c1dabfe",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "d12dd659-1a10-49ca-b530-7819ed570af6"
        },
        "item": {
          "id": "afe87ab7-0356-4e29-9bb1-149d40ac55be",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "6a68d040-f281-4d58-ad99-e4699c0b5d65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "711c8029-be58-4139-9c28-1e81a3bc4d9a",
        "cursor": {
          "ref": "d4916ac7-1516-450c-ba0a-72bca90aab7c",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "6a353943-f211-4abe-a2fb-cf1c2270aa6d"
        },
        "item": {
          "id": "711c8029-be58-4139-9c28-1e81a3bc4d9a",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "425d33c8-e5be-4a1a-b5fa-96aeac44eb4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80f29980-5683-4663-b632-44fc437f1691",
        "cursor": {
          "ref": "0cb6e1c8-e8d9-4845-9c28-9bdf8eb753a2",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "bcf6e143-1ecd-41c8-ad9a-476b9117153c"
        },
        "item": {
          "id": "80f29980-5683-4663-b632-44fc437f1691",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "da8bfa59-a50e-4eb7-be32-8f5633ed7291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f10b045c-a503-4b8e-a750-06bc84ae20cc",
        "cursor": {
          "ref": "17c48b89-764c-477c-8ebc-bda9fc07fb84",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "e5664e4a-8ed1-4d30-8dfd-7844cff9c3ef"
        },
        "item": {
          "id": "f10b045c-a503-4b8e-a750-06bc84ae20cc",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "77fccf72-9599-440b-9560-b9e9158fd23d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1b1369c-51c2-4891-a153-669013de0b40",
        "cursor": {
          "ref": "f872d0a2-bf2b-43e3-8582-acf4fcdec0db",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "4a4667b9-50b9-4ec6-a1d4-cc151e5cc3b8"
        },
        "item": {
          "id": "b1b1369c-51c2-4891-a153-669013de0b40",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "f9cf5274-2d8c-435b-a614-7fb7c3f08937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2fa3833-c67d-4916-9392-985fbaa50a7f",
        "cursor": {
          "ref": "5ae7f400-433d-49a0-9fec-2a8f5bc5dfb7",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "45bcb908-65dd-4374-9ae9-a403b646f6f3"
        },
        "item": {
          "id": "a2fa3833-c67d-4916-9392-985fbaa50a7f",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e5e21b79-6588-49bf-8c3f-e74d1b487fc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea040a4c-4403-4383-b578-f3016fc45472",
        "cursor": {
          "ref": "5a2fc49d-c8ce-4428-a1ef-470c380502c6",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "27b0109c-bc21-4611-af3f-238213f70d9c"
        },
        "item": {
          "id": "ea040a4c-4403-4383-b578-f3016fc45472",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "b2529897-91bd-4255-a878-64afe8453bc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45763cc9-f9a1-4878-872c-c899f56e5557",
        "cursor": {
          "ref": "d700de58-2bce-48bf-a9e9-fb0b96275b70",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "d1b855fd-e923-421d-b103-d99f79435886"
        },
        "item": {
          "id": "45763cc9-f9a1-4878-872c-c899f56e5557",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "0082539e-c3b4-411e-95c7-563a025f74b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd33ee67-198c-4299-8b0e-f728419a8ada",
        "cursor": {
          "ref": "dd6d6660-9786-4eb4-a2dc-24b001a09e47",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "99b06c29-31ac-422c-868d-88e1bf211f6f"
        },
        "item": {
          "id": "dd33ee67-198c-4299-8b0e-f728419a8ada",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "5ba3c0c5-3b99-4bf1-a230-34225fd6d678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "888792ad-5740-403b-b861-0c9dbe3069ad",
        "cursor": {
          "ref": "afc109e8-e13b-417d-9a87-21786a6bed72",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "856ec667-0cc4-46e4-91b7-fff7452ffd27"
        },
        "item": {
          "id": "888792ad-5740-403b-b861-0c9dbe3069ad",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "631cba3b-ae7c-4889-ad94-85c272d050ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15a217a1-4293-49e7-b570-0e36aabb21f6",
        "cursor": {
          "ref": "5ec19f58-ffeb-433f-92db-5c0496a20821",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "6c578a60-655f-4dc7-9442-ae79f112237b"
        },
        "item": {
          "id": "15a217a1-4293-49e7-b570-0e36aabb21f6",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "6f85d154-1e83-4d91-8260-4f40e374f207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dac3f3a-f44b-464a-a356-34dea6779e96",
        "cursor": {
          "ref": "dc5a3193-4182-4bab-b73e-fc8d767ca7b6",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "d6306af4-853f-4a3a-97e0-615bea735bf0"
        },
        "item": {
          "id": "3dac3f3a-f44b-464a-a356-34dea6779e96",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "814cea2e-a817-4a07-83d0-f01063a02071",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ec3ac12-b194-42d3-ab14-5d1a54816463",
        "cursor": {
          "ref": "4c7843b2-f850-48bb-bd8a-834b772ff68e",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "d80cca50-443c-412c-91b9-2e63223ab357"
        },
        "item": {
          "id": "4ec3ac12-b194-42d3-ab14-5d1a54816463",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "6be876c2-9afa-44e0-9d0d-70c36551002f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c37eaed-1df2-48d7-8604-e4d3c9e15653",
        "cursor": {
          "ref": "eea3dde8-7258-4aa3-8e94-24fad880471e",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "e6120f3a-252f-4928-91f4-207ff54115a2"
        },
        "item": {
          "id": "7c37eaed-1df2-48d7-8604-e4d3c9e15653",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "ea29a214-6508-4bcc-a12f-68d9a4752fcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f41eec5-e193-4058-ac55-ec06791bea06",
        "cursor": {
          "ref": "bb248dbf-32fc-4368-8fe0-ca66b2392083",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "0adacc42-3043-4d15-8966-b990b35c1af2"
        },
        "item": {
          "id": "9f41eec5-e193-4058-ac55-ec06791bea06",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "0649d450-841b-43cc-93a3-1e691ceac558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85b60aba-c961-442d-b344-eccdba1e35e9",
        "cursor": {
          "ref": "ad9b366d-3580-4f4a-9a30-523bafd1c200",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "2f78a0df-8f22-4fa7-b449-4589ff0f83c1"
        },
        "item": {
          "id": "85b60aba-c961-442d-b344-eccdba1e35e9",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "2e09d16b-b395-4ffc-8c3b-9ebafdcfc5e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d2d6af8-cee3-4577-9b77-90545461c913",
        "cursor": {
          "ref": "d54a9a50-adc8-4403-bb3e-8814bd97a60b",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "4ee98562-f4e0-4498-98e0-bd54cee03599"
        },
        "item": {
          "id": "7d2d6af8-cee3-4577-9b77-90545461c913",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "74dec4d4-f53f-4989-a3d6-f0ede92b71c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "838a87c1-824e-42fc-b0b0-df20a8c4bfaf",
        "cursor": {
          "ref": "37342c7c-c4af-4cda-8dcd-c4189cfbb920",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "5ec9594c-d85b-4b70-b938-22c2e7598082"
        },
        "item": {
          "id": "838a87c1-824e-42fc-b0b0-df20a8c4bfaf",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "7ecaf575-24fb-4f4c-ab1f-ea300edbddf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b16320f9-59e4-4e0a-b916-aa3c60927847",
        "cursor": {
          "ref": "c5b1c31d-c8bf-4d59-a1a2-ea97789a4e06",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "c1a9b49b-353c-48c3-b31a-0f4440a9c300"
        },
        "item": {
          "id": "b16320f9-59e4-4e0a-b916-aa3c60927847",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "1b04be5a-b4aa-414e-88e8-587b4e6d1550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b4f8ff4-990a-45da-b630-a52414dab072",
        "cursor": {
          "ref": "42aeaac0-9903-4caa-b1cf-981daa1e431b",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b0f01fbd-9a83-4bc8-9724-f79e520cdd78"
        },
        "item": {
          "id": "6b4f8ff4-990a-45da-b630-a52414dab072",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "3eed5f8f-f4c3-4f99-b740-e2b7b11de9c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2a59e18-daaf-40ac-9be7-f15adb278ac4",
        "cursor": {
          "ref": "8f2feb24-ed88-4baf-93ce-47bfc6a2325d",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "dbe61bcc-3c6c-4cb3-8b94-dad0ecff1e68"
        },
        "item": {
          "id": "f2a59e18-daaf-40ac-9be7-f15adb278ac4",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "3928307a-f5bd-46d9-b1e7-06e576d4112d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28455141-5a2c-4521-9164-2f4ba3022c7d",
        "cursor": {
          "ref": "7491329d-f645-4669-8ca0-3c2dcad117ff",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "6294bf31-29b2-46cc-af99-7c5d90654212"
        },
        "item": {
          "id": "28455141-5a2c-4521-9164-2f4ba3022c7d",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "adca714f-0050-4b05-942c-79e7adc59acd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3367e40-6d40-4263-9e44-3405aa9251e1",
        "cursor": {
          "ref": "c08b0b10-a4ea-4700-8482-1050cd9a23e5",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "a517eeeb-18ea-4be1-8bc5-9abf15a62d1b"
        },
        "item": {
          "id": "f3367e40-6d40-4263-9e44-3405aa9251e1",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "ec39287b-8794-429c-aaa0-6a0dbc4a0c4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "163446c7-2909-4e5f-a4d4-83e1ae38f517",
        "cursor": {
          "ref": "5553ab22-a4d3-4e81-9748-f62f900875cd",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "30d58bb3-7981-4eec-b30d-3a2bcb330ed1"
        },
        "item": {
          "id": "163446c7-2909-4e5f-a4d4-83e1ae38f517",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "e2dd5553-e7a8-4c1a-a10c-914dc35827df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d8be795-34e0-455c-adde-529e70b51d22",
        "cursor": {
          "ref": "c99f79d7-de0f-4160-bd98-0ca539a29de6",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "7cd9dc51-4428-4878-b0f3-4105c7d2ad25"
        },
        "item": {
          "id": "3d8be795-34e0-455c-adde-529e70b51d22",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "2b12c29a-f87e-4a7b-ac42-1cbbee3981ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ba040f0-f2c1-4749-bbee-1538c71964c2",
        "cursor": {
          "ref": "0853df09-bff3-4a20-9d8d-468c2332c05b",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "9d97ddda-374d-4c96-90bf-926e47ed157f"
        },
        "item": {
          "id": "1ba040f0-f2c1-4749-bbee-1538c71964c2",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "13809a24-01eb-4fd9-9b04-5cea0b7aafb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45b6ea19-602a-454d-98ac-d01de408a3d4",
        "cursor": {
          "ref": "2d561676-db45-4159-87ca-1c6dc555328a",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "dabf2a11-cbd7-4db0-bcd0-f3406ea8dd9b"
        },
        "item": {
          "id": "45b6ea19-602a-454d-98ac-d01de408a3d4",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "7d1051cd-b4ac-4c7b-9c80-acfde79a95b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30d7e5a4-d019-416d-a2af-871796faa5d9",
        "cursor": {
          "ref": "12c7876e-9369-404e-930b-6c5dd196086c",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "f672e53e-81c2-495a-be12-58f56a94a22a"
        },
        "item": {
          "id": "30d7e5a4-d019-416d-a2af-871796faa5d9",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f0cdb43f-1e81-4536-bee6-8d12a16512e0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 81,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad00e293-0256-4e5f-a287-f669aa6579da",
        "cursor": {
          "ref": "a11c3a4c-6f56-44f4-bfb0-a80bb964f2f1",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "be31acd0-69ed-4dcf-b435-ba8eebd7d957"
        },
        "item": {
          "id": "ad00e293-0256-4e5f-a287-f669aa6579da",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "ff4d294b-95d9-4735-b378-d430d93fe092",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "eaf6d180-26c1-4210-b102-ed312d605be7",
        "cursor": {
          "ref": "df0d12de-2512-43a7-ae9b-584beb2298e0",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "81d8ce0a-da9e-42be-8854-9cc5dadd4e1e"
        },
        "item": {
          "id": "eaf6d180-26c1-4210-b102-ed312d605be7",
          "name": "credentials_issue"
        },
        "response": {
          "id": "6a716635-4015-4a45-b48e-a401d0754530",
          "status": "Created",
          "code": 201,
          "responseTime": 8897,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ba1c64c-9e41-40cb-a344-fe549e9ef762",
        "cursor": {
          "ref": "5e8e9ea1-29bc-489c-bd46-2aa818f3ccba",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "e8909743-4035-4758-977c-f026cffc6969"
        },
        "item": {
          "id": "4ba1c64c-9e41-40cb-a344-fe549e9ef762",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "39936523-8ca5-47e8-8df0-aba611c609d1",
          "status": "Created",
          "code": 201,
          "responseTime": 8890,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2d378d2-3e16-43a3-afd7-284245eeb2a2",
        "cursor": {
          "ref": "a3b2233c-be4a-44f6-96cd-0a12ad47f076",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "f6c4ab2f-e5c0-45a0-b030-c3650c417c12"
        },
        "item": {
          "id": "e2d378d2-3e16-43a3-afd7-284245eeb2a2",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "5b506596-1b0e-4713-9667-7badf7542577",
          "status": "Created",
          "code": 201,
          "responseTime": 7822,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0608ea1-1755-4721-b968-0cd081ec8445",
        "cursor": {
          "ref": "46310d03-8822-4b2d-933c-77c5a6adbb86",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "dcb0f565-df88-494a-9054-39e070032aaf"
        },
        "item": {
          "id": "a0608ea1-1755-4721-b968-0cd081ec8445",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "9ca1c384-e23d-4004-a171-bf47ad50e156",
          "status": "Created",
          "code": 201,
          "responseTime": 8041,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "422d5c6d-e864-4f84-9c6d-4cc7c5b494dc",
        "cursor": {
          "ref": "0b4fb83a-0010-41e7-82e4-97d791f82ec5",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ecdffff4-0272-405f-bc1b-f1144699402b"
        },
        "item": {
          "id": "422d5c6d-e864-4f84-9c6d-4cc7c5b494dc",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "3cd2d99a-c8cd-4c73-a295-0b1c570e4e48",
          "status": "Created",
          "code": 201,
          "responseTime": 7915,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f6f8829-28e3-4d69-8d01-37837dce914b",
        "cursor": {
          "ref": "57d30576-ad53-482c-a899-cba6549cf9e2",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b2f4eb6a-3a22-4a20-8c90-2f92044e14c1"
        },
        "item": {
          "id": "1f6f8829-28e3-4d69-8d01-37837dce914b",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "be48c8d0-24a4-494d-bf39-d72d11e02ccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "1ddd0d4c-33c8-454f-9126-e4304bff3c00",
        "cursor": {
          "ref": "12a1b1a0-4296-4adc-b6dd-69c30689dbbd",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "3b44a93f-3cb9-4cc4-8a3e-a2c173a34835"
        },
        "item": {
          "id": "1ddd0d4c-33c8-454f-9126-e4304bff3c00",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6a15b4ae-527c-4d72-8699-cf7fa272527a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e04ceb64-88f7-4c98-8e8d-317506e1c043",
        "cursor": {
          "ref": "4be6c241-f402-4d38-9723-c70762d0839a",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "5528f73b-fb89-4363-9604-54727bbf3e69"
        },
        "item": {
          "id": "e04ceb64-88f7-4c98-8e8d-317506e1c043",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a179ac2d-a0b1-4b80-94f9-dbd8f8b96e93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4de25336-d308-4d5d-afb0-4a145fe822e6",
        "cursor": {
          "ref": "21791b4a-a030-44fc-8e9a-2d5b9a708a09",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "26cf7f65-5e31-4409-9f00-ec98f71ab8ad"
        },
        "item": {
          "id": "4de25336-d308-4d5d-afb0-4a145fe822e6",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "87c4506f-5639-40fa-bafe-bf91ea53534a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "121b0c07-7e8b-4fd5-aa8c-6fbf90dfc36d",
        "cursor": {
          "ref": "a5dad457-d5d8-4669-981b-4c83804f46b3",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "21c00da5-7de2-4ade-8580-a26d56b44016"
        },
        "item": {
          "id": "121b0c07-7e8b-4fd5-aa8c-6fbf90dfc36d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "dff8f673-7329-45f5-ba21-438104cf503e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5659a6f-7712-4482-a12b-5a2ec69d3d07",
        "cursor": {
          "ref": "9c322968-3ffb-4438-b402-c9fcd0b66b59",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "947aa35d-8a45-45a4-bf4b-ecbe9a72c975"
        },
        "item": {
          "id": "f5659a6f-7712-4482-a12b-5a2ec69d3d07",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "fd80151e-0894-4ddf-ae65-80ef9402061c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b9593ac-f2ae-4988-87c7-7fcb6dfc74c2",
        "cursor": {
          "ref": "6f7513b9-15c8-498e-b476-609506512849",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "0aab21e4-5334-4f4e-a386-68c7eed74af5"
        },
        "item": {
          "id": "6b9593ac-f2ae-4988-87c7-7fcb6dfc74c2",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c654a5a5-e5cd-4c51-8f9a-3c38842352ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "021cbf6d-a396-42a3-a80e-0c0cd6e5ebb9",
        "cursor": {
          "ref": "25d9f570-c5f7-4303-81c7-5fed3e2b3156",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "daba58b5-10bb-402a-b91c-aea61ac26226"
        },
        "item": {
          "id": "021cbf6d-a396-42a3-a80e-0c0cd6e5ebb9",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c28cda39-3e11-4065-8148-8a506557159a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b59d0b50-4f94-43d6-9927-f4b2509020aa",
        "cursor": {
          "ref": "731f27f6-bb8c-404b-baae-e92419105128",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "6bd0a4d6-4f73-4a6c-81a4-245caa230c86"
        },
        "item": {
          "id": "b59d0b50-4f94-43d6-9927-f4b2509020aa",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "89f1e0dc-b742-4253-b6cd-5eb6df5eb7d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cc7e3fb-d710-4826-85de-f3f11f31afa8",
        "cursor": {
          "ref": "2cb81224-bab9-42b4-8c2a-a7274258b4e6",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "76083328-1f9e-4841-9ef7-44a629d317c1"
        },
        "item": {
          "id": "5cc7e3fb-d710-4826-85de-f3f11f31afa8",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "54eb5a23-9682-48b1-93d2-090f52292d12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2d007b9-be7f-4140-9829-5d63d36e8688",
        "cursor": {
          "ref": "ab616b6a-e121-41df-936e-97c52ffba518",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "39102548-eedb-4201-8cde-ac6c84e96194"
        },
        "item": {
          "id": "e2d007b9-be7f-4140-9829-5d63d36e8688",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "66148bfa-b7f9-4d85-9a8b-dc918de77174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2b98c81-70b1-4c42-a43c-3666c0b2cb73",
        "cursor": {
          "ref": "317c7854-6750-4903-8b4c-bdde57a746de",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "370107cf-672a-4871-9e59-62c0873b298f"
        },
        "item": {
          "id": "f2b98c81-70b1-4c42-a43c-3666c0b2cb73",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a108e2f2-479a-4f9f-a126-1ecb5226b88d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d9d1e50-9527-46e0-828c-eb8fcc954793",
        "cursor": {
          "ref": "973b4de4-4b3f-43aa-9ad9-4e8c9a9fb525",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "e5de64e8-6eb0-44f3-8d62-e6b155ffbd44"
        },
        "item": {
          "id": "0d9d1e50-9527-46e0-828c-eb8fcc954793",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "465bd8b4-ee7d-45e3-b178-e6487002ed9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfe262cf-7146-4d6d-bc68-c17fbd2ee1b8",
        "cursor": {
          "ref": "dd9ddbe6-0947-4670-8709-ce50b52dc310",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "fd35624b-2908-4840-ab87-276cbc302075"
        },
        "item": {
          "id": "bfe262cf-7146-4d6d-bc68-c17fbd2ee1b8",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f1e63ed8-75f3-43e3-87e3-5ad281fe87f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09578a88-dc5d-47ef-91a2-bed472604336",
        "cursor": {
          "ref": "9bba3888-78ce-44e5-9b64-e74e9ae5cfe0",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "dd733ea0-5603-453a-b90c-0ecb7bc71f28"
        },
        "item": {
          "id": "09578a88-dc5d-47ef-91a2-bed472604336",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "48690fe4-6a6a-45eb-a955-36abb24f78fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65cc79da-91c3-457e-bb26-11d849457fc6",
        "cursor": {
          "ref": "b4eff985-540d-462e-ac65-d846258fa778",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "c5bef74b-a820-46b1-b2f7-2117e95734b6"
        },
        "item": {
          "id": "65cc79da-91c3-457e-bb26-11d849457fc6",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f2204ad3-9fd6-48e3-88da-2f2938048125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e276c9d-aea8-4648-ace7-58d9331ceadd",
        "cursor": {
          "ref": "ee470368-ae36-433d-987c-6ba9bf912273",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "28432ef7-fea9-4332-80db-a3084ed44a5a"
        },
        "item": {
          "id": "8e276c9d-aea8-4648-ace7-58d9331ceadd",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "fd0f9487-565d-4ff1-ae08-68c06bf5af34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49117852-acf1-4e3c-af02-5333184e71e6",
        "cursor": {
          "ref": "702eb741-4160-48fb-82b2-bd704b150742",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "fb89a083-e962-4840-a45c-91ebe9a17e78"
        },
        "item": {
          "id": "49117852-acf1-4e3c-af02-5333184e71e6",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2a753f99-dca7-4cb3-947b-6bbd8bee811e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "373a2b3e-6ec8-4cd5-872c-b96d1e875a6b",
        "cursor": {
          "ref": "49983814-f6c2-46ab-adc0-c94b021f5ddf",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a51d46ab-d3a4-4097-a6fa-1e3cf98ede60"
        },
        "item": {
          "id": "373a2b3e-6ec8-4cd5-872c-b96d1e875a6b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "107c5c24-efb4-4b9c-86c3-42e5123f7576",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38374839-1c45-45c9-9eea-fafc40c7c0fb",
        "cursor": {
          "ref": "d2eb7f90-0da1-468a-bbfe-fca5be58c455",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "9a425a35-9a69-487c-872d-72cda9689770"
        },
        "item": {
          "id": "38374839-1c45-45c9-9eea-fafc40c7c0fb",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "bc26e2a5-f4f1-4d0d-a57b-e400dfd3efae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e31b3b6d-9737-4bb8-b09c-f36f1105fe3e",
        "cursor": {
          "ref": "2e2dd406-3a53-43b2-9f24-7b1387859a8a",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "04f7b4f6-35aa-455d-a462-97034873879d"
        },
        "item": {
          "id": "e31b3b6d-9737-4bb8-b09c-f36f1105fe3e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "2f54fb01-0019-4a91-a1b1-dcfcbae081dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd0e4327-714f-4f83-b2b0-2af7b99867bd",
        "cursor": {
          "ref": "38b08c37-c7ab-4889-b775-db45a2738ce6",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "59f3d2ef-4406-417e-8916-c195ba9bd51c"
        },
        "item": {
          "id": "cd0e4327-714f-4f83-b2b0-2af7b99867bd",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "56db435b-1796-4d7c-9fb9-41088119f3a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26a56eec-4d73-4225-a784-11cbf455a059",
        "cursor": {
          "ref": "4e3098b5-05db-466d-8daa-d891c51fa57b",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "337e8d92-337f-49ce-af9a-bac19c1a7b0f"
        },
        "item": {
          "id": "26a56eec-4d73-4225-a784-11cbf455a059",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "33eaeff8-8474-4768-a4f3-da58100b1034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f532709-6123-4ce8-96df-6afb2d6ba290",
        "cursor": {
          "ref": "18e9101e-5a1a-495c-83c1-23e6165dc017",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "d51dd861-4292-4add-8e94-c571388ff838"
        },
        "item": {
          "id": "2f532709-6123-4ce8-96df-6afb2d6ba290",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e2cacd6f-1091-459e-b6ba-0de1bddfcc8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7882b50-a232-4f78-acfd-02ed7e1931c1",
        "cursor": {
          "ref": "91997c8c-f87d-4886-9688-68e33d0d03bd",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ac9167a1-fbbf-4eba-9f21-e0f6c50c3d40"
        },
        "item": {
          "id": "d7882b50-a232-4f78-acfd-02ed7e1931c1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "4080df5c-e550-4f4f-818c-7fffcc714e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e98d28d-6a24-49a7-8ee7-d2696000ff49",
        "cursor": {
          "ref": "6b01fe83-d600-477f-a9f7-cb3f605efa5d",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "4bfa6fbb-4a64-4da5-861f-c3492c4ff02f"
        },
        "item": {
          "id": "0e98d28d-6a24-49a7-8ee7-d2696000ff49",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "842e161b-a4c7-4d4f-9ebb-8315e9eff35f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d343a110-3d80-46f8-bad1-ee37747585e6",
        "cursor": {
          "ref": "49f4b84e-f43c-4a77-8f25-a5308e5c8bea",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "ea42b873-ee83-4f75-9975-b4b93242eda9"
        },
        "item": {
          "id": "d343a110-3d80-46f8-bad1-ee37747585e6",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c552e45f-0ea5-4e50-9ab5-296d712b977b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25e998b6-c5f2-42de-a2d9-e1c35a09db03",
        "cursor": {
          "ref": "5faffc05-91a4-4410-812f-d4d6e72fb491",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "c5e19a4e-b622-4eb4-9778-dbe55369c6c0"
        },
        "item": {
          "id": "25e998b6-c5f2-42de-a2d9-e1c35a09db03",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8c7b7a4b-d108-48dc-b618-06a49bf9a45c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35098c61-084a-4575-949d-07581a224acc",
        "cursor": {
          "ref": "be04dab3-2f35-4e69-99ca-3de45be5163b",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "a0bfcdbf-ef77-4db8-b067-5a07ac0f8b7c"
        },
        "item": {
          "id": "35098c61-084a-4575-949d-07581a224acc",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "af230a8e-683a-42ee-9fca-f66517f67d3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b41d4f6e-a733-40a5-9def-0ffa124e0369",
        "cursor": {
          "ref": "dc4ebf6c-0eab-4413-bc46-b731c5a114b6",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "88595dc8-45f1-48da-a99d-05238c53844b"
        },
        "item": {
          "id": "b41d4f6e-a733-40a5-9def-0ffa124e0369",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2779d94b-925e-4e3b-a0e3-2d4fc7c88ffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d72e04e-5abf-44f1-8b24-acbc427b094d",
        "cursor": {
          "ref": "d6cfa597-0e35-47cf-85a9-d40ccd15a62b",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "13d3e9d6-447f-402b-a3e8-13dd7dcde31b"
        },
        "item": {
          "id": "2d72e04e-5abf-44f1-8b24-acbc427b094d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0568ccad-baf2-4052-b72b-eae08dc37736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bebb460-3501-475c-8cb8-02a5834051f8",
        "cursor": {
          "ref": "a81482dd-067e-4aeb-a5f8-f3b12a8900b5",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "88e86cf1-4fe9-402a-844c-6f3374ea6c3a"
        },
        "item": {
          "id": "7bebb460-3501-475c-8cb8-02a5834051f8",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "78f7f16e-0ba9-4948-ae84-3c1dab6c001d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87c1537e-4a9e-4a5e-98ca-02c530cec362",
        "cursor": {
          "ref": "73bd6079-69d9-4159-9fbc-96e8c12f81e6",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "e1bf2359-b77b-47ab-b4d1-fca875b39d66"
        },
        "item": {
          "id": "87c1537e-4a9e-4a5e-98ca-02c530cec362",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "3ad07d1d-18bc-4089-a678-2fc1a0053307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a2c8732-3750-4a33-b541-3359704e5315",
        "cursor": {
          "ref": "7be11b2a-8975-47bd-8ab5-df2a503b9e36",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "6443b9b0-5e25-43a5-b77a-b2ac312ab3f6"
        },
        "item": {
          "id": "7a2c8732-3750-4a33-b541-3359704e5315",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "32774448-c637-42d6-b405-2ffdaa20a3be",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 83,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "168e1a7d-5ec7-440d-8df7-3c1f07fafe25",
        "cursor": {
          "ref": "da7de742-181d-4d37-bbfc-a7305bc2154a",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "1992130c-c6d7-42cc-83b5-a3f4e4ddee54"
        },
        "item": {
          "id": "168e1a7d-5ec7-440d-8df7-3c1f07fafe25",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2800b7df-f546-41dc-b51e-c3bede92e602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90bcbf54-f255-40ed-a88c-0fba0f4c9408",
        "cursor": {
          "ref": "a3feec30-1a52-424c-8052-73fce21e77ea",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "1c2ab60f-8cb7-4f97-b37c-a575121172d8"
        },
        "item": {
          "id": "90bcbf54-f255-40ed-a88c-0fba0f4c9408",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "482343ee-1294-4d2d-bf02-9f9aaf8b153a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdca8258-7b87-4c41-9c05-c3582b783890",
        "cursor": {
          "ref": "c6bd4593-7f19-452a-bc0c-f638082a28c6",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "c7a78669-c3e7-4add-aa9d-02f2c73f71f2"
        },
        "item": {
          "id": "cdca8258-7b87-4c41-9c05-c3582b783890",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b1afc1e6-9b3d-4378-94a0-ca6f457f3add",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cdd9825-7f9d-4ef9-a530-ed91706806bc",
        "cursor": {
          "ref": "bd0bcc5d-4856-41eb-8eba-be4dd5f5a40c",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "852827f6-12f8-49ee-8a58-b7e01946a160"
        },
        "item": {
          "id": "6cdd9825-7f9d-4ef9-a530-ed91706806bc",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "af8cf399-b2b8-4bd1-a41a-94d71781054b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19ae7510-44b1-45be-8f8f-6804bb9623da",
        "cursor": {
          "ref": "a934a794-6ae3-4264-a406-f06ab68368b8",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "71c15564-6fb1-400d-9722-f9f453160137"
        },
        "item": {
          "id": "19ae7510-44b1-45be-8f8f-6804bb9623da",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "5040ecc3-de33-467e-9fb4-549bba296933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88c767a9-956e-45c7-b699-901e8b955186",
        "cursor": {
          "ref": "30d1b069-c894-4335-a158-d127e5d646db",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "db9a0662-9211-4dc8-8614-ce0b8bec0f64"
        },
        "item": {
          "id": "88c767a9-956e-45c7-b699-901e8b955186",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "68bcf46c-2db2-458e-84e0-2ec79c810588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bc300e7-9877-4273-876e-b11b562d8981",
        "cursor": {
          "ref": "ce4a52ea-7ac2-4bb5-bb53-bcc3401a8fa9",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "a9d40b1b-1303-41ff-b0d4-a2474c8dc3c8"
        },
        "item": {
          "id": "3bc300e7-9877-4273-876e-b11b562d8981",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b7fee755-be6d-4ba5-93f3-645e56fbd122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1474f27b-8b26-4351-ae17-43f346efb0b0",
        "cursor": {
          "ref": "f7f72004-eb4b-4c18-b90e-df38e2815eba",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "4e6fd7ea-e5b1-4049-8189-33e499faca2c"
        },
        "item": {
          "id": "1474f27b-8b26-4351-ae17-43f346efb0b0",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "603eec95-3d57-412b-a1aa-cdef435fc854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a3c45f9-0c66-4450-b8b6-0b4b26727d84",
        "cursor": {
          "ref": "5c03fea0-9a00-4500-aa11-a698af79be63",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "7a63bc00-3913-486f-aaf9-adad7dad857c"
        },
        "item": {
          "id": "3a3c45f9-0c66-4450-b8b6-0b4b26727d84",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "92a2ad55-9759-4950-92bd-2727d0b2c83d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fc3abbc-0ea9-4b4f-b7a8-d6831ba37ae2",
        "cursor": {
          "ref": "45802e2e-7ee7-45cf-a63c-eaa885149480",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "a21d9533-ebbd-4fa9-99be-863cbced0f7b"
        },
        "item": {
          "id": "7fc3abbc-0ea9-4b4f-b7a8-d6831ba37ae2",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c230e8c8-fee8-42c2-9306-2355120ef802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2660906e-12ac-4c8d-9d48-18cb5d9197ba",
        "cursor": {
          "ref": "65768325-58fd-4f94-965a-152e61f5be64",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "072f937d-3962-4a9c-905c-411f5c9fa874"
        },
        "item": {
          "id": "2660906e-12ac-4c8d-9d48-18cb5d9197ba",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a89ea668-5e27-490f-a70b-61992b715249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "854267d6-c528-4aad-9763-5da79f297b33",
        "cursor": {
          "ref": "921cc47c-e771-47e3-bded-e8261e7da865",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "f1174e8e-5462-41da-90a3-03c813f5f426"
        },
        "item": {
          "id": "854267d6-c528-4aad-9763-5da79f297b33",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "80e5febe-628d-4a37-a741-aead47cf7df7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13467d72-c903-4c37-88bc-038900ea0363",
        "cursor": {
          "ref": "337c104a-0ad4-4978-a11d-ae0239d26463",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "3952564a-c4df-48a8-9a37-fd4b5e3d7ed5"
        },
        "item": {
          "id": "13467d72-c903-4c37-88bc-038900ea0363",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c1ab4417-ad77-4584-b3c8-9137d1cd82de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2add1d27-321b-4e3f-a935-5629a2fd529d",
        "cursor": {
          "ref": "910ac24b-1566-4c8c-afb0-d53de74bfd5e",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "21c0f6a2-6e8d-4bf5-9dad-dbe5198feed0"
        },
        "item": {
          "id": "2add1d27-321b-4e3f-a935-5629a2fd529d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "3efaa60b-ce71-4dd9-bd6a-eac81fed7e59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3686bdbb-a1d1-4725-aaed-992bdacfbf82",
        "cursor": {
          "ref": "1da6bede-3f45-495f-be79-a16099345d3e",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "112629cc-942e-48f7-af54-730edf36a6a8"
        },
        "item": {
          "id": "3686bdbb-a1d1-4725-aaed-992bdacfbf82",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "9970c636-4894-4e33-968a-56b5bce52019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99588c4b-9f8b-43c9-8c6d-bea1cb009e56",
        "cursor": {
          "ref": "2fab9c49-da08-4df5-a1fe-c92ff7cc84e8",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "e4d21ede-b5ac-4afd-9894-908f34b9f526"
        },
        "item": {
          "id": "99588c4b-9f8b-43c9-8c6d-bea1cb009e56",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ade9d4ce-8404-407d-8f52-637b68e3ca28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb734d7e-ecc6-43e9-93fe-5f41143cd2e3",
        "cursor": {
          "ref": "0f2b45e5-abd0-4e19-8997-29325a68f41e",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "703b1382-f373-4b15-97b8-cd751e273d94"
        },
        "item": {
          "id": "cb734d7e-ecc6-43e9-93fe-5f41143cd2e3",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "cdfb5f89-6bbf-4857-94af-20b52d8d6896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeb47534-c575-410a-808f-dfbf11aa2ea0",
        "cursor": {
          "ref": "327379e3-04d6-4649-bf50-93feecacd753",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "9f27bdae-5068-4812-aff4-db72d4d9184c"
        },
        "item": {
          "id": "aeb47534-c575-410a-808f-dfbf11aa2ea0",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "40b2ccd7-dfbd-4c3f-a411-1727003d8dea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38126dce-3e43-4562-a4fe-5b7475dc729f",
        "cursor": {
          "ref": "e4d33bd5-0359-470d-84de-13e60b7c2de7",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "260a2133-6a76-4865-8d55-6fae7afb7456"
        },
        "item": {
          "id": "38126dce-3e43-4562-a4fe-5b7475dc729f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "2d205729-5a44-4ec0-bddf-ec703cfd2c0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d75f2e5-c3be-4196-8977-d933ba837567",
        "cursor": {
          "ref": "c80e9f20-6580-4e1e-871d-9e85026f8b45",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "5a9cbbba-b95d-4fd2-9882-28916a8bcc21"
        },
        "item": {
          "id": "4d75f2e5-c3be-4196-8977-d933ba837567",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f6fc1646-c140-4c34-93ae-c99c05ed652d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84a60686-000b-4516-b8b3-615f77d8a379",
        "cursor": {
          "ref": "8832ffb4-7d3d-44d3-9d06-28381862ce01",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "3e02e860-cc67-4d91-83aa-ca5579372afe"
        },
        "item": {
          "id": "84a60686-000b-4516-b8b3-615f77d8a379",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "7ede3a3f-e80d-4335-81c2-dd7d56fc10f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "972d073f-b749-4db5-8b82-97906b784c9e",
        "cursor": {
          "ref": "fbf19fea-fc5c-4ded-a69c-f568a8947023",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "9bcacc3e-2bc1-4b9c-8eea-69499ba21659"
        },
        "item": {
          "id": "972d073f-b749-4db5-8b82-97906b784c9e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5a4d74e4-a407-45f1-90af-d4bedea13a77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bd56d8a-4e6c-4ae0-a383-ff6b29a3a0db",
        "cursor": {
          "ref": "ef67bf8d-a0fb-463e-89ae-036c93e0e664",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "4f899a87-4f8c-41b9-8b0a-5406bcb9d1dc"
        },
        "item": {
          "id": "4bd56d8a-4e6c-4ae0-a383-ff6b29a3a0db",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "29c5c143-8b1d-42f2-81ca-64ac95fb58c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "650f8d56-bcd9-4263-9116-d72d75bfaa1d",
        "cursor": {
          "ref": "8a0f4363-7cda-4436-bc44-accb0e4f1ff5",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "b9e2d68f-96c3-4817-b809-746537dc29e9"
        },
        "item": {
          "id": "650f8d56-bcd9-4263-9116-d72d75bfaa1d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "6fd53251-8bae-4b9f-84c3-10ab82fecadd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87a4a442-d6ed-45c5-a94b-2a198efda111",
        "cursor": {
          "ref": "282563bb-b6c5-4b83-9e26-ea3dc01fccb8",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "e83179e7-a53c-4f0c-b270-13b1ed37da3e"
        },
        "item": {
          "id": "87a4a442-d6ed-45c5-a94b-2a198efda111",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "bc82eeb6-51d3-4e42-9c2e-3f995c9eb5e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51826268-0971-469c-932d-439b27416f5c",
        "cursor": {
          "ref": "60d50647-3ab7-4d39-9863-0c0b2e76fe9d",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "39a4629a-4cb5-4096-97c8-f09c11caf1d2"
        },
        "item": {
          "id": "51826268-0971-469c-932d-439b27416f5c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "6c8b11b3-7051-49b4-9a50-fad1e0ee10d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f791133e-d0bf-4539-8fe8-a2003f994864",
        "cursor": {
          "ref": "94b6a17b-c06c-45ee-a2cd-423727664f5b",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "1cfa8a15-5c3c-4bbf-8396-aea6ddfa0078"
        },
        "item": {
          "id": "f791133e-d0bf-4539-8fe8-a2003f994864",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "fb49a3ad-b7e2-4f76-aef2-3da5c5b0d2ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74f60d2e-899f-41b5-a430-38315730cdca",
        "cursor": {
          "ref": "0a02e32f-252c-4a19-a576-b52140e4cf85",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "6f740b05-f91f-4894-865a-3c5742fb4ebe"
        },
        "item": {
          "id": "74f60d2e-899f-41b5-a430-38315730cdca",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "05ddb85c-6501-4622-9bbc-747fe5c9af9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "650808ea-b9bd-4daa-b3a8-7eaa55037e91",
        "cursor": {
          "ref": "bc7eda9e-7d73-4d5b-b2ab-2c1ef3d78fdc",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "03072ad4-8cf2-4e8a-a4ad-6537fa63fbb0"
        },
        "item": {
          "id": "650808ea-b9bd-4daa-b3a8-7eaa55037e91",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f1963571-aed3-466a-8cc7-3ed11637eb91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b456f704-e717-4cc4-b00a-279e67acbb39",
        "cursor": {
          "ref": "7ed275c8-8399-4acf-b410-fe57ba3ea7f7",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "5755faea-bc85-47a7-a548-e6976f6d667f"
        },
        "item": {
          "id": "b456f704-e717-4cc4-b00a-279e67acbb39",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "14ba144d-7205-4041-a5be-a73d93f2f5c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4fb80a8-9f02-4919-823d-67b408e32ca8",
        "cursor": {
          "ref": "d4097449-2434-4304-b433-667691891288",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "757818ea-ac70-4cac-b38c-9945597e7995"
        },
        "item": {
          "id": "d4fb80a8-9f02-4919-823d-67b408e32ca8",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "dc10961b-58a5-4a9a-990a-84ba511b2f97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ebc1d85-b790-4520-a8db-6c88191029a3",
        "cursor": {
          "ref": "8fb7aef8-2c2f-407c-b86e-f3167955106a",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "17da4b15-42d0-439f-9a47-089086df90a4"
        },
        "item": {
          "id": "2ebc1d85-b790-4520-a8db-6c88191029a3",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "6dbc4734-5506-4e2d-9c0c-caa51c37511b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a4e3569-c3fd-4f1a-b8c6-b0d0498ba247",
        "cursor": {
          "ref": "128c44cd-57b5-4d81-a8d4-2efa5c04f9a3",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "5f1e0627-881c-49a8-bbca-1c1e42bc12b6"
        },
        "item": {
          "id": "9a4e3569-c3fd-4f1a-b8c6-b0d0498ba247",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "c8fdb9d8-493b-4b19-877d-75ef4180210e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef804a5e-9ca8-499f-b415-b1e4d2b46e44",
        "cursor": {
          "ref": "9a5ecfc8-010d-4b1d-8c07-9945af74890c",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "7d568506-4c8c-4e74-8c78-beac30e5bfe4"
        },
        "item": {
          "id": "ef804a5e-9ca8-499f-b415-b1e4d2b46e44",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "4f3a9b04-1271-4065-9dd7-48a9b3cf8340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58d3b325-1bec-40fa-b3e8-84f3a74b85ae",
        "cursor": {
          "ref": "f4a66a4e-6785-4f91-bc9f-c92b740b33bd",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "ee909b15-42ab-4a61-a64e-3204e9f294da"
        },
        "item": {
          "id": "58d3b325-1bec-40fa-b3e8-84f3a74b85ae",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "71ade599-c3dc-4799-832f-618c6da94de1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4819c19-1d61-4fc6-9741-382199753102",
        "cursor": {
          "ref": "9ea71ea5-2e0b-415b-9a75-a3d2e784e6cf",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "cfa2e5b8-e2ee-4492-bee4-7d06982dc74f"
        },
        "item": {
          "id": "b4819c19-1d61-4fc6-9741-382199753102",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "c58d1559-63be-47ab-94e0-2d0da0039ce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f0bbc6d-e3f7-4949-954e-119f595d6c95",
        "cursor": {
          "ref": "96b40470-11d8-421a-8364-5b5918822db6",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "afef8961-7eea-465f-b6c5-07fdce307b8b"
        },
        "item": {
          "id": "1f0bbc6d-e3f7-4949-954e-119f595d6c95",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "cd6f243f-b338-4cc4-aa55-22e87a5b81af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7151147d-faf9-4caa-b5b9-5eee6ec60b69",
        "cursor": {
          "ref": "93205a6a-b88f-4eda-8d8b-8b1e441d6b89",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "0e985009-3b80-4e24-b254-bc829534df5f"
        },
        "item": {
          "id": "7151147d-faf9-4caa-b5b9-5eee6ec60b69",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "53f14575-6d9d-49b0-a6f3-c6871eb82de1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 82,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14b4e8ff-1c95-4c97-8dea-b843a03d50c0",
        "cursor": {
          "ref": "0b4bdcf3-8b64-4bd4-b1a3-b0d72bb22de7",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "23aabc33-9b1d-461d-ab80-c36d8727cf9b"
        },
        "item": {
          "id": "14b4e8ff-1c95-4c97-8dea-b843a03d50c0",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "17557f59-0b82-40c0-91dd-b827ba3771f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "113e960d-1abb-461b-94e5-96222c2b6691",
        "cursor": {
          "ref": "2cc083bf-460b-4b8c-8b03-9ad5b653e5c1",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "1ea66d99-2acc-4bb2-9128-9bf042737e08"
        },
        "item": {
          "id": "113e960d-1abb-461b-94e5-96222c2b6691",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "49eb4aa5-0c97-4fd1-bc6e-0e5318e059ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22c71f11-e9dd-4be0-976c-ae54b6c04973",
        "cursor": {
          "ref": "d2b29563-915c-4e59-b9ee-f58edb1868cb",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "f977c304-bd8e-4b19-a00c-8c131250512c"
        },
        "item": {
          "id": "22c71f11-e9dd-4be0-976c-ae54b6c04973",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "c4e40e34-0fd1-4f5c-bd35-035089fa71fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a82d4975-a3f4-4292-8b6c-324fb79fee80",
        "cursor": {
          "ref": "c2a40201-dba6-4ec0-ab07-3a64e4414b59",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "29485631-b856-456a-858e-6c42f9b58685"
        },
        "item": {
          "id": "a82d4975-a3f4-4292-8b6c-324fb79fee80",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "091d481e-291d-4b67-9bfd-739525bf048f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af94eb92-0b1a-4c64-9bee-620d6bcc5bce",
        "cursor": {
          "ref": "1ffc446c-cf28-4a9e-b29b-75fe1e74ccd5",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "c9aef724-b3d5-4ae6-901c-500471cee507"
        },
        "item": {
          "id": "af94eb92-0b1a-4c64-9bee-620d6bcc5bce",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "af0af536-4738-4b43-920f-6ec3034930b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "287c9984-8dd0-4597-9227-7e70ca9ae24c",
        "cursor": {
          "ref": "5d8e7e59-ede0-494e-8828-b4e3fb224d8d",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "b14c8f01-f0a7-4a75-9cc7-e88aad7980d3"
        },
        "item": {
          "id": "287c9984-8dd0-4597-9227-7e70ca9ae24c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "9f6d1246-d23c-49eb-b0e5-6c10b97299fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4424b25-eb49-44ba-9128-91c2b88de29d",
        "cursor": {
          "ref": "25c895be-e6ec-4879-9cfc-569748e76cf5",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "63135713-bb7b-4366-b9af-a406bdd72811"
        },
        "item": {
          "id": "b4424b25-eb49-44ba-9128-91c2b88de29d",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "daf1259f-34d3-48cb-a14a-c855883f505b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f6d3dd0-85cc-4155-988b-324e78555f7a",
        "cursor": {
          "ref": "f0693e4c-980c-4b5e-b2f4-9e94e24ced7f",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "d6527c11-2110-46b9-aa8b-df45e208ccdd"
        },
        "item": {
          "id": "9f6d3dd0-85cc-4155-988b-324e78555f7a",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "b5d84069-bd63-4f43-bd8a-a21d134028c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c01e31-b3a6-4cf4-8c94-0bf21cf8da4f",
        "cursor": {
          "ref": "920e303c-a90d-4b4f-8d35-0de88823fb17",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "82b7fc44-481d-4f94-8d97-1d190919ae26"
        },
        "item": {
          "id": "93c01e31-b3a6-4cf4-8c94-0bf21cf8da4f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "5696c782-296e-442d-b055-6fb35bdbeb57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23799a29-8d25-42e3-a66d-bf8e20c584a4",
        "cursor": {
          "ref": "4fd9ce4c-01c1-4c29-afda-d36dc149e435",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "249e4a95-ea28-4d2c-9be2-afe00df031c7"
        },
        "item": {
          "id": "23799a29-8d25-42e3-a66d-bf8e20c584a4",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "e1b03e0b-55c2-4ad7-89a4-011addb68589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "303092d4-77e5-4f5d-b8ad-6c6962df1be7",
        "cursor": {
          "ref": "29f0f619-2624-4ebf-8f19-a5968db64178",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "6ddde0d4-ee1a-494c-8968-fdec99664b19"
        },
        "item": {
          "id": "303092d4-77e5-4f5d-b8ad-6c6962df1be7",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "3941c90a-2d3f-4a21-8a4a-8af32dcab4d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "056a16fc-3946-43e1-a48d-4da59097281f",
        "cursor": {
          "ref": "4ccd3d64-7def-486b-a22d-0262d0d43f45",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "add386b9-b8db-4566-b6c4-7dff1df66c3b"
        },
        "item": {
          "id": "056a16fc-3946-43e1-a48d-4da59097281f",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "54925e51-039f-48a4-a948-4723ab568b1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb23fc86-01d6-4e80-9792-0e89b1bbed26",
        "cursor": {
          "ref": "08b0a37e-1f15-4bd2-848d-5b3c9c0473a5",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "37746b49-36cc-413f-9925-2a6f7edc4701"
        },
        "item": {
          "id": "fb23fc86-01d6-4e80-9792-0e89b1bbed26",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "701bcef8-b8ad-45da-9dc5-6166efce3ee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1753e447-a3ad-44a1-ae95-10b500e94b33",
        "cursor": {
          "ref": "206741e4-66b9-41f6-9b7d-41f6c5d33637",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "62a57256-de93-4b1d-ba31-50e37473608c"
        },
        "item": {
          "id": "1753e447-a3ad-44a1-ae95-10b500e94b33",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "796cf0d7-49b8-4461-9db7-379390c5a7d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c045d21-f3d6-42a9-8dde-7edca85cc895",
        "cursor": {
          "ref": "a81941f3-4aba-4477-bc07-0db0c12eca0c",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "7a7ae710-d198-4f59-95d3-989e25bebde0"
        },
        "item": {
          "id": "2c045d21-f3d6-42a9-8dde-7edca85cc895",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "25ec5b06-a3f5-4658-bd62-47529aee4c6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6d032be-c1f5-44d3-b896-ab06fb455d56",
        "cursor": {
          "ref": "7083523b-f60a-437e-942b-9829959a972c",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "3868b30a-6108-4d03-bdd2-a5bada9b3885"
        },
        "item": {
          "id": "a6d032be-c1f5-44d3-b896-ab06fb455d56",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "f11de529-9883-41af-9629-549eaaf22ba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ce6a889-d474-47ef-b8ce-268588f495e0",
        "cursor": {
          "ref": "c7ace9ea-ee53-40cd-bb19-1d99a60ba0d7",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "f1c1b8f5-9b10-4ab0-aba2-ff0c59cf003b"
        },
        "item": {
          "id": "9ce6a889-d474-47ef-b8ce-268588f495e0",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "c7412729-6d7b-44f0-a2af-85d611d7527a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd72ea86-3e91-4723-b505-385b51b034e0",
        "cursor": {
          "ref": "b9a9fcbd-dcbc-4be4-92bd-bf3476a2d6c4",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "e9865504-295c-4403-99fb-d2a4ed00c405"
        },
        "item": {
          "id": "dd72ea86-3e91-4723-b505-385b51b034e0",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "c2f57b59-70df-4975-9367-d3d768d694f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e250fb5a-0b16-454e-82d4-a206e3cc4910",
        "cursor": {
          "ref": "f006daf6-e1a1-43dd-983d-98efbc2fe527",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "4cc4de3b-08ff-4592-952a-d8eda79e81d0"
        },
        "item": {
          "id": "e250fb5a-0b16-454e-82d4-a206e3cc4910",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "8da385f0-bb59-4785-96e7-c6d9c428cd49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "512f2fbb-dfc9-4b3d-9fa3-fbd4fda709d4",
        "cursor": {
          "ref": "c62a5e3d-6f26-48cf-be80-4c3b180cfdc7",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "2a2663a3-3f25-4529-b339-024bd141b34b"
        },
        "item": {
          "id": "512f2fbb-dfc9-4b3d-9fa3-fbd4fda709d4",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "bae7c82f-4c13-4cf5-9bcc-7a9bd9612ab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9d4c893-87a1-43ae-8f94-1790fa2aabec",
        "cursor": {
          "ref": "92f481d5-b230-412f-aab0-94657f2f13f6",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "f562f6df-57ff-4df2-8054-e121703b7a7b"
        },
        "item": {
          "id": "f9d4c893-87a1-43ae-8f94-1790fa2aabec",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "96986551-3fa4-4c72-a7ba-284957004715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b37071a2-8fa8-46c2-a441-2c015fbd3f42",
        "cursor": {
          "ref": "0f5c3432-c653-4c6d-a1f8-b0ca0574dc49",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b82931d0-9c25-4e31-90d9-bd2d31d4b1d1"
        },
        "item": {
          "id": "b37071a2-8fa8-46c2-a441-2c015fbd3f42",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "87032217-50b6-470d-8dd4-483eb74f105d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5626618d-c6c8-47f6-8e8d-19f06abb0ef1",
        "cursor": {
          "ref": "609e2813-52c6-45ca-8349-da5a1e6edc31",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "5a9284b2-08a0-4b6f-a2b2-0503015b8d04"
        },
        "item": {
          "id": "5626618d-c6c8-47f6-8e8d-19f06abb0ef1",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "f034aa07-f61e-43d0-a1f4-74f45ffeafb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4ae9f9c-1cbb-4e82-8d37-09c0bc4185fa",
        "cursor": {
          "ref": "04f1a521-eb6d-4205-9c5b-cd1caf316ad0",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "f2464800-77d7-4cba-b929-0e2e1225154a"
        },
        "item": {
          "id": "e4ae9f9c-1cbb-4e82-8d37-09c0bc4185fa",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "d4b95570-d44b-4aea-b9c2-c73d39911196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e703a69-538f-49a3-af73-948cd2989c42",
        "cursor": {
          "ref": "08fab3f3-03a3-477f-89e3-e4bc44091a39",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "eaf57cc0-d2b6-4259-88cd-e762c5681695"
        },
        "item": {
          "id": "9e703a69-538f-49a3-af73-948cd2989c42",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "cf4dabae-0ce9-426b-8e70-8b7695d79b5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd29c61e-81af-44e8-8f56-099689b64a98",
        "cursor": {
          "ref": "148547e6-eae8-4f3b-bca9-c9ce0b311e23",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "81b32077-6fea-4813-8688-fc2dbd604fc4"
        },
        "item": {
          "id": "cd29c61e-81af-44e8-8f56-099689b64a98",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "34fa7a74-0e58-42d6-8fc1-7f305de36b31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d5cb470-b286-40fd-9e70-2e65ec8f87ce",
        "cursor": {
          "ref": "310e520f-c4dc-4886-a189-3651983d10f7",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "fdd9f5e0-8227-458b-8fd3-9d6c8da7e9ca"
        },
        "item": {
          "id": "8d5cb470-b286-40fd-9e70-2e65ec8f87ce",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "2558e0d7-5a24-4436-9327-c99fb5a61fad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74bb3d85-2087-44aa-b33c-92b32a28264d",
        "cursor": {
          "ref": "3d9572d0-3eaf-42ce-b645-a9e5e8cf640c",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "8385bc23-2042-4b01-ab5d-bbfb2356a05d"
        },
        "item": {
          "id": "74bb3d85-2087-44aa-b33c-92b32a28264d",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "75b0b756-0a04-482b-8e1d-bdbf54dda17f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "622ba29b-742e-458b-afcf-ac876282afef",
        "cursor": {
          "ref": "dd51d2b5-c98c-4686-8b3c-0a1e7b9c6023",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "17fd93ff-465f-410f-89da-a858cfce11fb"
        },
        "item": {
          "id": "622ba29b-742e-458b-afcf-ac876282afef",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "8471ffd1-2de1-4d1c-8cfc-4bb4f8e34b14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f2821f6-0464-4ad4-aa1f-d800e37ba561",
        "cursor": {
          "ref": "05b9110b-e28a-49c8-b285-e0a778d33da1",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "86623386-a751-40de-881e-61a94acb16de"
        },
        "item": {
          "id": "5f2821f6-0464-4ad4-aa1f-d800e37ba561",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "dfdf1f06-e795-438d-81f1-eccf4e7442e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d43cda00-307f-4d6f-8ace-e17e936ddc07",
        "cursor": {
          "ref": "0c90b641-089a-45ce-9570-81e903252d62",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "c9aba0ec-f243-4ded-a76c-780ac5828d8a"
        },
        "item": {
          "id": "d43cda00-307f-4d6f-8ace-e17e936ddc07",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "d7e59e36-a676-4294-a22e-15e8c2674135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a781b87-603d-4cb8-afb9-5bbf5e7ce785",
        "cursor": {
          "ref": "030398d8-6bb6-4cb7-b229-94bb825cb50d",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "c10cfacc-b0a2-4d01-a51d-b0fa39fff0ac"
        },
        "item": {
          "id": "0a781b87-603d-4cb8-afb9-5bbf5e7ce785",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "faf98e0f-a4e5-44b7-920b-852fd4338f6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d84ce4a2-7b1e-4427-8cf1-fd8a9e4a1829",
        "cursor": {
          "ref": "f98c458f-46e5-44de-a98f-c2996390326b",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "fdba3cde-f168-437d-8b6f-1bdbfafac320"
        },
        "item": {
          "id": "d84ce4a2-7b1e-4427-8cf1-fd8a9e4a1829",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "9541c08e-a251-4e77-8e45-231378d33a3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89846c11-3905-482d-be3c-669ce44ae407",
        "cursor": {
          "ref": "86cc35d6-bc9e-4fb3-8f4d-9627a62ceffd",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "5edb24b9-4bf0-45fa-bf7e-36e26d566796"
        },
        "item": {
          "id": "89846c11-3905-482d-be3c-669ce44ae407",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e117d946-0e39-403e-ac96-f45b03d285a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d202b6c-030c-4745-8bfc-1b54124f2c62",
        "cursor": {
          "ref": "dc17db27-d5f1-4147-b67e-75ce34e8cdd0",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "3bbb1547-9ed7-4aa3-b500-cff49dc88403"
        },
        "item": {
          "id": "0d202b6c-030c-4745-8bfc-1b54124f2c62",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "2bf39e52-d4a4-48d1-802f-15068d56135c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e05efa3d-76b6-4a94-b6e0-c672d06d8c18",
        "cursor": {
          "ref": "bcd16a8b-518c-4976-94b0-7a2081b87067",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "3262fdf9-2bd7-4077-9a2e-e60cc9145c65"
        },
        "item": {
          "id": "e05efa3d-76b6-4a94-b6e0-c672d06d8c18",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "c368660f-395f-4996-a9b8-db43cda96d4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fca944c4-6dbc-4487-9319-a95a51af5049",
        "cursor": {
          "ref": "5fd5a658-2019-42ab-9093-76f15d705eb9",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "1414af39-e571-42ac-b854-7c1b299eec7c"
        },
        "item": {
          "id": "fca944c4-6dbc-4487-9319-a95a51af5049",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "9c2bfc37-2be2-4b51-94c4-bf8abd8af99b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a412ae3-e5c0-4e48-9a70-34eada7a7d2b",
        "cursor": {
          "ref": "f72a0bf6-7327-4c55-9e7e-28db975019a9",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "07d07bda-464d-4a86-a985-6159c6138fa7"
        },
        "item": {
          "id": "3a412ae3-e5c0-4e48-9a70-34eada7a7d2b",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "df9482a2-d9bf-480e-82b0-abfd824defc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbfefc2b-a9f7-486c-88ad-e4a47aecfd1b",
        "cursor": {
          "ref": "5683b048-9631-470d-ac01-40e8e1652cb0",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "7c4554b1-1bba-4e06-b8e5-14e565ec6830"
        },
        "item": {
          "id": "cbfefc2b-a9f7-486c-88ad-e4a47aecfd1b",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "ae1aa463-1883-48ae-b4d9-6f24781bed77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b4cc4d6-d343-45dd-90e4-600ca4471b89",
        "cursor": {
          "ref": "38f249e5-f94f-48b8-8f0a-43dd2027f5b5",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "5adc6ed5-8b69-4cb9-bcd2-d3d94d9e336b"
        },
        "item": {
          "id": "6b4cc4d6-d343-45dd-90e4-600ca4471b89",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "9d53fcd8-c90a-4e6f-b6b4-1ab71eff6f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "444fd7ba-bb17-44e4-8591-affb6b30d821",
        "cursor": {
          "ref": "8417f00d-f7b8-4f99-8b33-34a95e2ce9bf",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "f0902597-68ad-4f96-a52d-1618ba4a0d4f"
        },
        "item": {
          "id": "444fd7ba-bb17-44e4-8591-affb6b30d821",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "04cd372e-70a4-4836-83f1-d3d67115289f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b00349ac-3741-478e-b29c-438411364870",
        "cursor": {
          "ref": "fdb9b354-aec6-4480-93f5-3fc3210126e1",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "9e04a6ea-e2af-48f7-be55-802b05989287"
        },
        "item": {
          "id": "b00349ac-3741-478e-b29c-438411364870",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "bfdaab09-fc07-4fe0-818d-ebddd3899c28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66c2a757-fd9d-4053-bff0-21da84f6d4e5",
        "cursor": {
          "ref": "0c82b7cc-f615-44de-93ff-c67037a842b1",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "c2e73012-e8c6-45f4-8722-e95aceb06040"
        },
        "item": {
          "id": "66c2a757-fd9d-4053-bff0-21da84f6d4e5",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "c820969f-865b-4723-9af3-da81c2e8759e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63441334-40c3-4b44-a755-843bf76db208",
        "cursor": {
          "ref": "c9b80e06-4384-4911-96f7-8adf3913108f",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "f63c7738-030e-454b-96c6-cbaf7140cf06"
        },
        "item": {
          "id": "63441334-40c3-4b44-a755-843bf76db208",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "0484a5d8-a1c0-4ea2-a176-d3a537746f0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4adbf78-8b69-4744-aa4c-2247dc46e221",
        "cursor": {
          "ref": "8893bc14-0ade-43d7-819d-9575694eb9c2",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "1e822817-47c9-4a04-8476-e0faddc099e7"
        },
        "item": {
          "id": "a4adbf78-8b69-4744-aa4c-2247dc46e221",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "d6b610d7-157f-4f97-b2bf-4a5db3e97116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a1e1f03-a8ce-4637-9ddd-cabe5745e3a0",
        "cursor": {
          "ref": "fe319353-6370-4d3f-808e-89af6920e619",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "7c989f39-e63f-4c72-898c-348a9284f8ca"
        },
        "item": {
          "id": "6a1e1f03-a8ce-4637-9ddd-cabe5745e3a0",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "41a041b9-ad7f-46a3-b902-bbd4062957aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95f01832-17b0-4d6f-bc02-37f114c237ed",
        "cursor": {
          "ref": "e4e05110-e6e9-4508-b651-2118251fe5a4",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "3591cd2c-7540-440d-8b6b-5e1732fb26e9"
        },
        "item": {
          "id": "95f01832-17b0-4d6f-bc02-37f114c237ed",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "f6e6b278-9d61-4fa1-87e9-637d13262099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4bbb235-42c3-4bed-8bfb-5d98894ff7f1",
        "cursor": {
          "ref": "932d7217-8f5b-47d8-8019-0c78f965397d",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "9d2aaa88-b264-4e21-8009-0d67dd24da85"
        },
        "item": {
          "id": "c4bbb235-42c3-4bed-8bfb-5d98894ff7f1",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "46782937-17f1-45f2-b87f-07ff7f49f49e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85e24c28-6679-4a9b-8709-12079eb6b507",
        "cursor": {
          "ref": "b4dcd545-ef30-434b-9bae-c88e1c201c3e",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "53d3d00f-941c-49dc-b15c-0cd9b40ff732"
        },
        "item": {
          "id": "85e24c28-6679-4a9b-8709-12079eb6b507",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "25d6aa6a-627c-4fb9-98d3-2330a2560a01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa26e85-d4ba-4288-b98a-67d6cc806268",
        "cursor": {
          "ref": "4689abda-b01b-4b81-b77d-397fee9f0ca3",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "7f854ad9-c2a1-4f4b-90fb-6366985662a0"
        },
        "item": {
          "id": "0aa26e85-d4ba-4288-b98a-67d6cc806268",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "c26423b7-1366-424f-850e-f9b9b90f9ce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acd82925-d5d0-4bbb-b22c-907057313e7e",
        "cursor": {
          "ref": "cf9e6352-0ee0-4fd7-9d49-5a151c84a1b8",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "8d2dd8ee-a391-45a9-b889-52d5a80a3ce4"
        },
        "item": {
          "id": "acd82925-d5d0-4bbb-b22c-907057313e7e",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "421384c4-8603-43e3-9177-531d282c07b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09fd6372-16a4-4f37-835b-6c40aa4924cd",
        "cursor": {
          "ref": "8c77dc19-e24b-4236-b525-af26eace0f63",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "d9d89dae-372e-4872-bac3-5b3eed493fe2"
        },
        "item": {
          "id": "09fd6372-16a4-4f37-835b-6c40aa4924cd",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "7594234c-3c15-4db7-882d-c5ac680c5deb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2294c9e3-d132-4c40-8ccf-307eb682b564",
        "cursor": {
          "ref": "7056da8a-9295-4308-9182-35284c98abe4",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "602e646f-328f-42b8-8c71-689a7c46058f"
        },
        "item": {
          "id": "2294c9e3-d132-4c40-8ccf-307eb682b564",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "04b0594a-b466-4850-8791-bc53e5fb5e7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1475073-017f-4d49-9ec6-0b248074a982",
        "cursor": {
          "ref": "ff4b87f8-5c57-47be-b55d-c9bde9ad118f",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "06a4eaaa-8c8b-493d-ab75-e311fa5aa873"
        },
        "item": {
          "id": "b1475073-017f-4d49-9ec6-0b248074a982",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "a5942e4e-6d34-4575-b8f9-d7f497e0930c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73205f66-a80f-4bfd-b0ac-6100783d21af",
        "cursor": {
          "ref": "e0813a5b-dfc4-4440-ada9-b408e4456164",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "cb56cfa7-2277-469e-b072-14eee55f0e53"
        },
        "item": {
          "id": "73205f66-a80f-4bfd-b0ac-6100783d21af",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "280fa5cf-8a23-43db-8b64-6b68413a6930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "677c1080-fa5f-4d2a-bb8e-7d7df0d29af9",
        "cursor": {
          "ref": "239a0302-e27c-4258-b48e-3e820da33c32",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "82265bc0-9cb7-4ec2-a49b-405c5d29b18b"
        },
        "item": {
          "id": "677c1080-fa5f-4d2a-bb8e-7d7df0d29af9",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "633b2fcf-dd79-4edf-b043-6f28fc1b55c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "832a84fb-c4f7-4a3e-afbc-1f1bfdee6c0a",
        "cursor": {
          "ref": "c502762e-532e-40be-ad0a-c0eda14ce509",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "a32fd567-283f-4453-96b3-ca901b3350af"
        },
        "item": {
          "id": "832a84fb-c4f7-4a3e-afbc-1f1bfdee6c0a",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "04017143-c2b3-4914-8ccf-c9569b47f5d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ac06f08-be71-4365-afe3-7eda6f6702f5",
        "cursor": {
          "ref": "dac79678-a5d8-49b7-9db3-24688b57a35e",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "501c6a3b-6a6c-4b45-b190-cbfbca93d5aa"
        },
        "item": {
          "id": "5ac06f08-be71-4365-afe3-7eda6f6702f5",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "b3e739c0-8055-47f4-a0c9-d208b5b4d2b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a04835c7-c9e3-49ba-b226-646f060fe9cb",
        "cursor": {
          "ref": "314c336d-d461-4bb3-9749-8ee3132139f1",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "f1d924ea-2fcb-4858-91c2-637ae03b7068"
        },
        "item": {
          "id": "a04835c7-c9e3-49ba-b226-646f060fe9cb",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "268f7fb3-c6f9-4777-97ba-3b8e3fc541d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72304cde-fb58-4369-9102-a70ea774b7c7",
        "cursor": {
          "ref": "166f7dc8-8b1d-4fc0-9c70-8fab1ae9c816",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "10d94690-a354-4d7c-9f65-e3cded7d06ec"
        },
        "item": {
          "id": "72304cde-fb58-4369-9102-a70ea774b7c7",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "a07591eb-52ef-4074-9c27-98f9b20c3195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b03d61ac-0c77-4fbb-a4ba-02d37589c89f",
        "cursor": {
          "ref": "484b4b52-bbef-4004-9579-9f1a2e1812ca",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "53e29598-117b-4621-b452-12d619ea3089"
        },
        "item": {
          "id": "b03d61ac-0c77-4fbb-a4ba-02d37589c89f",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "71130042-9539-458b-bef4-ed763c95f14a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b428af8-1ab5-4ec5-87fc-4fd2b9a01f24",
        "cursor": {
          "ref": "28e90263-0c1f-4e71-996b-8a735110627d",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "93d6c84d-85f0-4eb3-a84f-f706b3085edf"
        },
        "item": {
          "id": "0b428af8-1ab5-4ec5-87fc-4fd2b9a01f24",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "0d015aca-f2ac-42d8-9ae0-783794403480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56c49be3-cb52-432f-8723-2b22df46369e",
        "cursor": {
          "ref": "f43d102b-943b-4c2a-947f-8523f06665da",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "df89e1a9-172e-4248-87c3-d2f625ab5daa"
        },
        "item": {
          "id": "56c49be3-cb52-432f-8723-2b22df46369e",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "ea636fde-cd12-4e16-93cd-ac653e7b386c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ebac8be-3763-4222-bf31-487122cefd5c",
        "cursor": {
          "ref": "2a43f4c4-2ac4-4434-b8de-2b0e928f9668",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "9ba7039d-ef9d-4d9a-b055-82d01aa20358"
        },
        "item": {
          "id": "6ebac8be-3763-4222-bf31-487122cefd5c",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "57d81c56-f868-47a9-8c98-ca693d9454f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e811316-9121-47a8-9570-4f54c956bca5",
        "cursor": {
          "ref": "98a6d259-ed1c-4246-bf80-ad7417ba8e79",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "aab1557e-0449-4f61-96c9-32871b56c322"
        },
        "item": {
          "id": "9e811316-9121-47a8-9570-4f54c956bca5",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "12238fe1-c5bc-4fc1-ba41-27f5bd66bae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "749e1544-d4fa-4397-b3e4-4f5ca7b00580",
        "cursor": {
          "ref": "cdb23a21-513f-4c72-be9d-ee6f92a491e1",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "0937f0c7-b958-416b-ab11-1f525120fb8c"
        },
        "item": {
          "id": "749e1544-d4fa-4397-b3e4-4f5ca7b00580",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "e1fb5621-46c8-4fe0-b706-ce653d60b613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "082712f0-6b5b-4a9f-b33c-15a682e83fc0",
        "cursor": {
          "ref": "4a6eadc5-9502-471b-921c-3f7dcaff0ef4",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "fde65592-6f12-4fbf-9674-9415e8c9f5c0"
        },
        "item": {
          "id": "082712f0-6b5b-4a9f-b33c-15a682e83fc0",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "8cd997b0-634b-4c61-8007-7a5a9ac9f082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa084b9b-5619-42c2-b249-61e250bc6c55",
        "cursor": {
          "ref": "33321bbb-8ed6-47d5-8ea8-94b0da87e5a1",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "32108d57-8995-4189-ae4c-c98c7ef7b416"
        },
        "item": {
          "id": "aa084b9b-5619-42c2-b249-61e250bc6c55",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "32bdbd20-f967-4330-836c-88e3cc15b7c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "439f58a7-9198-4c9e-aa04-c612c281f55a",
        "cursor": {
          "ref": "32edbaf6-c69d-4e47-bd43-7f244cda662c",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "3d1771a6-d528-4c71-ae45-60be308b317c"
        },
        "item": {
          "id": "439f58a7-9198-4c9e-aa04-c612c281f55a",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "8436686c-d137-4e55-bfb6-a1731feac6ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9cff3e6-ed0f-40d8-84cf-464b08f6121c",
        "cursor": {
          "ref": "3f7dbbe9-c087-445c-a053-f38860853279",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "76d3a17c-c46c-4c2e-a60f-0ac7702102db"
        },
        "item": {
          "id": "f9cff3e6-ed0f-40d8-84cf-464b08f6121c",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "750141ee-c44d-4a45-bae3-a95764b15ed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca8bc5ee-f0a7-4682-b7e5-8f99ca08db7b",
        "cursor": {
          "ref": "cfad19f9-8436-47e8-959e-5a76486dcf0c",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "530f1bf2-de70-46bf-b4f2-65a9eab97c28"
        },
        "item": {
          "id": "ca8bc5ee-f0a7-4682-b7e5-8f99ca08db7b",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "9077c0db-75ac-40d6-b8c1-0d67d2b0661b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3e1705a-49de-4776-9bfc-536a751c1499",
        "cursor": {
          "ref": "7001f143-3b7e-4659-9257-a4ac6eefc4a3",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "fdaba995-eb08-4972-abf0-4f5fac979fe4"
        },
        "item": {
          "id": "c3e1705a-49de-4776-9bfc-536a751c1499",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "ca0cb6d0-bfc3-42bd-8eca-da76fa1eed35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38dc4c0f-355a-497e-a298-c06acdfe3747",
        "cursor": {
          "ref": "bbff7431-f4ef-4211-a3aa-35f43316ca5f",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "0ecc9fbb-14c7-421a-9500-251a544f557b"
        },
        "item": {
          "id": "38dc4c0f-355a-497e-a298-c06acdfe3747",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "5372cc2c-749d-4ec5-87ea-066dd01925c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0083d902-442c-4fac-9150-5f41bf2fc413",
        "cursor": {
          "ref": "bfe0d6c4-0aa8-4730-885f-0fc91a6ab6fc",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "d65bd2de-2ab7-47e8-b27e-c24b963ef9a2"
        },
        "item": {
          "id": "0083d902-442c-4fac-9150-5f41bf2fc413",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "d83b1474-1ccf-4a60-9fcb-ec34746e6335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23c46f0f-9fbb-406e-bfad-9ccb45781047",
        "cursor": {
          "ref": "e4bcc57e-c863-4af5-ab24-dd10a6ab9c1e",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "a72d1848-3da8-4a91-80c7-c05a7d7f6984"
        },
        "item": {
          "id": "23c46f0f-9fbb-406e-bfad-9ccb45781047",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "a1b8eb8b-fb4d-4a4e-b616-630a5d4c89a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c1906c5-3492-4db8-9791-2617432a5219",
        "cursor": {
          "ref": "8fe67c39-dd5e-420d-a37b-1291b31d727d",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "51fee73a-63a0-4484-99e5-63098df9ec40"
        },
        "item": {
          "id": "1c1906c5-3492-4db8-9791-2617432a5219",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "ec83add3-9236-411b-b88c-1b22294b3a24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d49e6a4-bfe1-4470-bce8-a132a6ca8cf3",
        "cursor": {
          "ref": "87e05b66-8386-4efa-8dbc-7840d60d28fd",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "b1ff1768-1e85-4e02-83dd-95a82e72b9b4"
        },
        "item": {
          "id": "4d49e6a4-bfe1-4470-bce8-a132a6ca8cf3",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "5d2cd07e-f6f9-432f-99d6-0aa92e6098a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "631a5eba-8eab-4615-a4d7-5c519a13e35f",
        "cursor": {
          "ref": "c8b55713-aa8c-4367-9bdb-36485f0e8d5e",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "b4f013aa-2eaa-4821-84c9-339f520158d9"
        },
        "item": {
          "id": "631a5eba-8eab-4615-a4d7-5c519a13e35f",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b673f1f7-d5e6-4ccb-a28f-2597c3f8aa22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f149feb-1d8c-4c81-9568-cf837d07fe04",
        "cursor": {
          "ref": "df401de6-18f3-4b12-8968-963f7fa7271e",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "49a90a36-afc5-481a-b49e-f398c2b50558"
        },
        "item": {
          "id": "1f149feb-1d8c-4c81-9568-cf837d07fe04",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "d29922d7-5ce8-4099-8d33-9b667b4b3765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58be85a0-662e-4ef7-aaee-8a1b8561c1cb",
        "cursor": {
          "ref": "18a13a27-0140-40a6-8c2b-744593bb45d6",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "4d8b8d75-bcf7-47bf-8c61-e01dbce317aa"
        },
        "item": {
          "id": "58be85a0-662e-4ef7-aaee-8a1b8561c1cb",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "68619b89-1e33-42b1-b326-ece29c65e76b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca406fba-4b4b-4cc9-9665-e17a958c663f",
        "cursor": {
          "ref": "f6781ba4-cba0-4c5c-91bc-770ac5901701",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "092c271c-f772-4f72-9b9b-4a3e9d7f9beb"
        },
        "item": {
          "id": "ca406fba-4b4b-4cc9-9665-e17a958c663f",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "46ee7f7d-18de-47c1-a41d-eddf728856a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65cd8b92-ff5f-4d64-9a66-973fc7dd24aa",
        "cursor": {
          "ref": "322f6d35-6b50-4d64-bfbf-f6ea85419097",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "e919d41e-fda2-4c4e-982b-69345cf768b6"
        },
        "item": {
          "id": "65cd8b92-ff5f-4d64-9a66-973fc7dd24aa",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "4faf227e-4918-4483-ae6f-135cc8026e87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ef49e7-0bda-4eb8-8070-72e3fe51f6b2",
        "cursor": {
          "ref": "8578dbec-2a00-4f15-b750-2a8bef15574d",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "2aa19789-c123-4b77-bf54-e443d735ec41"
        },
        "item": {
          "id": "d0ef49e7-0bda-4eb8-8070-72e3fe51f6b2",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "b28a5f06-e791-410c-8382-f150e165b573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fca500da-ac53-4ce8-9420-74e640ebd7be",
        "cursor": {
          "ref": "b153d0e1-bc9c-438d-91d4-0937b7264a8b",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "112e9bad-9579-4bd3-a5f2-c26cb80fefc6"
        },
        "item": {
          "id": "fca500da-ac53-4ce8-9420-74e640ebd7be",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "074fe956-1366-4e2e-8eb8-17c460632b97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6036e6c-5ddf-4174-9712-e3998543c3f9",
        "cursor": {
          "ref": "76caf0a5-25ff-4592-ad23-ef2e7b80f3d9",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "2ce3f273-2cb6-4db4-89a8-41f3f90e2269"
        },
        "item": {
          "id": "c6036e6c-5ddf-4174-9712-e3998543c3f9",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "986b2240-b304-4936-970c-e2280f2e1758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4d0db43-5555-47ce-b626-17c85f536c4b",
        "cursor": {
          "ref": "487ebe22-d4e6-4b67-b81c-a861a9de4b97",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "c4d754b1-6fee-47d2-b116-6a3773e11dcb"
        },
        "item": {
          "id": "d4d0db43-5555-47ce-b626-17c85f536c4b",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "c615c62e-6491-4181-93e6-951d1529aa76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c7650db-40e4-4203-8d48-22f9168e566b",
        "cursor": {
          "ref": "42591568-f905-4298-956a-24918b70c2ea",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "f8f16006-6f8f-425a-8469-112d989ae20a"
        },
        "item": {
          "id": "1c7650db-40e4-4203-8d48-22f9168e566b",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "d7cecdef-a1b9-456b-83f4-238fb44c4355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e71cdc48-89a9-4fbc-8a4d-4f672ecffa7c",
        "cursor": {
          "ref": "df077411-edc2-4351-b961-73f9faf9a148",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "26330d65-52b2-4132-8e71-da9cabc1d6c1"
        },
        "item": {
          "id": "e71cdc48-89a9-4fbc-8a4d-4f672ecffa7c",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "ba6e949a-8cdb-4c8b-9f3c-0d69363f5fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ac08a42-e08c-4870-87c8-1dd7f494695f",
        "cursor": {
          "ref": "f7e98e95-a8b2-4c06-adb2-bf2a85db6f9b",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "a7d926f8-b382-4a9d-8430-5d553143cc82"
        },
        "item": {
          "id": "9ac08a42-e08c-4870-87c8-1dd7f494695f",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "b46d3344-4808-4811-aec8-f4a29c490001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d7688be-6ca6-464d-a3f7-f5837c15618b",
        "cursor": {
          "ref": "8189a4be-c9f4-4beb-b96e-7c44c7c393f8",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "135ec55e-31c5-49b4-8c46-a8a0374177f3"
        },
        "item": {
          "id": "8d7688be-6ca6-464d-a3f7-f5837c15618b",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "275e3f74-8823-4e6a-8473-9fd8868d6ea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa8d374c-591e-4bf3-b39e-c56f496465a0",
        "cursor": {
          "ref": "7d8a0ef7-1e0d-4f09-a922-e3359824dd26",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "28b4d9ea-6a5a-4b10-a68d-d0fcfa8ef509"
        },
        "item": {
          "id": "aa8d374c-591e-4bf3-b39e-c56f496465a0",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "96d54cfb-c61c-4a31-8295-353b2bcacd1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb4aa98-2181-4a64-9e84-85d12c897123",
        "cursor": {
          "ref": "46337068-9f16-4fa7-973e-aa6e096a9d84",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "2bd047c3-0415-48e5-b3b3-715df5b2682f"
        },
        "item": {
          "id": "1eb4aa98-2181-4a64-9e84-85d12c897123",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "317b3fae-8d5b-4def-8ba6-be6e9ed62689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aaa6d99-e155-427e-aad8-b5d841d8c8bc",
        "cursor": {
          "ref": "96e95d8f-5f02-4523-8d84-5941a1206415",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "a536ea35-a0c1-4075-8c96-c404f2db50fb"
        },
        "item": {
          "id": "6aaa6d99-e155-427e-aad8-b5d841d8c8bc",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "1ea83437-bfc8-4b35-ba2c-67de3dfed136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8817c8a8-d375-4a96-9457-a66f91b79ce9",
        "cursor": {
          "ref": "84d4bc5d-d673-49da-b331-174ece886a68",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "467bbdbf-ea28-4e34-bbeb-c9443c3ad182"
        },
        "item": {
          "id": "8817c8a8-d375-4a96-9457-a66f91b79ce9",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "d5bb0987-1ab2-4711-a565-0a9d6d410551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de3db0b8-165f-47d4-ab63-10e09ccd0fc9",
        "cursor": {
          "ref": "092fe7ef-45f9-46b4-abda-79512cfc626f",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "bc21508b-982a-423f-a6c3-0a1ef3d520a5"
        },
        "item": {
          "id": "de3db0b8-165f-47d4-ab63-10e09ccd0fc9",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "1e800b80-1e9f-47b5-8477-0ea74b7224c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6cccf9a-9b97-424c-8ad0-b40700e5e328",
        "cursor": {
          "ref": "7311ee5f-b410-4d17-b532-d3255ea92c57",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "5be593fd-9c09-4acd-b440-b935db545549"
        },
        "item": {
          "id": "f6cccf9a-9b97-424c-8ad0-b40700e5e328",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "39aeb687-e2d3-4729-ba71-7c3039c30530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f083d6ce-3e2e-4d38-967f-0cbb28f35e03",
        "cursor": {
          "ref": "5005f5b7-89fd-4cb1-b292-56f3166e8935",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "033c0ab4-1d4f-4348-9113-f30c06a5e54d"
        },
        "item": {
          "id": "f083d6ce-3e2e-4d38-967f-0cbb28f35e03",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "10f940e0-3765-4a12-984e-288c0becbec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a75f67-ef57-4ed4-b0db-4a18a5ffd874",
        "cursor": {
          "ref": "944fe038-f2a0-4236-b0f8-a467885ecab6",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "00de427b-0d73-44c0-a690-c6b3044142be"
        },
        "item": {
          "id": "e6a75f67-ef57-4ed4-b0db-4a18a5ffd874",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "55a042f5-73c8-42d9-8903-e79a4311e730",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 86,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c77bbb9f-6c25-4818-9fde-6246c7cf55ad",
        "cursor": {
          "ref": "7dfea2e9-1ba7-4053-be1c-adbb88cbb69b",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "58fd151b-cbea-498a-a4c7-59cb04273da4"
        },
        "item": {
          "id": "c77bbb9f-6c25-4818-9fde-6246c7cf55ad",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "af8a1545-6fb4-498c-b25e-880139b38e90",
          "status": "OK",
          "code": 200,
          "responseTime": 158,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "01a39f40-2d4c-4cf8-bd7e-ab9c7d3e33a9",
        "cursor": {
          "ref": "c68a9662-a97f-4c74-aa87-f7bfa048761a",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "b5aa0122-3e04-48d5-b788-271e70589fd3"
        },
        "item": {
          "id": "01a39f40-2d4c-4cf8-bd7e-ab9c7d3e33a9",
          "name": "credentials_verify"
        },
        "response": {
          "id": "85c8d8ca-7e12-4a64-8c9e-a5a4cbe89ee9",
          "status": "OK",
          "code": 200,
          "responseTime": 1493,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4de8f642-2f3b-433a-87f3-e297c852c821",
        "cursor": {
          "ref": "2f96b24a-a8de-4ad7-8954-3c7caef0de62",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "3cf9fc6a-2433-4914-802c-5b27aa1c5b1b"
        },
        "item": {
          "id": "4de8f642-2f3b-433a-87f3-e297c852c821",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "90d5898e-3a42-4d46-bab6-09da25a5c147",
          "status": "OK",
          "code": 200,
          "responseTime": 1850,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "19b038db-ed4f-4e27-81fb-065482bc8c94",
        "cursor": {
          "ref": "92e6d6b6-b16c-4c63-a4ef-17c0ac2e05ea",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "d9f06ade-726e-4153-bb96-954dc1f41e6b"
        },
        "item": {
          "id": "19b038db-ed4f-4e27-81fb-065482bc8c94",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "63e0fead-08be-46be-ad00-75db325b314e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 83,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19b038db-ed4f-4e27-81fb-065482bc8c94",
        "cursor": {
          "ref": "92e6d6b6-b16c-4c63-a4ef-17c0ac2e05ea",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "d9f06ade-726e-4153-bb96-954dc1f41e6b"
        },
        "item": {
          "id": "19b038db-ed4f-4e27-81fb-065482bc8c94",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "63e0fead-08be-46be-ad00-75db325b314e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 83,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df5efb52-3989-46c9-b691-68c331a5a632",
        "cursor": {
          "ref": "91f0a21d-ac09-4bfc-b0c9-74cce8729cdb",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "a94848f8-4a20-405b-8a2e-e9e7722480ab"
        },
        "item": {
          "id": "df5efb52-3989-46c9-b691-68c331a5a632",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "79104d74-8bf3-49aa-a23e-e89eb95d8492",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 80,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d642c2d-5a06-4cfb-b06e-066620230dbc",
        "cursor": {
          "ref": "14e6547e-955f-4e21-aeff-af0684d84030",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "1f8256ea-6320-4dd5-89da-8af14208faae"
        },
        "item": {
          "id": "1d642c2d-5a06-4cfb-b06e-066620230dbc",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "4221453e-4e84-485f-8f0a-ca03dc9d7cdf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 81,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}