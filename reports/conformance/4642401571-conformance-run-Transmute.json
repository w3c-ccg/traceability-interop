{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "8b3ef8cc-4864-40c7-9858-a2024684b4ce",
        "name": "Clear Cache",
        "item": [
          {
            "id": "ea387f3d-9d8e-4f5c-9669-57d4d2e55988",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dd97d840-7180-4e09-8f50-1aa61a3f9cb3",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9bdfc0e2-8d11-4c04-b9b4-2045f7ead41c"
                }
              }
            ]
          },
          {
            "id": "d7a7762c-edac-44b6-8119-d258f9f84d75",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dd2f2585-b095-4f89-bfdd-e4cc45b30551",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "03494275-b60b-491d-8a5c-59624bb3a8cc"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "63d2a27c-e9e7-4468-96f1-f32b01a4c69e",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "4b623666-de0f-44b6-8df4-4714bb117ef1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "812fa4ac-3999-4a15-89ed-2ca6defb44fa",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c44ce61a-bc2a-4c6b-93b8-b7e5e7bdb361",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b2e442eb-e165-4c8e-9afa-f24befc1e995"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "07b0f04b-d382-4a1f-bcbd-1d9eefd4e472",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "086ab029-5400-4c9d-a825-0991b05307ba"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c8db6cc9-0fe9-4765-bcd3-9044a4247371",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0a303c61-229d-4226-906f-840d3705df13"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3e5d7a95-1d72-4af7-a090-5ed4abdb27f4",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "fef7d2e0-fab2-414e-80f7-c6e952d92ffa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "67d653a8-5290-4f6e-9f05-1ee1a1e538d4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "510d49a9-9624-4f84-8440-2b7163469f66"
            }
          }
        ]
      },
      {
        "id": "ecc618a4-f646-43b0-9083-96b0c2a8d46a",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "9f79e923-e223-44ff-9066-2373fabbc3e0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "361766a3-e459-43b9-b914-a2b910766c62",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d271b1e4-fbc4-4fff-af7d-f2fa4f3c609f",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5c20494-5f44-4444-856c-7b25bf9094f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6bd876d7-a567-482c-96d2-fdf049d5b1dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d476ab64-c3d3-4398-a7bf-88ef459c32b6",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea439143-7a73-4b96-bb26-d567a503ae34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a07ea410-f8ce-473c-b753-989332784290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04d681d0-4bf6-47b7-86cf-72f61998777b",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9164739e-d4f3-4ed8-92b2-14ac89742915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aecc06cf-4322-432b-82f8-86f17121480f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3158a2c2-7221-4de7-b927-ed0a4a625201",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6a993903-bfc5-4560-bd8b-332d7858876b",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1fe7351-74c5-4546-be8d-fe3f99bcd223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f227ed1e-74ed-4013-99e9-4de812e10575"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a56bf57-2a8a-43f9-9235-fa53ef01b4d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75735b0a-6507-4738-a72e-22eb4e7021b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d1b1d3d-6e39-4d16-a780-97d55109fad7",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b621e1b-7daa-4d03-aeb3-0d5c1ea9f5a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b8de5079-77da-4f5f-a2c8-8b6d7565f06b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c930fc6a-10ac-4e7e-b933-46d0e7c3878a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "6c2091b1-71a6-4530-8cce-7d08aa890c83"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b2a54475-8e42-49dd-9f05-88337e874363",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fb56d7ed-e4c4-40f8-a56d-8b72b40c0a5a",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6876b476-2e51-4dc8-8712-2c2e8c28ac7d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "9d752626-0516-492e-b9e6-9756934c6d26"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6cfcc48c-dc47-476f-84ba-d7d7ef0c023f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "ea9e14bf-a99a-4e1d-9268-3c2eb51b4972"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "89a59a6e-6909-448f-8bd3-4ba23221e41c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "296a6212-5327-4740-b8d6-c8c13bec4beb"
            }
          }
        ]
      },
      {
        "id": "5d512981-7143-4d9b-b77b-35b4e2b6b4eb",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "bc88cc89-1893-4347-90fa-058e269734d8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f9744f1f-2857-41ff-b0bf-cd5aa534dfb3",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "5730b58a-2878-4625-8af6-d62fbaa8499a",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f07967e-9c9c-4f77-bfeb-84af2037cafb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f71b251e-5eda-4ff1-9725-76dd8c426837"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5f8adfa-ca33-4ce4-9b0c-e0b4de9f2d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc5667cd-e5b4-41a0-9623-29f7f98a0c8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6307a11e-2b56-4481-b5ce-bc0ddc288d57",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45aa0740-b233-4253-af5d-11e9c95077e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48d478f3-4ce4-40dc-b604-f0d67d628d38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef1e723f-1363-403b-8a5b-fba74c7e7044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e42374fa-3f1e-42ac-a30d-898e95345911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38a559f6-cf79-48d6-84f0-54f1e6f75e5d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd6801fd-72ad-4aed-af78-47cc342ea117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a302aa5a-f393-4312-97ce-19df93585eed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8365800-c0af-4eb4-99b5-49c98d9c0e31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45d13291-91d4-4dd8-a5ee-e6074cc7cc8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c66cef2-6462-4c2f-91e9-6ff5b40f9049",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5978ae0d-f9db-4312-b687-4de8596f506c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "949e8d36-36b5-4a34-bcc1-cc94f1cf2fa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ee100ce-a897-4c86-bc4e-993cffa1540b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8268ecb6-b7d2-4e8b-97b2-cebd007a076f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cadc930d-5c75-43bc-893b-a78c6b5f0f70",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dca82afe-942e-416d-abdb-8e851da69869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d81a767-5bed-4b1e-a7cf-f6bf15b796ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47bdbc1b-8ec3-49f0-9432-5f54e1f5941d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d6af6ec0-7751-43f8-b08f-9454d10a27a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1cbdc73-14f5-4f02-ba74-e78ab0c4c1bb",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a75d1d-03b9-4586-be75-6789ab3297e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3031f012-5925-4275-b27e-9a7b6239f14e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df06fe09-89d3-41d8-8130-88e0d2592b15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "656b5ccf-dcae-4849-87c5-11e20a6df954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e24a6c0c-9b6f-42db-aabb-8564e68a2529",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5d1a3fe-8134-46c2-b98e-fa2b2301cdb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "439d3cb8-f699-4948-b2ee-cb4057f8d830"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b9d5d28-089c-412d-85b9-321ffaba7e84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a5e836c5-bc45-42bc-a31d-c3bd50e69dc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8c6b953-3589-49ec-9058-0ceec8d99420",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d67ecb-1875-4b6f-ad31-4ba1ddd8c50c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "851dd665-8a9d-4884-8db4-74cf5ecebc72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a442c55-1c38-4b1e-bee1-8507091f6c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "40c5e32d-549b-462f-b7eb-43d691ee11f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "814e5c25-f222-413d-a4d2-6344015db63f",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5bd0ec8-d8d0-431f-8d50-3f869747997f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "636fdd66-3be4-4563-911c-c81ccf23111f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8c5766e-7194-4374-aea7-255fabc2ae1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9fb4f433-bb31-4bcc-a72b-a89d15f08768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49ff3cfb-6bcd-4b27-8ae6-f8ba9e4cad7f",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b93e8e51-42ed-4eaf-9ba9-86c478887a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e187303-3f12-433a-8df9-0ac154678ce0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02a37492-60cf-4c78-97df-78667b6810cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "76f8b313-d94a-4441-9829-c04dd7415c1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acc81b7a-3b31-4106-b256-5a814d10ba69",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c621518-8ce2-43c6-9ae0-21527752eda9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3055e2db-a917-43c2-ace5-8d7b78d6e910"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aee2163-fc38-48c4-82c9-c72d1060fabf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c27f90d1-4269-49fc-aed6-47c21d633301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7170a52-71ba-4a77-97a1-e5cb91150fc6",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecffe429-03ad-4319-8076-34695cb0aeb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27f72a9a-48d0-4ee7-b30e-e3bd8253c0d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc5d4019-0919-442c-a041-fe026652f66b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "33d39767-3851-404d-bf10-01256731f406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8444596-07db-4848-a5e2-6cd549600f33",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46fe7657-b36f-4888-af27-ab21004178e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e446bf7b-89fb-4f61-bde3-ed02c230f209"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c209f1d2-449b-4be5-8851-d287238cfe2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aaec2cd0-9858-40e1-9536-340b2a385735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74f4ad28-43cd-4c20-a5a1-a76b061bb781",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94b78237-c525-4bc8-8075-2cd4f497d950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49b4b016-541f-4da2-bca5-29624fa8edfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06e3c686-e76f-4916-9ec2-d472fb4f35e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b8cda69e-fc2b-4b17-a234-cfbee476be82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bd1b03e-14b9-41c5-9144-09470c078a7e",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f33a926-2f80-4973-91ac-755a137c7448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1a2d733-54bc-47e4-bc6f-746777e082fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12b00484-4773-4441-9b24-e55a6626d306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b90089b7-5405-464f-b9b1-21e853549b7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f88fe555-18bd-4951-83ef-80bfff1a1fe2",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ff055b2-c1eb-4a21-ac21-e21118c8cbc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20313fa8-3b81-43f0-af1a-24458b95678f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3e9ba7d-09a7-4a3e-9142-29fd1b426cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b5900efe-10a4-4f4a-8372-84d3f5c85fd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8197e48-18b2-4fef-97d6-113e5d538900",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db163dc2-07d7-499e-b39d-e29096842165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf536751-83bf-44ce-b550-4252f93c57af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d81dedf-8709-4eb0-9b2c-8958852a6327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c228a109-8cbf-474a-b612-6b0577ccf71d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d88ff0-bf4f-489c-bdb6-1304c2d55cd8",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0fddede-75ae-42e6-bd05-0535431c5a32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f978eb5b-a7b3-4260-a9cd-4cbdacd299b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23d32d1d-b03a-4ed1-89a3-15c74bd4db84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "26161858-6dfb-4cd2-bab9-2e70870d65fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30f13e66-4818-4a73-8420-57bcba2d1e7a",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e47767da-c479-4f35-bb0d-25421da615dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b2304fd-adda-4bb8-97b0-2e701d469613"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "687bbff6-e2e4-4b3e-9ef7-1cb6d5fbd17d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdf10fdc-c960-441d-bc3c-6df58d1145d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d7f7252-e9f0-4d93-b2c0-5ca95a72180b",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07c06f43-acdb-4d74-b977-5e2522173d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "144a9797-0429-4a8a-944a-4d16077de928"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf1f22b8-fbb3-4b2c-b068-90e08d207a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "da829afc-61d1-4416-9496-6492a30d8ead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "492842bd-f30e-4e2f-ade6-c05ad632eb64",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "662955e4-e576-4315-901e-9cce0101e5ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "789467fa-5a37-490f-911c-7b1d2a726994"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6583231c-a7c6-4c78-9d05-9212f45fb7be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b8542a9-3827-4087-a965-5292a5d70c0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcfe7fad-0f25-402d-89e0-49bf3bf99468",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5db4e727-d686-4edd-a167-eb5a19c773eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c094cca0-b36f-4ff8-93c5-a50c41c1afcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "172e72ef-62f7-44d9-8d63-30c71fae2a78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6c28ad1-3830-4888-972b-19c7cbe7119c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31bceb29-6573-418b-b758-ff70b1bcdbb1",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75e1c82a-fbb5-4204-b2f7-52b979b1d756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c34bca10-8cfc-42c3-8939-e9d17c7c98c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd74d3e-ad7d-4d71-93c8-48fa91395148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "043f4b39-1eba-4300-b30f-90bc6c4ea5d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58ae5d50-24b4-4772-b6c9-7613209dda56",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f454cdf3-781b-4cb1-a544-7e3089144058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fbfdd1b-cef4-430a-ad94-b1a368c7d2c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57e81b33-95a1-4e1c-8860-6d5e19509ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fe78696-eeed-4f70-be56-6c0c5925155d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1f9d48f-c4b4-4c0f-8e6f-5cddcc3604bf",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3688587-da04-44a9-a3fa-4424768285e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "566fa2e5-1c6c-4436-87fd-859444f5cfd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3105956-b01f-43fb-868e-d8f01a9a61b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e9c7d60-efd2-4f8a-bfbc-c13d5b15f151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86863804-dda8-4f34-ac3a-328055a22000",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b961cf6-8635-4964-8953-82e325c45dde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0f677d5-ea24-458e-a02f-5317f707e9e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7423971b-90ba-47d2-8122-f3de7bc6b4b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd1773d4-f8b4-4b0d-833c-8ddb62e33df5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f86b3932-5292-4fec-a44a-fc8291008165",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57cafd3a-7749-4a74-8323-bb21c5198e4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a39c7df-868d-49fb-873f-87e60ea812ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8f6821b-c202-40ff-bef9-841f02b8a3b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e64e8bdb-a27f-4baa-b853-13465386c871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33e68b50-97d6-409a-bf1e-fe4ec122e1fb",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "594b4d73-9b55-43d9-a320-06b766871da9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b6b1bda-85ad-496a-9d3a-c4b8faa49708"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc3e5fc8-d861-4f54-869b-b984900b7de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1daebbd-4cde-4416-a821-9e95c95d3a76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36ac14b5-e81e-4aad-82ec-0efb56c9024c",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3637367f-1ad2-49f8-ba30-463b03531e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d52ab5a-c004-492c-8b43-ed69bc46d29b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b907d316-34c7-4bc6-b7d9-bb7fdb705ba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "578e63bf-63f4-467e-8d6b-b0cecc6db3d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c065874a-93e1-4ea4-80e9-85a50b30f86f",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "913c340b-1c9c-4377-b42d-ac7b35b0241d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5037cabe-14d4-4970-8fcb-f646952055bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25147edd-7bd7-42ed-affc-da9a7c283f50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd5da7b1-6d12-4657-9ca1-d932c783f6fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4969f73e-b8fe-4237-83f4-7ec1bdd7d6e6",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4db300e8-2b55-4c9b-964d-de72a64f64bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fcd5827-f42e-4021-89b1-9adf8455e190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b74b0975-01ac-45c1-8f19-066ee6fadee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0be1341-86ed-452e-ac59-25c7a5018613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de11f850-2166-4015-9207-be3d4529e86c",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04165349-044f-4438-975a-210a6379e517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "253e0d5b-c567-4343-8b37-ef310558be3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2fa6698-24ed-41c9-991b-5572c0c9c32e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "488dd4c7-26cd-471f-a33a-fba18df87474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b64db75f-b253-4f19-b19c-2e5775ba309d",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd83ffeb-bbb5-4ed7-a8fe-31b757efd2e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "917741c9-bfa9-482a-8197-48731b80c444"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a13a44-dffa-44f0-a963-a0bbb90afd69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "45f6f712-c919-402b-b9a0-43a4a8bc49b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62c74b02-a01a-46bc-b8da-66efbdd69355",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13205676-594e-414c-bbf1-f4544296d93d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df79731d-d265-442f-a6c8-68ba2905df5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d40683a-98d4-4651-9341-950dbd78392c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "700541fc-ad83-49b4-a9a2-7796967a3033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65611412-feb3-4be6-a7b4-58f06de35204",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a9792fe-43d3-4fbc-81d5-fb6bfdfeefea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cf423fe-7ab1-44b2-adf5-0db58109f488"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "553df458-d718-44a4-9bae-4c8bcc4f5186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "0e51c7c4-106c-43b2-bd3d-ce02a2b9f6d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f98d7028-0c07-48a6-bd36-126bf3caea5c",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9435927-1d81-4cbe-be29-a88272dcedc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "91c812bd-cbd0-4d14-b041-54db52db16eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c30fb59b-b609-4932-9192-7707e5bcc644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ea1e540a-d9cd-4c49-bc3f-1c92aad7c211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41838154-ba1d-4b4d-a64c-08dd8d24843a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46f25f12-be28-49b4-84a1-f95636981879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d82103e-4a2d-4431-b236-e88a72ac89e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c78525f-3645-4ffd-aa9e-4c176d160db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f5f19b6e-5998-42a5-952a-3fa70fd54603"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70753a8c-0c72-4864-9fd5-b228eb6eb13c",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a25db771-60e4-48b0-a0a6-16ad6ac30aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89a1568a-196d-4b1b-bbb0-fc010ed604f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e02e4377-0dcf-4703-829c-4fc9e1051905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0375c952-d7ba-4028-98b0-fc0249357518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03089d56-3024-492e-9ce8-ec15e7267afa",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "829fa769-6547-4b68-91c5-9a4c3089214a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1b1d9b3-9109-4808-ba4d-c05af0f25376"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4826f9e-9d20-4542-9ee8-24867b4be42d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc6a0168-d071-4c9f-b5fc-bc88ea3476e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d4d1887-a1a8-41e5-8b78-2c886d75c2aa",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96d0efa5-fee8-40ba-bfca-26c7d597a557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5585c274-a9be-4e5f-b203-7d5469506cdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c6e7cbb-1712-459d-9741-8b5fec6508cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf17d159-ff3d-45df-aacc-03e6045aeecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe93ae6-c8b5-422d-8ebf-652f7bd384ab",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c7bc90a-c0d5-49c5-a41f-3a28d9225052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e4a2bf6-5c67-4ec9-916e-fdedbc86151b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a86e6b04-516b-47a9-bbe7-182c7959e61d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "111ac5f7-cf7e-4da6-8316-20605fa5172d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c354de3-2a6f-4d70-b2bf-d61a55139ff0",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58d05bf0-aa77-4905-a3de-cf71f23c9029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a145628e-3f1a-45bb-938d-22683c25435d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e690b93c-3c3a-47f3-80b3-d4a010665103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "757829d7-a342-4c62-ade0-f99dbbd49986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b14bb95-2863-41e9-8f4c-25efd45f0aa9",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f9e7f03-c11e-4c01-afe2-5304c29e1b93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e64fc8d8-d586-4a10-a8e7-d39adad142b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aa29fcb-da50-489b-9f5b-d2afb60f1743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "33bc3495-573a-43e1-bc7a-4f979ec51b03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89c86d23-4a78-411d-99de-c953f0ef717e",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e44cabd9-1ef0-4854-aa65-0b1bbceb9b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea5a6073-b3c6-4030-a74b-995dfe2ac945"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47379f27-3d22-4dca-91f3-d42ec953615b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "0da2a614-2819-4fa9-b6c6-f34c3ac8c958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12af3a0e-076c-40d0-ac26-4e1a2b574cbd",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "052d59c0-8871-4536-90bd-d0f27a83eb29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c45d5a8d-aa3f-4278-970a-79f682bb8494"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b44e155-bb04-43b6-8d90-fe010f15fe5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1e8a60f-0b19-40e6-9b78-370c7749079f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bef68bc-561f-452f-b687-d0c77ae5a011",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0752a68a-45d3-4a73-9499-d8e37eb2521c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6aae6a6-08a5-48dc-bd84-1a9fdb2da414"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eb6b925-b4bb-42e2-be01-357da864f408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d6ff535-1d25-4374-8c41-cc15ac0fe475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2d28fdb-8c15-4b08-907f-25edcc7e0f09",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eddedec-997b-4b2a-9c1e-5ff82a906783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbf221bd-92ab-4495-8078-ffcf64045cda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b775efc-b175-4c30-b1ef-1ab7f0e98210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd183748-d1a2-4df2-968b-67cfec425968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1c843ab-6470-4bc4-a685-caba8d334155",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1caeb93-e2ea-4615-a1f4-a3ab0b90d633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6b7ef4a-325e-48f6-a97b-86a54db1f6cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6fa45cd-13c5-4135-bb76-7056d56066df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a91bc053-dd69-46c9-9ca8-b3e0665008e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "507d888f-077c-4c8f-b6db-4e7cbcc2834f",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "118446b0-d965-4ad2-8af9-1343394f5443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "174ccf36-7e1a-49f4-8e51-bcd77c4739dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "846b579b-0f7f-4abe-b3c2-c9943136e9ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b27a3e1c-9675-4152-b617-3d76a43ffe57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ef04478-64ae-4dd5-bad5-0ddcf13b071d",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e0ab327-edba-44d4-9ffc-c9caeb5514da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fe83a04-e227-42b5-b4f4-723f1586f372"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "141beb93-a209-452f-a52a-808527100486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8f63bdcc-8ace-48d0-9386-f5774e12e2dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96b93eb6-899c-4e7a-9b75-a74d29a3f7bd",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fbc4267-5bed-4679-b62b-98529d128dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f77d741b-b8e2-4e71-8003-1fc3708c14e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a57947e3-db0e-4ed2-8965-f2fe3c3ca925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b90ef610-86f0-4ffa-b320-59d5c861ee8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a20fff8-559a-406d-8c90-5c8c02419d8b",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23a84adb-1b3d-438d-9435-880cc4ad61eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2e0181b-7d2d-415c-99a1-646c56a1e849"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e74bf70f-902f-4c17-a5be-843ed4f4779f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "91bfaec3-06ad-4c54-b811-d649a9d79ab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c04c7a4c-7f34-42a8-b5ff-c6a6b93c658b",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c147d02-eb32-40ac-9241-03cd1d16c405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cca5f72f-9dfa-487c-8da2-9a94ea03f7e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15528563-ee5c-4727-b984-f50c6388f8ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7ac4fd8-6489-49b6-b6fe-e01a939d2826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de7b6ccc-2c8d-431c-bfa8-a6adc2994d98",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f446a84-2013-4cbc-a9df-ee1be97d005c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebba3ef1-e97c-44a0-b52d-3085433c1b22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "142ea1b2-2089-454d-b85e-952e811b096e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5bddf985-51de-45ea-8dc2-59a58b362cd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3db37981-3617-4b8c-9b32-871b27a48039",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d472b5d5-9c1a-4e18-8237-ffe61675780b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a92c02c-ca93-4109-b23f-3e92acfe3984"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8decefe2-a832-4b74-982e-6864efcbb846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "61e3c7cd-0e67-4931-913b-a3b257f5087e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc1537c4-129c-4fde-a856-2a37ac116b55",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37a49dfe-9e2a-4e0b-a337-a750021da2e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "620b8405-41d4-4571-bb39-295230893753"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "617978ec-9214-4196-a7c6-3fe8ce72f6fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "8a9b5eca-205e-48ae-9b7e-6f009e81ffee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3ef15fc-00fd-4fe6-8e18-2bf8ff9c6e26",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e61a4b2-5ce0-47c1-9938-c39603b7ebf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4fd20af-6d97-4657-bcfa-963fcc7239b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f29dc675-43bb-4888-8936-ac4bc473d752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ea1a135-51fa-4473-90f6-a6fa9f5bb02c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "863623af-7498-4eaa-91bd-01741c4cd1d9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "178d2f0a-4182-494d-aa0e-087f6dfc1503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f4f520a-b0ca-4b4e-827b-28166dc8475b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "909db255-b350-4a75-aa8c-ce8e5c3227b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "235558f1-31cd-4a37-8bfb-226ff1c5ca3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3b4ecc9-35bc-4fd3-b6bc-3a3bd9ada545",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1035848-b157-461a-a7d4-448be306e910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3967814f-deda-4376-9bdc-acfa117c6f3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f5a918f-659e-40af-8b02-0eae17a338fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c44db4f7-94b1-433f-ab57-d738387e4159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c03c3abb-e21c-4cf3-9aee-6648da949b91",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f31f7c6-b3c0-4525-a787-72e63fbc5716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86ee10cb-a6f2-4d26-8567-b46ee79f429b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3043c876-88e8-4867-91df-c74e73163975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8241c886-fd18-43df-9e28-f5166f3437b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81bbf774-ab92-4cd0-9d50-dffeca9aa008",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32e4b561-2a30-4b99-9c6c-697a3f5f52e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c07a86da-22d9-4418-924d-2d4f65c5d458"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfdebce8-f661-42a3-a7f6-d565b3c1e4b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5d9cfc9-57de-42b5-a1bc-e09ceeb6eda4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b07bbe9a-2157-4ab3-bd43-2a0079570241",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b14fb7fa-7de4-49ab-a741-45dd36feebbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1249710-68b0-4e34-91e9-e8a31a2a6315"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d23b0378-aaa6-4a1e-88de-d47bab5ac554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "57b6c25c-7b65-4852-b9ed-f5aae601787c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eef61447-9e0e-4f56-8ffa-5fa3afbb87a5",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0081f45a-1694-4002-92f9-a5146444b229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1ec2c89-f9dd-4cff-9a40-256e08ea4403"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35397617-2747-4c4d-ad95-066b00235af8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "07557659-8606-4331-a432-fa10bd715bff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f840d54f-299c-401c-b124-f81243db3e34",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "534e3842-c466-462d-b000-59913c12d206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e692200e-50f1-48b2-8ca8-ad0518775e07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dc6615b-4d3f-4a0c-a80f-273455f35462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e0057e1-35d8-4636-839c-61747303db7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72ea4ce8-fda8-4b35-90d0-0958a4a5c2c1",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56793cf5-39e6-4eb1-8915-a4fdab72b21c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84c8b791-210b-4b78-978c-98603a4758c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e288c7c2-278c-4b1d-929d-c4c3fc231046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b15a65eb-8836-4e53-aed7-f2da1dc47136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32b0acf5-9d36-4e65-b9df-6d2d28c8d3e8",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5456056-bb4c-4598-ab29-2f35854e6aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b42a50cc-634e-4293-961d-2a0b485df965"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af9d371e-000a-4258-a224-74997fb7b24a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e9bfaec-2f48-4161-a2b2-08235bc89479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ef4059b-0e10-48ef-ad8d-98e705c2592d",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98a31364-dbfb-4aa8-acf1-080340cb941f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc613ce1-ead2-4ef1-9395-9d76a34a1d18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "541794fe-bf55-4f77-b8a3-a84d71bfe28a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7c6a3183-28ee-4b78-a7c0-76b613d8f7d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5599e633-45de-4489-a496-2bcc4b370b0b",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "157755f6-a7c8-4db9-8662-a8315260df1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae5c13bd-6ab2-485e-93f9-8e2201aaa0ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf62dbd2-948b-4220-9d57-62eefb0249ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ddd6dbd-91b7-4f72-8a8e-d51ec4ec1139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fbf655d-2731-435b-b300-7b1036da49ee",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28d978d6-ddec-4cb3-8504-b834efcbef62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2fd6ec4-a0a1-4965-be3c-8554ce509c85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ef3ee07-1b9f-458e-8bf8-a441a33bb55d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "090ba993-58bb-452f-b2c2-1db0220efd3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d2f073c-db87-4058-a0b7-a9a4111ac039",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97306e37-5075-464d-9271-b54e6024a2fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9c6bf65-19db-4ae2-8b4f-4befe95b4b88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fea87fd1-bbed-40bc-a644-b100fdaf7ff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d1de188-f00a-46ad-a5a4-537d1a14fd46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8371751-1f7e-4722-8840-fdaa26a6637e",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ae50d1f-f3a4-459b-ad2c-4b19877f83cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e6e02c8-a61d-4859-9238-b3c5d1ce7622"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6776f163-bfd5-4496-a007-60b3aed97608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7887e6d3-e226-48c3-b2e9-48053f256be6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9516a6ba-7557-457f-865b-97a68df6a3d5",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afcd47ae-c6b5-4601-946d-23f4790aa6b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90646782-f2c6-4590-8fe0-010a8c2cd39d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93d9bd5c-04e9-4ae2-94f0-b25022dc73f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aef87ce7-c015-4d1d-9c1b-37ab4dc2948c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7a8386e-1c9c-4b0e-84cd-14e54cd5a221",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "384404c1-9d93-4cbe-9ed6-bd31291760a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49fb4bdb-fe5c-4846-ad3e-065c8fa7a562"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b014f15-290a-443f-a1fa-feccdf0a3c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "49013d6c-937b-4e1c-b1b8-ea0d0ff41775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "729ccb85-a838-4517-9137-e2f73d9add5b",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ff3114b-0c39-4fdb-89ec-f97f4070a8f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cd9eeec-abf7-419d-9009-cee5090b339b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "600f4430-50c3-4319-aa78-32ac1e7d8008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f9d4d3c2-78d2-4324-ae70-8738ce462455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f000ad7e-2af2-44b0-be2f-84a083e85389",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fba4054a-b1a1-42b9-99a5-140fea413f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40e82018-3d97-4d7b-b2d4-e2fa3a9c6d71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a01dd49-0dbe-4f14-8260-092684bda5d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4785c15c-72b3-4351-b9a7-c57d20924a4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6c5892b-d1d0-48c2-8f30-66b5f8f8b49e",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f28003fb-4798-42a4-9468-85fab4429c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbf6f0e6-fa2d-4027-a877-e6f1f1bc5cf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "690be2a0-9dac-4a9a-893c-7b8dd5834dcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aab9219d-28c4-43c7-bb24-a3a04806cd20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2ec312e-d311-4ec7-9b36-dc1444b17bc3",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8d9bc85-766c-44c7-90a2-5f49712d62d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10a7d946-afaa-4f96-bb59-7f547e84fd36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe2cb1f0-fb6a-47d1-affa-af17105515d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "29779fb4-95db-43e2-b5c9-77d23f5a3a35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dcdc081-6fa8-4031-9831-7f071bb367f5",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c47d463-693c-44a9-9c33-f122a519cfda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d645449-e455-4ab1-8b9b-fa9264453eab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5282f85-ebef-4da4-a340-fd7a3718af5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c0b7418-2224-46ad-bed7-69656bf8f58d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8a5c440-366f-4fc2-9a0c-ac0c2b05d0b6",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12eb1f44-06c1-413d-a73d-bdb5dacef65d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fa858d0-d30b-456e-a723-8d2b2ddbdf58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35c6e53c-8ba9-427f-b411-c022dfeb62da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "52a9db54-aad4-47f2-b579-e720f56d554b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "186c955f-a74a-497b-b33e-5684b7811a44",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a87b764f-3b10-4547-9921-f8bc7532da68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f83d4e78-2b31-4f64-abf6-c2bc584bdf16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96d99d85-5193-4508-af88-c16d6c7b4d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6b886613-9377-43e3-98bb-a2864b6502e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7388bf85-5538-4ae0-a893-74c09ebdd104",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3d64e20-d818-4159-813a-189d1975d92c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2b1ac73-4a7c-4ee8-9d11-fafdad25612c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e0b74ab-8163-4816-89cd-29d9fb20922a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a80d818f-ab2a-4101-ad87-e57079af9489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c924c043-9967-4056-86dc-75c01c7d0f45",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34ec3af8-0af5-42df-af72-aaf2cba24101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90912d25-c972-423f-b57d-f189a7c74214"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd6abda-0b82-468c-a48d-489af47df4c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "22a20d5c-1a75-4abf-864c-5ba38aba97ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebdf2ba0-aa3e-4e7a-8bc5-f127d811684d",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8960604a-2607-4083-aa07-c7c91669c67e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffbab380-97fe-4bf1-a45a-e239976caba9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2080a328-1bcc-4b17-83bb-9e9c5b40309d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "610ce3ec-c4a0-4e13-af5d-e98f251ad103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e86778d-3c11-47e2-ab50-6d49aba12656",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cf2653d-8271-4b11-8d3e-c536237b8915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2976a8e-654c-4c80-beca-9b834ef1d97e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ddd44d-fabd-4bb2-a3de-fa4d53ef24dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a7ab3cd-d8b2-40ad-8508-6233d33d03a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "028ec139-8bdd-476a-bb11-7bc10a5e9477",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a011c77c-fcb6-4c4b-ae58-f480ffec5458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "539723cb-9ec6-45ba-9882-b4a4028c917d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1037076b-e577-48d0-8ef3-b0863ef06f32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eac1f702-cc16-492c-8ae2-d486766779ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c56aed01-5262-43df-a6fe-172784f1cfea",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3bc014a-d13b-4e17-b3e8-e277da7735f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60e68a2f-890d-4adb-8fc8-cac44318411d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15bbf11e-665a-48b9-9f18-e651afdb9c66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9adfca82-0cf4-40ab-b1da-21986c45ea69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57794239-7277-47c3-af75-feae007948c6",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efa6137c-80f5-4d83-add4-ecb7ec7dfd0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9508df14-9f1f-4eba-970d-e6c4dc8f7b0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59fc24ee-6918-4c25-997d-0c6d0b937a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e35d86b-4cdb-421f-a363-1e89e9577f96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c27c7de-c8f4-4382-8da5-77e2ee5ac5f7",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3cfcd2e-6843-4414-ae98-0d5cf530c684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cef77cfe-1839-4389-b1ea-d4cccf130194"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a50c668e-9c9a-4cf6-8fa6-8cf59c81c71d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "63cbc608-646e-4e8f-a678-28c89aa65401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66dde277-83de-4285-b2e1-344f5ba2f2a8",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ba5f523-a135-4c04-9d30-debd4e9edb01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c19c8960-70f5-455d-870a-8fe36d7f7337"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa7bade-c3a8-47cd-b422-2c156c2f7929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "45871a7b-8fc5-445f-9ed4-217e1305596b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b90e6c33-c454-4bd0-a1de-753b346e5cdd",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3adea5f-f895-45ef-9efe-e0ec681cef05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84f39709-202e-471d-933d-70b178a0a9ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e669d271-6173-474e-b31d-34e92c7122fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e816ee2c-2540-4868-8ae7-45d34442dee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dff19fe6-fa45-4f6e-b2d5-9e6447057980",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "031e7c1f-f38a-4975-a1b6-c6e4a60c7efa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d4e0ee8-03a9-475e-a4a6-5d30735d00d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0057a2d-e249-4a64-b203-418fee2abaf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "95d5d4fc-098b-4a6a-bcd0-c25349cfa8ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "028c47a8-cf3b-4c4d-95f8-2e69d66db5d9",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a35ca20-d1b4-4c99-aa16-17244d0905b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "9e2391a2-217e-4665-ad17-ea5de93a590b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d8a46f0-91a9-441f-8ae1-a54b3ed2fc59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4780f97-56b2-4638-a18a-74ae3b2fd736"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2c5e8090-ea6b-46f1-843e-b352c7c643e9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "84e18eee-95dd-4d1b-825c-dc3873e85ebb",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7da1c5fa-6595-4b49-8ebc-d4d7d65e843e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8465e8d2-2829-48b3-8aa8-d91e4095f4ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1189274a-edc8-48f9-9938-c7d5f9ba400e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "888ef1fa-7a71-4072-b132-777d7a5d72c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0c8a645-e209-4cd1-ad2e-021e6c6a7826",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "740530b5-e986-49b6-b1ae-edda6c0c2207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "443ae27f-1b85-498a-9449-4dae4909cdf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a899a1-3ca1-4bc1-8fcd-79194477ec59",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c02977c5-83ba-4358-8e84-358f474d0ea8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ec97d738-c9b2-4103-9e03-05a8b2b1a4ff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "13a9547a-3de0-445d-8eb9-beaf4e3e7457"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "eb155774-b0f5-4648-b0bb-6410e78718ab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "985913c7-9271-42d8-a082-9d130073f079"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a617d62b-8aff-4abb-8c4c-79b33bb2bdfc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ae3de00b-0703-48ef-bea2-01ac7a0f33ef"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "92703a95-9820-49b6-b157-f9e577120def",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "34debaa8-39a6-401b-a89d-89398f55543a"
                }
              }
            ]
          },
          {
            "id": "8c5e7a7a-66cb-4191-9285-9bdeed88e1ce",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e076d4c7-cfb7-4130-b6c2-acad94399f25",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "000d9d5b-1110-4e85-9c15-dfb215f6ce1b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a407fd7b-ed8d-47e0-82c1-d802a60eb920"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7dd0edac-9b65-4d70-a41f-01c7bcb44bb5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ed88ba04-d194-4bca-a20f-4a44a4610fe0"
                    }
                  }
                ]
              },
              {
                "id": "cb5fb549-50df-4615-98f4-349aa6472827",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc0cb2eb-d4a7-4da6-a6d3-cc984d60032b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e9cca021-313d-468c-96c6-81453228cd9e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "811506fc-cd97-4a2d-94d9-16e46b78a01e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "840d5afb-2179-43fb-a65f-4e81bd389f6e"
                    }
                  }
                ]
              },
              {
                "id": "9bde746e-80ac-47c8-873b-813db9aef63f",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "254bb2e3-ea49-47fa-b9ba-831ebd9a380d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "30e4a422-bec7-4326-8037-1b60d21022f7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d0de5236-851f-4031-994d-68a59ac169ec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "81489186-f025-47b2-9118-ae2785f29cdd"
                    }
                  }
                ]
              },
              {
                "id": "67b9627e-6b28-4d3c-9f22-8a0d8aaf1c2a",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b7b12e4a-1728-4690-b95b-5edc72bd8ecd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "32d03b38-14e5-48f2-ba01-8f8a2013c44f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b60b52f-b366-42f9-b842-06f9f3b2ae97",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ed83ac3c-588e-4730-8704-37cbaaeb8dff"
                    }
                  }
                ]
              },
              {
                "id": "7e4a00c0-77f4-4352-89aa-64d821ee1c2b",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "684acb2e-8aaf-4e9e-8b92-04d681dbd28e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "92224a0b-bc96-480b-9948-69944f3b6b35"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e6d32312-c5b7-4dc9-a4e1-7b9163f0eb0a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "dc2ea706-daa1-40f2-83de-0c2d8dcf78f9"
                    }
                  }
                ]
              },
              {
                "id": "38395558-9e1c-41c8-977f-164742948115",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eae473b6-3c0c-4a33-ab7d-50f3dea3ed8d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cf6d461c-c52a-475c-8afa-7cfaa64b43e4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "db9c794c-28ef-4e0a-ad82-3227cf727f9e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3ece080f-5981-473f-9902-c67fab1a186b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b6224041-de53-43bf-8ada-301190cc6bb4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a582bfb6-bc43-4cff-8815-1246c01bf71d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9d53209c-1483-4aa6-83ba-16d93ca68755",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c673ccbd-43ae-43f1-adf8-c4e070ec663d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ed2015a7-d832-43c3-81dc-a7d8fadacac1",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "41fc1f8d-87bb-4bda-b7af-185fce7d1857"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d12240f1-aae4-4ba3-ae88-3b83cdd81b47",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4884caf1-3bd1-4a7b-abff-d59bc07d245e"
            }
          }
        ]
      },
      {
        "id": "e4d3b900-e818-4da5-a0ec-62456e753aa4",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "3c7e418d-5e5a-4bba-bb71-851b103b9bf3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bc933353-832b-4b95-903c-d6e689d8de25",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e8965797-dfd4-4dda-a70c-d5edfdf0ab3d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2d1d2d8-b6ac-4774-9a71-bdbd45b4d638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79e50b71-8ba2-4017-bb1c-3c9c8d64e77b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9251c3ef-9b5e-4354-97e7-0ed848cd8df6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "83b04db6-27f8-4d40-b6b3-894864c55503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2663e002-baf8-40c8-97b1-abdbafd89c8c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c83ab6b-78e0-4c03-a7a6-1c1f16467aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0a5f7b2-eefa-42dc-8bde-ebc70eb2417b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffa24710-e6db-4c89-98a7-bb4abb9dec63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "60ec0708-1a8a-4565-9400-752a551f4048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b294fd52-a548-4245-89f0-92cdce672478",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0744af99-d88e-4b8d-a8fc-322f33b7a167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f56698c-65bf-4f0e-af26-1479a16bd958"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb080e99-17e8-4b43-956a-7cd876b8f58c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "32c956d5-0370-4bd2-899d-8b633e977e09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94f8dd89-d594-43d1-a691-d89b45ba781e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82b1fb71-4427-45f7-9f7b-5e31718fbf8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c45feec-66a3-47a9-bfa6-c00edd5df43f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db709c86-a84e-42b9-b0d1-8860aa3c0755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b40e032-64e8-4f6d-9e14-086722852f25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0821ff23-98a6-4a7a-8f90-255a0b732ea6",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b2f5f11-aa17-40b9-aabf-77fee24e032e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2093c2a-01af-49d2-bace-e38bc632bff9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c61cf657-5855-4623-917a-5efdcc5a60a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eab2a0f3-2af8-4f18-bd26-f9b88f09038e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2c66d19-4c79-43be-90b4-50965c163444",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5021b0ab-3827-4493-8460-9e17c1734678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d924b52-f54a-4249-aebd-30b8ebe2437a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87434783-992d-419e-bdc7-3051c2561857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1264a4b3-f140-4903-bf41-413490fcac69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60ee820e-78a7-4d2e-8aae-3a569dedc1b5",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c78f5af-7c1a-47dd-a962-6ed457f722b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80f745ee-a6fd-40bf-a16f-1ba4bb197a84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6364a4af-d5a4-458b-baa9-ba54e7fed4e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2149957-08fb-4296-8086-db185566193f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b55c2a5-a059-4a44-8e38-3b763c12dd98",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c7f6310-7401-431f-b505-c1b1df94678d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "985aaf1b-b0e4-4bc1-9343-4eb01b6dc22a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ab10b24-a57d-4f42-babd-ab7ad682ed1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a642b8e7-b1f6-4c2d-b092-a29bfbb43cc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "595b2fb6-e4df-4267-9ada-41a0e289bbc9",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9c9b79a-f326-4144-9522-57cc5d4775d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97ec4216-741d-403f-b21b-a5f5cc87ac07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f10b621d-5e4d-4f33-8c70-254bf3e1b11e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1545b80-ba8f-4012-a865-fd5d769c6aa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d10a2580-ead7-4c4b-ab37-c7baf1a76f09",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c80346cd-13e9-4e5b-9e1c-bb178a88eef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "806913bd-77ed-4b87-8142-72ccb1cc295d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "495e8267-c90d-4269-95a5-5de246774f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eba58fc8-c2f1-4d00-aad0-6a0005046b14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c612816-7545-4a85-b85c-18e7a222751c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d788a60f-3338-44f3-acd8-776a57064bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aaee631-a55d-42e5-aecd-9878fcbf0cd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88799f2e-384c-4241-b1c8-d5be623e1f27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f75665ac-707e-4a66-8c49-1e3905d158a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b68c9a5-598a-4714-9b61-89d0e8528592",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81843fdc-e966-4bbf-b38f-3873bfda379b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01e436aa-b8d4-4252-84ae-5d6c0d44eac2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f9a3521-eebd-4dd8-b820-892f63333f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bc0d7308-37fa-4569-8e93-bf18768b7e1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef16190c-8251-4c22-ac16-55b33f64343d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "421b41c1-af35-4008-9cf8-53a2c18f4681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7e8d0e1-8717-4407-aa15-9f5a2db5b866"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44378a02-577d-42e9-ad5d-ea3d6ad1ebad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "93d7a6f7-1a03-416c-98af-19e9d6e9d6f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ed213d8-827e-4192-a5b1-59f58956a2e7",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8eca89c-b834-46ac-b2ec-96740fa93e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7930180a-daf4-4bec-93b6-e6c7f17d91ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a36a41d7-5b37-40e3-b37d-68afb784994b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "85d44ac7-5f26-4fb1-b0a6-345aa4b4f5c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4fc1b78-df73-465d-895d-baa52c040409",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b00407f-785f-453e-8f9a-42cdaad182e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80014042-7bf1-49be-8190-ae60ba11c099"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56d5a83d-08f0-466a-a8c3-b2c3640097d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad239fbb-aada-4efa-9ea7-e5c34319262e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "379f6f6d-9785-495b-91fd-167abf49b6da",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcbf805d-24f8-44ad-9307-e9e9241a232d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7c7e924-6112-47ee-a332-bb1d4005f8b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "370c47c6-8a7d-4fd7-b7f9-efb12533b13b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3aae7d0-1fb0-4e51-9e9a-bb367181efd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3186805b-b1d2-4889-b932-1231dd57b21d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1eceb2b-4297-4107-91d8-06af955eb281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f213cb8e-a833-4015-ab2f-4497361a7286"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c00bd99d-13fd-4093-a467-fcd04cff3eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b927c245-fbbd-45bd-a509-0dbe77165ce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d6017e1-5a7d-4d80-afbb-2a9cbac55c85",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "442ce881-84ad-4ce9-8891-0e52001f9d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10ff76df-908d-4ac9-bfaf-1654218712ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78d568e7-30ed-4e88-aa5f-0756a69f6e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c725f8c7-2bdb-4a86-9763-c338fcf68f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd2326e3-edce-41b5-9c1d-4a43afd12e51",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77573919-d775-4cbe-a829-eec9282cd3bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23088fbc-0865-471d-8320-46d1bd31c52a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc9172d9-5be5-4ae4-8eca-86c798a11c1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7977b060-8922-472e-a8f9-e580c43f1ee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "754ef93e-01f3-42f4-829f-9108cfe394e8",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fd21aef-2a8c-440c-811c-98fd1323a7d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fa1efc7-166d-4e72-bfeb-afb17e0bebc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73efe506-073e-49eb-9668-d929f5b46626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4e0a219-3b9c-4b7d-b206-6251844ae9a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9e0cc55-bbf3-4462-8b30-af872b1b0e6e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e4dd599-97a0-41e7-ae8e-a93609774dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea60932c-6b26-4f62-ae5a-440ba6ddf558"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef6b8171-b107-484c-9d8f-cb569201b656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8e20b70-7d5f-4410-bc2d-a8eea472d392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f9535e3-26e2-4a03-ae72-9aeb2d738d00",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4834b8ad-a3e6-4d7c-9057-7b867b1b9789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "446be29c-76ce-46d9-a042-f2c02e436e4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11395720-5885-4a46-aa4e-3394abe2ca9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b55818f-5f70-4191-8607-e2f3db88d515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9eac216-81d1-456f-9b47-431113eac4fe",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2488f50e-e4bf-4204-b91c-da4a089d46af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bfa2706-84f4-469a-acfb-99e1a5619218"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df7e3d3-0140-4ef4-8757-35a4d65d2d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ef62041-659a-4ae9-80c1-e5c4d5b2d95d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe682ca8-e941-4c14-83ab-5e0a5bf456dd",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d35f22b3-64c7-40a2-bbd8-9e4fb517dece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a3d01f9-6cd9-4506-a2a0-9081694507b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f6f06b1-492a-4b6f-b0fc-0ead573fb0e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "059e3e79-3d8e-42f8-b4e1-bb708a51d0c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b7b0a94-a7eb-48df-8e45-2c0ef1758503",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38eb5057-d211-4c2b-8245-18b3a25855ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "517fd033-ba46-4b9d-8ccc-4d0f0ee26cba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc3a7956-6e2f-409e-8cb2-30dae08583a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7da111df-d49d-4b6d-a3a4-83743cb7d7a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22beb27c-923b-47dd-92ac-84e8035cdd44",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e93bfacd-1715-431c-b148-bf3b01e220b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7dd8af9-e94e-4d4e-b0ac-ce5dd99c2a6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e201efa9-fd42-41fa-ad81-bf6c3b49109d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d075dee8-a163-4f83-98f4-14f1d7173f98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ac9381d-1551-4f49-af22-ee920b60b16d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6761bdc-1fa8-40c3-ab17-52cb29a287e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5f567f6-03a4-408e-85dd-a5011f330123"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69d6168c-97a5-4af5-b976-468e86c75a4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1be70e8f-ccfb-4a57-87fd-c7f652366799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adc60b2a-c791-47d6-b4ab-fbf009bc9b07",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb1037c4-bd72-4974-9b14-f03c546c5073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82f71b48-1da0-4954-9d2d-3b417f1e96c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd69f607-393a-4a03-8c52-c66c7bf51d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6eb401a-5aa0-47ba-b823-145fb111335d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b20a8f2-ba20-410c-952d-a929dc717fec",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd7ed308-8437-44e3-b6e4-5705e23bea13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "176a876a-f34c-4114-a61c-2a8d97d2c006"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c38e0d0-b0b7-44aa-9cce-bf8372a27416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c0cbed3-3a63-4e84-b3ca-779ccddcd201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c89c89a2-d332-4ea7-a350-8d3845aeaf03",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "242153b1-b75e-440a-835e-948b4d2e121b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c78dcaba-d642-4338-a02b-826e919f7060"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c7e3bf-840d-4eab-a8e9-5ca82c47fd49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b50f3923-5e01-472f-b17e-d9c87d65e307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b21698e-268d-43e5-a02f-62b46b090a11",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "643b1383-7f76-40c6-addb-c33a4ec536ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8b8dc8b-19a3-441a-9dbe-9508bc7e601c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddced64a-4042-4314-9a7a-05cef46a9fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54764bf2-8607-488f-b87d-10b9998fc03c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b1602b-fe9d-42ee-afab-5605566c0de3",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0b04067-a578-407c-a22e-d2599dde46ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65018102-32e2-4b8f-ada2-cffa83b5977b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed7243f0-7768-41c2-b68a-e73cf7d62734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd4922c6-3849-49e1-95e3-718659053d4d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b35f0274-f96b-47b0-8a81-4aac2bd91080",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5003534c-ccfe-4dc6-8aaa-c7075999d058",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e8a201-9f51-47c6-aeb4-87cd0a927123",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "433ca745-95a0-4c2e-90ae-bd4e111b3c43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b31d215-4ddf-479d-8846-375dcb4e112a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dd8e38d0-a7ee-46fc-ae4e-5490e1b71aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3191cafc-424e-4114-aff8-0b979c9c1866",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76fa2b10-cf0c-459d-b08d-9bcca0dcde22",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b81d44f0-a89e-4004-983f-9094c5443474"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96fc447f-309c-42c1-acc3-ab80bebf8aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e95dc56b-389c-4b61-927d-7d37de24a7fe"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "985fdb0a-7e87-42c7-9feb-a6f1d1d4ebc4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "316f33dd-2aa0-4b7c-9c64-e8958fe84d64"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d87ad253-2857-40fe-8c44-684a9bf87e4d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9d2dc052-0afd-4bbc-a4b4-6ad8ee05cadf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0638c0ed-8ed9-4de9-8683-14afe6f40e9a",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8f855a66-d740-46d8-8ca5-e6da5f790b7e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "514a5651-e5b7-451d-9505-45c0505e294c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "76f5b0c4-3a94-4e3e-b2d1-3f0e7f262916"
            }
          }
        ]
      },
      {
        "id": "bdfe896f-2a22-4b4e-b681-f9a5290dea11",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "82aa8ab8-624b-4714-a39b-43f70ffc6b1d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9c20e39d-911a-4e3c-a280-7b8fb6f34ee2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8a25ed0b-f84d-4aa2-a4db-ad84c84a5adc",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a77a0caf-c31f-4ba5-98dd-4c66f4235304",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ef613e9-702b-481e-b334-6d2510679f6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39ef2eec-eae6-4deb-b2fc-7f97d550af10",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a232f1d-5c61-401e-866b-7375c3778a9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c4e3429-88e7-4c01-9015-479fa1e8ed51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d3c4b14-3fbc-4ca4-ae8f-6f135cdda1dd",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee177418-d71d-4854-9528-14cda5cc55a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1baced5-f654-4ee6-9ebf-6fe997d12c39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac61238c-bdb3-4e57-a46c-9713726b7c39",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf97e4dc-e586-482a-a8cc-37327935118b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47c1fb47-bc09-44d7-a628-9225b6c72f60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e2b47b2-a585-4ca0-9962-6ea73c47332d",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3889b16-fed2-4767-ab13-e8295a8332e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0afc713-3080-4b9d-8b0c-119517ce2427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b0fce2e-d2f7-44ef-b6d5-55b3004d879b",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50661e8b-dcf2-4ef8-8805-fd909e9e9eb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed816cb2-ad10-45d0-8aca-05bfa0006ebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daaacb42-f34a-4150-823b-493374b36bea",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25e2194c-ece5-4cc3-9933-ae9cf66d77e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74eaf410-3852-4fcf-a3f3-eb173bf902a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62fc982c-c206-4a42-ac3c-b971b7578645",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31b4cbe5-28bf-4918-99d3-3dabb525b687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a442c51-517a-46e8-817c-dd3543cb0ea2",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "632c7387-a610-4c04-a42f-85ade015fb2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "570ba5a0-8ec8-4604-8783-2e369ba7b10a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecac20dd-26c3-42ef-a94f-3386c8ed5df2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a94b72d-a376-4a04-8c27-5833d6145ec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "066aa2b8-36c9-4d72-b370-ff4e700d402c",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1418039-fd11-4d98-9209-643335fb15aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de92f298-5fb7-4675-8c43-dcecf6437cb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c1e5fd5-2c7b-4b08-aac4-e9dd0c123de0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f49cf37-89ae-4d69-a228-795d919c4bbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2bdf710-7173-4488-9701-ac733c24f493",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f9391c0-cefc-4fe2-8302-d0099680d8c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fd43b22-a506-419d-abc5-ac70b5ed6cf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6da1580-6a33-4d4b-bd9d-d3cb45636a0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6214b98-6083-4b4c-af89-8b4aeee5248a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac14eec3-f307-4922-9433-cc4d0eaa36a1",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52d30dc7-a6b6-43df-afb1-50d5196aa2c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8995332a-991e-4f2e-b1d9-b87b581f2edc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65542777-ed5b-4448-b9ce-ae692cbe7d7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62009fa7-5d2e-4233-b1ba-0644b36d109e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d07240d1-1363-42b3-a0cf-6d6ff0409f81",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41454a6e-6a4b-4747-ac05-e9b97b5e2cd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79b185ef-d46f-4db9-ba48-6bec83131044"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5628ed69-21f1-48fa-a245-243c97783b22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47da3580-34e3-447f-8c04-2a981354868b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cecf5df4-c075-450b-b540-38fe48c9e3c3",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5557816a-e278-4efd-94de-ca490801c0e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3c53506-d3a9-470b-a9e2-1e14987d5ae1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c01c0c3b-0972-4238-beb3-feccf861c583",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e08fdbd-b151-4d3f-bcaa-3336bfa453f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b66ff282-90a7-4db4-8b46-c0d848127be4",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e8745e0-1307-4ec6-b9a9-695f3b63195a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22c90502-46cf-4e87-9774-712190bba18f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "002feed1-ac8b-408f-9209-38daed0025fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "257726a5-6b27-4b3b-a051-84b1cf4e5189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73b1e8a3-d2d6-49ac-bfe8-7f6662942ca3",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e00d2cb8-5841-4cc5-ad3e-0bcbc0c79f23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a06bdaec-6735-443a-99ae-e3e67600f008"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dfa7a99-f616-40d1-89e9-d61b4287665f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a68c966-1c5c-43c1-97ec-24634c95e481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ae76100-92e2-4215-87ed-b8922a26ae21",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3b820ff-2f80-4c11-b444-86e3062eeffd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "624609df-f802-4afc-a959-b08f526c15c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fea4486-30e3-42ce-8340-76f2f3d1118a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8619362-5462-4bb8-8eab-3cef926cd470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88b66821-8fea-4a23-ae8e-b94e3c84768f",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "713bbd67-f5b4-454f-898f-3356617898bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "effb3e62-398a-493e-9e19-1a61bc3bc183"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd5cf563-98aa-4415-b2c1-1a3248194691",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9734f65c-3b75-46dd-8446-543d6292c0ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4adf1b41-8fed-4909-bef4-6a9c52ccbb42",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d525f20-8b2a-486a-8962-9133b395519c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ce58fa8-95b1-4ff5-b05a-ecf327469ac4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e347ffc-f358-4d3c-a724-fba058479899",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46402ee4-1011-4135-8dc3-a5e18d852a33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9c4ae30-6a38-412c-a3a8-6bf35842e1a6",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e099d0d1-483a-426a-b78a-3b262b3cc7e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7234172d-9159-4a5d-943f-ff5f669cf7e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40f68b56-8c8f-4d71-abfa-60baf571c1d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42ecfd44-4b40-41db-bf80-2a71b4b4e790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aab76374-b30f-4cb1-b75e-4d7d9e1c06b4",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06875615-8fb7-4788-9c89-3a26b2463154",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75c84b34-0e0b-401b-be71-10b151763783"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "370fa2bf-e750-4e6b-8a0e-804ca5a71232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1a2bf62-c86b-4f05-8556-d872a8274fbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5225fb59-40cb-42ae-90c1-934bad1860bb",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1069ae1e-c1b4-44ce-813a-addc8cf6bb21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26b9fdb6-5415-4d6c-830f-0cc4bc05277b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d236f2ff-d488-4d46-84f2-719fd1f9c45d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daf4d7f8-17c0-4b59-b35c-21da7ca60327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "981d4c19-cd7f-4576-a871-a2f706e72eed",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b468038-6a8d-49fc-b665-9e110fb51ed6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d589b0ae-6f91-4e42-be4d-064bf81f9593"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f186aad-7fa7-4143-ab58-b4f1adc42e8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "961cbe68-8091-4b50-86d7-c926ce49bdcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6193de2c-2fff-477f-9368-cca1baaf6a09",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5c31747-1909-42b7-af36-c7b881b2a607",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7443927c-f98a-424f-867e-869b5d8a44f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64ea4dcf-d45b-47d4-854d-c8ff11260275",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3289dda6-2abe-424c-be09-b7c2c4120cba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "352327ca-1b06-48f5-b864-faf1dd6d2640",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df4fb66b-50cd-4a3c-9589-a3192a95de5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c85f446e-7126-4696-b369-f62c48797cf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd5f4de1-04ee-4140-bcad-8ed31d812767",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95937b9f-36a6-4f30-a2a3-d3718fea8ed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a7e80f5-6a5a-488c-8d01-1b9db19579af",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a81c574-a786-4cde-81e2-bdd479c6dcd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae78f0a3-d9ae-43a3-b0eb-9bd033ab5f60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f365bc6-8193-4bb7-a65f-8273877cd685",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62f4ef53-103d-42f7-b960-6224fc6d7165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c650071b-5c3e-43dd-934e-7e73b37c86ab",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "246b7123-8027-4cb1-a659-a306861b1d5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4ab77c2-7b9d-48df-aedb-1065da195c92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99bbd2d7-91de-4aa7-96d8-966547e1c876",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "986ce2df-f7f2-4d86-b14f-79a7975fc791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80af1161-22d2-435d-8fda-81dd974ed4e0",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eb9f111-85af-48ac-a23f-c6da988ec45d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e70b450-7703-4647-954c-d4ef5741f967"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3c7ee8b-29b5-4707-9cb4-bb18295782d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46cd84fe-e717-4792-a665-67b22ca4ab11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d88675c1-adcc-4e20-8fd1-ac9210f7130c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80c9deef-99ee-45c5-918d-84c01a3d8047",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aef0b37a-5bbf-4166-b810-e30209775fb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83cf9b50-c40e-40a2-bdb5-5d18697c8dea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "085d89f4-1b8e-4496-ba6f-9aa99e9c6d50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "163bf2c5-c3b7-4471-97dd-d1b05d526d1a",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4523ad73-ec4d-4782-8efb-26085e16efc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32b3ab43-01cc-46b7-831a-c51527192b2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9639fcb-7284-4bce-b545-3920e65866ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28a3162b-c1ad-4480-b0e6-fd52b5a17665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22355f62-b740-4d46-b643-a5ee62d16d16",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca60d07c-1d79-44f8-979d-af9c589c7f2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3031c4e-c728-40db-a9cc-096913f1751c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d2fde22-b55c-41cb-aa18-ffe58954e6d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "413aa2b2-557f-4b2d-86be-9888f71a3de9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5be610e8-59a9-4ff2-8267-1e1ded200a78",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c196dccc-8e77-4d43-a9d3-015352a699b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87439a29-63d9-41ac-88b7-ad9d7a811360"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00a1fb53-17b9-49c0-a507-92e913b31902",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4041ad82-c53c-431c-bc84-eebc99396e2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf5642d-9b9f-469d-a485-8d68c0d11fb9",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e18c0b0-a51c-43e7-9c72-f8e2dea63086",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6b02d55-4a46-4bc6-a9d9-c818bc9551ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a984f22-0ab0-48e0-957e-4d4c92349268",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "813b23f5-51b1-40c7-970f-04a6dc93a48d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "645d56b6-cc91-4455-948e-c003877e3e6a",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c982e33f-281a-49d8-995c-8d8772e0cb2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "106a0961-dee6-4eda-a2d2-41d6f46b5220"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54df3823-fb02-4d45-bd4b-59e7be36414d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24662f19-d8e1-47b4-8a56-92dd710147d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8af66dad-2d84-4a8d-a92f-268f78d4f43a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "999d6326-e241-4230-8dcb-605c6c9e69e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3c00571-cff2-491d-a46a-d648a3115d5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efe2b557-7c2e-404a-880b-50e1b3d89649",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4a6d411-a902-4cc0-881e-44d9c7fe8fbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0474509-e46e-42a2-b6d3-63efc0628f88",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f96b7c4-c96d-4c84-be9a-bcf58a251895",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf28d1b6-e7d3-4901-b02b-331c0f82261a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a5acc8f-7691-4570-ac36-e759a7d7d332",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b93eca0-9247-47e4-9058-1ce6cb2e7c16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e8d6dac-0d87-4ee6-b2fa-6cb4877315c5",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0201c068-c187-4b45-8e2a-cf3eba6004a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d5a1fbc-2630-44b0-a4ca-7321a840fcfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d0e4ac7-4b24-4b2e-8f98-bb1b15a888a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dd1ff2c-f4e4-4618-a44b-ddd31681b9fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11f98f52-bc3d-41a6-84b2-50064acbead8",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eaec83c-0bc6-4052-b3ff-7d3f4584ef34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b78b3e5-be83-4706-b825-e7cbae9812c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5846920e-2ebd-4afd-8f29-e9df854cc3cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4bf9be6-29dd-4435-bcfc-1fd8bc9c0123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2886f26-054f-4b7d-918e-5a0bffd80a65",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a528da19-509a-41c7-b647-4c7a647a5839",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f259f46c-7008-4183-9d2d-8743af5984ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5376d16e-6cfb-41dd-8bbe-259586926450",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6df2c2c5-ddd2-49fe-8451-1f6fb321cd86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b4e2ee8-0453-4d6f-8360-272882db6638",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e312888-186d-486b-afbf-9dc23a424c31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1f27a9e-95c1-4d5d-9fc3-d5260edd7ae0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9ec0100-2751-4e8d-a74b-f844f3df9beb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0763b09e-7c7f-4cd1-8514-d2ef7c876ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "545f01e5-c8d6-4bd7-9d5a-ee27ae0d2de9",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "673e2b64-b65f-4eab-a535-a0c009d6a8f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb238193-f638-497f-9171-7a5605dc954a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73b145f8-0580-4cea-a4d7-21fc93090a21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "650b2740-666d-4adf-88d7-821da878286e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b16af235-5739-46e7-919b-fef7669671be",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8cf2a0b-854e-42a3-a74f-751c35df1038",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "273dcfce-33eb-42d0-b924-992caf3cdedf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f84638a9-0444-4860-9049-a0e6199faa21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "009d16a6-4ca1-472c-bcf3-fbaf85baa6b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0009517-48fc-4bac-8e78-e3db02352fcc",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ed3b191-fb4b-4ea6-b10d-21c516a8bef6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1eff3ca-d7e7-4121-b4fa-4b64c63fa910"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d7c4517-b273-42ce-9e3e-c352e38d86a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6865f24-ef3e-40af-8b3a-e1552460d7f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1f6c37b-c856-4d09-a069-a37c8aff334b",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61009846-7522-4cfc-9c28-adb53d12ca0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13cf2c0f-afa5-40e7-9f6e-309d882e2a94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df337e6d-d33f-4b37-ba6f-8016de0d7b61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1a27934-577c-4403-b92f-254793a0c46e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7568479b-eff4-4c9b-8ff4-d31d17888ce8",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b941b0f2-c859-4314-9e98-0537ccd3ff62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7829bdf9-c1dc-43e0-9704-f236aa0967b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72d16188-8cfc-4779-a579-dd55e0bd5d64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04051db2-8418-40fc-bcf3-c520c03b4006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b6b26ea-cce6-43ee-bf6e-b4509e651cd8",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "906234ec-e564-4d8d-bcb0-5ddd1d8601ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3d2793d-bec2-4f37-8ad9-3736111135fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11e2f7d2-2d01-4516-9f6a-a41031a472b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a34748b8-3a81-4d8e-bd38-67a34671eef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "516acdc4-4e88-4c4e-bd2a-e2a655c49882",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81892f9f-652c-402e-8085-b1af8089540a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2b740f4-cb04-42cf-b3f9-a9e15807474a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fb042ee-248a-44db-a64b-45f6de322330",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0640b6c6-bc5e-4001-a8aa-c809624f6877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7b704cb-d4cc-4f25-adf4-f2f667d4cd09",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "636cdaa0-a348-4b90-945b-9dae70bea1e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76fe1429-6b38-4470-b9ba-aba3a226f5e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1d707ee-9d84-400e-8455-f946f17a46c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "825eb65b-ef64-4cf7-8bbc-df4fd4a15d53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "debfec0d-18e1-4bcd-9c6a-7fc84309a516",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d0c6c3b-e6be-47ef-b94f-a40ffda316fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "157cc135-3542-4a66-96a3-cf71bd6adc1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32218e86-1181-4826-baa3-5201f50dab9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43cba6d5-daa0-4801-98b8-f736f1bc63dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7245da71-2fe0-452f-b248-b590a06bc912",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92c0b1b1-981b-4d4b-a7cd-4baa10fb2fa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d440cc0-2aaf-425b-8ec3-eb475d956b7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2631d87a-21c3-4fec-bb8b-5c3e18ba49f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aa96c67-b5a3-40ab-a888-ecee8f6feaa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c970d1b-c0ca-4ec5-9925-db43a5d785d3",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e24298b4-c647-47ac-92cd-45c51a8afd85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bfcf15d-9ce1-4f00-b6aa-52b41a541337"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e12f96fb-c969-4daa-82e9-f93405fde4e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7db179df-dcb2-4780-8d4e-0f290b0eba03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cb6900d-9aaa-455f-9f8d-8347e8e55cab",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bf17ab3-15d6-4f1e-8516-88732b9d3773",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66ec4408-75cb-43de-b3fb-1509d3504b97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6695f6a7-863f-41c2-80ac-cb2f967c8071",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e71dc251-ba69-477d-88d6-e3aeff424353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23f98794-706a-45df-ab6e-c6e191eb9355",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6573a309-eb59-4099-8011-74f8be1ca9e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec16457a-82ae-4e89-b795-79c9c4a04d4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c20b4542-8e8a-4ca8-bfcf-9b633748d7b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54bb0340-a7c5-4ecf-96f8-370cff7385f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c4f3af8-016d-4106-8ed4-60396e9a2b2c",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7aac04a-dbf2-4847-ba9b-64b9f48840cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a56303b4-9e2f-45c0-9fe2-5237a06dca72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f476e36-6979-41d1-9a1a-50e6d6bd758c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c58769e8-4179-4223-afeb-07ad7cc1ef29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e13b9112-904c-4805-9153-96018b42fa45",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99656470-61e3-4f34-bf17-62ed4c53364b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "723ff57e-fb2b-4a70-af8b-bff742b54b61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f84aa1-ed48-47e9-9dca-b420574bd954",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77cd09ab-48b6-4581-bf8e-b39d1393439b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd8bc2b1-6bb8-4862-b251-e4633bde67db",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7878e2ea-75a0-4f49-9e90-cd9ce544d7f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adb1006e-8b1f-4c87-9b4a-2f737a918ea2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f15d53a3-e4b2-4ae1-bda4-ec0f4d4cce3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc61f4b9-a9eb-481d-bd6d-b2b923aa5ec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16978a6c-d5f8-4f05-ba72-5dc91e1b32dc",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97ae3135-3f2f-4b08-8fb3-17dd0290b570",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dd4355d-9894-4613-9392-4a97ff7e67bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf91b1ec-eb87-42a3-a40a-a0263f97f7d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77408a8b-51e7-47ff-8b9c-3d3c5878e555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "942b52d4-0e51-45aa-b80f-bce4b38e7ad4",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ed46df8-7c61-49f5-ae96-363a7cd8cd75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64248347-34ec-4caf-986b-fc3606f4c633"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "324f2038-038e-4fe9-8d17-ae63b07e0dbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20ed0986-92be-4571-a840-b3a42d82ec28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a08d00ea-cde9-4a23-95ed-731aa63ed816",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2323ae16-8f64-49ed-ae47-21edcfa2f1e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eac277b8-fdf2-403c-bddb-c63dedc0f069"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98702506-31bd-4066-aab7-dca9ef8b9b94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a016b6c6-a1e0-4c61-ac19-88da51f83de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e75b64bf-3f94-4fe0-b0d9-cff278fec0bc",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3ec6de5-5d33-44bd-a517-f9e0f8dc9282",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2c637c6-f2b6-4549-ba85-689ad358196c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fabb618d-6cff-4d0b-b497-a174b3d27144",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d86bc7b6-9b93-4b59-9277-047447dddffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa702563-627e-48d3-90e6-4e3a85749590",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a04fc643-d25f-423a-9c80-61fbd59963bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "704a6e22-5e69-4722-8384-37b3d49d070c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f36404e4-8053-43ea-a7da-c71cb2015507",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c89a1d22-e999-4d90-8fe4-e7d1970b2b44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14fc3b0a-3648-493a-9d55-e68accb36afb",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0f607e1-c72f-4478-b27f-8abb2a536af7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fc1cf6c-ad1e-440c-97a9-9da8c3612c68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e257ccf6-1fe9-4d85-974f-e50c9a8a0354",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "910c5370-2ae1-4f0e-a738-1810e0cdf105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3758d0bc-c4bd-45b3-b2be-b7bb87c5fec1",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "758cff0f-649b-44b7-b2c8-cdaf9c309e5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1d40888-5bb2-44a5-8493-eb72ade81501"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cb2e36f-0848-4f22-9d5c-03b42addd186",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "965d1f14-db99-45a8-b7ef-0bfcc5db1385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66ae2d76-17af-422d-984d-12ec8883b268",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28dcb4fa-d45c-4126-8456-ac9d2ab5ad1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c7d64a1-2e85-400b-abed-91a0b828dd3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f40bfada-3bf6-436d-b3f0-cd26ceb146cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d54773fe-9d12-4a26-90c1-f71f9b729040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a83dae8c-14a5-4bd9-9e92-aa87f7606904",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0c9ef85-9206-4b42-a5a5-1cc398938045",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44985d7e-0059-4be9-8ce7-3ac7547616f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78e0f347-8815-4fc2-b11c-d196b8d7690a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5062ef0-6816-45f0-a315-de7937b628cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1d20823-f845-48d2-85b5-55b732349211",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80554c45-f822-4a5c-94ad-b3e1e36160bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09e907af-2f18-43b4-bd00-2f7cce0f0354"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3430f1b5-3d96-4532-a76d-671e62b09a78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10fda9d3-88d9-4300-ad70-df21bad3f93d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6710ad1-224e-4798-b9bc-12413765ae15",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "979709fe-638f-4409-a7d9-78a5f773a6c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e950edcc-838a-4bf5-87c6-b21e41447492"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38c9477e-1273-4d24-9ad4-231ab5723ad0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd14aef5-1abc-442d-94a5-05aa475437c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6726967a-4356-42ea-ab49-6c31e939ae53",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bde33a3-aa56-4627-b71e-d21e3203e196",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ac73164-8bbb-47cb-9f0a-9f3496594c24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ea3327f-5752-4344-89b1-2d0d3f094a86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e569f49c-dc93-4486-a9f3-cd81fdcf8a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "647ff754-effe-44b1-bf64-bf40d1f06089",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3db2a7ff-18e1-46fb-8589-04a5466b8e32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dba17059-0592-4323-afbe-3a99c87c9327"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0da6395e-c630-484f-8fda-a61a1340a1dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "411711d8-8f32-4670-9f87-ddae64362276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6849138-f29e-49c0-b637-c25f24a44273",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d5c6370-b1ef-4d25-83d8-33e8bb18017f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c115c18-89c8-4e3f-9963-0e263983c5ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ac03c5c-f6bb-42d3-b0a3-31b3158b44a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "009a799e-9d31-48ff-b18d-8d130326f212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12592495-0f00-432d-979d-ad2c4896b2f1",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c87ecabe-fcdf-4ddc-b82b-3c2e0b9b44da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0a66bac-ee7c-4d6c-8b21-08b7b082d321"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8bc4fcb-b03a-4a92-ade3-6ddff70180ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f4c4039-5cb4-4b02-93c1-4a6095b8506d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18c56018-2f3a-4ef4-b1e2-52b25eaef8f5",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b5fa09c-b1be-4b94-9383-1914b7ef8573",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9152dc2-643a-4694-83be-a8637d86bff2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fafa104-22f5-4571-910c-4fd54a2d49dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73978e85-2990-4f13-b5d0-b50352876784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd8982a6-e6ab-4c52-8c04-eb80a6b528cd",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a45c5ff-6813-41c1-90c7-c881043e9eaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48388a73-5363-4bc4-beb6-d42f2e5cd2c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9194942-fba4-4e6c-a797-0098252f1e39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e00b35f-9406-4d1a-b127-390591d86c58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63cdf4b1-c841-4392-9ec6-b95b03ecc2a8",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11c699cd-5444-4d48-b6c1-b1c4a9b6be95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de39f267-899d-4aa8-b291-d005bccb4cb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b6f85b9-9411-41b3-af7e-a154b466b4fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0003574c-0f2c-46b5-b44e-ceabca964eea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53dfc2e0-2794-4bd6-82ab-8b09fd65fbe0",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faa96368-c5b7-45af-bbdc-1c0c34b0e65c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18ea96be-5194-4783-9b23-87b3de368424"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c837fb38-d8df-4b15-8b6b-f6f5ea881f24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60eaffe7-58c2-4284-b2fb-58fe443b1dd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00065f85-f6e8-463f-8755-9cb6ebac0dac",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3727415-6e9d-46cb-86ac-011233ebdabb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90c64663-6dd0-495e-9def-2d8a76165c97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9187250-952d-47f6-8ea0-2fe8ab17f9c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d187f2e2-cb44-4304-9e4f-5836596c0346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3457d3f-ef8f-47c0-b40b-a94f5b26f358",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a4591d8-e574-4e66-9086-86f4b11bab12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d81ba6fd-8d18-4a6c-8545-626d0fbd62c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30d489a4-1279-4c8f-8196-3abeb7c16d23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "416d4c91-f726-48d7-b6b8-57d4b0c0e1e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a3aec27-64ee-48e8-820e-c3b89a223e02",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8118b16-0e6a-4936-a4b3-5cfc6c29f3a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b647a54-181c-40fe-b63d-5f4f6152ff74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3c2fa53-ff19-41e8-83ac-5cfb20d4709e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bf91842-1b91-499a-9a3a-092716cc7a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30420f4e-3c83-48a5-8d34-95a95c107a89",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18bf9ce0-ae60-41fc-911a-e4d03dedade9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61660001-49b4-4b26-8ae9-b1927b9b4d2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e823022-27c6-4ae3-a113-bee21a48dc36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6dc444b-f6f6-4124-a0e3-273294b49037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66598841-5925-4e7d-8ce3-ff2825fc658a",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84d9c85d-ff0b-4c72-9a07-fec9f31925d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa435c5b-2e61-49d7-b584-11a2605630b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3037b189-b0dd-4009-9151-f7ea0a1e1fda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2175dc6-e59d-41f3-8fc2-c8f46d1b8910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf80fffb-eae2-42ad-bb97-20420a544f2d",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c6b447f-e04a-464c-9449-b0ea20a534f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa1262e0-65bc-444d-b35e-3571a733351e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aad5a74-caa7-4a47-8952-85525a6629d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "412877de-21f6-4624-9b89-327cd1fc252c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bea45df5-c0de-4aa2-a1a6-97ccdbbeb1c1",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e0c1501-86ae-4b0a-ae39-34a8980ad652",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5ed32d5-4e2c-4022-b29a-631216af21b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a3ba4b4-a41e-4d6e-8d15-8b6255b46cea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a150296-b1f0-4e34-b7b5-127c95e32fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaa6985b-79b6-4d03-a186-f037642415c7",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7be06ec-124f-4595-82af-57fe0ca92a62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c10a224d-5ed0-4e84-aacb-341e6bf2cf95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e59c67ad-ca70-4621-8a44-7912c90f3522",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8bb7038-87be-4c76-a349-a2cb911a7f9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51d8a2b4-d936-41ff-91af-2bb28f0a68b2",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10978d08-d487-4d29-9fb3-2eb22d75e239",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e695095-a29a-431b-ad45-e49019029caa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7921de04-6abb-4932-bc76-4c79dec63ec6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c80f2992-e3e0-4a8a-99f4-4ad2a3c708ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61f685f8-50ec-4942-a560-1774c94502d4",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d6b498b-889b-4ca3-bd2f-49f08f228289",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f806838-53a1-47e8-ab1b-0cbfabeaec9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95132f69-a24c-4085-891c-72c2e38fc0d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b637187-6a45-49ac-a6f1-0c91f87935ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c8ade9-bd7b-420d-976a-abe7a2b1b296",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "207ba9b4-7708-4292-b2fa-8e8176a3078f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4432dd5d-f21f-41af-bf67-59d19ae7ed0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7dbd832-476e-442b-97d3-d7277cdcf6cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f57e4ec-6bb1-41e2-b2c2-d449f15462da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f603bad-6e78-4387-982d-fe0fcb4cb2a4",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a743cf1b-4042-45c1-8646-4db1f525ec3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "975bd8de-fb93-4bbb-be0c-fa9c86a4aa51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "740f4d34-359d-4d0a-b220-ca9e17c1d041",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e3a94de-faff-4673-a5e6-0aecf51f3ba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03a610f0-cfa8-49ae-a3c6-0507dae516da",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1cf4148-c530-47a6-8c8c-78a564d5f11d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ec697aa-5ba2-47c9-a467-7f5fe0a12a14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b10acf65-d6c4-488f-9b4e-fbfdb4869e80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d72f7d6-52f1-4b05-819a-367b6a601ae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bea1cdb8-3e0d-4a0d-b587-9d76c32bda7f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b203dd45-593b-401f-9f04-2317a6658453",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d861bbb-1ee7-4668-bb85-1c219a2d7c00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "493b51e4-4faa-458d-a126-38c7230f06db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25969851-0cff-4cdd-8dbc-487e5ec1191f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56187640-f735-4364-af7e-a4689e3556fa",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efb1f3b0-945e-4dad-8e37-7fa255c04e15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06a6ea1e-1b9c-4f0f-bd30-df085ddef144"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "613f3206-be14-4c1a-b66c-d4bfcd43ad7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "935ca949-b504-4453-af8d-9d9e699c4b16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81a7d0f6-cda3-4f1e-91b4-6a80793b1987",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75478dcd-9110-44ea-86c3-c9c735c4f144",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c5a3550-3599-409b-b220-629d98a6d3ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "458cfd3b-7b97-48cf-9b82-f542a00f85c0",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0ca2b1c-b23d-4ffc-8544-b2bc1be9f7a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4996ddc-cf1b-49c5-8eb5-1af9983000bb",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e131a5c-afdd-469e-b7f8-efb52136d6be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f78500f5-e870-4ac1-ae90-d286741f21d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e8cbe6-d68a-44af-8912-495854c0c248",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7db875d-6933-4300-b99c-45d2d0309e17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b66d181b-09ce-4f42-aab1-c6764e9fa1b4",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63d47646-6f29-4a00-bf8f-464ea56ebda5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c6ac5ce-5a14-4858-94eb-c37ab80fbc5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2876c826-6054-4518-ae67-81cb7118dbff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9bb509f-5625-4ac4-bedf-be44e863855f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9de949f-390f-4287-b894-74a718a94c73",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c68dab6-5056-49f9-a09a-ea336a3e0609",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "286a98cd-58d6-4ca6-a140-9e08a6832ca8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "137a7c75-be7f-4229-8911-3b6e6c9299d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07f19350-5a80-4cb6-bce5-c0f33d441e68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2dffe42-c688-4768-850b-ad4968cb3e8b",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c7afe70-ee64-4d6a-95f9-72627c7579d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15aaa0b6-ae07-43d3-8a94-4730e6eebbfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad2b6e80-0f6a-4778-8843-f142452fb5d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c4f2439-5b32-4a00-a568-26d6a567ca0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7231602-ef68-4907-8ede-f7afd2a24181",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "999981bb-6285-44e8-831b-8ec31f38621f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d37132f7-5135-4129-9ccd-0737187bc1fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a2e80a8-4f00-49a9-8d4e-a58f954fde77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8db6390-2859-4894-8d84-108b2a13f930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46e05b25-8cab-4ae6-8ba9-382594683676",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fb1cd23-4e58-4959-9309-debbc99d2d9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8d98648-6815-4d0c-8038-93d29af016bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22a31ec9-9c2f-4c57-840d-23959f2c3fbc",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ed6e8e6-7109-4cd3-a602-7227be8019d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "573af19c-ba31-4810-bcef-1e81e92ef7e1",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e8bb132-76f4-4c7d-8a10-206939983092",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fed24652-733e-416e-9c1a-4168b88ef650"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86e1f288-60a9-496a-a70d-96d33115ece4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ebb28b3-b864-4425-b1a4-59ecf9d75e02"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cf38fde8-5c3a-4a9c-b428-9f6f8f398cdf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cb8eb7f9-efe0-4406-8e2a-c7a06334121b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2bb53eec-a1ab-45dd-87cf-268f1900d0ec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c6112131-0dc6-4bf1-bce2-6c3635e0e36d"
                    }
                  }
                ]
              },
              {
                "id": "e418cd11-1592-4308-9933-651f393908e6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ef5cdf3d-3e38-4c2e-b06e-3341ca4009da",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78b09f8b-4b16-4d4a-a6f1-3cfa796fe9e9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "0b3aadab-cc77-4fbe-ad9a-3bb68114e4c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51f4cdb8-1553-4478-ade0-75998beab6ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8dbcc50d-dda8-40bf-854f-7586de28a903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a0da6e6-6738-40af-84e2-03783c2132e1",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "575b7112-7fb8-4207-bf0c-cd46807b7f63",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "69c6d339-cd60-4344-a07c-bb00639a5cb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0c3be31-bd99-4da6-9cbb-8ea98e3c5a71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1acd8a8f-49ae-43bd-a29d-14e7e2982b67"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "39261e1a-605d-4b8c-9547-0fa5d48abbbe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "49eb1da6-b498-4574-b664-6667e50e3dce"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "879fdf85-2e69-4182-98bf-cf222b6bf9f1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "639707dd-52a6-4572-926b-3cf785031868"
                    }
                  }
                ]
              },
              {
                "id": "94fd4084-d565-4eda-9394-dc97ad345e08",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "ee055e58-1ef0-4de0-ae3c-c04afd214fd1",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "487549fd-755a-47f1-a2ff-b51fa23ad6e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "d6fb8681-edee-4642-b231-09db738fce95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24a02f71-82b0-43fd-880c-f059dd61d425",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a58a7eff-5496-43f0-ba9e-db62debe5ce3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f84cc2b0-e545-4e2d-bd9a-6c6525b15662",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b93920d7-6653-4ed8-be30-6e9ed4bbfb02",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f9f18bb-4fe0-4c84-a677-8e0becd51bc7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1b9bab3a-9a66-42b8-8443-be4514ffbbbb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e112121e-fafe-4f84-b665-fd33ae50c97a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "39528a9c-eeef-4db8-ac9e-b670bab00c20"
                    }
                  }
                ]
              },
              {
                "id": "e7fcc0be-7d70-4d86-b3a2-a5e3afafcdf0",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b0d15ad8-b14a-4c5a-9041-056c177a8fd1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b2dba3a5-7c9b-4e9e-8fea-26ede2d60f9e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "568815bc-1cf5-4f2a-85d8-fe641e46594c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a86ead5c-5950-481e-8ec1-1deda3f081b8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c3f034aa-e825-42f5-9949-f9b849058f7f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "b7e1970d-7042-47f0-b25f-57aee1402daa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f56e4eab-6d05-4fa5-87b5-855df8dbc10c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fa1d5cfc-f228-4a64-bb5b-63adca5d526d"
            }
          }
        ]
      },
      {
        "id": "eb5a3ed8-22fc-40e8-87aa-5cc3de297179",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "b3e977a2-9e3f-4f9a-a137-fd651353417f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0e6e10f1-a67c-4ae5-8e72-c1368f1d73f5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8c3545a9-fecb-42ee-84ce-0720f36a6641",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3e4bc2d-f00e-44fc-bbef-8454bf97baee",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f04ea415-39fe-4177-9f72-bfebb858496b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48567fd2-ea6a-4fc7-b846-8949d2371713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "978423fe-2fe7-46fe-a97f-40763de1d5f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88b0c79f-4019-43b0-877d-ba21d972e301",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcf62d0a-d170-4209-8e75-26a666c2ffc8",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f3eaf21b-6013-4efe-b67f-6163dac0eff6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a606260-fab4-4cd1-8eb2-8d119d0e23e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "88807bd4-692f-4d27-8532-084e003dd004"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5f8a1f08-bcae-4696-ba7c-b6a505d236a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf1dadcd-9c24-41fa-a67e-609b88e4602f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "10fd08d0-ddeb-4f7e-99de-f34216fb35b6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dbd5a3b7-29b4-4ad8-8df4-11322fbcdca4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1b8ae1c6-6b1f-47a0-9d20-fde7048f1590",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "37c05a76-5a88-4b2c-95d7-7ad3a77b18a1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bbfe4706-2724-4095-870b-45d543578333",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cd6568d0-e574-402a-8fd1-dddd610bd0a0"
            }
          }
        ]
      },
      {
        "id": "34d87c83-7eee-4396-8fbe-bdb90faa9e2d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "38301b20-35da-4100-a265-843a93038e02",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d1433fe9-7419-469d-acec-d42065ca51b9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "09b31012-de87-402c-8afc-3a2878e34a44",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07703994-38fc-42d3-9688-d0739f9bb728",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c1a7a77-b10c-4add-946f-9a6cd89a3ca3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f41cffdc-33a2-4f12-ac7b-463cf675d92e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b9c8be6-1399-40f8-94aa-0f113e1313bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bfaaead-112e-472f-9c38-6ace861d0208",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05556223-f29f-41ea-b6a2-7bdf2b1419f7",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "35fa1b05-ca03-4017-8a3d-1d96bb431c19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab5fbae9-7259-49f7-bf2c-1332373f4036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f8938be2-41d6-4815-8b7a-5d367a27619e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "66bc3178-aaf7-475b-a6f5-b91cb5d89082",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "065d582d-07a9-41ca-9857-ddcc69cdfd6c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fbdbe4e3-4ebe-4990-a8e8-c28fc0d51e17",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5a715cb5-d754-40c5-8db6-8da99a7fee3a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2a2a679b-62df-49df-bc22-2fef025652ce",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "dc7d1762-fac1-44f6-987e-131d9b63e2c6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8550e4d3-c908-49a2-9220-c5804c9cd55b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fd05c39b-01cb-425e-abf5-d21249adecee"
            }
          }
        ]
      },
      {
        "id": "9f015c1e-efdd-40bc-af53-3fc78ab65061",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "65a10edb-0124-4e8b-bcb8-a754a7bd403a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7d483106-d87c-4471-aee9-f8a0dbfc8a8c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9a23024e-496c-453f-af10-7a345e5490b4",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f248b19e-074e-468a-9148-adcb1c7c902e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2afcef55-29d1-4a8e-b016-abfa5cf5b4c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7a04f57-1f7a-4943-871a-519f24c1c006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c64ed33a-2594-4ac7-b2f3-990c65f9f210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "299510fd-67d3-4f7f-b79f-7951dab93f0f",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba7dff8-d315-4b07-8478-151a8f46976c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "40606572-83ca-41aa-89bd-4120dce39b29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78ed7fb9-1660-4152-9a61-456a61a28434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "26004513-1ca4-468d-b129-49a41308ccb3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "15d76dff-0908-48e6-89e6-af81ac782781",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a2917f79-29fc-4907-a77f-52d2ab256944"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "74263744-37ef-45f5-ba01-458ed8b2a67f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f0fdb118-96b6-4e06-b41d-7dc5edf2cfda"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d8a36963-95cb-4233-ae05-c6abbce6f07c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "166dcdc4-e1fa-4f32-b80c-9b54bacbe567"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bd9c316a-ce22-45f6-b5ad-ce93b1966842",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "77dff333-b8d1-4f20-b82d-bd21e769865d"
            }
          }
        ]
      },
      {
        "id": "d6afc72c-e6d5-4edd-91cf-451a744c9233",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "43e91dd8-df36-4909-9297-b3ebd44d4301",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dc358308-7800-46d8-a27c-b59db92d6ad7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "52ce7d6f-db0c-4b63-afef-386b490732b8",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0d768031-6f00-47bc-a12c-f18d09666242",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e73638b0-cef4-43a0-8f86-e92102b2c669",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 660.6,
      "responseMin": 6,
      "responseMax": 7025,
      "responseSd": 880.6264474792931,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1680914064179,
      "completed": 1680914246564
    },
    "executions": [
      {
        "id": "ea387f3d-9d8e-4f5c-9669-57d4d2e55988",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "ad1598ce-7490-479a-97e6-8d294272fddb",
          "httpRequestId": "13bac535-4d1a-4ba8-81fb-4ebb822591d8"
        },
        "item": {
          "id": "ea387f3d-9d8e-4f5c-9669-57d4d2e55988",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "eabcf57b-190c-4d3b-80b6-ad05d4f1d604",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 0
        }
      },
      {
        "id": "d7a7762c-edac-44b6-8119-d258f9f84d75",
        "cursor": {
          "ref": "936d65c6-f00b-4afd-91f3-fdb796b7facd",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "f3535b0b-8afe-4f82-854a-bda4ac23e305"
        },
        "item": {
          "id": "d7a7762c-edac-44b6-8119-d258f9f84d75",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "fc8bb757-5b7f-4043-b288-01d8edf4aeb6",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "812fa4ac-3999-4a15-89ed-2ca6defb44fa",
        "cursor": {
          "ref": "b6e13387-a840-4f04-84a5-d63833c80ae6",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a485236e-8f3a-41f0-a8eb-0a4b372fe0d0"
        },
        "item": {
          "id": "812fa4ac-3999-4a15-89ed-2ca6defb44fa",
          "name": "did_json"
        },
        "response": {
          "id": "b24ec350-a8fe-4e9d-9075-fde199075bed",
          "status": "OK",
          "code": 200,
          "responseTime": 604,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d271b1e4-fbc4-4fff-af7d-f2fa4f3c609f",
        "cursor": {
          "ref": "4fc3e928-101b-4e95-ad62-32e9721def74",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "47a9772e-1b05-48e0-9930-b7fe051b7998"
        },
        "item": {
          "id": "d271b1e4-fbc4-4fff-af7d-f2fa4f3c609f",
          "name": "did:invalid"
        },
        "response": {
          "id": "ad56ec87-907b-4389-b786-865ba6ce15f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d271b1e4-fbc4-4fff-af7d-f2fa4f3c609f",
        "cursor": {
          "ref": "4fc3e928-101b-4e95-ad62-32e9721def74",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "47a9772e-1b05-48e0-9930-b7fe051b7998"
        },
        "item": {
          "id": "d271b1e4-fbc4-4fff-af7d-f2fa4f3c609f",
          "name": "did:invalid"
        },
        "response": {
          "id": "ad56ec87-907b-4389-b786-865ba6ce15f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d476ab64-c3d3-4398-a7bf-88ef459c32b6",
        "cursor": {
          "ref": "bb077941-58cd-4dc8-92ba-50ccbd8ca3cf",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "3b7f5839-d961-404a-b1df-ca6454face7d"
        },
        "item": {
          "id": "d476ab64-c3d3-4398-a7bf-88ef459c32b6",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f56a5d19-d267-4917-8cd8-687f0b941a94",
          "status": "Not Found",
          "code": 404,
          "responseTime": 706,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04d681d0-4bf6-47b7-86cf-72f61998777b",
        "cursor": {
          "ref": "f12ef45c-0799-48a9-af7e-ef9fd16d9cca",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "516897ad-edf2-4b8a-94e5-eca22df0b7e3"
        },
        "item": {
          "id": "04d681d0-4bf6-47b7-86cf-72f61998777b",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "81876e94-a615-4de6-8c21-239151333003",
          "status": "Not Found",
          "code": 404,
          "responseTime": 541,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a993903-bfc5-4560-bd8b-332d7858876b",
        "cursor": {
          "ref": "3afb2911-5133-4d82-a354-ba11bc7b4fff",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "32d00712-4133-4001-9d21-eb2952b01ae5"
        },
        "item": {
          "id": "6a993903-bfc5-4560-bd8b-332d7858876b",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "44b34ae3-9968-4daf-8fba-3ba0faadc443",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d1b1d3d-6e39-4d16-a780-97d55109fad7",
        "cursor": {
          "ref": "26f6737a-8654-424f-887c-d286838aed2e",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b11aec81-653a-4e4f-ac9a-93a42568777b"
        },
        "item": {
          "id": "3d1b1d3d-6e39-4d16-a780-97d55109fad7",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "8a405bcf-6ad3-4182-8ecf-a42be21cf30b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 530,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d1b1d3d-6e39-4d16-a780-97d55109fad7",
        "cursor": {
          "ref": "26f6737a-8654-424f-887c-d286838aed2e",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b11aec81-653a-4e4f-ac9a-93a42568777b"
        },
        "item": {
          "id": "3d1b1d3d-6e39-4d16-a780-97d55109fad7",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "8a405bcf-6ad3-4182-8ecf-a42be21cf30b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 530,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb56d7ed-e4c4-40f8-a56d-8b72b40c0a5a",
        "cursor": {
          "ref": "db2d4755-2f28-49e4-9149-2668443dfb03",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "54a51ed9-6454-42b2-ba09-84a8de802a0b"
        },
        "item": {
          "id": "fb56d7ed-e4c4-40f8-a56d-8b72b40c0a5a",
          "name": "identifiers"
        },
        "response": {
          "id": "2d3abf76-1a64-40ff-bc71-817fb2a3c02c",
          "status": "OK",
          "code": 200,
          "responseTime": 2316,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5730b58a-2878-4625-8af6-d62fbaa8499a",
        "cursor": {
          "ref": "32c8d32c-e28f-4e0d-ba49-992993ff3678",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d7bd64dc-5d0a-4707-a9bf-8fb030f1f126"
        },
        "item": {
          "id": "5730b58a-2878-4625-8af6-d62fbaa8499a",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ee2a570a-e990-4c95-b7ad-e5000c591678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 804,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5730b58a-2878-4625-8af6-d62fbaa8499a",
        "cursor": {
          "ref": "32c8d32c-e28f-4e0d-ba49-992993ff3678",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d7bd64dc-5d0a-4707-a9bf-8fb030f1f126"
        },
        "item": {
          "id": "5730b58a-2878-4625-8af6-d62fbaa8499a",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ee2a570a-e990-4c95-b7ad-e5000c591678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 804,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6307a11e-2b56-4481-b5ce-bc0ddc288d57",
        "cursor": {
          "ref": "97943b6d-e5f2-4982-a453-8ff9288dec50",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "d1f8b8b5-1d4e-4949-b50b-6554cfa09033"
        },
        "item": {
          "id": "6307a11e-2b56-4481-b5ce-bc0ddc288d57",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "d5131104-ed0f-4dcc-b501-e6559bd942bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38a559f6-cf79-48d6-84f0-54f1e6f75e5d",
        "cursor": {
          "ref": "d5823e2a-2164-4bac-bca5-df8801c7dc82",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "4e30eb31-c043-4575-be03-14454e860c89"
        },
        "item": {
          "id": "38a559f6-cf79-48d6-84f0-54f1e6f75e5d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "6b08737e-6dd1-41fa-acef-d3d1db96e76a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c66cef2-6462-4c2f-91e9-6ff5b40f9049",
        "cursor": {
          "ref": "0c9032fd-0a2c-4099-ade5-302683feb629",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "fe9826f5-bd7f-40e0-a7a4-0527001b939f"
        },
        "item": {
          "id": "2c66cef2-6462-4c2f-91e9-6ff5b40f9049",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "6dfab017-fa1e-4d48-90f7-f9d479ce80f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cadc930d-5c75-43bc-893b-a78c6b5f0f70",
        "cursor": {
          "ref": "0e05a1bf-2d29-4a0a-91fa-00b714907a05",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "f53c32b2-9f40-47ac-917a-46528ec10aa6"
        },
        "item": {
          "id": "cadc930d-5c75-43bc-893b-a78c6b5f0f70",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "cd384388-e4fc-44ac-b1cc-350829bf7aa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1cbdc73-14f5-4f02-ba74-e78ab0c4c1bb",
        "cursor": {
          "ref": "96d55053-5fe7-4eff-a675-5ed009a45549",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "98d091b9-10fe-4a17-99c1-044ee1da6387"
        },
        "item": {
          "id": "f1cbdc73-14f5-4f02-ba74-e78ab0c4c1bb",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f0631850-1a05-4f00-bdc1-c16b290cda1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e24a6c0c-9b6f-42db-aabb-8564e68a2529",
        "cursor": {
          "ref": "d52c2b01-453c-484e-9a48-a5675ef2a961",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "5f931a82-11fc-447e-ab27-8c2f2a8d04d6"
        },
        "item": {
          "id": "e24a6c0c-9b6f-42db-aabb-8564e68a2529",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "802bda2a-4463-4d01-b37a-9a0eacb5c02c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 519,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8c6b953-3589-49ec-9058-0ceec8d99420",
        "cursor": {
          "ref": "4ca7a2c2-a81b-487f-bdbb-97d31001ef5b",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "3e63bd75-4751-44f6-af6e-b188240383ed"
        },
        "item": {
          "id": "e8c6b953-3589-49ec-9058-0ceec8d99420",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "49b193b2-2986-46f6-84ac-bbeaa31fb99b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "814e5c25-f222-413d-a4d2-6344015db63f",
        "cursor": {
          "ref": "9d1b5551-d4e4-4e87-92f5-8393f22f44e1",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "c253ff62-cc49-43d1-aef3-b0ad5c380a5a"
        },
        "item": {
          "id": "814e5c25-f222-413d-a4d2-6344015db63f",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "ce87727f-c7ab-413e-98a2-a1905193bf8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49ff3cfb-6bcd-4b27-8ae6-f8ba9e4cad7f",
        "cursor": {
          "ref": "5f5fe88f-8727-4cd2-9a3a-183508706aa1",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "9728434e-035b-4534-be63-49214d6b4a5e"
        },
        "item": {
          "id": "49ff3cfb-6bcd-4b27-8ae6-f8ba9e4cad7f",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "248af419-8e6e-4a68-970a-2ea235e1ce51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc81b7a-3b31-4106-b256-5a814d10ba69",
        "cursor": {
          "ref": "602548cd-cc1d-4a21-8089-9a7248a09043",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "626e4889-71b8-4c4f-9985-d906d0e3dfe0"
        },
        "item": {
          "id": "acc81b7a-3b31-4106-b256-5a814d10ba69",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "bb516448-0572-4f19-81c1-db2c4639fcd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7170a52-71ba-4a77-97a1-e5cb91150fc6",
        "cursor": {
          "ref": "36125d69-7858-46c6-aab8-58b503f05eb8",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "4823f0a9-ad86-49c1-b86e-fc6cff79877c"
        },
        "item": {
          "id": "c7170a52-71ba-4a77-97a1-e5cb91150fc6",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "0e3ffea9-1c52-41fa-9cca-2a5bf8a96278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 646
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8444596-07db-4848-a5e2-6cd549600f33",
        "cursor": {
          "ref": "a71dd1e6-c2d4-499d-802d-7a3ba20340a0",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "8291e90f-a77a-4f9b-89ea-548e6593ee38"
        },
        "item": {
          "id": "f8444596-07db-4848-a5e2-6cd549600f33",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "fba91aef-9675-4b00-a85c-cfd023052758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74f4ad28-43cd-4c20-a5a1-a76b061bb781",
        "cursor": {
          "ref": "03f795a8-182e-4f2d-80b8-c44f98a78644",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "2daf6bdb-e758-4350-b158-91f167237b0d"
        },
        "item": {
          "id": "74f4ad28-43cd-4c20-a5a1-a76b061bb781",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "79a7249b-7dc6-4bd3-aaf4-fa01174c4ad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bd1b03e-14b9-41c5-9144-09470c078a7e",
        "cursor": {
          "ref": "123a01e2-efee-43bb-ba14-bcfaefc0ba23",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d201ab53-a7f1-4958-8526-87c4d450a57e"
        },
        "item": {
          "id": "6bd1b03e-14b9-41c5-9144-09470c078a7e",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "bb968f14-6309-4b28-b420-6d0c1766ab39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f88fe555-18bd-4951-83ef-80bfff1a1fe2",
        "cursor": {
          "ref": "e669ed35-56d4-44d5-add3-2b296f8bc27b",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "36a458de-3ad3-476e-b21b-a3aabf44a81d"
        },
        "item": {
          "id": "f88fe555-18bd-4951-83ef-80bfff1a1fe2",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "45ace414-8704-4fdc-be34-22b3b07b3f4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8197e48-18b2-4fef-97d6-113e5d538900",
        "cursor": {
          "ref": "ddf1be40-32eb-4cac-89c2-b9d2a368266e",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "f1e2fe29-2e6e-4e24-bbbe-9ba2c9b82f61"
        },
        "item": {
          "id": "a8197e48-18b2-4fef-97d6-113e5d538900",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "39a85cf9-fd80-487c-8999-4070a6f2519c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d88ff0-bf4f-489c-bdb6-1304c2d55cd8",
        "cursor": {
          "ref": "8c70d77e-d4fb-473a-9572-fc563316446c",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "d1538022-4ffa-4d01-b2d9-3a4b7e334bc8"
        },
        "item": {
          "id": "75d88ff0-bf4f-489c-bdb6-1304c2d55cd8",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "e0872393-42d7-4f2e-bbd9-74a2d94f9e6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30f13e66-4818-4a73-8420-57bcba2d1e7a",
        "cursor": {
          "ref": "58a6f6b0-f3b7-454e-819b-a2c5634547db",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "a5658dfd-a8e3-472f-8605-9a0383c59218"
        },
        "item": {
          "id": "30f13e66-4818-4a73-8420-57bcba2d1e7a",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "2401bc7b-49ad-4b3a-a2e5-b31cd9fa377f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 535,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d7f7252-e9f0-4d93-b2c0-5ca95a72180b",
        "cursor": {
          "ref": "e65f9013-e7df-4029-a724-fdafcad17a26",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "3859051b-de1b-42e7-80d7-9e10c797c25d"
        },
        "item": {
          "id": "2d7f7252-e9f0-4d93-b2c0-5ca95a72180b",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "936d481f-6db3-4f16-9618-b389624ec071",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "492842bd-f30e-4e2f-ade6-c05ad632eb64",
        "cursor": {
          "ref": "e8fd3fc4-4c28-4cdc-9d0d-639427712d65",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "e080a9cc-cd4d-48c6-beb6-66f0bd3a380a"
        },
        "item": {
          "id": "492842bd-f30e-4e2f-ade6-c05ad632eb64",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "195bc506-193d-46f7-9279-d6d0523bf3ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcfe7fad-0f25-402d-89e0-49bf3bf99468",
        "cursor": {
          "ref": "9b90ac38-0118-413b-b90c-71a2f6863f98",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "6cdeed0b-0ddf-41aa-a889-c9fa5eb9dd0d"
        },
        "item": {
          "id": "dcfe7fad-0f25-402d-89e0-49bf3bf99468",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "800b2dce-6d1d-4da7-b523-e3823b9f1d2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31bceb29-6573-418b-b758-ff70b1bcdbb1",
        "cursor": {
          "ref": "d70467d4-497f-4809-87cd-55893bb998a5",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "55d29857-65d1-4eb6-ab54-902391615469"
        },
        "item": {
          "id": "31bceb29-6573-418b-b758-ff70b1bcdbb1",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "895ace70-9830-4d7a-bc03-ebf9198d8a04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ae5d50-24b4-4772-b6c9-7613209dda56",
        "cursor": {
          "ref": "adcdc698-d734-4a4b-af1b-ab043ad1ce07",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "30814389-6284-447c-8f2a-e8a2f701c57e"
        },
        "item": {
          "id": "58ae5d50-24b4-4772-b6c9-7613209dda56",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "b69bd321-0054-4195-80c6-8776532ff3f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1f9d48f-c4b4-4c0f-8e6f-5cddcc3604bf",
        "cursor": {
          "ref": "4d5285e2-5509-4d2f-aa34-d12f70db663b",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "b471f05b-b809-4bf4-818e-ff148b84b5a9"
        },
        "item": {
          "id": "f1f9d48f-c4b4-4c0f-8e6f-5cddcc3604bf",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "e3cf2355-3c7f-4a7a-80ce-9e0373118765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86863804-dda8-4f34-ac3a-328055a22000",
        "cursor": {
          "ref": "112a31cc-37a1-497c-94b9-525cc84a55d4",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f46872e3-7c15-4cd7-bca3-e0ba1e56db1a"
        },
        "item": {
          "id": "86863804-dda8-4f34-ac3a-328055a22000",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "bd050a92-a66a-48c5-ae3f-fc4a6af2fa93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 624
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f86b3932-5292-4fec-a44a-fc8291008165",
        "cursor": {
          "ref": "10898658-9e8e-4e3a-9812-e2c2c764d7b8",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "734fe222-9e07-4055-a863-bac718367303"
        },
        "item": {
          "id": "f86b3932-5292-4fec-a44a-fc8291008165",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "6f13c9a6-586c-4a97-b27c-401606ce8a79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33e68b50-97d6-409a-bf1e-fe4ec122e1fb",
        "cursor": {
          "ref": "27d5b5c8-9cf3-464a-bdd8-586eaf08b6d8",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "45b2ce15-d91b-4360-919b-8828b35bd250"
        },
        "item": {
          "id": "33e68b50-97d6-409a-bf1e-fe4ec122e1fb",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "9d77b1cb-5bec-44a1-84d4-921986687d6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 623
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36ac14b5-e81e-4aad-82ec-0efb56c9024c",
        "cursor": {
          "ref": "0b0ff7b3-da42-46c2-9b85-326a7203b3d8",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "9f415177-27fb-4a88-8906-f79eaaf2400d"
        },
        "item": {
          "id": "36ac14b5-e81e-4aad-82ec-0efb56c9024c",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "03df87f5-7fef-411d-8097-033ac96bd306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c065874a-93e1-4ea4-80e9-85a50b30f86f",
        "cursor": {
          "ref": "32f06a7a-7eff-41a3-a25e-255dda7207ea",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "6a5c3dda-3b06-4da8-af79-b7b0e5d0154e"
        },
        "item": {
          "id": "c065874a-93e1-4ea4-80e9-85a50b30f86f",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "30fdb667-da47-43cf-84a1-231ac1abd9ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4969f73e-b8fe-4237-83f4-7ec1bdd7d6e6",
        "cursor": {
          "ref": "4ff6f8c9-8811-4579-a610-d64bb008fe40",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "f5136f19-c73b-43b5-926b-468420abf145"
        },
        "item": {
          "id": "4969f73e-b8fe-4237-83f4-7ec1bdd7d6e6",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "77f12f62-105a-4a80-8e30-20a219878da5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 1046
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de11f850-2166-4015-9207-be3d4529e86c",
        "cursor": {
          "ref": "c4021ead-2723-4175-9cc2-77359d256064",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "ab7b8057-3394-40d5-ada4-0505da4dd382"
        },
        "item": {
          "id": "de11f850-2166-4015-9207-be3d4529e86c",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "00d8b5fb-7bfc-4769-a712-2eee59fc6008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 975
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b64db75f-b253-4f19-b19c-2e5775ba309d",
        "cursor": {
          "ref": "0d71c9b4-c699-4432-a501-80bf1b275a9d",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "a4e28a77-8da0-41e1-87d3-1db4d2badb5c"
        },
        "item": {
          "id": "b64db75f-b253-4f19-b19c-2e5775ba309d",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "eaa887d0-be18-413c-8ead-162f3c7bb80a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 972
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62c74b02-a01a-46bc-b8da-66efbdd69355",
        "cursor": {
          "ref": "563d1d6a-ad66-4feb-adfe-ff8979d98a48",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "49c19149-2c39-43d7-bc57-0cfd75440a4c"
        },
        "item": {
          "id": "62c74b02-a01a-46bc-b8da-66efbdd69355",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "2988d619-750e-4afb-97d2-981994a44807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65611412-feb3-4be6-a7b4-58f06de35204",
        "cursor": {
          "ref": "f139dfbd-67f4-4ca1-8dc4-2e589088f09c",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "7bea1459-1ae3-44de-bf3b-6cb68957d39f"
        },
        "item": {
          "id": "65611412-feb3-4be6-a7b4-58f06de35204",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "a0cbb872-2e3e-48c3-86d9-85ecf8e37f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 1377
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f98d7028-0c07-48a6-bd36-126bf3caea5c",
        "cursor": {
          "ref": "231ed93b-3ee9-4ec1-891b-61084e37cc54",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "5e8d0d92-03c3-4334-8b86-a22a4b9bbc03"
        },
        "item": {
          "id": "f98d7028-0c07-48a6-bd36-126bf3caea5c",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "5187aef8-d6ad-4c88-b94e-18a8a1485715",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 653,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41838154-ba1d-4b4d-a64c-08dd8d24843a",
        "cursor": {
          "ref": "3be9dd6d-affc-4683-a16b-a8a28c74694e",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "84daa42f-89d2-4d62-b440-8844b30adf72"
        },
        "item": {
          "id": "41838154-ba1d-4b4d-a64c-08dd8d24843a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "10b15418-0c1f-48bb-8cd8-44650d202b10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 1005
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70753a8c-0c72-4864-9fd5-b228eb6eb13c",
        "cursor": {
          "ref": "cdcf7610-10cf-455d-88b9-60cac7db55a3",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "aa9e45b9-2372-4875-a852-3b2b21ebe9ef"
        },
        "item": {
          "id": "70753a8c-0c72-4864-9fd5-b228eb6eb13c",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "46a53039-43fe-4dbd-b448-644958239b46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03089d56-3024-492e-9ce8-ec15e7267afa",
        "cursor": {
          "ref": "23e6e647-6a21-4206-acf0-1618af73865e",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "6c992e09-13c9-4719-a55e-b29bd5eade68"
        },
        "item": {
          "id": "03089d56-3024-492e-9ce8-ec15e7267afa",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "8f9716e3-4e6b-4e38-835c-7cac692267f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 515,
          "responseSize": 1314
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d4d1887-a1a8-41e5-8b78-2c886d75c2aa",
        "cursor": {
          "ref": "244e5caa-e9e1-46a0-86c8-efc681120fb2",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "f298c512-2809-4247-a5b5-d700ac4e47a0"
        },
        "item": {
          "id": "6d4d1887-a1a8-41e5-8b78-2c886d75c2aa",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "f53f28ac-12ae-4765-a92b-af61eb1cf164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe93ae6-c8b5-422d-8ebf-652f7bd384ab",
        "cursor": {
          "ref": "60bbab29-f461-401d-aa5a-5ea6b9d8f715",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "9be7a4b3-1c75-4877-9310-d4d4f0ef29f8"
        },
        "item": {
          "id": "cfe93ae6-c8b5-422d-8ebf-652f7bd384ab",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "40d1b5c9-3e6d-45df-90f8-f9bf635d0e78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 1313
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c354de3-2a6f-4d70-b2bf-d61a55139ff0",
        "cursor": {
          "ref": "f3ec960d-61cc-41f2-947a-77da824bfc27",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "ce7f093a-b26e-4423-bcd8-2b503e2de666"
        },
        "item": {
          "id": "9c354de3-2a6f-4d70-b2bf-d61a55139ff0",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "5900a29a-a1f6-4435-918d-feb233766385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 1716
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b14bb95-2863-41e9-8f4c-25efd45f0aa9",
        "cursor": {
          "ref": "51cf7388-acf6-4d59-98bd-0097a66e8abc",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "9379902d-b713-4443-b519-39d6acf9b930"
        },
        "item": {
          "id": "1b14bb95-2863-41e9-8f4c-25efd45f0aa9",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "76e109d2-ea94-40e9-87e7-be9132b3ab2b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 664,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89c86d23-4a78-411d-99de-c953f0ef717e",
        "cursor": {
          "ref": "5a886afd-6194-4d84-bb33-46e8a24edbbb",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "75d80f04-c8dd-424b-8be6-7928ef6d0939"
        },
        "item": {
          "id": "89c86d23-4a78-411d-99de-c953f0ef717e",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "a1f01b08-6bfb-4373-bc0e-f01b72af49e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 516,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12af3a0e-076c-40d0-ac26-4e1a2b574cbd",
        "cursor": {
          "ref": "55238d76-b31a-4998-8e29-dd26c00b6224",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "a45f78dd-9ea7-4665-8082-6b4cb87191fa"
        },
        "item": {
          "id": "12af3a0e-076c-40d0-ac26-4e1a2b574cbd",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "5b405abd-16e7-431a-90e5-b2a0af16f9c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bef68bc-561f-452f-b687-d0c77ae5a011",
        "cursor": {
          "ref": "542a8aa5-df02-4b07-abeb-1976e3dfb3e9",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "92fe70cc-2b73-45d3-be6e-d4577b2da507"
        },
        "item": {
          "id": "4bef68bc-561f-452f-b687-d0c77ae5a011",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "56975f28-e99b-4067-b119-0829a7506a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d28fdb-8c15-4b08-907f-25edcc7e0f09",
        "cursor": {
          "ref": "645586d7-28f8-4401-83b9-f7183fb40672",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "5ff228d0-d8be-4737-ae90-ccfbb0f2f835"
        },
        "item": {
          "id": "b2d28fdb-8c15-4b08-907f-25edcc7e0f09",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "a6468718-2793-4199-b7b8-655138a6bd09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 798,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1c843ab-6470-4bc4-a685-caba8d334155",
        "cursor": {
          "ref": "e68023b0-624c-43f7-9c77-bb964a55982c",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "5a4e3ddf-55bb-4c66-8c50-a6f4004f6916"
        },
        "item": {
          "id": "a1c843ab-6470-4bc4-a685-caba8d334155",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "3184c200-f31f-4d08-aaf8-5b35700035ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 976,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "507d888f-077c-4c8f-b6db-4e7cbcc2834f",
        "cursor": {
          "ref": "7fd606b8-7d62-40ab-acfc-d7973dafb3f3",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "14473d4f-2b90-409f-a172-439d14ae0233"
        },
        "item": {
          "id": "507d888f-077c-4c8f-b6db-4e7cbcc2834f",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "59c49690-5054-4ffb-97c8-df22004a2c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 810,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ef04478-64ae-4dd5-bad5-0ddcf13b071d",
        "cursor": {
          "ref": "34837d9b-e542-47e2-8b6b-d062dbb8b7fd",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "8fe48eed-fb99-46d7-a83f-5eab74134ea0"
        },
        "item": {
          "id": "9ef04478-64ae-4dd5-bad5-0ddcf13b071d",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "6eb5552c-cc09-4647-abca-049acf328728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 877,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96b93eb6-899c-4e7a-9b75-a74d29a3f7bd",
        "cursor": {
          "ref": "4c0989f7-405d-4cf6-a536-cf156e4016d2",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a0d29a20-e7b6-4549-acd5-af52125e4524"
        },
        "item": {
          "id": "96b93eb6-899c-4e7a-9b75-a74d29a3f7bd",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "5f604069-494a-4de5-92b1-a21f3eb9fbde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a20fff8-559a-406d-8c90-5c8c02419d8b",
        "cursor": {
          "ref": "0c2bbc26-22b0-4a2d-ac0c-318703dc2dde",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "3c34ae36-1dd0-4569-994e-af7ba2351ec0"
        },
        "item": {
          "id": "9a20fff8-559a-406d-8c90-5c8c02419d8b",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "10193611-f841-4541-886d-b13da2033102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 1100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c04c7a4c-7f34-42a8-b5ff-c6a6b93c658b",
        "cursor": {
          "ref": "19929425-e87d-4be7-80f9-ef98dd6ca827",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "bcb3d38b-61ea-4412-99ac-4318de8b2d72"
        },
        "item": {
          "id": "c04c7a4c-7f34-42a8-b5ff-c6a6b93c658b",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "5a018546-89f4-4262-8856-3fcb03b5d93d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de7b6ccc-2c8d-431c-bfa8-a6adc2994d98",
        "cursor": {
          "ref": "d771698b-2240-4c5b-9d86-5b506b3c6268",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "43bbacaa-b83a-43e5-a394-512287632a9d"
        },
        "item": {
          "id": "de7b6ccc-2c8d-431c-bfa8-a6adc2994d98",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "07dfab43-b4ee-45d1-bf73-fa89a1a8bd57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3db37981-3617-4b8c-9b32-871b27a48039",
        "cursor": {
          "ref": "e95b9ec4-a4d6-4cb4-9990-da595c99bb8f",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c81cb29e-5fee-43d0-95fe-130dadac071a"
        },
        "item": {
          "id": "3db37981-3617-4b8c-9b32-871b27a48039",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "7729742f-0dbe-40e2-8fb5-11dbc29d573c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc1537c4-129c-4fde-a856-2a37ac116b55",
        "cursor": {
          "ref": "6aad2e75-0722-44a8-bcc3-1c16fc0bd561",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "6665a35f-a05c-4cc5-a7f0-7a3ee6c1eed2"
        },
        "item": {
          "id": "dc1537c4-129c-4fde-a856-2a37ac116b55",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "4e30140e-6b0a-4852-ad8b-4a9a481a7e77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 621,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3ef15fc-00fd-4fe6-8e18-2bf8ff9c6e26",
        "cursor": {
          "ref": "c69940bb-53b6-4e0e-b77c-e1c81aa6b543",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "7047f6f2-9c75-43dc-9606-0b2cd8e880e2"
        },
        "item": {
          "id": "e3ef15fc-00fd-4fe6-8e18-2bf8ff9c6e26",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "ac82a0cf-490c-4968-bd3a-c768fa7ed686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 906,
          "responseSize": 1415
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "863623af-7498-4eaa-91bd-01741c4cd1d9",
        "cursor": {
          "ref": "72eda39c-922a-48f7-ba7f-36c79dd6adee",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "414765d8-c788-455f-afab-aa13c28614a0"
        },
        "item": {
          "id": "863623af-7498-4eaa-91bd-01741c4cd1d9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "b6c87caa-0664-4f19-9970-5aebaa85706b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1511,
          "responseSize": 1401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3b4ecc9-35bc-4fd3-b6bc-3a3bd9ada545",
        "cursor": {
          "ref": "55d136a5-ce30-4262-999f-d9ca945261c5",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "16689f91-c03d-41b5-938e-8bae732f305d"
        },
        "item": {
          "id": "c3b4ecc9-35bc-4fd3-b6bc-3a3bd9ada545",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "feda1af6-6a6b-45b3-a6fc-3637278c88a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1179,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c03c3abb-e21c-4cf3-9aee-6648da949b91",
        "cursor": {
          "ref": "ebd56485-3f46-449c-ab58-6a6c30344bf7",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "832b2a84-25f1-4055-9436-10d3578634cc"
        },
        "item": {
          "id": "c03c3abb-e21c-4cf3-9aee-6648da949b91",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "bea339ff-0895-4e26-9691-787efc2b88db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1242,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81bbf774-ab92-4cd0-9d50-dffeca9aa008",
        "cursor": {
          "ref": "8e203b70-1462-427f-bb22-42febcf9efc8",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "45cf0367-4d62-4a7b-8d59-0a9a9e0a0221"
        },
        "item": {
          "id": "81bbf774-ab92-4cd0-9d50-dffeca9aa008",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "683df8e3-d5d9-4190-91c5-5d3cad15c061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1724,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b07bbe9a-2157-4ab3-bd43-2a0079570241",
        "cursor": {
          "ref": "79655418-b355-459f-8da4-39984eb985a3",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "5dc5844a-2286-4e44-9952-b159158e1f43"
        },
        "item": {
          "id": "b07bbe9a-2157-4ab3-bd43-2a0079570241",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f558d171-ca86-4f2c-9522-a7f997d11511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1303,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eef61447-9e0e-4f56-8ffa-5fa3afbb87a5",
        "cursor": {
          "ref": "91bb722d-5459-45ef-8d45-aa037d17d80b",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "3a2ab89b-bace-447f-9a69-ef89eb206388"
        },
        "item": {
          "id": "eef61447-9e0e-4f56-8ffa-5fa3afbb87a5",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "6fd91013-aa36-4211-b6a6-c63c646dc891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 928,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f840d54f-299c-401c-b124-f81243db3e34",
        "cursor": {
          "ref": "125c7f43-f5e7-4b49-b19c-7b23fe27a329",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "13e79ea6-4439-46cc-9c02-88b36dfe65f8"
        },
        "item": {
          "id": "f840d54f-299c-401c-b124-f81243db3e34",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "8805ae63-7bac-4eb8-b1c9-92f85bb1534f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 834,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72ea4ce8-fda8-4b35-90d0-0958a4a5c2c1",
        "cursor": {
          "ref": "4968721a-3e9f-4b68-bbcc-cf7ad38a5134",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "4be93442-bc0d-4db7-aa8e-456e509f550c"
        },
        "item": {
          "id": "72ea4ce8-fda8-4b35-90d0-0958a4a5c2c1",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "4ad4ea4f-e8c7-4c20-a34a-93a622cb843f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b0acf5-9d36-4e65-b9df-6d2d28c8d3e8",
        "cursor": {
          "ref": "06a5ea97-1dcb-4412-996c-e12ad6fb4d7c",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "8bc449d2-a9db-466d-94c3-644fd8a067ec"
        },
        "item": {
          "id": "32b0acf5-9d36-4e65-b9df-6d2d28c8d3e8",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "09833106-bdd6-40a0-9151-f51d57415b07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ef4059b-0e10-48ef-ad8d-98e705c2592d",
        "cursor": {
          "ref": "2c175dde-1ee3-4f6f-afbb-4806150a8b13",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "b84e5584-38af-405d-b20a-94fb8eb3a6bf"
        },
        "item": {
          "id": "1ef4059b-0e10-48ef-ad8d-98e705c2592d",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "6b6395fa-f07a-497c-ab54-9643717d42b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5599e633-45de-4489-a496-2bcc4b370b0b",
        "cursor": {
          "ref": "7982849d-e06d-4711-a7f2-7fafcc9a6519",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "1f34274c-1499-4c6f-aaee-a90c1e74460a"
        },
        "item": {
          "id": "5599e633-45de-4489-a496-2bcc4b370b0b",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d2770118-4be2-47a4-a074-0db4c33913e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fbf655d-2731-435b-b300-7b1036da49ee",
        "cursor": {
          "ref": "b4db15d4-bc85-49b5-8f06-67278864348c",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "31d018ee-05a8-45ca-a7b2-cdce70ee56d0"
        },
        "item": {
          "id": "0fbf655d-2731-435b-b300-7b1036da49ee",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "3b8d37dc-d3ca-46b6-bb2a-f6bffd246642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 836
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d2f073c-db87-4058-a0b7-a9a4111ac039",
        "cursor": {
          "ref": "83163581-cf67-4e4c-a44e-b4968c96aae6",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "371139af-eb6a-4237-b842-5c44e347683e"
        },
        "item": {
          "id": "8d2f073c-db87-4058-a0b7-a9a4111ac039",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "2adf5caf-3d08-4095-980c-2d927fb188cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8371751-1f7e-4722-8840-fdaa26a6637e",
        "cursor": {
          "ref": "c4674ab7-2e83-4906-b92b-19a655816208",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "99c0d0f2-04b8-4fcf-8316-1560f777f496"
        },
        "item": {
          "id": "e8371751-1f7e-4722-8840-fdaa26a6637e",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "2b96be29-fcd2-483b-8fca-9f25900b5555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9516a6ba-7557-457f-865b-97a68df6a3d5",
        "cursor": {
          "ref": "c18c30a3-076f-4ba0-a08f-021a61edca80",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "91ce3b91-861a-4631-b631-f298c32e7f22"
        },
        "item": {
          "id": "9516a6ba-7557-457f-865b-97a68df6a3d5",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "9bb7151a-ac79-4e68-9e22-f962cacbbdb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7a8386e-1c9c-4b0e-84cd-14e54cd5a221",
        "cursor": {
          "ref": "9c665e8b-f193-4812-9c49-4376e1874fdf",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f5491476-656a-4ab3-aec9-fc50a54a3209"
        },
        "item": {
          "id": "b7a8386e-1c9c-4b0e-84cd-14e54cd5a221",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "f56abee6-7f3f-4bd0-972a-58488d419ceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "729ccb85-a838-4517-9137-e2f73d9add5b",
        "cursor": {
          "ref": "534f67db-6c93-4427-9710-1bb6ea44077a",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "687cc9dd-9f4c-4b6a-bd20-c5b194127dcf"
        },
        "item": {
          "id": "729ccb85-a838-4517-9137-e2f73d9add5b",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "57335050-35a1-435f-8443-b4c6b8b2f832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f000ad7e-2af2-44b0-be2f-84a083e85389",
        "cursor": {
          "ref": "813b1dc6-0fdc-42a7-8d5b-38ffff13ae63",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "7b6c4933-cf51-4660-87ec-61ebf201fa62"
        },
        "item": {
          "id": "f000ad7e-2af2-44b0-be2f-84a083e85389",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "11c8535e-6230-49c3-84c6-d41313ee8efd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6c5892b-d1d0-48c2-8f30-66b5f8f8b49e",
        "cursor": {
          "ref": "7971e4b2-e285-482f-aef3-eb71dc9d92c8",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "9ece78bd-3945-41c3-9faf-1a092a995e12"
        },
        "item": {
          "id": "a6c5892b-d1d0-48c2-8f30-66b5f8f8b49e",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "6f065890-5ca9-46b1-b3df-a0068bfa6a61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2ec312e-d311-4ec7-9b36-dc1444b17bc3",
        "cursor": {
          "ref": "301b03cc-2a0e-4f4f-aa6e-cbd438ccc5fb",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "343679ab-ceca-43d7-81f4-bcd54525cb45"
        },
        "item": {
          "id": "a2ec312e-d311-4ec7-9b36-dc1444b17bc3",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "b3e925f1-7146-40c1-840d-7bdf6bfcd217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dcdc081-6fa8-4031-9831-7f071bb367f5",
        "cursor": {
          "ref": "c9827f8c-dcc6-47d8-8f24-ae89e3767c42",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "4c8b15e7-f58d-439e-977e-1381a4e848a8"
        },
        "item": {
          "id": "3dcdc081-6fa8-4031-9831-7f071bb367f5",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "b317d065-af74-4004-8298-7c0c68e1b78d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 633
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8a5c440-366f-4fc2-9a0c-ac0c2b05d0b6",
        "cursor": {
          "ref": "9bbeceab-2eea-4941-9f88-e9f71ac33b52",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "0dfa7fb2-a811-42b7-b50a-53dd1c995bf9"
        },
        "item": {
          "id": "b8a5c440-366f-4fc2-9a0c-ac0c2b05d0b6",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "275c112d-e494-435c-90df-9b8499d1973e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "186c955f-a74a-497b-b33e-5684b7811a44",
        "cursor": {
          "ref": "02740338-c4fc-47dc-86d6-d81483cc3ed3",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "fd94d2ae-a7f1-4ca8-887a-ea86e0883c7c"
        },
        "item": {
          "id": "186c955f-a74a-497b-b33e-5684b7811a44",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "283576d8-b11b-4358-a4d2-8b571821de3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7388bf85-5538-4ae0-a893-74c09ebdd104",
        "cursor": {
          "ref": "b334b7fd-128f-4d32-aad0-f42dea363eb0",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "899c087c-edbc-4b31-878e-f0004210baa5"
        },
        "item": {
          "id": "7388bf85-5538-4ae0-a893-74c09ebdd104",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "d3ee91a8-b874-47e5-ad2b-68b0fc5abeb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c924c043-9967-4056-86dc-75c01c7d0f45",
        "cursor": {
          "ref": "c65d3226-17f2-4967-a92f-50b56b54ffb8",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "c8ea9815-81da-43ce-881d-2b4358a6292a"
        },
        "item": {
          "id": "c924c043-9967-4056-86dc-75c01c7d0f45",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "b9c0753a-aa10-4ea8-8c92-bc29ead94965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebdf2ba0-aa3e-4e7a-8bc5-f127d811684d",
        "cursor": {
          "ref": "36ef2710-7b85-438a-9853-4480f8fb8295",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "05179289-dd43-45ed-b629-688581113c7a"
        },
        "item": {
          "id": "ebdf2ba0-aa3e-4e7a-8bc5-f127d811684d",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "28ac6ed9-dc3e-4c5b-8d9c-a77389b18581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 527,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e86778d-3c11-47e2-ab50-6d49aba12656",
        "cursor": {
          "ref": "7833eb99-2c25-457b-aae6-495433f0e1d0",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "194d0451-6911-4eda-9d51-d8ff3fd85ce2"
        },
        "item": {
          "id": "3e86778d-3c11-47e2-ab50-6d49aba12656",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "9b51f0ce-a701-4f9e-8d3f-2e809c70f907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 655
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "028ec139-8bdd-476a-bb11-7bc10a5e9477",
        "cursor": {
          "ref": "c71cad46-ef83-4d99-9946-f0d4a6413a31",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "0fe83812-eb47-42b4-ba03-658a84ab1c72"
        },
        "item": {
          "id": "028ec139-8bdd-476a-bb11-7bc10a5e9477",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "6a1d7eba-1db3-40ff-a375-a15c0d44e775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c56aed01-5262-43df-a6fe-172784f1cfea",
        "cursor": {
          "ref": "b732e3dc-b7cd-4e6e-83da-d976809da5c7",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "aadbec90-08eb-4504-ba70-0478ab851e8c"
        },
        "item": {
          "id": "c56aed01-5262-43df-a6fe-172784f1cfea",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "0dc8d085-4b9b-4a0b-a508-c0a8da498bb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 534,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57794239-7277-47c3-af75-feae007948c6",
        "cursor": {
          "ref": "7cdc6e64-2e92-486f-ba0e-31c789aa40a7",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f90cd1b6-551e-4e1e-a115-8efda8ec3e57"
        },
        "item": {
          "id": "57794239-7277-47c3-af75-feae007948c6",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "dea41bf5-ba8c-4da8-bb28-180c2da40529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 953
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c27c7de-c8f4-4382-8da5-77e2ee5ac5f7",
        "cursor": {
          "ref": "ad5109da-124e-4ebc-84f6-e30551ae59b4",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "191c5f34-8b79-4180-88a0-29be46e4003b"
        },
        "item": {
          "id": "2c27c7de-c8f4-4382-8da5-77e2ee5ac5f7",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "de0372c1-38c4-437b-9761-00d7e9a5e6f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66dde277-83de-4285-b2e1-344f5ba2f2a8",
        "cursor": {
          "ref": "0e163ac5-22f9-44e7-90c0-1216c3670cdb",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "2ec0eb0e-4de1-4a95-88de-3f6cc62f16cc"
        },
        "item": {
          "id": "66dde277-83de-4285-b2e1-344f5ba2f2a8",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "b1ad7376-6a09-4092-9bb6-8cf4d19af623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b90e6c33-c454-4bd0-a1de-753b346e5cdd",
        "cursor": {
          "ref": "ded8332f-b9be-4183-b519-13aea23f12d1",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "9665bcbf-24b0-4815-8c54-d7557b980f76"
        },
        "item": {
          "id": "b90e6c33-c454-4bd0-a1de-753b346e5cdd",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "9590229a-10fe-49ff-8fd8-c0a923bb9b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dff19fe6-fa45-4f6e-b2d5-9e6447057980",
        "cursor": {
          "ref": "443a1f54-88f4-4f86-8a8b-1f3c8aae39b0",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "2dc282d0-b07b-474b-a4f5-5f95a088eab9"
        },
        "item": {
          "id": "dff19fe6-fa45-4f6e-b2d5-9e6447057980",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "8e7243f2-3703-4354-9b4b-59c4bf88e53f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "028c47a8-cf3b-4c4d-95f8-2e69d66db5d9",
        "cursor": {
          "ref": "3b9e3674-1417-44b3-af3f-19e3706007d0",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "21cfd2e8-a4ed-4bc8-8049-84519ecc0d9e"
        },
        "item": {
          "id": "028c47a8-cf3b-4c4d-95f8-2e69d66db5d9",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "e79c7261-3c0d-4f06-81bd-f10ed8a04a84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84e18eee-95dd-4d1b-825c-dc3873e85ebb",
        "cursor": {
          "ref": "dcb3e008-29a9-4bdb-b308-b93fadeb6739",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b8dbb4b6-0d0f-4ce2-8a8c-07acc880d75f"
        },
        "item": {
          "id": "84e18eee-95dd-4d1b-825c-dc3873e85ebb",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "1e4f9405-6733-47d6-8131-f526ae1da23d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 74,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0c8a645-e209-4cd1-ad2e-021e6c6a7826",
        "cursor": {
          "ref": "8f872673-22e6-4571-a78b-f8568069733d",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "64d3e313-023b-413f-8792-21a23a2f9dff"
        },
        "item": {
          "id": "d0c8a645-e209-4cd1-ad2e-021e6c6a7826",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "83eda64d-2410-4be5-96f7-a2b8d4c021cb",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 516,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e076d4c7-cfb7-4130-b6c2-acad94399f25",
        "cursor": {
          "ref": "dd3085a9-1e40-416f-8995-f32a25360d7c",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "cd89e201-a68b-4c31-be51-ebc9eeda7d86"
        },
        "item": {
          "id": "e076d4c7-cfb7-4130-b6c2-acad94399f25",
          "name": "credentials_issue"
        },
        "response": {
          "id": "e004e823-9588-4ad2-94fe-e7000f6ca4fa",
          "status": "Created",
          "code": 201,
          "responseTime": 6156,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb5fb549-50df-4615-98f4-349aa6472827",
        "cursor": {
          "ref": "ccdc76b9-b026-4240-abb4-6d1cc6466a9f",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "34f73c30-1b39-453c-ac14-a2a8a7d3204a"
        },
        "item": {
          "id": "cb5fb549-50df-4615-98f4-349aa6472827",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "1e838d5c-8698-4cc2-a820-ad2556c43ebd",
          "status": "Created",
          "code": 201,
          "responseTime": 6697,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bde746e-80ac-47c8-873b-813db9aef63f",
        "cursor": {
          "ref": "4534310e-32cc-473b-bae7-705571be6669",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "ad968669-938f-42db-a286-d53a0d291c32"
        },
        "item": {
          "id": "9bde746e-80ac-47c8-873b-813db9aef63f",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "945fa06e-fdb4-4272-9a46-068a769c63d2",
          "status": "Created",
          "code": 201,
          "responseTime": 5219,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "67b9627e-6b28-4d3c-9f22-8a0d8aaf1c2a",
        "cursor": {
          "ref": "4fc8235d-fa12-4a06-b6e2-9db6b3ce1932",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ac25a1a9-01c5-4381-93c1-23035eba7d6c"
        },
        "item": {
          "id": "67b9627e-6b28-4d3c-9f22-8a0d8aaf1c2a",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "479f55f2-508c-495e-ba6a-52b30582865a",
          "status": "Created",
          "code": 201,
          "responseTime": 6139,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e4a00c0-77f4-4352-89aa-64d821ee1c2b",
        "cursor": {
          "ref": "1e9173e3-2744-45fb-8745-f49284d32c12",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "35f01de8-b435-4d06-ab26-4601f5d47f12"
        },
        "item": {
          "id": "7e4a00c0-77f4-4352-89aa-64d821ee1c2b",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "deaa7a27-3b7a-4f00-9922-503e7f94d77b",
          "status": "Created",
          "code": 201,
          "responseTime": 4942,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "38395558-9e1c-41c8-977f-164742948115",
        "cursor": {
          "ref": "1540026a-22c7-4c43-a795-061611db23bc",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "4ac4548d-6181-4ffd-bc47-a938ddb870e2"
        },
        "item": {
          "id": "38395558-9e1c-41c8-977f-164742948115",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "0dd10af2-4d9d-4f0d-bd0d-ce60132af105",
          "status": "Created",
          "code": 201,
          "responseTime": 7025,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8965797-dfd4-4dda-a70c-d5edfdf0ab3d",
        "cursor": {
          "ref": "a01cbe93-4e13-430d-a634-a77511da1c6f",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "45a7e61d-a962-44b4-9097-67297f597d23"
        },
        "item": {
          "id": "e8965797-dfd4-4dda-a70c-d5edfdf0ab3d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4ae62e4e-86ff-48e5-b3e4-a7d6c33cffc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8965797-dfd4-4dda-a70c-d5edfdf0ab3d",
        "cursor": {
          "ref": "a01cbe93-4e13-430d-a634-a77511da1c6f",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "45a7e61d-a962-44b4-9097-67297f597d23"
        },
        "item": {
          "id": "e8965797-dfd4-4dda-a70c-d5edfdf0ab3d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4ae62e4e-86ff-48e5-b3e4-a7d6c33cffc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2663e002-baf8-40c8-97b1-abdbafd89c8c",
        "cursor": {
          "ref": "8fde17ab-0bd8-4434-928c-697d8829ed77",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a017c0d9-8aaf-4b60-b2de-33b16705e47f"
        },
        "item": {
          "id": "2663e002-baf8-40c8-97b1-abdbafd89c8c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "fcde7f62-ca02-4087-b433-056e7d3d6d96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b294fd52-a548-4245-89f0-92cdce672478",
        "cursor": {
          "ref": "e8566f54-0f94-4816-9885-6e0dd7c3fd28",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "4104bd1e-a8e7-45fb-8193-41b13932a1fd"
        },
        "item": {
          "id": "b294fd52-a548-4245-89f0-92cdce672478",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c8ea612f-b9b7-4a7f-be8f-37252a541769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94f8dd89-d594-43d1-a691-d89b45ba781e",
        "cursor": {
          "ref": "aad3f36b-4422-4a64-8dbf-38255ba8f4ec",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "0a07bb42-97da-4548-afeb-48460ed73ee5"
        },
        "item": {
          "id": "94f8dd89-d594-43d1-a691-d89b45ba781e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e8841dcb-7031-455e-a21c-150fce8f282e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0821ff23-98a6-4a7a-8f90-255a0b732ea6",
        "cursor": {
          "ref": "ed65aef8-ec67-4440-98b7-e897906bca9a",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ba45ec1d-165c-4f16-9485-35e5654e2907"
        },
        "item": {
          "id": "0821ff23-98a6-4a7a-8f90-255a0b732ea6",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "1459cda7-9ef5-4bdc-a0cb-6a87890afeb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c66d19-4c79-43be-90b4-50965c163444",
        "cursor": {
          "ref": "921eb046-0adf-4b33-a1b7-762d2b8ba0fd",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "b2bfc64c-ca0e-48bb-b27e-889df0e42029"
        },
        "item": {
          "id": "d2c66d19-4c79-43be-90b4-50965c163444",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f7bc14b2-a17d-4d88-bd18-07aef432ad40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60ee820e-78a7-4d2e-8aae-3a569dedc1b5",
        "cursor": {
          "ref": "11a072ab-c6ea-4170-be68-5290f12e4899",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ffd4131d-4107-4404-925a-445f25f68dde"
        },
        "item": {
          "id": "60ee820e-78a7-4d2e-8aae-3a569dedc1b5",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "887ffcda-dfda-4cb0-9f1c-29120bcbc33b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b55c2a5-a059-4a44-8e38-3b763c12dd98",
        "cursor": {
          "ref": "f822e3be-d077-44be-8d83-643e4ecd45a3",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "fbf9eed9-d5e6-4f51-81d3-7ebc54aeb005"
        },
        "item": {
          "id": "0b55c2a5-a059-4a44-8e38-3b763c12dd98",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "dc486489-3534-420c-a9f4-2b0c1374e6a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "595b2fb6-e4df-4267-9ada-41a0e289bbc9",
        "cursor": {
          "ref": "8e77bdb1-5501-450b-aeae-7af73ad1d30c",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "ef7f8717-0749-4fba-b0cf-85c0393ee496"
        },
        "item": {
          "id": "595b2fb6-e4df-4267-9ada-41a0e289bbc9",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e62dbb44-6439-4e08-9bb3-07483d0c3542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d10a2580-ead7-4c4b-ab37-c7baf1a76f09",
        "cursor": {
          "ref": "6af148e0-6875-4fbe-b5a0-253d83a2746a",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "0ff58c5f-7647-4a3e-999e-3299a79bf126"
        },
        "item": {
          "id": "d10a2580-ead7-4c4b-ab37-c7baf1a76f09",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b572d8c9-e06a-4ae7-966d-8b6db3fd5efa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c612816-7545-4a85-b85c-18e7a222751c",
        "cursor": {
          "ref": "0341cdbc-4106-411a-a121-e5c45414bd81",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "ea72d238-328c-4424-9c0a-a234f0ec429d"
        },
        "item": {
          "id": "6c612816-7545-4a85-b85c-18e7a222751c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "58ed54ed-16b2-465a-a52d-f760494115a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b68c9a5-598a-4714-9b61-89d0e8528592",
        "cursor": {
          "ref": "50867bd8-09d2-43f8-91b5-ab57d2271030",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "d5741a16-37da-405a-ae0a-8f93afa96f1a"
        },
        "item": {
          "id": "1b68c9a5-598a-4714-9b61-89d0e8528592",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "28b32d2a-68ae-4abe-a240-0fd46e062e7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef16190c-8251-4c22-ac16-55b33f64343d",
        "cursor": {
          "ref": "168a8dbe-14be-4e5b-a3c2-0fea5ed8a83c",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e98f61e7-6ca4-4f3b-9ca5-a8cac0e48bed"
        },
        "item": {
          "id": "ef16190c-8251-4c22-ac16-55b33f64343d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "0228d590-4f6b-40d7-9140-1dc83e7a211d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ed213d8-827e-4192-a5b1-59f58956a2e7",
        "cursor": {
          "ref": "fc80fb85-416b-4764-81d7-059d180031a7",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "a2fbbfff-ca06-46e3-ba70-dded25e725ee"
        },
        "item": {
          "id": "8ed213d8-827e-4192-a5b1-59f58956a2e7",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "2bfedc1c-5b6b-42f4-9ea8-df56a00aa3d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4fc1b78-df73-465d-895d-baa52c040409",
        "cursor": {
          "ref": "5da1fdf1-ce94-4faf-ad4c-7927c01d8488",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "6a7f213c-cd20-4856-9cb2-f34441d054e7"
        },
        "item": {
          "id": "d4fc1b78-df73-465d-895d-baa52c040409",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "efbc4822-3871-4d9f-8acf-8d9be847fedc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "379f6f6d-9785-495b-91fd-167abf49b6da",
        "cursor": {
          "ref": "55cac5f4-7b31-44fb-8695-0413876b3077",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "fa7eb525-22eb-4d72-af8b-94a8c2ca2131"
        },
        "item": {
          "id": "379f6f6d-9785-495b-91fd-167abf49b6da",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "947ed023-65e9-48df-a278-a10f0cb62bbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3186805b-b1d2-4889-b932-1231dd57b21d",
        "cursor": {
          "ref": "88774a99-05ea-4954-8185-ad7d0ff145ef",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a83163de-6dc5-4806-8847-e6a90750eacf"
        },
        "item": {
          "id": "3186805b-b1d2-4889-b932-1231dd57b21d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "3cefeb58-b47b-4735-bdf8-86cd551d0ec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d6017e1-5a7d-4d80-afbb-2a9cbac55c85",
        "cursor": {
          "ref": "1ed4991e-a39a-48ca-9f99-11e9ac16bb69",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f5cdc4e4-b1a7-4bef-96a0-fcdcf70e60e8"
        },
        "item": {
          "id": "2d6017e1-5a7d-4d80-afbb-2a9cbac55c85",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "421e8e70-0fdc-43cd-96a7-ccdb11f24753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1141,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd2326e3-edce-41b5-9c1d-4a43afd12e51",
        "cursor": {
          "ref": "bfb13b54-47ff-4bd9-a4d9-f7d80140a751",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "e0c332bf-dd6b-4eb8-9ef9-1f632899863d"
        },
        "item": {
          "id": "fd2326e3-edce-41b5-9c1d-4a43afd12e51",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a5c02881-7daa-4803-8026-2d578cf70cd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1084,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "754ef93e-01f3-42f4-829f-9108cfe394e8",
        "cursor": {
          "ref": "db427883-8273-403f-b6a5-d2c8dfd23682",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "9a244e9b-4fef-4e6e-b32d-b2546600f704"
        },
        "item": {
          "id": "754ef93e-01f3-42f4-829f-9108cfe394e8",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0c8e900b-e12e-4f14-b4b3-a8276e9076b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 905,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9e0cc55-bbf3-4462-8b30-af872b1b0e6e",
        "cursor": {
          "ref": "86e74926-5d15-48ac-b333-21927836627a",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "5b5f9f3f-f19f-436c-b6e1-0e610d0cf447"
        },
        "item": {
          "id": "f9e0cc55-bbf3-4462-8b30-af872b1b0e6e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c9f596d3-d322-4b05-9ea3-30e8629be453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 746,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f9535e3-26e2-4a03-ae72-9aeb2d738d00",
        "cursor": {
          "ref": "af600aaa-945e-4e32-aea2-1bf59bf7ca4f",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "4b7d5c44-f45d-4d95-9ffa-505dc65f3a0d"
        },
        "item": {
          "id": "9f9535e3-26e2-4a03-ae72-9aeb2d738d00",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "37d453ed-8f1f-49ed-bc8c-b688214010a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9eac216-81d1-456f-9b47-431113eac4fe",
        "cursor": {
          "ref": "d5691849-a452-4a45-8a79-25bfc45aaddb",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "eae57a32-2269-4557-b0e4-54ebc9dca3e5"
        },
        "item": {
          "id": "e9eac216-81d1-456f-9b47-431113eac4fe",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "67f01c12-862f-48f9-b827-3f1f966e28c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe682ca8-e941-4c14-83ab-5e0a5bf456dd",
        "cursor": {
          "ref": "9447baa1-8019-43e7-a660-449a678a2312",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a2510918-9eb5-4741-a02f-fd116a56c6b0"
        },
        "item": {
          "id": "fe682ca8-e941-4c14-83ab-5e0a5bf456dd",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "13446bda-56f6-44de-9329-41f2698836de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b7b0a94-a7eb-48df-8e45-2c0ef1758503",
        "cursor": {
          "ref": "a06fbfe1-28a9-4f31-8395-6938af91bdfd",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "e5575c8a-e071-4392-8bed-52c1978af005"
        },
        "item": {
          "id": "2b7b0a94-a7eb-48df-8e45-2c0ef1758503",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "331580d1-3d45-425e-85e5-eb5db8cbbd36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22beb27c-923b-47dd-92ac-84e8035cdd44",
        "cursor": {
          "ref": "70fef25b-f06a-4292-aeb7-8ec31f13af91",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "59645ca3-ed41-4ffd-a9fb-e1d42b027c3d"
        },
        "item": {
          "id": "22beb27c-923b-47dd-92ac-84e8035cdd44",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "717443a5-4ae6-4ea1-ba11-dc98d1134e88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ac9381d-1551-4f49-af22-ee920b60b16d",
        "cursor": {
          "ref": "2aebbad1-29b4-43ab-a612-2003aa6da458",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "ddca8881-8e84-4441-8a3a-b25817bfa9ca"
        },
        "item": {
          "id": "5ac9381d-1551-4f49-af22-ee920b60b16d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "7f12c1a9-3da0-4b4d-b068-06673bb8e098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adc60b2a-c791-47d6-b4ab-fbf009bc9b07",
        "cursor": {
          "ref": "0057cd64-5ea5-4029-a09a-0fc48ac21150",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "bdbe2206-c75c-4a41-92ca-7dfcf370fadc"
        },
        "item": {
          "id": "adc60b2a-c791-47d6-b4ab-fbf009bc9b07",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "1d6e2999-2be8-4b3a-8ec5-d06e911c1a3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b20a8f2-ba20-410c-952d-a929dc717fec",
        "cursor": {
          "ref": "358ac99c-41b8-4dbe-8915-f7d566c70dae",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "3f1a3079-63ea-42e2-908a-830c6464115b"
        },
        "item": {
          "id": "6b20a8f2-ba20-410c-952d-a929dc717fec",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "810d68ed-9e95-45bd-98ce-5e9d487d4bb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c89c89a2-d332-4ea7-a350-8d3845aeaf03",
        "cursor": {
          "ref": "80f6a91c-1da0-4b35-881d-5f9ae164460e",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "c27e9ba3-e0d6-4c1d-a4c1-4c8056dd19b1"
        },
        "item": {
          "id": "c89c89a2-d332-4ea7-a350-8d3845aeaf03",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b66d6584-cc95-45b0-9c75-aab8e6c67a61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b21698e-268d-43e5-a02f-62b46b090a11",
        "cursor": {
          "ref": "64bd2f41-8ed3-4358-8359-3d5ed7a9c441",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "9b16c82b-4fcb-4048-8d8c-60a4de960061"
        },
        "item": {
          "id": "9b21698e-268d-43e5-a02f-62b46b090a11",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ac6826a8-595b-4258-a5bf-146c8692853e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b1602b-fe9d-42ee-afab-5605566c0de3",
        "cursor": {
          "ref": "29fac5b9-2750-4a8d-ba0c-595e9e999ced",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "1b349662-a71a-456c-99ca-750d26332a90"
        },
        "item": {
          "id": "86b1602b-fe9d-42ee-afab-5605566c0de3",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "a6c1e9fd-c055-4951-a850-94305dc99436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5003534c-ccfe-4dc6-8aaa-c7075999d058",
        "cursor": {
          "ref": "1801ac5e-8203-44da-919c-22165581169a",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "9b3e3798-00b0-45f8-b34d-454240cb0fbb"
        },
        "item": {
          "id": "5003534c-ccfe-4dc6-8aaa-c7075999d058",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "71afa363-1eba-4706-a9dd-6cc126b3ed81",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3191cafc-424e-4114-aff8-0b979c9c1866",
        "cursor": {
          "ref": "4fed1dfb-b1f5-4aa6-bc14-2a751f7dfbf7",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "9a1349e1-c396-482a-afaf-506f620bfa3c"
        },
        "item": {
          "id": "3191cafc-424e-4114-aff8-0b979c9c1866",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "b18fd067-8d05-431a-acf6-c0130fc56f6c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 532,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a25ed0b-f84d-4aa2-a4db-ad84c84a5adc",
        "cursor": {
          "ref": "d19bed39-9bf4-42f0-a751-af83dee98de3",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ee967f22-3c67-4db9-9bf5-450da9e129fd"
        },
        "item": {
          "id": "8a25ed0b-f84d-4aa2-a4db-ad84c84a5adc",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e4d8d8a3-8ceb-47a6-972c-9609e41ce292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a25ed0b-f84d-4aa2-a4db-ad84c84a5adc",
        "cursor": {
          "ref": "d19bed39-9bf4-42f0-a751-af83dee98de3",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ee967f22-3c67-4db9-9bf5-450da9e129fd"
        },
        "item": {
          "id": "8a25ed0b-f84d-4aa2-a4db-ad84c84a5adc",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e4d8d8a3-8ceb-47a6-972c-9609e41ce292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39ef2eec-eae6-4deb-b2fc-7f97d550af10",
        "cursor": {
          "ref": "1dc47468-6d5d-40ee-8d45-df36f97f9446",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b77b7f69-5193-4cff-89df-e6015f340a87"
        },
        "item": {
          "id": "39ef2eec-eae6-4deb-b2fc-7f97d550af10",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "693404ff-b4ad-4933-84af-bfed571e4ae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d3c4b14-3fbc-4ca4-ae8f-6f135cdda1dd",
        "cursor": {
          "ref": "8d6e48f2-4cd8-47b9-8248-4d57388a4dbd",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "19b2d592-ba15-496d-a88c-efe70a954ffb"
        },
        "item": {
          "id": "3d3c4b14-3fbc-4ca4-ae8f-6f135cdda1dd",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "6f8f0602-30be-445b-9183-36854a17382e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac61238c-bdb3-4e57-a46c-9713726b7c39",
        "cursor": {
          "ref": "19ee4427-4f83-4eb9-a38f-210b04cc329f",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f19dc868-f88f-4362-8bfa-d537ee63cbc0"
        },
        "item": {
          "id": "ac61238c-bdb3-4e57-a46c-9713726b7c39",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "c4e8679a-e725-46a0-aff4-c8af5a545c68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e2b47b2-a585-4ca0-9962-6ea73c47332d",
        "cursor": {
          "ref": "c18981af-a851-4e0a-b6ae-cd2114ff6b24",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "da77a4c1-139f-4add-b891-b8c4a09b9f9e"
        },
        "item": {
          "id": "4e2b47b2-a585-4ca0-9962-6ea73c47332d",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "2fec1dc5-6dba-4e71-94c6-5020d0b403b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b0fce2e-d2f7-44ef-b6d5-55b3004d879b",
        "cursor": {
          "ref": "edde46bb-b82d-42ea-966d-297530959903",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "c3c1e955-72cc-4605-9a68-a8b18f3887f9"
        },
        "item": {
          "id": "2b0fce2e-d2f7-44ef-b6d5-55b3004d879b",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "79739993-5b81-48f8-b955-7aa58a457bf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daaacb42-f34a-4150-823b-493374b36bea",
        "cursor": {
          "ref": "f0cc56ed-6297-4398-955b-f7c411439b9e",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "a90d5ea1-1dba-42e6-bc9b-c04c51237028"
        },
        "item": {
          "id": "daaacb42-f34a-4150-823b-493374b36bea",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "abdc527f-66f6-4b96-9b03-d213a4b63255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a442c51-517a-46e8-817c-dd3543cb0ea2",
        "cursor": {
          "ref": "7c2675ae-582c-4ebb-9f38-3d2bbbe2c3a3",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "26cdb228-7c97-4efd-b4e5-f63919b1752a"
        },
        "item": {
          "id": "1a442c51-517a-46e8-817c-dd3543cb0ea2",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "0bcdaf96-626d-443f-bf35-88792a954649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "066aa2b8-36c9-4d72-b370-ff4e700d402c",
        "cursor": {
          "ref": "d327be01-c854-4da9-992e-2bf4c33d1ab0",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "9bb58ed9-f7d5-4ae6-b9cd-05977153151c"
        },
        "item": {
          "id": "066aa2b8-36c9-4d72-b370-ff4e700d402c",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "7bfcec2c-4fcf-4a77-b5ce-984424841d0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2bdf710-7173-4488-9701-ac733c24f493",
        "cursor": {
          "ref": "85ca3e7f-ea4d-4a3f-ba8b-985013ef31cc",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "66a65c82-d32e-4097-a215-89399df9815c"
        },
        "item": {
          "id": "a2bdf710-7173-4488-9701-ac733c24f493",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "2701f298-4475-4e54-87de-dcb85a4825b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac14eec3-f307-4922-9433-cc4d0eaa36a1",
        "cursor": {
          "ref": "b3b5d813-aa12-4acc-981a-be85f00b92f4",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "8392cbca-4bff-4288-be61-b4c85a09184f"
        },
        "item": {
          "id": "ac14eec3-f307-4922-9433-cc4d0eaa36a1",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "470307a2-90b1-4c94-ad2b-d0547e5ae775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 335,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d07240d1-1363-42b3-a0cf-6d6ff0409f81",
        "cursor": {
          "ref": "8d7e2e69-49df-494c-ac7f-3bb00e016643",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "5f5bb435-bfa8-4b88-9355-eef5223d7f6c"
        },
        "item": {
          "id": "d07240d1-1363-42b3-a0cf-6d6ff0409f81",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "d46498d7-8ea9-499b-bafa-77093c485425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cecf5df4-c075-450b-b540-38fe48c9e3c3",
        "cursor": {
          "ref": "ac03db3d-04e5-4765-8794-f72243c8eabf",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "01110fca-919c-4ddb-8b29-cfb8bc0a5869"
        },
        "item": {
          "id": "cecf5df4-c075-450b-b540-38fe48c9e3c3",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "56170257-7ed8-4303-b184-22e61fb2befa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b66ff282-90a7-4db4-8b46-c0d848127be4",
        "cursor": {
          "ref": "b929b6d2-7c06-41db-b903-c504d4271555",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "477f4203-eb55-426a-ad03-0ca9e2b105b9"
        },
        "item": {
          "id": "b66ff282-90a7-4db4-8b46-c0d848127be4",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "ef4d68cc-9204-42e4-b31d-023fd78c25aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73b1e8a3-d2d6-49ac-bfe8-7f6662942ca3",
        "cursor": {
          "ref": "5870188a-d191-46ec-8a6f-da881b73d00f",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "a24fb023-9303-4eed-aa23-4768901b0c00"
        },
        "item": {
          "id": "73b1e8a3-d2d6-49ac-bfe8-7f6662942ca3",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "7574f5e2-9a12-4b81-b1ff-ef3232f0d241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ae76100-92e2-4215-87ed-b8922a26ae21",
        "cursor": {
          "ref": "dc1cbff7-41f5-4514-96d0-33f61cf17a96",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "8e4edece-021a-45d7-9a12-8b06b2f66e80"
        },
        "item": {
          "id": "2ae76100-92e2-4215-87ed-b8922a26ae21",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "ee6e7eca-12ce-49b5-ba03-3e760aef9196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b66821-8fea-4a23-ae8e-b94e3c84768f",
        "cursor": {
          "ref": "23400e23-6019-4309-8609-a43a3b20315c",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "3378bfe4-7ac3-4a9d-b8e2-b489764f0dd2"
        },
        "item": {
          "id": "88b66821-8fea-4a23-ae8e-b94e3c84768f",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "fec426dc-5860-4b0f-b127-fb2e79fac069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4adf1b41-8fed-4909-bef4-6a9c52ccbb42",
        "cursor": {
          "ref": "ce1ed63f-f86d-4179-8eb3-c5f3be1160db",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "c5b220ac-db3b-47e1-9091-afd7a64ffdfe"
        },
        "item": {
          "id": "4adf1b41-8fed-4909-bef4-6a9c52ccbb42",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "1bfd25ef-c0dd-4358-b1f2-02f43d7c2f4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9c4ae30-6a38-412c-a3a8-6bf35842e1a6",
        "cursor": {
          "ref": "02ad8826-b149-44b2-b1a2-811b031715d2",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "6d70b97b-3ba9-4a33-9df0-8d4f87a34a36"
        },
        "item": {
          "id": "c9c4ae30-6a38-412c-a3a8-6bf35842e1a6",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "0a1db5d7-c9fc-4682-a9f2-26a2c5e42bbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aab76374-b30f-4cb1-b75e-4d7d9e1c06b4",
        "cursor": {
          "ref": "70680f51-ddf1-48dd-8294-3d694363ffeb",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "8e579885-4d2c-4298-a6af-9fe62459f3aa"
        },
        "item": {
          "id": "aab76374-b30f-4cb1-b75e-4d7d9e1c06b4",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "47cfb3d4-5461-4ab3-ae72-e5ee5035c3b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5225fb59-40cb-42ae-90c1-934bad1860bb",
        "cursor": {
          "ref": "6238eb5b-0fee-48fe-a8ee-9e59d751076c",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "4807b2d4-25c9-4f95-b5ac-e66b8cb73aa1"
        },
        "item": {
          "id": "5225fb59-40cb-42ae-90c1-934bad1860bb",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "3bda6f01-5894-44f6-95fc-da67f0372a7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "981d4c19-cd7f-4576-a871-a2f706e72eed",
        "cursor": {
          "ref": "519f0457-6f69-412b-8413-163dbf062d6f",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "3fae5733-c6da-459c-9f68-03c0ffcbced6"
        },
        "item": {
          "id": "981d4c19-cd7f-4576-a871-a2f706e72eed",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "7c07a996-10f4-461d-8ae4-ad62a5d38995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6193de2c-2fff-477f-9368-cca1baaf6a09",
        "cursor": {
          "ref": "e0917220-2132-4b2a-8f52-7d88dbfb50b1",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "4359ae1b-4d31-4a1f-8a0e-f9d619c039ad"
        },
        "item": {
          "id": "6193de2c-2fff-477f-9368-cca1baaf6a09",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "4e60209a-9b31-42f3-9b36-3d44a2eec2b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "352327ca-1b06-48f5-b864-faf1dd6d2640",
        "cursor": {
          "ref": "fdcb3796-d006-4e22-bc7f-e85269a65b85",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "bba5fb65-bb29-486a-9646-ad6b412f407f"
        },
        "item": {
          "id": "352327ca-1b06-48f5-b864-faf1dd6d2640",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "07e48427-fa96-4abd-aa17-041e79681f0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a7e80f5-6a5a-488c-8d01-1b9db19579af",
        "cursor": {
          "ref": "1f83b45e-4051-45d1-91d3-54861e127ff8",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "2e903786-7673-43fa-a446-d955ed980951"
        },
        "item": {
          "id": "3a7e80f5-6a5a-488c-8d01-1b9db19579af",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "8f0133c9-56b8-4b46-afb4-c8a75faffb99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c650071b-5c3e-43dd-934e-7e73b37c86ab",
        "cursor": {
          "ref": "6b08d7e3-d3f3-4b0b-8eec-350812a074b6",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "670a320b-e79f-44a0-8ddd-84ae29f072d6"
        },
        "item": {
          "id": "c650071b-5c3e-43dd-934e-7e73b37c86ab",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "f381acc6-db66-4d30-a260-05c71e42698d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80af1161-22d2-435d-8fda-81dd974ed4e0",
        "cursor": {
          "ref": "854d2ac0-c153-4aca-965a-be36a0a84057",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "159ad913-0808-47c1-917e-e3f2cef1f477"
        },
        "item": {
          "id": "80af1161-22d2-435d-8fda-81dd974ed4e0",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "062aedf5-f185-4ecc-92bb-b1b83512e867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d88675c1-adcc-4e20-8fd1-ac9210f7130c",
        "cursor": {
          "ref": "0cf51a57-c1eb-4f8f-b5f9-a2f0dcc979a5",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "2e84149e-97c1-4ea2-899c-8092a0d584b4"
        },
        "item": {
          "id": "d88675c1-adcc-4e20-8fd1-ac9210f7130c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "1ca9ab96-9a5f-4274-b54e-1f75597be5bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "163bf2c5-c3b7-4471-97dd-d1b05d526d1a",
        "cursor": {
          "ref": "911dc2f2-9930-4ed3-9bbf-83f9a88c37f7",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "01d71d96-3682-468d-9524-888f5321040e"
        },
        "item": {
          "id": "163bf2c5-c3b7-4471-97dd-d1b05d526d1a",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "1c4a09fd-eada-400b-98b5-713932f930cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22355f62-b740-4d46-b643-a5ee62d16d16",
        "cursor": {
          "ref": "97f2fc91-aac4-41bc-94ca-8a002701482b",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "9f499238-64de-4f98-8ac1-6dd560e6cad4"
        },
        "item": {
          "id": "22355f62-b740-4d46-b643-a5ee62d16d16",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "902663f7-8834-4dc0-abc6-5894e4a73347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5be610e8-59a9-4ff2-8267-1e1ded200a78",
        "cursor": {
          "ref": "29e99a6f-34fa-4a8b-b954-5f6b312cc59a",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "6e9ed248-6746-4eb6-9900-15e32bdf7d1b"
        },
        "item": {
          "id": "5be610e8-59a9-4ff2-8267-1e1ded200a78",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "cb323573-d65d-44ef-8831-2588070cdd59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf5642d-9b9f-469d-a485-8d68c0d11fb9",
        "cursor": {
          "ref": "e8f88c18-d385-4edc-913a-ba5b0371ee85",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "5d0ed6a1-dbcc-4d27-8099-91d91bbf0a70"
        },
        "item": {
          "id": "ddf5642d-9b9f-469d-a485-8d68c0d11fb9",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "71584e5c-f0ba-4ff8-8e79-7d5f972d2326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "645d56b6-cc91-4455-948e-c003877e3e6a",
        "cursor": {
          "ref": "229fc8e6-bb4c-4f07-b176-737be52d6d24",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "27a3c91b-a836-433e-942d-a5290bcb5ab7"
        },
        "item": {
          "id": "645d56b6-cc91-4455-948e-c003877e3e6a",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "c15a2b96-93db-48c2-b4d0-ef9bf3ee5dfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8af66dad-2d84-4a8d-a92f-268f78d4f43a",
        "cursor": {
          "ref": "b4358ea7-c703-4c1d-a4d4-bf73e0970d21",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "b4bc409a-50f2-4cdf-af35-dea8723e22d6"
        },
        "item": {
          "id": "8af66dad-2d84-4a8d-a92f-268f78d4f43a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "4d86f930-5a80-478c-8f3f-8bb75cd0933a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0474509-e46e-42a2-b6d3-63efc0628f88",
        "cursor": {
          "ref": "b890710d-d9d5-404f-9994-6bb237db6ec8",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "fe779fbe-be63-4ece-ab66-fe0863b4387d"
        },
        "item": {
          "id": "d0474509-e46e-42a2-b6d3-63efc0628f88",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e96d59c5-61f8-4729-8533-f15ae6ea464c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e8d6dac-0d87-4ee6-b2fa-6cb4877315c5",
        "cursor": {
          "ref": "59f25790-20fc-4e7c-ac89-d1323ac917a4",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "bc74b905-0746-40f1-bd6c-909e272aec31"
        },
        "item": {
          "id": "5e8d6dac-0d87-4ee6-b2fa-6cb4877315c5",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "c7c8adcd-4083-4c91-bceb-630dec7358d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11f98f52-bc3d-41a6-84b2-50064acbead8",
        "cursor": {
          "ref": "ace62b6d-0a35-4bc0-b038-85204fdfcde5",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "116fed2a-e5be-421b-a41f-12c5a18fc20e"
        },
        "item": {
          "id": "11f98f52-bc3d-41a6-84b2-50064acbead8",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "152fd738-d44e-445d-ae50-e1eb920873c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2886f26-054f-4b7d-918e-5a0bffd80a65",
        "cursor": {
          "ref": "62d659fd-8cd5-44cb-9ad5-458b34cafc04",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "9e7e978b-c508-4495-bdf6-1c58368303cd"
        },
        "item": {
          "id": "f2886f26-054f-4b7d-918e-5a0bffd80a65",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "55494d5a-4d30-466c-b61f-4c5d944c8c04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b4e2ee8-0453-4d6f-8360-272882db6638",
        "cursor": {
          "ref": "309ab1de-0845-4ca4-85d2-5d5e0477472b",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "d58f27be-1022-429b-84e8-e5afc1f368ae"
        },
        "item": {
          "id": "6b4e2ee8-0453-4d6f-8360-272882db6638",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "40671962-f322-4aa9-98fc-2e026bdf2a37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "545f01e5-c8d6-4bd7-9d5a-ee27ae0d2de9",
        "cursor": {
          "ref": "34d616f5-ac18-487a-9e90-dd8b90d134c1",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "1853a874-bcda-4ad0-a542-393d8d9701d1"
        },
        "item": {
          "id": "545f01e5-c8d6-4bd7-9d5a-ee27ae0d2de9",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "81a37066-fa06-42e3-9abb-9d611a24f716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b16af235-5739-46e7-919b-fef7669671be",
        "cursor": {
          "ref": "1ac04160-6273-46e5-8a22-6fed6bbeefa7",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "a78cf381-8a52-4289-994f-cebb305f86d5"
        },
        "item": {
          "id": "b16af235-5739-46e7-919b-fef7669671be",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "45f83e1c-e339-4989-b813-701d45eb738a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0009517-48fc-4bac-8e78-e3db02352fcc",
        "cursor": {
          "ref": "6c009669-7718-4147-ae38-75ec14e5a92d",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "8147d94e-ff42-441b-bd92-89e128b45dc2"
        },
        "item": {
          "id": "e0009517-48fc-4bac-8e78-e3db02352fcc",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "b84c2162-e863-4ee0-8f66-c0c2fae3576d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1f6c37b-c856-4d09-a069-a37c8aff334b",
        "cursor": {
          "ref": "467ac275-bb8e-471d-9210-48294f29aab2",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "9346efd8-ae75-49f9-8059-fbfe0c172c37"
        },
        "item": {
          "id": "a1f6c37b-c856-4d09-a069-a37c8aff334b",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "fbc4ef46-d7ff-43df-8203-b12654079540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7568479b-eff4-4c9b-8ff4-d31d17888ce8",
        "cursor": {
          "ref": "93613c90-0698-4353-8ebc-5c64065a2fca",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "b7ffb6b2-622c-4e16-a68e-5737925ffaa0"
        },
        "item": {
          "id": "7568479b-eff4-4c9b-8ff4-d31d17888ce8",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "f7f92ebd-3942-40ab-8430-4ca7b5c9a8df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b6b26ea-cce6-43ee-bf6e-b4509e651cd8",
        "cursor": {
          "ref": "15d8c80b-a063-4930-a79d-bc8e799665fc",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "65a8897d-8da0-45fc-b49c-eceabe705bb5"
        },
        "item": {
          "id": "1b6b26ea-cce6-43ee-bf6e-b4509e651cd8",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "1930b953-aada-4ad6-805e-832333db49a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "516acdc4-4e88-4c4e-bd2a-e2a655c49882",
        "cursor": {
          "ref": "c2d5d043-c9b5-4e23-a49b-beb9bf7b30f4",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "a78e811f-1218-4a65-bf03-fc59828898ef"
        },
        "item": {
          "id": "516acdc4-4e88-4c4e-bd2a-e2a655c49882",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "0fe7f5b5-c8db-42fd-aa8c-767c61999c73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7b704cb-d4cc-4f25-adf4-f2f667d4cd09",
        "cursor": {
          "ref": "d0a26b33-e4ac-4643-aaf4-52ea575bed32",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "8f5fb80a-0867-40e6-89c6-2e58ef4f2676"
        },
        "item": {
          "id": "b7b704cb-d4cc-4f25-adf4-f2f667d4cd09",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "ac492968-03df-4195-b1a1-6214e6f3565d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "debfec0d-18e1-4bcd-9c6a-7fc84309a516",
        "cursor": {
          "ref": "27c5e8f4-2cf5-4541-a3ee-4caa9b315518",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "2e2e4287-363d-4527-93c8-3c0d8adb8d78"
        },
        "item": {
          "id": "debfec0d-18e1-4bcd-9c6a-7fc84309a516",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "152f12d4-ce21-4dd5-a85c-1ddc9f5e59ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7245da71-2fe0-452f-b248-b590a06bc912",
        "cursor": {
          "ref": "d507ad0e-79bb-4330-8a57-6e24ca564729",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "2690d994-90e6-4817-81d2-b6047523bbb0"
        },
        "item": {
          "id": "7245da71-2fe0-452f-b248-b590a06bc912",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "b69c932f-9951-43fc-9b1e-55d37a6314d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c970d1b-c0ca-4ec5-9925-db43a5d785d3",
        "cursor": {
          "ref": "61e80bb0-87ac-4202-89d8-218f7e4d8efd",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "6b7bb0f2-093d-4de1-aaf2-eb4422afb5b6"
        },
        "item": {
          "id": "2c970d1b-c0ca-4ec5-9925-db43a5d785d3",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "92aff4d0-6225-47d1-96e7-2e2fb0af1f9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 761,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cb6900d-9aaa-455f-9f8d-8347e8e55cab",
        "cursor": {
          "ref": "a794b7f1-f2b2-4b16-8ddd-2791378c120e",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "183aaf38-f619-4a5f-8ca5-cb85de75c85f"
        },
        "item": {
          "id": "0cb6900d-9aaa-455f-9f8d-8347e8e55cab",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "00c9eac7-8e29-47e5-8da3-6afdca8d1857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 782,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23f98794-706a-45df-ab6e-c6e191eb9355",
        "cursor": {
          "ref": "2e9a20d1-5fe9-41d7-827e-2cec33fe5c51",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "de5c4b19-b5aa-4675-b8fa-545760cb30f2"
        },
        "item": {
          "id": "23f98794-706a-45df-ab6e-c6e191eb9355",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "f2a4f880-3eff-485f-8871-4b65b5f7389f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1180,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c4f3af8-016d-4106-8ed4-60396e9a2b2c",
        "cursor": {
          "ref": "bc700853-80bc-4a0a-96a1-c36166ebdabd",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "0752708c-8d8f-445a-957d-fe2a2dd623ce"
        },
        "item": {
          "id": "5c4f3af8-016d-4106-8ed4-60396e9a2b2c",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "c92c09c0-700e-43ec-ad9b-2f9d0fa5b17b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1283,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e13b9112-904c-4805-9153-96018b42fa45",
        "cursor": {
          "ref": "94e5119d-fc08-40f8-89a9-10bd58cb2759",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "1ed34d41-7e16-480c-aa70-6e0c3827601a"
        },
        "item": {
          "id": "e13b9112-904c-4805-9153-96018b42fa45",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "caab16c8-dfa3-4927-90da-8583a0e1ee58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 941,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd8bc2b1-6bb8-4862-b251-e4633bde67db",
        "cursor": {
          "ref": "d7183ebc-75ab-46ee-95ec-cd2ddba682c2",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "8a0a292e-03b8-4f99-afc9-59aab2afac1b"
        },
        "item": {
          "id": "bd8bc2b1-6bb8-4862-b251-e4633bde67db",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "24b819f7-d687-4a4e-a8af-a160145a078d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1118,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16978a6c-d5f8-4f05-ba72-5dc91e1b32dc",
        "cursor": {
          "ref": "b9459604-d381-44b0-a214-6fd82373f111",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "6d6b3c08-b3bf-4d40-b5f7-bac467ffbae6"
        },
        "item": {
          "id": "16978a6c-d5f8-4f05-ba72-5dc91e1b32dc",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "26f9e11a-7e09-46da-be6b-cee375228a78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "942b52d4-0e51-45aa-b80f-bce4b38e7ad4",
        "cursor": {
          "ref": "9a59368c-9db1-4097-a21a-aad44e3b35bc",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "00f87331-61c9-4064-82d8-dda3d797bb01"
        },
        "item": {
          "id": "942b52d4-0e51-45aa-b80f-bce4b38e7ad4",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "86f26716-5c32-4a9f-970c-92b9e1b4a464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a08d00ea-cde9-4a23-95ed-731aa63ed816",
        "cursor": {
          "ref": "7b224cd4-80ce-4b04-9059-9692cd9dd3c8",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "e2f8da87-f713-4595-a218-aaa0b635e823"
        },
        "item": {
          "id": "a08d00ea-cde9-4a23-95ed-731aa63ed816",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "60aaa19c-af15-4099-b1c5-cd2ecaf14864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e75b64bf-3f94-4fe0-b0d9-cff278fec0bc",
        "cursor": {
          "ref": "49bba891-1e38-4b02-9760-cb631c8a5819",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "71457f0c-1016-4a8e-93d7-e379e31d274d"
        },
        "item": {
          "id": "e75b64bf-3f94-4fe0-b0d9-cff278fec0bc",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "1518a9bb-0ff9-4935-bad0-967b7721f9a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa702563-627e-48d3-90e6-4e3a85749590",
        "cursor": {
          "ref": "d1d28780-e8cb-4107-b056-04a93a214de9",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "1f7e6307-aec0-4d81-a3cb-71efb983eb71"
        },
        "item": {
          "id": "fa702563-627e-48d3-90e6-4e3a85749590",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "3227b5a9-8af6-4ed6-8bca-10ce9939cf7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14fc3b0a-3648-493a-9d55-e68accb36afb",
        "cursor": {
          "ref": "9a7d290e-2d3e-4ca1-be06-1766e0a120c2",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "da6c8dbb-3748-4aa7-8e0e-2afd08a70273"
        },
        "item": {
          "id": "14fc3b0a-3648-493a-9d55-e68accb36afb",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "d17f675a-ddd6-4870-96f5-376046b8e45b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3758d0bc-c4bd-45b3-b2be-b7bb87c5fec1",
        "cursor": {
          "ref": "55492100-6483-487d-b1b1-e2d1809199cd",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "dd4d5dc1-97af-46be-a746-543cb0023b82"
        },
        "item": {
          "id": "3758d0bc-c4bd-45b3-b2be-b7bb87c5fec1",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "3d37a26b-c6c4-4a70-8cb7-667a7ab8f599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66ae2d76-17af-422d-984d-12ec8883b268",
        "cursor": {
          "ref": "2e6b0059-acc0-4546-912d-01d1e3b2582d",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "a7ed45b4-1846-43d7-a6b5-d8a29885e8f5"
        },
        "item": {
          "id": "66ae2d76-17af-422d-984d-12ec8883b268",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "8a73c46b-2a70-4bcf-b298-b87e3e530319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a83dae8c-14a5-4bd9-9e92-aa87f7606904",
        "cursor": {
          "ref": "41d6fd06-880f-48c6-adee-b01382423858",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "cbad8264-394a-49d9-a2f9-2ab2868cf8eb"
        },
        "item": {
          "id": "a83dae8c-14a5-4bd9-9e92-aa87f7606904",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "8b991769-e695-46af-925b-ce077565f37d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 340,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1d20823-f845-48d2-85b5-55b732349211",
        "cursor": {
          "ref": "03750342-74db-4341-b7d0-a349c0c874f1",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "1f48d539-4555-4aad-959c-9b02b47adb52"
        },
        "item": {
          "id": "f1d20823-f845-48d2-85b5-55b732349211",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "c917c516-8df2-4333-a195-f54f4f2cbc43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6710ad1-224e-4798-b9bc-12413765ae15",
        "cursor": {
          "ref": "b76f8bc2-568b-4ea4-988d-de784f6dff3a",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "51b71c07-4129-4c56-9967-be95b1bddd83"
        },
        "item": {
          "id": "c6710ad1-224e-4798-b9bc-12413765ae15",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "6d2711a8-637e-4765-9c8e-b8a90900c68a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6726967a-4356-42ea-ab49-6c31e939ae53",
        "cursor": {
          "ref": "be32d8d1-3b65-4a4f-964b-ce968bc6182e",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "b49105d0-fdb1-437c-971c-f7d43f7eff97"
        },
        "item": {
          "id": "6726967a-4356-42ea-ab49-6c31e939ae53",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "36f4f23e-0f80-4bf0-aa63-e3320d71ac2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "647ff754-effe-44b1-bf64-bf40d1f06089",
        "cursor": {
          "ref": "8b53586e-856a-4ec7-b9dd-f320259d486a",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "af19056d-66b4-4f46-9c85-6faded515486"
        },
        "item": {
          "id": "647ff754-effe-44b1-bf64-bf40d1f06089",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f0f3a233-9d69-4306-8bb0-9916970e3589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6849138-f29e-49c0-b637-c25f24a44273",
        "cursor": {
          "ref": "9071511c-ffb3-4a27-b02e-bfb7ec8fc5f2",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "91cf1d5a-1197-43d0-963f-43cefcbf65ba"
        },
        "item": {
          "id": "e6849138-f29e-49c0-b637-c25f24a44273",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "cabb00ae-e3ea-4cf6-85dd-9a9d01e1e3de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12592495-0f00-432d-979d-ad2c4896b2f1",
        "cursor": {
          "ref": "60cb47f5-fbc1-487e-9399-929a1016e9f5",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "0358df78-ad5b-4ee6-9de7-055bbef2e1ce"
        },
        "item": {
          "id": "12592495-0f00-432d-979d-ad2c4896b2f1",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "52d3d343-8b9a-481e-9ad4-218846e04b81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18c56018-2f3a-4ef4-b1e2-52b25eaef8f5",
        "cursor": {
          "ref": "26011f4b-4b65-44ed-9529-298bfc63325a",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "44fbe048-74e1-4ea8-a578-15d9ad816437"
        },
        "item": {
          "id": "18c56018-2f3a-4ef4-b1e2-52b25eaef8f5",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "a496ec0d-de15-466e-b885-32724bd197eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd8982a6-e6ab-4c52-8c04-eb80a6b528cd",
        "cursor": {
          "ref": "215e4310-e607-4513-954c-239a32c589a6",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "c23ff8ac-eeb7-41f5-9915-28697cee6d9f"
        },
        "item": {
          "id": "bd8982a6-e6ab-4c52-8c04-eb80a6b528cd",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "3adaa674-d543-4bbe-bdf2-fd64ddeeaf8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63cdf4b1-c841-4392-9ec6-b95b03ecc2a8",
        "cursor": {
          "ref": "7083e683-36ca-4a3f-a3be-fa6f2bddd58a",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "0f25cb62-875e-413a-be08-f19c0980a37d"
        },
        "item": {
          "id": "63cdf4b1-c841-4392-9ec6-b95b03ecc2a8",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "1bf11a35-65db-47a5-bb90-ce8b9b697925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53dfc2e0-2794-4bd6-82ab-8b09fd65fbe0",
        "cursor": {
          "ref": "5b3625ab-2c0f-44e5-aab0-9bb052223e52",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "6ec290ac-e6c5-40a7-aca6-568bf9858108"
        },
        "item": {
          "id": "53dfc2e0-2794-4bd6-82ab-8b09fd65fbe0",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "5600eea1-b218-4b7e-a004-654cbcf86169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 677,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00065f85-f6e8-463f-8755-9cb6ebac0dac",
        "cursor": {
          "ref": "59e7f157-9a47-475a-99a8-599a8df1d428",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "9c0478a7-5c68-4d8e-ba2a-40618e4031ac"
        },
        "item": {
          "id": "00065f85-f6e8-463f-8755-9cb6ebac0dac",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "9e0df381-026c-4442-bc23-01868ed1b5e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3457d3f-ef8f-47c0-b40b-a94f5b26f358",
        "cursor": {
          "ref": "ee004e6f-ed72-4730-9b37-d42fe88f5923",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "30a9525a-a532-45de-a40f-f9a845ceff74"
        },
        "item": {
          "id": "f3457d3f-ef8f-47c0-b40b-a94f5b26f358",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "cd3f1592-d29c-4fc3-b7c3-6e595256e45b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 607,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a3aec27-64ee-48e8-820e-c3b89a223e02",
        "cursor": {
          "ref": "01b64802-1f78-4f92-af12-6fd7133249a4",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "601432d3-d08a-4b0f-a8bf-7226e520b929"
        },
        "item": {
          "id": "4a3aec27-64ee-48e8-820e-c3b89a223e02",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "c21a1250-aed5-478a-8a82-c2852363280d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 799,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30420f4e-3c83-48a5-8d34-95a95c107a89",
        "cursor": {
          "ref": "0ac6d3c3-b0a7-49bd-abd0-8636e32dc95e",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "3f12f8ab-d39d-432f-a0ba-8185e2dd184e"
        },
        "item": {
          "id": "30420f4e-3c83-48a5-8d34-95a95c107a89",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "7ba3a552-0b0e-4b2c-99ac-555c0de7c95a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1306,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66598841-5925-4e7d-8ce3-ff2825fc658a",
        "cursor": {
          "ref": "650b0deb-3bf2-4771-a10b-d343d044fcbc",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "aa4cd4f7-c986-4145-ab5c-8247127fc6df"
        },
        "item": {
          "id": "66598841-5925-4e7d-8ce3-ff2825fc658a",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "7f966c7d-5760-4a80-8b91-e0ae70649081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1218,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf80fffb-eae2-42ad-bb97-20420a544f2d",
        "cursor": {
          "ref": "6d4d0531-6d82-403f-85a8-d9b8e41c088f",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "321dad66-e97e-482c-9d1a-b40a55533386"
        },
        "item": {
          "id": "bf80fffb-eae2-42ad-bb97-20420a544f2d",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "f7f29caa-8508-4e2c-8fec-2e503097916c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 713,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea45df5-c0de-4aa2-a1a6-97ccdbbeb1c1",
        "cursor": {
          "ref": "756e4a7c-402c-43ac-90d9-931555ad9c0c",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "f5858499-640b-4530-accf-719a810977fb"
        },
        "item": {
          "id": "bea45df5-c0de-4aa2-a1a6-97ccdbbeb1c1",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "b1c9def6-82da-4b45-b228-b0cb3af542fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 488,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaa6985b-79b6-4d03-a186-f037642415c7",
        "cursor": {
          "ref": "b60efaab-278c-43b0-ac92-bbcae887caa2",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "26c54fd1-3463-4963-b42f-33864228aaab"
        },
        "item": {
          "id": "aaa6985b-79b6-4d03-a186-f037642415c7",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "852f609c-799b-4f4e-a5f9-9b636e252e46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 418,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51d8a2b4-d936-41ff-91af-2bb28f0a68b2",
        "cursor": {
          "ref": "33ef4bb0-b5ab-4395-a67f-9bd15ec5226b",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "84ca6a9a-3e32-4b95-afb4-83a192d51afd"
        },
        "item": {
          "id": "51d8a2b4-d936-41ff-91af-2bb28f0a68b2",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ec20ebf7-fe7d-49c7-a8ba-d8797259fc89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61f685f8-50ec-4942-a560-1774c94502d4",
        "cursor": {
          "ref": "4e24da9a-e0b1-4bc1-a151-eee648d7d32b",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "9d93dca2-19d6-46a4-87a5-828606fdf8fb"
        },
        "item": {
          "id": "61f685f8-50ec-4942-a560-1774c94502d4",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "4bdeadaf-ae86-4e47-85f4-8843bb301fa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c8ade9-bd7b-420d-976a-abe7a2b1b296",
        "cursor": {
          "ref": "a3a4be52-2e1d-4108-846f-492e5b8077c0",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "23e39e19-9988-4531-96c1-23eeb1f7020b"
        },
        "item": {
          "id": "d1c8ade9-bd7b-420d-976a-abe7a2b1b296",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "8f6e81ba-a015-4379-b52c-8cec3eee9c58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f603bad-6e78-4387-982d-fe0fcb4cb2a4",
        "cursor": {
          "ref": "96f19257-f0c9-4172-acdf-9b47037cafcf",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "0c57bc2e-1d08-47fa-ae76-b2d1a604f039"
        },
        "item": {
          "id": "8f603bad-6e78-4387-982d-fe0fcb4cb2a4",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "74fa8da3-4688-49f2-a813-8618fd133ee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03a610f0-cfa8-49ae-a3c6-0507dae516da",
        "cursor": {
          "ref": "6e587621-8bb2-47f1-a725-7f5d686dda7b",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "38eb8a76-793e-47b3-a4b9-ad98e18dcb9c"
        },
        "item": {
          "id": "03a610f0-cfa8-49ae-a3c6-0507dae516da",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "75d532a4-dcf3-4e07-b814-0c457fd37996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea1cdb8-3e0d-4a0d-b587-9d76c32bda7f",
        "cursor": {
          "ref": "9e2165c8-ce43-40ca-b42a-57ff81212f0e",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "0b8a7863-a6a1-4a3c-900f-c1c5981922f9"
        },
        "item": {
          "id": "bea1cdb8-3e0d-4a0d-b587-9d76c32bda7f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "5382a6ec-1fa9-411a-a757-8d939ad62e10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56187640-f735-4364-af7e-a4689e3556fa",
        "cursor": {
          "ref": "39d154c6-be99-4bc1-b627-cacf1982004a",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "68b3d5c4-8898-4e81-b42d-c6a89ff4f1a8"
        },
        "item": {
          "id": "56187640-f735-4364-af7e-a4689e3556fa",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ee63773c-8a6e-4835-9f16-31e22984e73d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81a7d0f6-cda3-4f1e-91b4-6a80793b1987",
        "cursor": {
          "ref": "924f2e43-8bc5-40a3-918d-2479c6a4ddf2",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "091fa066-ba77-4343-b711-d915a38779e4"
        },
        "item": {
          "id": "81a7d0f6-cda3-4f1e-91b4-6a80793b1987",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "24df7920-687d-48fc-90f2-81094be9f96a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4996ddc-cf1b-49c5-8eb5-1af9983000bb",
        "cursor": {
          "ref": "f4d0f9af-f86a-4187-a238-e951d7b1664f",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "97fcb72c-131c-4621-b7bb-ddc270ab963b"
        },
        "item": {
          "id": "d4996ddc-cf1b-49c5-8eb5-1af9983000bb",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a1ebf4fa-a4ac-4518-8dff-f96ba69b2595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b66d181b-09ce-4f42-aab1-c6764e9fa1b4",
        "cursor": {
          "ref": "a30022a7-11b2-4c6b-b5e1-3ffb834d4bc8",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "73a32904-5699-47f2-9f26-b3c8d80920eb"
        },
        "item": {
          "id": "b66d181b-09ce-4f42-aab1-c6764e9fa1b4",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "40c5c41c-a836-4e1a-b528-2357ab97e2a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9de949f-390f-4287-b894-74a718a94c73",
        "cursor": {
          "ref": "cf05ba7e-9970-4479-a708-fd8da7b340de",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "58480151-0539-43d1-ad65-2cd4e9701658"
        },
        "item": {
          "id": "c9de949f-390f-4287-b894-74a718a94c73",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "2679e5bb-58a1-43b8-969b-582ef89f006d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2dffe42-c688-4768-850b-ad4968cb3e8b",
        "cursor": {
          "ref": "675ef714-b744-47f2-b314-b63320106470",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "b4afb8a8-f570-41ba-9b7b-ab496507d07a"
        },
        "item": {
          "id": "d2dffe42-c688-4768-850b-ad4968cb3e8b",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "356efe0f-cb2a-4389-b63f-9e702b5f5b04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7231602-ef68-4907-8ede-f7afd2a24181",
        "cursor": {
          "ref": "95a64d95-5ecc-415e-b140-b8392ff7a872",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "faad3d5a-630b-4bbe-b144-1a6d587650d3"
        },
        "item": {
          "id": "a7231602-ef68-4907-8ede-f7afd2a24181",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "60b3fa14-988d-4343-bcdf-b314caf25a45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46e05b25-8cab-4ae6-8ba9-382594683676",
        "cursor": {
          "ref": "68bced81-696a-45ee-89a9-d604c3d43262",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "ee365fb9-3ad4-4e31-93fc-83662fc3d503"
        },
        "item": {
          "id": "46e05b25-8cab-4ae6-8ba9-382594683676",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "cd7717f5-2d19-4b6d-979f-1a85c9e2a6a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 490,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "573af19c-ba31-4810-bcef-1e81e92ef7e1",
        "cursor": {
          "ref": "c0e12520-e63a-4d1e-bde5-69a7dc6d1108",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "8eab4f2d-cd9c-41b9-a32e-4ba89a3208cd"
        },
        "item": {
          "id": "573af19c-ba31-4810-bcef-1e81e92ef7e1",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "850dd8a4-dbf0-476b-a0f2-6c9bbb6a83d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 618,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef5cdf3d-3e38-4c2e-b06e-3341ca4009da",
        "cursor": {
          "ref": "9b31812b-4c2e-44b5-a3a5-634744cc762a",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "96fa34c7-d3a2-41c2-a685-1a41d1534817"
        },
        "item": {
          "id": "ef5cdf3d-3e38-4c2e-b06e-3341ca4009da",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "97919b54-bc6a-422c-a5cc-6ed96ca15c57",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a0da6e6-6738-40af-84e2-03783c2132e1",
        "cursor": {
          "ref": "77b77fa7-60a6-4ea5-8280-66e249593132",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "3f234112-0aea-48c7-af02-362431576dea"
        },
        "item": {
          "id": "9a0da6e6-6738-40af-84e2-03783c2132e1",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "6ae6e38c-7d22-41ef-b1e9-e6e9006a0e82",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 385,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee055e58-1ef0-4de0-ae3c-c04afd214fd1",
        "cursor": {
          "ref": "d0e8c248-c8a5-4b39-a550-f77897b45c31",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "a7dd65e1-8627-41ef-809d-04464696a3f8"
        },
        "item": {
          "id": "ee055e58-1ef0-4de0-ae3c-c04afd214fd1",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "4b5c8f5e-afd3-446e-9093-de5f4d6c15df",
          "status": "OK",
          "code": 200,
          "responseTime": 401,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "b93920d7-6653-4ed8-be30-6e9ed4bbfb02",
        "cursor": {
          "ref": "8ebd59fd-f3d4-44d3-8a32-86062cdba3ea",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b02fcf49-0eab-45e0-a92a-db8d793567d9"
        },
        "item": {
          "id": "b93920d7-6653-4ed8-be30-6e9ed4bbfb02",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c9fd9262-5c53-42a3-97d5-362428852564",
          "status": "OK",
          "code": 200,
          "responseTime": 1881,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7fcc0be-7d70-4d86-b3a2-a5e3afafcdf0",
        "cursor": {
          "ref": "34b01147-6b0f-401e-a6c9-c16ab101ddb1",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "6b81a423-441c-47ca-be6c-d64a5d23552b"
        },
        "item": {
          "id": "e7fcc0be-7d70-4d86-b3a2-a5e3afafcdf0",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "7d82d03c-e6d0-4d58-8a2b-7bb075d2a3e3",
          "status": "OK",
          "code": 200,
          "responseTime": 2123,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c3545a9-fecb-42ee-84ce-0720f36a6641",
        "cursor": {
          "ref": "7017ffc1-aff6-4c4f-8d65-b548c139241f",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "9bd0caa2-1352-4b48-a3f7-16f5f6d6f12d"
        },
        "item": {
          "id": "8c3545a9-fecb-42ee-84ce-0720f36a6641",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "53973700-57b8-483e-bb12-b58208aabd08",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c3545a9-fecb-42ee-84ce-0720f36a6641",
        "cursor": {
          "ref": "7017ffc1-aff6-4c4f-8d65-b548c139241f",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "9bd0caa2-1352-4b48-a3f7-16f5f6d6f12d"
        },
        "item": {
          "id": "8c3545a9-fecb-42ee-84ce-0720f36a6641",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "53973700-57b8-483e-bb12-b58208aabd08",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c3545a9-fecb-42ee-84ce-0720f36a6641",
        "cursor": {
          "ref": "7017ffc1-aff6-4c4f-8d65-b548c139241f",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "9bd0caa2-1352-4b48-a3f7-16f5f6d6f12d"
        },
        "item": {
          "id": "8c3545a9-fecb-42ee-84ce-0720f36a6641",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "53973700-57b8-483e-bb12-b58208aabd08",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b0c79f-4019-43b0-877d-ba21d972e301",
        "cursor": {
          "ref": "0a778e3b-709a-47f2-a367-0e649404c3f9",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "21a8ef58-cb05-40e4-8372-ab22ac9c6649"
        },
        "item": {
          "id": "88b0c79f-4019-43b0-877d-ba21d972e301",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "be061403-89d0-4716-85c4-faf228173b4a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 341,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09b31012-de87-402c-8afc-3a2878e34a44",
        "cursor": {
          "ref": "5ca3aa1b-8cb5-422d-83e0-17b1edb1693f",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b757e0a1-fadf-4aad-82dc-f2c08426cfbf"
        },
        "item": {
          "id": "09b31012-de87-402c-8afc-3a2878e34a44",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "55c10e79-a3f7-46e9-a421-756a53ec9dc7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09b31012-de87-402c-8afc-3a2878e34a44",
        "cursor": {
          "ref": "5ca3aa1b-8cb5-422d-83e0-17b1edb1693f",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b757e0a1-fadf-4aad-82dc-f2c08426cfbf"
        },
        "item": {
          "id": "09b31012-de87-402c-8afc-3a2878e34a44",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "55c10e79-a3f7-46e9-a421-756a53ec9dc7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bfaaead-112e-472f-9c38-6ace861d0208",
        "cursor": {
          "ref": "7e7cae97-1867-460b-a82f-da26e7a15834",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "07c77ec3-8836-43a4-a672-aa944f2681f4"
        },
        "item": {
          "id": "9bfaaead-112e-472f-9c38-6ace861d0208",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "533260ae-5ecf-46a6-b566-6990b211dee8",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 569,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a23024e-496c-453f-af10-7a345e5490b4",
        "cursor": {
          "ref": "c14e0624-2b0e-4c94-86cd-55d0ca6aa523",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "e55c5d62-de3b-43f4-b8ab-fe49b5e0e6c7"
        },
        "item": {
          "id": "9a23024e-496c-453f-af10-7a345e5490b4",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "8d97d16b-a264-471c-baa3-950708e9a23b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a23024e-496c-453f-af10-7a345e5490b4",
        "cursor": {
          "ref": "c14e0624-2b0e-4c94-86cd-55d0ca6aa523",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "e55c5d62-de3b-43f4-b8ab-fe49b5e0e6c7"
        },
        "item": {
          "id": "9a23024e-496c-453f-af10-7a345e5490b4",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "8d97d16b-a264-471c-baa3-950708e9a23b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "299510fd-67d3-4f7f-b79f-7951dab93f0f",
        "cursor": {
          "ref": "99973c55-21a7-4e3f-ab2e-df623258f0b8",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "37ec0709-d68b-4736-b018-c0f2b876cd0b"
        },
        "item": {
          "id": "299510fd-67d3-4f7f-b79f-7951dab93f0f",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "349c3ebf-b1a3-4d1d-a332-31f40abb2b68",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 530,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}