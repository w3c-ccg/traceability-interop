{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "65adcdc4-65be-4e71-a062-7cabc34b77e9",
        "name": "Clear Cache",
        "item": [
          {
            "id": "a9cfc59c-70ff-4baf-902d-7799be609c5b",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3ae58a78-3e8a-42b7-9b8d-9573fce6a97c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "376dde44-4a93-4bfe-90f2-749c07eb825a"
                }
              }
            ]
          },
          {
            "id": "0853caaa-b2c2-4ecc-8665-d39808d83076",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a85dbd24-fafe-48b0-8f2e-7b4659ca6ffc",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a7f7ffbb-c666-4465-9fac-91ed5a443617"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "4a46bab2-5d7c-4034-bc5a-b03168c4b1ae",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "d47a9028-7ed5-4427-aa82-15ad5323ae6d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7157525d-7b07-42c7-97a3-9f0b8aa76286",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a7fe7c02-39c1-421d-95b4-03cfb47eab12",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "57033dae-d814-42fa-8eab-246ebe38b596"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b9d4357a-c9a2-4848-b4d9-0b43fa48e080",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "843c60cc-5ac1-4c78-b1e3-12cd977ab595"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7ad303a4-0b23-44d6-9abe-d2081139f14b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1bfa23b5-da03-4668-a855-488d02f577c0"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0d8ee5b6-0a64-4330-a565-283433802443",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "c1939bf5-e340-430a-ab4e-57dad1c357f7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2b5ecc18-ccc1-40f7-b21f-0c799ca4c780",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eb761173-3463-4702-bb82-94d9688f69fc"
            }
          }
        ]
      },
      {
        "id": "7e451652-1af0-4a4e-b316-c8fc52e691d5",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "696dab90-b593-43a5-9a53-e881f89593cd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3a54a778-81aa-410e-9d98-15c230c61909",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "41036a6f-460b-448e-a20b-e0d6f2ce8d90",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "863f3cd0-e27d-4574-b0a1-e50a7f4e16c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1b1d0d71-3e83-4571-aed1-101e4181f734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "630d104b-5e6b-4d06-af81-5a10cc298436",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fe1ca91-0c31-4edb-8313-bcb182637b92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ce36708b-04a8-4830-a908-cab398adc039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cb7a5df-3bc3-43be-aa12-55079542bd2e",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40eb1b78-ced9-4b99-8fda-fd98f2398dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5c0f0efe-9f7c-471c-aea7-51b5c1529fda"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b89a99a9-5629-4308-a400-43653a9b8c9a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c8ad6b3c-8929-4c6c-aa06-c7a4f476a581",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1c9c0b1-b201-43b1-a432-ca27279395c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "07988a0e-0e65-41aa-9cff-4f1f639fe8e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d40c52ba-feb8-4857-8b56-84754a69e6f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d489f02-c288-496a-9c86-c6d7b0c2ecef"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2f67ed0c-514a-410f-a0a8-c6a0dbd150bd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "94c6d342-85a7-4d9d-a779-af66ded5d941",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c0b2a043-9227-452b-8186-9072e0b5a681",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "fe618424-45ad-4ee0-b0bb-298cee89ba6f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5170db15-26a8-4454-b686-51ddca0e57e2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "a44a2c72-a034-486c-bea4-175c5e41ef6c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e9486bb2-ff6b-4d81-b8fa-d9e503575501",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "da749126-11c0-43d1-815b-55ec5c26cc95"
            }
          }
        ]
      },
      {
        "id": "698a990c-7e38-4bc5-b0af-e2e07a9eeb76",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "c5d47d1d-4439-420e-9247-4da4ec5428a0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0a644470-f251-4d1a-81a5-6c2d39991f7e",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "0b7f080a-7ca5-41b5-be99-80319837e79c",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8545de2-d6c7-4845-88aa-f78d1bda45e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f61ea114-096e-4b36-801e-d6617df072b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab23f015-55d3-4c2e-b3ea-a4f03963a878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ea8d6fb9-91b4-4640-bd71-a2f4832b10bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73165c80-feab-403a-96c1-e6d0ee18836c",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e28ef715-e711-4adf-87bb-2bd39b88f5eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58892c95-2753-48aa-a11e-4deeb0471d02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac4116d5-e82a-44ba-9ff5-2a54585bc2b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "522065f8-fb32-4b2e-83c3-a2167a9f3d1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79f829c8-b68a-4c78-b10f-57d8bbdf611d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "327b56a7-0862-41c6-95dd-1d22ebe59044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9d33d56-989f-4176-9476-934e55fb8c3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd4dea6e-9d0a-4839-b0cd-8f1c10a82ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac4eeeb3-e2c4-4ac3-bef7-5f7d05ba163b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b3ec582-f594-46ae-94bd-3e3450dacba1",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09637353-988a-4d7f-922c-224bb82e7aea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e42df399-013a-4488-8d6b-77ddc7eef0f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e16e847-5896-46d1-99fd-e141237d6b26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5078e01f-12a0-40e1-8365-7ebd44f91565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5220921b-ccda-4d1f-9963-f3935425421a",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32c07dcc-0fb0-4910-9d2a-5dc985369cb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "655ede6b-088a-4453-b9e0-861221bbf973"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ab0822f-2987-4b45-854d-1ccbbb5e0c58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "74df7654-eddc-4992-bb21-58c221cbb812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c4f89cf-00b8-4349-bfa0-bf2bf9a2d499",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1765f7b-a7dd-477c-8634-3f508fead04a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "995843e9-9993-4e42-90e1-a243f8cf0f6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2e1e142-08e1-430c-b3f7-5f8b16e579fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8636e6ee-a1d5-4a3a-aa4a-f02fb2791a38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6c68fc8-385a-4083-8861-fe076fab936c",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39e991dc-ea1e-49bc-b51b-00dd9c6d13ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c1208e2-6f48-4fdf-b48e-d860c659d5fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "877d8e60-5d63-4bc6-af15-affdfa72587d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2eea6f12-b5c4-464c-a6d8-7070c9b4aa55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baccc6ac-dac6-4d41-991e-3fcf6a833db8",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53126bf3-83ad-47ec-a1a0-97640e141356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a33f8a6a-e047-4e40-aa70-6632e9dbb892"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfc158a8-261c-4c6d-9181-f98f64e180ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "701f5277-7ca3-4fa2-a284-9e83ee7389d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10fda13d-bf00-419a-8a03-58f607115668",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da58afb6-34f3-465a-b5d1-a1f193a915a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f76c650b-0538-48d0-b30d-16487a9becd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76075781-f8b9-4335-ab83-800b3acae2aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45f6dc85-9342-49bc-881b-38f948f1a4ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "462aec46-b438-47fe-b1d4-2ec9c235d57f",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "912d8b1c-d97e-4bb2-9180-1abcf81c4411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70673ae9-637b-4d90-9326-fb4b77fc2e3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e100d237-e400-4ec9-85d2-bea7bcac4cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "10d16618-2ee8-4f31-889c-303db4af06af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2459fca-d2ed-4741-8cdb-a63e05edc85e",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f1084d0-d26f-4ee9-93af-c629d44e44de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2cb2307-51ed-47ea-8c41-3b43981b3184"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c152e403-67d2-46ce-8ed4-870067052b42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "49c571f7-37eb-457d-b305-436d8657cfbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bac12be4-71e2-460e-8322-df210f538762",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fec29a4-f764-4907-b5f1-6adcf4eeb3ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "186204a4-ad9f-497f-9c66-eefa060a91d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ff53de6-52ad-4c07-9f58-9bcdba1c583e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "89ff1b78-8e64-4b27-839c-ab12ecd2b2a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b03235df-c92b-4262-9475-9b35ebb67c13",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e03335e9-7910-4f6b-8868-2818974a139e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "977866fb-20f1-4751-b538-5e3bd0897373"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69f69110-ed49-42b6-aa4a-5d339f6c0250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5fb33b83-7cab-4783-9cc7-c852d20eeb7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "975e794b-a3df-4255-b06d-dd2d1a21591c",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ced8a3a-80f5-42f7-b7db-5c2025a57434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a54bf88-dd56-4eb1-b587-7b964605516c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f661d7b3-8b69-4735-af88-35689f23d200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "24db0c3d-77f3-4099-8166-67b8111f696a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99a24cce-7cbd-4868-a403-34cdb0fef0cb",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "751872ae-c577-44f7-aa63-d9bda8ed791b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "408cfd7d-add2-46de-9453-cf4f7e1811de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a36e215-7362-4778-bdaf-1cda7058c8ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf0d942e-3aa6-418e-bc07-18f67498a2ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d68be91-0ff7-4309-b202-2dc33622891e",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e811417-f57c-4f4d-b0c7-a294e5a7e9a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58c5ed64-1a88-4eff-93e1-fc00d559e2ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17af8e3e-d6c0-4ad0-8831-75c760658e9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9577b9e9-5727-4964-ba01-b38aa8f49274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f255dd84-f039-4890-9564-1060d4c77e93",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "324ef4f4-2eda-4a14-9f38-eb8da18233f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc313136-555f-4fad-8c42-bd80dcbc8ef2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0648456d-7da4-4118-8414-a8790f8e6b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "50d8930c-393b-453d-b107-c2528190cd01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bf69e20-2b58-4315-ae11-5bc93aab9d48",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "252b6f51-4ad2-489b-97ec-a643bb4f93e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9db8fe1-c922-473f-bcf7-51aa22b3ecef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d54e341-ce5e-4ae3-8454-b3f01b91e3de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "068bf162-578c-4ba0-8f41-9ad0bb221303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6908ba7e-9d9b-497c-a3fd-344739c3225b",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3efa34e7-d0d1-4d62-bc5d-d8c330706918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56c16a2a-2bd6-4194-8593-8016bc7aac2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59d8db8b-9ecd-4a28-a79c-96d761195fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c08dea4b-f3ed-4905-ace1-9c3b6d783eeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96cdfb02-5c04-4d73-a1bd-e8557d9022f1",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecaa2242-21c3-4438-af53-b8a9be8b3c68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "262ae557-1041-4dab-8b24-eba98c5f4dc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffdc0dff-cf37-4d37-a159-f3f4649878b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5a11c88-613e-40b7-b747-fda5f1ddff97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "446083d5-41ed-4cb4-9ad9-b3dd0b9a139b",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd59fe1c-3223-47ec-aae5-cc3ae90e043e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6652b62-fe09-4996-8e9d-e91dacdf8663"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d1d5214-81fb-48c2-89fc-9c922dabaa57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b308056-cafd-4400-9aa4-22f0ccb062a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19750311-4c11-4f4e-8ab3-5419f97c2136",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2d45768-4ad6-42da-a837-f799f4dcbfd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f803ddc2-7600-422b-8f17-681253e11cb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37adf794-6551-4354-8e7e-585dc4bde7f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb561dd4-0503-4150-b840-b1a53e418122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25c335cc-705b-4bee-b1d0-2ad4590e0600",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02916b42-0265-4b90-9e05-7fa291bd86fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b65ab3d-c405-4ab1-98ef-2da66ecc2ff9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e0bd224-5202-48d5-97b8-c2e87ff2ccda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f354511f-f7d2-4491-9e07-7f2bc2660f72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cb1bfd7-acea-4b5d-acca-95de8720eee8",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "665bc2f8-3a6e-41e3-b6d3-18c392cf33a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "994802c3-9b1a-4a86-9188-fb15d0f06fdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7892838-97b6-4812-bf73-6ac3eb1a9fb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f889f228-ee2a-47aa-a648-17c6e2ee78da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b86da4d0-316b-4183-be95-f133296d28fd",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e0fbd18-5c9e-4f85-a100-c4d212e4a36a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc57d6a5-d44c-4801-8234-aa7c45ed36f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63b786c3-d36f-4296-a23c-c4f34218b59c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "443afda4-468e-4016-91d9-54b254016381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e885c67-7d3d-437d-a6a3-e8b7eda24956",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0469c52d-d7cb-49d2-82d3-e2326984b9d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f4d6c45-92a6-4648-bd43-459d236d7cd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5542cb90-39a5-4667-9086-dec9ea169106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c76d09cc-411e-42d4-b577-56ebde6eaaba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c2e9baa-19d9-42a6-8470-f6fba74b22a4",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e7019c3-572b-4a61-ac34-d29e3f71c275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32096b7d-1cc7-4318-b6fb-e3b158d08ec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9033ef0-d549-44d8-95a4-8a04fec74e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e904243-0337-41b6-ac56-6faa601631a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65d1a16d-5f48-4257-8744-f981a9058505",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ccb642-b3e1-473b-bb79-2040cee127c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "705ff03e-c807-4db3-9bde-7c4b40cc2679"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b62b3d-fb17-450d-882a-1736fa862a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac3eeb69-34aa-49b8-b349-f5b97205142b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a73e5d5-637d-4061-938d-3ac4f32dbfd8",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd6b300d-b0d4-4ab3-8584-5235827db7ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48958327-8c06-4509-8dbf-a06087a7f75c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4899da6e-8cd2-4088-9b2e-1cdbf0159cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "44e89fa4-5419-4884-81e2-7a91e3536815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3b019b9-73a5-416d-b7f0-d0c1e30c873a",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "107aaae8-acd2-4503-b78b-b12ea164ade0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a94f2180-f71a-44f5-bb11-9c5c8d1b286f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9592b346-5e18-412d-b51d-3a65450c2acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "69c8d5b3-aebf-4a5a-bbf3-2435625430bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ad82a91-84c2-42e1-a053-45b2267f51df",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ea25e4c-b876-450a-a6f7-7afc32340b21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8879d035-888e-47d9-bb98-84c6d8380ba7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "034c8609-e1e1-4f7b-b44e-1fbf3f9d9270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7eddfcb2-c0c7-485b-9fab-ab5ef1c4e81d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4547de4-add9-4268-8650-cb8951d8bb59",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3339064b-f387-4fdd-9ff5-9221200fd69e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22696b8f-33c9-4e69-ad00-01b0cf8d2885"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73a06b73-e5ae-4a93-be23-762e0c753ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dcad6338-5138-4c77-b681-fa21dff2f4d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9dba4e5-9c1c-4477-9588-0e4cc06495c5",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3a36b2f-7cd9-4baa-92db-610e1290383f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecdec482-30a6-44e8-9c97-272bb2b2f724"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4713485c-a0d2-4e14-96ad-5bc9a7ae4e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d5b0f76-2208-46b4-a3b1-27d4f244a764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "092cf164-42cd-4524-ad72-9c7388ddf784",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8055b29-b84e-4dfb-b21c-b48b32be7b8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1737545a-3925-4aba-981d-16562875981c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb7e1f3a-9350-4285-a5dd-29c6c25d381a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e153ba2f-0ef8-4941-bba1-548648b33edd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6237d649-50af-4673-a7ee-1279fcb5dc53",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f836ec31-760b-42db-8ff1-048fde61024d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f215ad7-f8e8-46bb-b2e4-01b3b3836d73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27275a44-396a-480a-bc56-0c528bd15e99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "687720b5-0517-48e8-8d20-00de4063cfaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a704eeb1-fc86-4537-aff3-7faa85350661",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02cd3853-1faa-4517-9453-8edc7458644f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6ce6695b-c3e7-49c3-8934-58969ccda27c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4646c12a-b4df-46a4-a014-56b9e3b57576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "84e2555c-d32d-4c46-9a3d-a4e05101594a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d237a6de-ecf1-4df8-8e03-d04c3c98b362",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18e8a9c6-27cf-4dfa-b035-9d2740ea4987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfeec9ed-0716-4a8d-8024-69a30ebbb7ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ea4b24f-a58f-4a32-9f7f-8ded70debcb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "124279cf-a65d-411d-8799-a6aeb536b6c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "899c1a31-5406-4819-a1c7-8b6ffe1f9b47",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ba4c1ef-3f17-4c86-9783-6d1ac0377d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "455a6016-05d8-4ea9-831a-27d2471be7e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc69941-a32f-4b02-8851-929bbb8c4027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5d81b84-07b3-4e63-94d9-87407a7ceef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8131e70d-011d-4700-a7fc-41650bbf706e",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef63928-c9f1-4f4d-b853-3705df588650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a73b4f9-fa24-4f3b-bff8-93ef0f2c2ee1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "770df46f-5d97-4b98-ac37-3052337d9dde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "22a0b597-aadb-4903-bdaf-d206137b10d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f880187-d902-406b-ab7d-73787ae33ccc",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84fd4a1d-4d4c-40ea-ae33-1f048274116d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e68e601-7367-4fc0-8a70-9db1582e5060"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cf8ec23-82fb-4a43-9817-f693197306c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d78e199-36e9-4290-b18e-17022b9c74fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c73400a4-b793-4135-94d4-79d9c3e2fce9",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "983318a1-21bd-4789-8488-e39e0de9d78b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "943578ee-1e38-4064-a9ce-9e19624930f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "105d8910-9051-4eec-9cbf-f0840a7c3477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "32310d0f-c0d7-4b63-9e23-7461d1fc5295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0964fbec-20ac-405d-a447-d66e67bc55bf",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2230d9c4-f608-490e-9dc0-24f50bb476a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f040cc1-c360-4577-91b0-69a277cf495a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b71c192-620f-47a8-9bb3-9f06e657b268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "fe5b8882-d013-4492-a84f-ba816b19c496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8578bd0b-7eee-495c-8846-15f34054ac8e",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ab77a78-320b-402c-8e07-1af67c720894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "685e8234-0e96-46d8-bc68-7df987c03615"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5b97adf-f809-4ef4-81cf-fc3fa4cf7ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "15fc75d5-8d19-4025-bd9a-549b2fba1760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22b6a9f2-8d98-4e1a-9b32-3267ab86e215",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90c7ea82-136d-4b4a-8439-12059e3190a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eec53dc5-40ac-4e4c-99ef-32e6dff7eb8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "255fe635-cae3-4e03-aa1a-ce64953c591b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "78acdfe0-8b55-4496-886f-178d8b00f6f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bc47763-c013-4181-ad76-9e332c74d557",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c992a9dc-3e3a-4001-8220-f20e8b64760f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62d6a66f-a7f8-4c8a-b4fd-7f71ade753cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e61174b-7fd8-482f-bc9b-70ab3448d2f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "650eb3cd-d73a-4daf-8001-f76625e62767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc945b6c-1b94-4ec8-9d64-03ac6e392aa6",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea3a2b4b-3849-4342-b173-c16e98e50383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c29dfdc-1b58-4341-ae84-cbb9617b657a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "affb831a-d46e-470c-89b8-c3a04d9ddb93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3781627a-0dd0-4a75-89d9-e9bf40ada54b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf851a5c-47bd-4d5d-b078-d77187307f01",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eea3ef3-d3e9-48b6-88ec-d1659f1ad6ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47023224-c94f-439f-8b08-d25d48cfc902"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f86a1cb7-9f93-445f-904d-fb140fa4108e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ccef9ab-e13a-41c1-a853-80d0cb00f700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec7890b5-bdf5-469e-9ea4-9bb87f6ee68d",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "194b82f2-03f1-4beb-94dc-f0dcbfbf86d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0038e11b-5876-491d-9bd7-8865f4ccc019"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20c34200-1f95-41c5-b963-e2f7d61aaaf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "da0938e8-3fb8-4812-9eda-c3711604e853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6063dbb9-d6a3-4e9b-8bdc-e97e4f3d1f25",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87586019-2acf-4b60-bc0d-01a97496a620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1401e4a2-be11-4d31-aea1-8cf3b7a62704"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92000c74-c461-4834-b309-e894735fd599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "132f5380-4f41-4cab-bc3a-f1ee79155acc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a1a4a43-cb19-4a75-9ab6-8afcb310111b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f99f855a-527e-4b5f-8e3e-b0f82d8a5544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2810a42-5448-48fb-afc4-98da3d644e28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae08b8c-949c-4beb-a54d-6ce273a993f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f9c2389f-dbae-4569-a2b1-5eb4104c0916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83e5c3f5-abb8-42e2-892c-27a50c3816d6",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca6a497d-9e4f-4295-978d-97298410fbe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d6c4e14-58f9-4623-b60d-38166d1e2a23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38e4e262-e63e-45fb-afc2-a3ba32fbbb53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8221b06-f5a4-41a8-bbb6-50de1aa04c89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba2bb3d1-b7c8-410e-ab00-03b41ef24357",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a054bb5-8ab9-4a21-aaee-002afebb422f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96a6a32a-6918-4254-ad7c-41674c9a53db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f67c72a3-85d6-4763-9563-393c4a053d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f57196b4-10a0-40f3-8f76-5b72d8579faf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cce8edb5-089c-48f3-9b7d-4eac5a90979f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14744470-5d0a-46f5-8249-8f7ac497af6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46a9b263-9279-4bab-88a6-7fc274a3d6fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a60c06f-e8de-4d8d-a385-73af3f4b6736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b2a3d2e-1cd6-4490-b8f8-0660414611a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78e39b73-d45a-4f1d-b6db-d5b12fc133c3",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d6eb95c-057d-47de-89b2-3decaf44a6bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4547e1c-a90e-4268-85a1-8dbc3f115a0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48f36090-a577-40e3-b1ce-5033efa03fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d0d5539-92f4-4f29-8a65-840c7ab54fb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ebcf4c-fd9e-41ac-9573-aebe227aa618",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0ece93f-a7cd-41e8-974a-b26c80378866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eea5e46-ab9b-4d74-a320-df0b1f54e0a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "914c9ac1-6a4b-49dd-bfb5-a373994a0c73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d685fc5-8fcf-4c97-b61e-ad74753ac210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87d117a3-673e-444b-b12b-9b29d4db8cb5",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb2a54bc-632d-4345-9b80-c1074f1ae822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0c68fa9-61be-4e61-8fe9-2c241a4ebb1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "763fac5a-3d2f-43ec-8f28-1839ed3aa393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "15feeeff-1852-462b-a8cd-3ac471d61a34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c96ea2d6-00a9-4227-a406-1d1ee6c43183",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "690f1f20-d65b-416d-9643-03c30655275a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbc3b564-a82c-4b44-becf-aca8fd874ab0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37df1b12-e9d5-4595-aac3-54d504ee3ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7905d5ba-3d56-44be-8db2-54268aa4f074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "018a5daf-2437-4b12-b447-340bbde2a456",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea25497-82e3-47b8-a14d-617569fccbfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f9a67b1-0eea-4294-865d-81790436c232"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a63f505-22d1-4ab7-b8e8-7ba2ce835eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d3e08b8-78ea-4ddb-919f-53edc05bb5b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32177fd7-c0ef-4e19-b078-6a177f1496ed",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "129fb17d-4465-4105-a2e0-fbee5c496e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7800916f-169b-4a32-9cca-3fcc82c8eb53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd76cab2-b1dc-4de5-b895-ae370547b4a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "98bdb8cd-4e9b-45b3-ab0b-fbf186f0f9db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5b6bcdd-c8ac-4bff-b92e-0a69dbe4eef9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc9da342-fdf8-4140-a6e0-34a3a0016659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20521eec-44e2-452f-8354-eb94d7fd09cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb7defce-89fc-49c1-b22b-263f370c01b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ae467d3-8312-4840-a946-30e463884f2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "530d9cfe-f62f-4038-995c-4287903ccff0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18597ffb-d828-4ce6-aec6-d039a4fd2a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "904e0c3f-7e79-4eb5-adaf-057c3e18f51b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "163a5c77-a6f1-4bfa-aac5-3bf2b094876e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b2eb7d1-13bf-4c74-8328-0b625a73b8eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdbecaeb-fd9f-4f0b-b29d-ea9d9358a23b",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f71c61c-34ac-4acc-af6c-945d0bf66984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90a4c85e-4c28-4f55-90c6-9f385669bf2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "442cf0b3-f93a-4c63-9cee-f617897b9c72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0486b5f-72b8-47e4-96db-4e00d94e2a84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb5b5068-3b04-4700-a7f8-7c1fec563344",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8c0f14b-bcee-43cb-92a7-5ff8fbf76ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb1b4ce4-ef77-4c73-bbea-41d5f748b3ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b22b646b-5413-4bf1-8aa1-30489c3c8493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b28f382f-48cb-42f7-9bda-acc868a000b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb759523-da4f-409c-8f8e-f6f6c50de903",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "607adec3-2350-43f2-be54-d742ac919914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67aade07-a2b0-44ff-bb10-57f6b688f3c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee4bd748-7901-443e-ba70-3e3b0254cf86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "76dc7528-0b8d-466a-ac0a-7a882c83ec5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17910fb2-d9c0-4707-84ba-b4b837c38e0e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d0adde4-7939-4639-9534-bdee92c05fe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "503d986a-af2c-411b-a74f-5eaabb655031"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d335a2d8-250e-4c3b-846f-1f80d1b82e6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "50f166dd-333a-4449-a3c5-2aa0eb6b6662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7250368a-a614-42c7-be67-95571ce973a2",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7110d5b9-68b2-4962-91c1-7ccb1fa70102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "165df323-707f-4335-b779-93fbd4b8316f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b54b97c8-cbc9-4baa-9b6a-7d2e50f75eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd16e0aa-1091-4395-aa06-54b4da64378f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "426f71f2-711a-4171-a72b-90517f485a32",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f93da7a9-fa00-4909-88ed-22155a91619c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b668edb-2cec-49b2-8c8a-c63649406439"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b37b201-7520-444f-83b6-7a60f08f95ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "41f1c9f5-f2a4-44a4-a959-a66660bb47b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac491ac8-7ba3-4980-8831-2a8b6fe95713",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "575b8463-eded-48ff-805a-19b7615b332a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3256561-8ab3-4b56-99a5-9e44444ab118"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d978d4e8-f5ed-43b0-86e7-fefc0eb01ab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "483fd5d9-53c8-4aec-a2df-e99a41ea687b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6add7af-a4a3-40af-a260-471e1cf0834a",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afcd3dbb-e9b5-4302-9916-3c67af0c980e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75af1c95-c96f-42e7-81a6-f56b9ecca9bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae2049fc-68ac-48a7-b433-f435b520e46e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f2dec75-5364-42e6-b79f-c862e9a4fb15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1783af6-577c-4fa3-b65f-e92fe5bd5b74",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "240ab0fb-2b4e-405e-9aea-67762f33e447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db6c726d-16ad-4fd0-b82a-bb8337a519eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32519f5f-edb7-4b21-a96e-c648c20cdf50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "289a70a4-c9f8-460e-ad7f-076a81f436d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8308dd1-f00e-4451-9b2c-53f56c1eec9a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9308ce68-906f-4daf-8047-1f44780e09c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d2bd365-1909-44c6-a292-67b29986a54c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b596b8d5-c26b-4ad8-a611-5d3617c4d8a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a49904db-e8dd-4ffb-9164-1fa5e856ba8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cff54722-ee91-4f08-bad5-98118ae47c63",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a35d6da6-a93c-4a01-8ecf-f55c57d5e4b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f2c02a7-87c2-4994-baa2-0434af05c762"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b61f45f9-75b8-4e63-a840-4ceca4334bbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a91d4702-2cb9-461d-8bed-4ac1f20e30f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed719b21-3546-43b4-8d8a-c636133bf994",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b986047c-27aa-4f47-8d6c-2f58a5d3fe80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1a77a72-2bf5-4edc-8cf0-8b6bd9d7b486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbbc86df-0121-45fb-8af2-b23aea38188a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "013fc078-6025-4a5a-9d15-7271df78a257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2acbebf9-5ce5-4aca-a826-5cadec046cba",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce9cd14-f3a1-4aed-9f08-b7e965e55419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ced60d90-aff0-4772-8516-89b0b44b0017"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7965f7bc-bda3-496b-849f-b6d1107d9196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d6c2a489-287a-447f-8357-c9c2d9e7601c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa2a730b-177a-4d60-9941-6d35421753bf",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dfebb8e-ca67-4fd2-a4c8-7edc26f26197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d980157-6b84-49b2-a7a9-134397a0cd79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64627c85-b0d0-41bd-b311-36855c2f48a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f4002ea-f5ef-4cb6-842f-b3bae25440e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f034e4f7-f194-4656-96be-177862cbd3f0",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be5eefc6-86ad-4fa1-ae58-cc433dccb76c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10d562c2-0b7c-497c-b1fa-b2e1449f9539"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75c0f77d-26e2-474d-bd1c-86e920086160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac7e9b56-8ec3-48cb-b546-04191ea29c84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7701f57e-717d-4bc2-a64e-0b4d89083c55",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16dab9b0-d7ee-4d6e-8195-8802aa91e63a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3653947e-4ae7-4b48-a40e-d6db500923db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "451df382-e468-4774-b623-1ff2d8e6df47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8901bb5b-102e-4238-8277-02c4edd2fc14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12df4ab3-8344-4022-ad0f-36cb1744a942",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f69bca2f-d08d-4045-b170-48a74ccac7b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3c9b408-eb14-4514-aa75-96c2ef0ef0e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e99f6a28-2d95-4b9e-88db-f13f5b3663e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "942e7184-429f-4965-b2f2-a2d6bd426e3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "686b61eb-eb07-40fb-943b-965735e1f4d6",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b31a871-3c73-4374-bc56-635a12518f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68840b1b-30d6-467a-8714-6b71d8ab9d4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99854926-41f5-4089-832b-c7a37ae7995a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1fbd420f-ee2f-40e4-b8f8-d1125d51f9d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b6b9e9b-1229-41da-bd42-89994238509d",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7b348a6-d3fe-4959-843a-6aee6f1855b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6c55478-1b97-487a-9d27-dc6eec097e82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dedf3223-900d-438b-81a1-5a0390cbeb11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f4fc97eb-55c4-4acb-be1f-7637a69c239a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af6ae0a6-2334-4580-87ac-e642f5160e69",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1fd53b8-2724-48f7-b730-f0d9ef968826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "801eddfa-6121-4f16-8e4c-5dc2c4b3cbaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d888e411-af31-450e-ab5e-050dd882b712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d641984c-dcdb-4783-9da9-f047fa7d227e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8d916da-494b-485b-ae41-62d1579da414",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e498ea1-fec8-428a-bbc8-0d169b63fa84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "293ce6fa-67ff-41a5-805d-75082eebae77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ae974ce-84c3-465e-a8f7-ad11861dde9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "54b9c7dd-d3ef-43df-908e-2ac303718560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deb8c3f3-a40d-45d9-9d76-860b1d66a859",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d561e86-ff29-48f0-947a-69ff6ce08e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b31ede84-6d63-44b5-9430-e27b1f0ab7bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8afc6861-a4ef-4f39-ba33-f160ef950fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d57c22a-b469-4058-82b5-334edc629c4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84df3059-4b6f-41a2-b18b-fed67590f7bb",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "022bf5fd-8489-4c86-9ba4-a6345722b680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f35baa41-2a0f-4fc9-acc9-347db9da2de0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fdd0e6e-7e88-4f9e-be0f-8c4374cf2425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc734478-b0c6-4d9f-8ebe-fccf982ef1a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c72186ba-8043-4674-91f9-c743eeb4e34b",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c70aab5-0d6b-423b-bb8c-74ca5c967f6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeb5c324-9ca0-4313-87ba-0d608a7d71c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5d8e1cd-8f91-4aa2-8c8b-7f0ce85a3836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "35c83368-c0b3-42fd-b64c-11638086bc60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96281008-64fa-4df6-9442-984b2d11dab6",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6836318-852a-485e-8c43-09fdccae6858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35b91a6b-5c30-424b-b88e-02f35a4e3ca7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee053a36-fc76-41ed-bb0f-6cd75afe3b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a4fdb942-bf88-4e43-9e44-35892f5235ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c6e6cba-b482-4645-897f-2ceb75d8364a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f32c13c-cd21-4181-9a84-bfd24187fe57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5871e78-d9b4-487f-9598-c09514f1c1a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e80d09b-a4f5-4169-bb8b-a39d8405aa72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "81d44d63-e34e-4e09-b1de-0af655781644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fce1a4aa-d900-48bc-9697-176f24f59ea8",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb7e8123-ec88-4417-aef8-f8e83056f959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c43e77a7-af85-44bb-a73d-27799c65f53e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "302799ff-ef23-4e17-9623-ed4aade26dfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "68224139-900c-4b6e-9eee-dd3512e9392d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "170fd264-7919-4da5-b1e2-91526117badc",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4da4c9c4-2678-479f-9a08-8036660dfacf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65655929-0db9-4e85-beb3-2f2bb0300d44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ce6c9a8-53c6-419a-b612-b90da5f0d95c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c614af44-b8e3-44ab-ac7c-4715d0f3af1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "858afec8-16c6-499a-a23f-408f2da631d0",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5083a97b-efd5-460c-bee1-f5ee8d524ee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8cbefce-f6ff-459c-86ca-7d1d923d6d0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd81b800-f23f-48b4-82ce-914d674cd745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3303fa12-fb5d-404a-b433-0833715aa7a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0a8600d-9c6a-4b95-be08-6d1eb8061809",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7baa901b-6a29-4848-81d5-ba5dda1e653f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bd9cd74-467c-4b6e-af0d-3249390c3102"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f15c21f-6f38-4b38-9f58-164527ce8e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6dda2c9f-9ac2-4651-848a-ee5b0d3e0167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c16d0679-9f3e-4e4e-a5d0-76b3a4310b9a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f17c6d22-a0a7-4fae-9fd7-43063fa325b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ad9c69c5-8fe5-44c7-b0c8-7cb6951d7b9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c1e0295-fb37-4e6a-acd1-2e02f74792d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf0be31c-edf7-4474-a1de-199b0e865eb9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3999e9b7-d64a-4036-abb5-5f2fd5781642",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8df2b056-608b-40d3-9fe1-e4481b3d2874",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b09ecb38-3240-45a0-9aba-798e3c3b51b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "478a16f0-defd-4645-828d-333668eb15f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7ddab3e-e36a-44b0-b03c-188588d29e3c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5037666b-6103-476a-8800-da1e9da4c933"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6bd6b06d-df6e-43bd-aba6-06f4c212b3cc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6a13713e-1abe-4c61-8248-4c9379f9492b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c5084d55-f6fb-4cd3-9de4-d6c22b02b62b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "daa15095-b973-43a9-b04a-be34f3f9233b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "555f0b97-c9dd-4a40-bc41-7688598d3597",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "320353ed-8320-4b74-9d96-23eab9822376"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a42e8335-6f9d-4875-8ad9-4952ea8e2df6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d767cf5b-e11d-43ac-a3e1-8639083507f0"
                }
              }
            ]
          },
          {
            "id": "67d4bec3-79f6-46fd-8e8e-5f462ce7238f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "dd253ba2-5b36-46c1-be4b-f5a4dd025eb8",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "6c13aadd-f183-4eb2-b492-1e8e9c4ae3cc",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8fe3da6-03fe-4877-b230-fc49f640b752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "32dfbac7-0ff9-40ef-bfb9-ebb7bfb72d7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c22a426-4816-45b4-8dbd-8c5975961e64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1299bbab-2b4f-474e-976e-1817e8078f2d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ee43b454-2668-415c-87de-7944046c9fa1",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "019f1383-21ba-41d5-bdb6-0634263d586c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "32a89144-3780-494f-a7a7-f0f0b7a54377"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fe4c5824-a4a2-46e1-83bf-509a6d78b928",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "59818f7a-0bf9-442a-8bd6-dec5b888ce0a"
                    }
                  }
                ]
              },
              {
                "id": "78aaa239-5392-47ae-9d3b-c7d9a77c0857",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ddb0e11a-0b80-456e-8f58-75408ff745ca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c445b331-a330-4cc8-9795-6ddc3d93cfcc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "13ef6991-92a4-42d2-b167-0877de6b8611",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1a20a8f8-580f-4050-8b4d-09dce4b695f0"
                    }
                  }
                ]
              },
              {
                "id": "9a52b205-e902-4969-a1f7-bf8c232036bb",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "94d7fde7-4ca5-4cf8-9cb9-8c4301292b3e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "01864af0-a3af-4b08-82c4-0a0849dd02e6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7a7d1dc6-b32f-4196-b146-78a05c61a102",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "07f79d3f-898f-4742-a670-3aba1ffd5967"
                    }
                  }
                ]
              },
              {
                "id": "ca405d3a-4ecd-4401-8ac4-a579b14e8443",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "46034b00-8100-4ca6-b3fe-74b03341f311",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b892a1c4-943d-4f6d-9129-36f4c15ba697"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b2e9fbc1-2c78-4039-8ff9-13696eae29c0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "548cb6a8-c39d-4362-ad35-47f02b74b4de"
                    }
                  }
                ]
              },
              {
                "id": "55b40515-1c7c-487b-a1ab-49763325184d",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a9bdde5-1bcc-46d9-b5d4-4bb0090de246",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8087114d-a6b6-426e-b78a-858b010193e8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d605d13c-c094-4df0-9fa4-45e6e62d7e70",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "0c3b84bb-8053-4f94-b206-aaac2c0373d3"
                    }
                  }
                ]
              },
              {
                "id": "0059aceb-0d0c-4b94-a8e6-035ec4481015",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "de639d30-45d7-4e19-9c77-5d4c87853bf1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "df3cc4ad-2492-4ae5-85c2-f6c95dd6f87c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cc932c7e-025e-439b-bd88-c493799f23ff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2a0e428b-cf8a-4a6b-a04c-c0b53ff28512"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "75df52e9-ffa9-4fe6-a684-668310401b8e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "948b5bf7-7391-4ab1-a4e8-0618463d7f19"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5886bf39-d14b-4f9f-ae53-bc671a0497df",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7e9a1ddb-3706-42ac-9659-3f671c326cc4"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cd53394e-28af-4fa7-af77-19939cffa063",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "95e473da-e417-4474-ab9f-fc60e2f38747"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e77dfdee-ee84-4c02-bb80-ba74e1289d53",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aafc4322-0a01-4ec4-b4a5-cea36086bbee"
            }
          }
        ]
      },
      {
        "id": "7aab3489-2a99-48f7-ab3b-49f95b378808",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "e4878eee-5681-46b5-b5d4-c8f5a142edfa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "092c2323-79e3-4582-8051-4c7cbe1ecb31",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "13cc9699-f76e-4e35-8c39-38d6adf02689",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6083220c-54bf-4c87-945d-4103c78afa43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "662a8311-25a9-43d6-a0df-9ff2f10a3d4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "770fcbe8-a453-47e4-bf63-52e82b49a1e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1681cd59-ff99-4a6c-a8cb-6a0adfd0e797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "117dabfb-7a23-4dc0-94a2-021963571ad2",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "959adeff-0280-4d30-bbdf-ce84d15a1018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4576b111-2aad-4e0d-930e-91dc0aab2e82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "008e5c80-a64a-45e4-b6c4-f4b4b7c298c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "530b4474-eb61-4089-bd0a-d745862bc703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7c925ff-2762-402f-bbb2-7ca26f3ac0d9",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4d17f6e-0826-47bd-924f-cc9b0f301d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b749133-f932-4782-8fec-f6dd6f225fd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0414e4b-fda5-4caf-876a-1ebe7f289874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "528015e7-3408-45ff-ba8b-1684e9b1f792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09c3ad9f-af2d-46c0-92ea-0f9401b23cbd",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83c67324-134b-4743-848a-986ba9a14a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0cc3959-5605-4636-926c-ee8917515d7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1e7752a-0884-48ec-a191-2b1e68df4303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1f7a27f-c668-404c-a00a-ad3c8200d725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3db27cb5-1b34-425e-8c69-3c89ad1442da",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01337d75-f448-430d-bc87-09830eae842b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76e2ff62-a506-4db4-9ab9-a06a5de67ed1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dbd681f-0c86-40ec-92df-33f4f3b18c97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "96902858-7607-4ffb-8b4e-b22e898745e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17a601cd-2f15-473f-933d-79f4be152c80",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8c23e2f-fa98-425d-8b0b-55c12f801443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "250f7850-084a-4eba-9a0b-544ddfd268d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6694929a-be81-4d9e-8ed4-66af73ffb523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f65503be-3b85-423b-8e31-dec438fa2095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54bc4e88-f43f-4f0b-a70a-e4e91b562d84",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c482cce-7c32-4a3d-b1cb-a204424e21bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82d288cb-e9dc-4f21-81fc-99b34a75d154"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e964d09-4de3-4e66-9960-56a47747197a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "37616248-a378-4f3c-8514-0003851d3faf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "733983f8-329b-4097-81ff-447ec8385fb3",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb8114c2-f2b0-4e58-97d7-cda7fcf422ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "988762fd-8218-441c-914b-a7b899764457"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dd3a52c-bd6a-4c35-98e1-241e3e392e40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "019527ab-607d-4f2c-ba18-00a8e53379c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e698f55c-a176-4166-8e97-5a56d35bf1b4",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeee1714-a59e-477b-9047-484dca09f7db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ac90d69-5d5a-4bb2-953e-98d17993e87d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f9e81ca-bdf9-4b29-9df0-eeee219b6fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "219fbbd1-d6b9-4697-9553-282cdec4f92f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53e49144-31a1-4462-b590-2e239af9e2cc",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9705a505-e609-45e7-9e55-3744f8320578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a48782e4-efb9-4e19-a3c1-5b749aea43ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dbc68fe-f798-47b0-aa5f-d4489e69cd16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5156df5-a35a-40e9-a803-c0909a302a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e07803d-1801-488f-b6d6-e465ef604f83",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c51aa8cf-810f-4694-800f-a0911b248e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6033cb1-b266-4195-930a-67319f0d5d15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a794919-31f0-4fc4-a839-e6e42772cedf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "57afd5bd-4d19-4f9e-8db9-ff50591c0baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ee4e6e0-56f9-4bea-8452-b94338669e37",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad1fc649-0d95-4e31-8ccb-c8aec28a6cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daf1b1c6-b662-4385-812f-415307db253e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5fcace3-f8a3-4458-aa8a-8ba3f63719ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "96bdb378-8278-403d-a505-d500442238b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "852945a4-c06a-4597-abbc-12c736161aae",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d796592-1b00-4382-b38b-95f2d46615db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b934182e-88f5-4cd5-b96e-707e37ad46bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d79a06d-d43a-48ea-b692-b7e3bed1b6c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8be4fa0c-ff1b-4929-8ed0-d04dbd06a4b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39338360-8207-4bbe-9733-ef2d0d23dd65",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df5277e1-6c20-483c-a805-7b56ffd89084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ad787a3-855a-4691-a898-709d9395501d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19345730-2647-4319-b87b-34e86f5802f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cff1ffd-e38d-4473-8bad-35adecdb6240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbf5f717-5a40-4984-baa2-3d324beee1ad",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22c4163f-11cf-46b0-aebb-f2ff4dfcf55b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7884e71f-a00c-4fd4-9e7d-f2ee6b7c873b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64ee92fc-f8b8-43f7-8039-6e92c2d46420",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a1b0625-cc01-4eda-ab9c-876489da6bf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dee52a1-cb0d-429a-83f7-abee58b2b7e1",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1543d26c-37c6-41c4-996a-ab4375b8159e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b085ad97-1747-4988-afba-8dcc40f98b30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "759c9678-7c31-4a09-a515-9b89c8523aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f78551bb-c9db-4fe0-b1dd-6faf58080083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a427f643-4e3e-4bf7-a909-98f1a998668b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a2f6e97-ffa8-4071-910e-c10b39c25ee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8025cdfe-1969-45c6-b213-b6e6859b3b6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf7c59e7-fd49-486c-a988-61dd29e8f99b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "fafe6d7c-8f2b-42b4-bc16-99dd7bb3abb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdfd73bb-64e0-4fde-a948-aee76531df9b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad439776-655d-4566-acf5-f980bc126a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7216f9eb-7955-4973-9c82-69cb584bf2dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa0bb5cc-5073-409e-94da-8470eea7e0ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2555c6e4-7b20-4ef5-9528-98e602b80cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58081eb8-8347-4f4d-9747-bd573d786f80",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a25f547e-fa2b-4cdd-b54e-c0b373f5d3d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0597adaf-ae25-4b8d-af19-8f33d193340d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbb3e9fd-3834-4d59-b799-942f48182876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fea48b82-333c-46e8-a183-c053eb88963b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebb2b19c-2015-4851-b03e-0eca4ed8e1b6",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98de91ae-b287-4b66-b85b-90242aedc879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68ca25c0-02d9-41ed-9169-0b2a070bfb0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef045bef-c49f-42b2-85a5-4e736d3da9c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04286323-9c52-40a0-b9c5-8d05d5133b67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e99ae5f5-f373-42d8-90b6-1cc770c87f93",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72bd9301-c389-4561-85a3-995bcf26c94e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53d2ae23-a15b-4134-85fd-dbfdb5a450b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f6273d2-4ac9-49a9-8f48-63f1fb4dc786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "083e5d28-ca36-49b8-a467-589e1d47e053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0809e82-aec6-4bbd-a5a1-5a789dcef9ce",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c0a5faa-0864-404a-bb4b-57d0782c2f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "376cfd12-5377-4254-8753-6eacd8d5b6f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a227ccd7-0f1c-474f-893f-c527a8cdbed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a5991f0-df85-4bf7-b255-ab3f501a3a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c8afa43-f5ee-4aaf-8cf4-a5a60c7c0ba0",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9256258-c456-4c47-8a2d-c1a4b1f659d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "982e8ee6-8ac4-48ee-9249-0996a18c3ead"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e4cad52-700e-4fd8-812a-1e9ceeeb21b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31515e72-baab-4f62-b9f2-6b8622e4e54e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bfdae33-9a9b-49f5-831e-987cba9cac4a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6745e698-ea17-4cc7-b272-191c9bf3f703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cbcef86-c4f0-436b-990e-0918702a8b3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4a92384-4855-45cd-bc5e-c25e5b988c1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "44ffe790-afd5-43be-872b-90931edf504a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "869a1a9b-46cf-4582-878e-5f9874162fa9",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01c22016-9c4f-4d63-b997-0bb3fd7bfc37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "583c3fba-6048-4276-a05b-993be3b8671f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0eabb0a-a643-417e-8191-af27339139b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6586ca8-27ae-46d6-b904-a2ea2fda2c44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2696ce8-488b-4f87-8647-9358b9fab486",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d7a8475-cc1b-4d28-96a0-d498ceece365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1898f6f-35b6-4d4b-9b7f-7ebf57137a9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e46a786e-c6dd-40b5-9a16-4f5efcbb8232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01bab36a-24c7-4c44-b411-7394da0bd1fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ff1234a-a409-4dfc-93f1-1f5122376ab6",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f811759-9b5b-45ad-928c-d6ce37223943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4e2920d-8db1-412f-8699-78a760bdd6b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1069cb7-1112-44c7-ad14-00826f5e50e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f775c474-f0e9-4e3c-83c6-d652cdf45284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11e4f395-86d5-491e-b9aa-be673b5e29fb",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "683606a5-32d5-451c-b982-d31de37f788f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8137c84-0b2f-4e21-b77f-f24dd2674fb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f59e4ae5-5737-4e77-99ae-f4506622f121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "baa29a84-929d-4977-8516-29d334c6e510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21f2bc92-1bab-4131-b2e7-ed41d7f44baf",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d44bd6b5-b3d1-472d-a90c-f280c1dcaff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02722087-94c4-423d-aefc-b271db3b3aed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44c25e4b-9bdf-4956-93b7-f77c56ee927a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "178a9203-d1c1-4191-a969-c84c75f580f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "659f0df1-b1da-4f1d-94ea-9dcd7611a447",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b352ff7-a3b9-4352-9e73-71de125ba4b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "396097db-1316-4dce-9ac8-9fa00b07de69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0449e26c-7d55-402e-a163-ab193df0b9ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7002f306-e4e1-47aa-b49b-6e6870e19680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d3f7248-b28e-4470-81e2-2265dbce2b2f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f3a8430-f872-4318-8e2b-c6e7f74364b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0f09424-de55-4f18-8c2e-34bd6327c837"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c98afce-cce7-43be-8bc1-9fc411c5becb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61c15776-b8b1-4673-831b-da358fba684f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1383a738-6a64-477c-b643-b98578cf8580",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "893b7107-9f7c-4fd2-a493-b89fa0506ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfcd48c9-fb04-4426-93fd-dc078bb95202"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f307de8-cab4-4740-8963-344c4f63d1d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cad63de0-e99c-4e74-b55d-33a55dcd0e02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "238edfa8-8e9f-4ba7-b40a-cbcc9f1f4a4e",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3eb842f-54b5-45f5-99c8-6989beb2d005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7394ed7a-7d85-4314-87d7-ba7ead184c2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b918a5da-35d7-49f0-adb8-af958b2d763b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b5527aa-0ebe-4e08-9404-16b6197d6b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "112a2b46-9121-4178-930f-4a029e669f59",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ea58210-87de-4112-922b-7502736ccd3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ee6c3b3-77a9-43ac-aa0d-67853b4ecd1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56407a1f-8302-4954-b2ee-6c1d2cdb8748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "07a41501-8c00-49f5-9bdc-def2537b6423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b9ab53e-64ac-4ebd-b83f-e0d126c338a2",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b05e8fb4-bb71-4cbd-8eae-2327b4708606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "413a0c92-2103-47fa-86b1-59f795dfe00a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a605846-ac9d-4c20-8950-6c5ef2d20fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13712fd7-6e6b-4e88-bea0-da8789b63edc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd22b542-7bc2-47c6-acdc-5e1d43110f89",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f19511c2-70a1-406e-bbad-5ed0db331fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad5fc24a-0421-4caa-8e20-80f5a34d742c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfaa8f55-ad32-4974-81a2-3fa04b22cf4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cffe20b-2261-4f35-abbe-875d1a569a80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69fa3dba-fb04-40f8-8aa1-5e9da8384463",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d9d5834-dccc-477e-8ea5-a37691e74794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47ba05d2-b5c7-4bf2-b804-c57df7be2dd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "157aee36-eb88-48ec-93b0-73284b8c06c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f691b0bc-d691-486d-8b40-8263d2893bbe"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4227bdc2-2013-4bec-9e10-dfced47c320b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a7fbc9c9-ff71-4418-a893-a9200735d371",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60dfc111-0c05-43c9-a719-e8399830e685",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f0873100-cdad-4e2d-ae53-1af6e639fee8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "148db3b2-47a5-4b5c-93a4-d7e6fa385ec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fb2d122d-58f0-40f2-8012-929d2079671b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7dbf28cf-7158-4bca-9447-28e10934363b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e88c9f8f-f7cc-4bcd-93a9-b763f89bb940"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7b551f04-cc1c-4322-9207-9a2a77c6ec66",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7281ba6d-6817-44d8-b22c-7fffe4f5c093"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "65c023fa-d75e-4d70-b6c3-0b2f2ec60572",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "199a376d-5f53-4ed4-a638-390b2a904219"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "885dcc5e-96ff-4397-bc6c-00161dcf9bd3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d0ff4f11-dd50-449c-87f2-30307086dec4"
            }
          }
        ]
      },
      {
        "id": "19e7eca9-1bfb-4b58-b2a4-97cbee793f94",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "25f08e5d-1d74-4572-a08f-2470708db20c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "da38167b-c685-41ac-84e3-bb88bf6ce429",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "84b0dbb5-8d9e-4f40-aad0-2ce945ef7095",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e7cdef7-70ce-4b2c-b471-76c9a9e9440b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d32eb949-9072-479f-bfae-1646d78a49e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b34f3544-8474-4335-b256-e4ad45f4b341",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e258cfb-4b0e-4c70-9e4f-29d88a54e3d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c701175d-482d-4db4-9da4-8545249ad4e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fc25296-2f51-4495-9d6e-2d4ae8034782",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00af8ae6-0cc6-4acd-ac81-3505c0f2d3fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc636736-f17a-4258-b538-a4dbebad181f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9e968fc-7011-4333-9f2b-97178b929c8b",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d480baf-13b3-4d26-91e0-db5b7693a2f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fca1217e-8712-4288-b805-bc4ea7a87a7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fbda829-2241-4fa0-9dd2-2d22dbc953dc",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e38b1f2-2245-4640-9f93-61b4d13c1f7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c951e0b1-361c-480f-aac5-945fd30f5bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "febe887d-3949-48be-a3e7-9919ba1b1529",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6438dccb-a4c0-44b8-9ee5-e72c2361a853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f858fbf-48c9-4249-9184-dcfeae467b96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78cf1b61-022a-4954-ad94-bbd3144814f8",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69b246a1-0dd7-42d0-abae-fa79d8ab894b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdb04316-16df-48a9-a54d-db357a0cb76a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dbb71f4-0428-4f09-800c-65bd91701ea0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89acf3bb-71d3-4677-ab49-06663b92328e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29d4290c-20bd-4312-b6de-0bda1dc20432",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e38c2900-bfa7-4dfb-a178-0495fe26de50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb08bd75-4aea-4b25-af8b-8a4f65ff4b7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25cf552f-c232-450f-9a43-93304d11459b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fa75724-2922-44bb-b038-572893ba3186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "188ed748-00a4-4fb2-aa51-efb97df5da61",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "367b4eb0-3f9f-4da7-bae7-f09e723db199",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2b5db74-083a-4753-9f91-0d76ff9d8503"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "813ff659-2bd6-40f6-a005-840967a782bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f416278c-7dc2-4f0c-ae50-a9af925cbd9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dad3dc6-2ee1-4b67-b36f-4328ae56246e",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b703076c-b7a3-4c38-b93b-f2054038d7de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b5616d7-740a-44ad-bdb6-b0145e2882fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de9c0789-4000-4d37-a038-6750c4cfabf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6098daf-cfdd-450e-a099-492ba4d47b41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd430655-d6ff-4d0a-ab8b-9f84c4481679",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa12d4a4-ae8b-4f7b-9bde-c9981c2527a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29b5f7c1-0684-4e89-9738-4e20146cdc46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a5afa37-7214-48d8-b9cc-6c431cd14a54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6508b4b0-e442-4557-8881-231039aed6a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e95eb7a-167a-4f65-a1a9-fe226ae1b17b",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c15d2eda-2186-4678-9b0a-8992f7c00431",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db02fd82-5556-4425-b907-2ad8e180b42d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7574e659-10b2-4dac-8559-3ecd9527b30d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7b79640-ece6-471b-964f-01c3fd083999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ccba8b1-5fc2-4fd3-9eca-ae5d3e1a210e",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b74e6e1e-a3b0-4a55-9c8d-8e50c46c3d70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0cad060-314a-43e5-b462-c567643af5f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdeec995-047e-4d29-b717-a60d83636780",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c68151ba-fe7c-47a1-9336-0bc5db16eb19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6ea58dc-89a2-4597-9cd5-34ec267e8877",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dda91fb8-64f7-4c9c-b1aa-cbee5e0089df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15bceafe-91ec-4bdd-b640-f83935c4484b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7633109f-76b1-4382-b76e-02d4eceb1a30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "728f0053-012c-4135-a20f-3861e4af609e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d39e1f0d-0963-41d7-813c-fb84baeca933",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a269fc2-4107-4b71-9305-41755851ff1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0799dfaa-101f-45fa-8cda-b599fb59abba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d4c3023-80c1-426e-af3c-8f01c59e6bd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d84252d3-6db1-40ac-90d8-97859b231db7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31e19fc2-975b-487b-8ce2-332a66c5c340",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4de199e5-416b-4afa-8e14-250a5e51ccbe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15ba28d8-80a1-4fc1-9ff2-92a368ebe431"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea940d64-4da5-440f-88e3-33cbc241e780",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea3d874a-e56c-4658-a968-b94e317e1cb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5adfc1e0-3fd9-4cca-b115-af194c8f8105",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7d70cf0-b805-45d9-87fc-02a1dbb8aff6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c15792fb-b176-462f-b5a4-828d01c96e58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "568b9c13-7436-4732-afc6-aa41cccbf278",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdbf4918-8c78-4b7d-bc6a-3c6906860616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "981e5f7d-2c6e-4752-a7bb-c6a60f4a8739",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "044b8b79-246b-4c82-820e-aac0b42b39f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbdc6072-9187-4e96-95e2-9675a86a479d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2afb322f-8d27-4ae7-8282-2406258ab89e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5b65dff-2890-479a-be71-91593d22cd26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98520629-02ee-4cc9-bf91-ec3632f6906c",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb58cc41-d09d-4c40-af08-90e28051807e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0a71229-017d-487a-845b-8c4920cb8927"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0c4ce2e-7cd4-4fff-849c-7a543aa74252",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efb60996-3632-4e45-97ae-be0256c3aafc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03eea1f6-76d8-4cb1-9885-b50ff8a512bb",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c02be93-71d7-45d0-be6f-08af3e633d0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74ffd774-9397-4e37-8bf8-279fa1093bc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "424805f9-2b08-4513-94e7-28efaf8901cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41aa88a1-82b2-4473-9325-e8caeb8c4714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a56df0fb-ab4c-46de-8367-57e858160863",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0861fff4-2504-413a-9f9d-3001561abb2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fff7aff-8d82-4e37-8a7b-7d2d3b8734ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d808f4e-cffc-4cba-83d9-16b5779558d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af9fee67-3301-4c6f-8e88-dc3900cedb94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b62fe18-7e29-4b5b-8367-b824894521cc",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "258bbda0-3617-436d-aec1-54909eed469b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9407b004-cd23-4692-97b0-168c43b6d1a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1802ea76-8a5f-4514-a7ae-9cb619eb70dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48f71b9d-b92e-4910-8786-e574e92f4c57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9309cd1d-b8d5-4eb5-91f1-130ac045ef12",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1bd5a34-04d2-4532-89a6-0fa633a7819b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39164936-b6bc-47d8-ad2e-7766b27a94c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e3d4e50-4725-4c29-9ec4-e99f0161f917",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8781918-4795-4dca-8962-89a473bc911d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1700446-7dc7-4957-92d0-69480c005418",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d42f4a4-4d63-468b-82ee-c2498a363609",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e88c12e-3e18-4528-93e8-7f150ce4e20f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "337db84d-5b75-4a81-a5d7-4b7a33aecaa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccea210c-cd86-4556-b842-67309700ded9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9e9faa1-2110-4193-b5c7-6c7cda5da6eb",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adc54fd0-8e2c-43ba-a868-4fd3eb3cf4b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c1d5245-b0a3-4478-96a5-c91195840d30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f0c02bd-1726-46b4-a3ec-8dd48ed446b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3129d119-4ce8-4666-a42c-b247e6e2cde5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a60784f1-9f3a-47b1-aba8-5ac2e9ed9469",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e1e303d-f264-4afc-a771-ea38fcd92b50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "352ac4c0-b4bc-43a1-b4fd-4717197388a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "053688c3-a6d5-4c5c-ba14-45af0d7dfb5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26f91f10-0dba-4945-a84c-2ce16de3874d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a9d9f93-2454-443a-bffa-a79e46243b81",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9628712-1fb3-496d-8df4-602da599e362",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fbb8859-4b0b-4e7b-9e9a-4e957ba2d9bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "166f2222-f0eb-4bff-901e-9f5295b4816d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b48d1fa-e6a9-4c27-93bf-612d4cc88283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "855355fc-5932-409e-9e1d-66ff2c2d433f",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28abb1a6-00c3-46fc-82ef-c461439a97b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79f7c9ce-639b-4f55-abeb-e9812e7adf44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06155717-4ecd-4ed6-9540-724586825888",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c5102b6-f996-4f6a-afa0-47901e2686b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34285765-e54e-4396-a353-b8bab105289f",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "708b407d-6332-45e8-bf3e-3d19fe52bd0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23b76c6e-990f-410f-afb7-583c80f44d93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9c9e057-3069-4412-87d1-c26dcdf8c09a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "075518ec-c595-4790-b5f7-efeb3dd061a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e29c8cd-faea-4b6d-b80b-6672825b629c",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f26d053-fdd9-4990-a640-bb6cdb925bb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b0b177f-5832-4a8c-a34f-3b4dfe48a7e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcca2f44-63d7-4d03-b9a4-26604ebe0957",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae160a1b-b625-4681-89d6-8ba66c600674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19fbaeb7-6eb4-4f67-9058-7abf7bc7e891",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8408cffc-368e-48ef-9fcc-f0f2b8e864f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "262179e9-472d-40c5-8c19-6df645197036"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ec92ab2-cbbd-45a5-8f65-93b3ee59d11e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "885208bd-4447-4af3-96d5-7d8975b5a72a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab012d17-095d-4cae-b245-caa486ef7137",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fcba64b-bc33-47c5-901e-0a4ee6a0fa99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed2929c9-1f35-49f2-a5d7-213d689b4e4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c1fae37-b743-4bf2-a50e-bc7cf47eb71b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ee05d37-05bd-4225-8c0d-6ca5ae8f0c53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59ddddfd-ba28-4891-8641-2bc0d21a9551",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d325a50-911d-4235-9157-037c191afd9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "430be632-91ca-4a5d-9b1a-73e00a717a5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a100520-0b0f-49a7-a5b6-2b896404dc80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8d4ad82-8f15-439c-928d-61db20d1dadd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e100ae48-34da-4f2e-b572-bf83d42e4072",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25e5da33-c83a-46f9-80a3-8698c0895cfe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "600731de-d3d0-4009-80cc-545d8375f72e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff34504d-17e3-4485-8f3c-42a73fc93cf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "361804fd-fece-4a02-9489-d9efe7b115b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e53c2a3d-a995-48a9-ad00-7a3cc13c191e",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "547f1e04-c7a4-4c69-b5fd-f6755b24a25d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df552cf5-8dfc-4ab0-adde-d9e67c66ff36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bc11e38-c4ae-4c56-8aa5-3cf50f136461",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5ea2394-00fa-4b91-bf81-34813bd893a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bb882be-2e7d-46f3-98b4-bd9b682b734b",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c6c7ff4-3a56-48e6-855b-b7f4d06a168a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc97d4fe-645a-4fd3-9fec-ded801cf3a80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e21e636-38f2-41bf-875a-ebeec700df90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1d2357c-53e7-4029-9c93-7f4a19c33c05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59ac667c-4287-4af9-9b3b-6ea12668f803",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aece729-5984-496a-a779-6188d0e4a8a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e4a7592-6c2d-40f8-95dd-4de2ff24437e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3309d485-dcbd-43a0-8139-9ec4aaccebf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c55c273a-6088-4bca-b80a-3b0e9e4f7a3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f82d100-1ce1-497e-8285-ad0ac278f0d8",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ca4f68b-46ff-430a-b148-9447d13e7d2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17bdffef-14fc-4877-bdf9-8f8303959521"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05ce55a0-5e7b-463a-9673-f5a482be5c24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3deeca0c-381b-4326-9939-762295432404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b90a5410-3364-4c37-af8d-0264aa2f1f40",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b25079c-e1ab-4a4d-85e9-d45e88e55975",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "711e3bd8-7e19-4a0a-9747-236d3d3728aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a55d6a7b-fb8a-43b0-ad71-4a35eab5bffc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d260f4c7-cfb1-425b-998b-453f8cbe12ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfcaff2b-638e-4189-8eb3-f5226e93cb0a",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b656da8-b486-42cb-8d63-aea69df13655",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dbbf9d7-8e91-445d-86ff-27b7084dbf09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f73aeb2-891e-4eb0-be8e-dbd5bca01c3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a6c3e7a-acb7-4de6-8777-ef19c63d8ce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b9880e6-806d-489f-ae33-a5b3e953ca40",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a04f7a57-3e41-4af8-a412-6a2b3c93eb27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "936baf62-1ec8-4098-8f05-ba3ad4a18e3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41476e86-ab88-447e-9b6a-625c8c493e84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff11291d-0c78-4639-a9bc-c6a3729e8deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a82a563-a710-4fc0-9339-0cf0d9fdb6c0",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09b3433b-9432-449b-99c0-53b49481cc4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9358ccb1-0240-4102-8722-bf1d2b522407"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5012979-3376-4b73-a390-89a9876cc5ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "871d8692-f23b-4b3a-bc66-c88214d76b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "556a4029-12a5-45d6-b60e-791782f27bda",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da9b728d-f4bc-4bcf-a0bc-2ec128e46ed3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4fc3dc7-b976-41c8-bb1f-e9a136a99d7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ea6896-e9cf-42fc-88d4-608276b5b4b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03d873d8-b38c-45cf-8d49-57846b253ef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "059567b8-8ec0-4f36-8f00-5ef7051be18e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44b92137-a561-4fb1-9a0a-384bebd4011a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbd2d311-747b-4d7e-98db-92eec01a5a59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba830184-309d-4c4a-8c1b-fcbc083ecbb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55435b82-46c4-434e-99a8-233b210cf7ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a0f136b-5d26-4668-95b2-119e676cf5c7",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baad5d9a-1423-4151-97d4-2521b0335beb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed8c20f4-3e56-4ae0-b826-f9e5722c9a86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1b67325-31e5-46e2-a0a7-9bf856acd401",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a38ebb36-e4cc-4e67-bb6c-ea460f9d916c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af9003bd-3749-4a51-926a-83e1abc855dc",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1f13f02-b9fc-45d0-8d9c-607057b4a8cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae17bb84-8956-42c5-9a55-be5b8a4a237e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ded9f5f9-b8ad-4572-a341-656cf29f79bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a415cb82-1b7b-44b9-a6de-322e718ccd1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d300194-34c2-41c7-ab78-118e0ec6dcd9",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f1f4fce-766a-41da-99c3-ef1644199d2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35cdaaf1-f23f-4831-9855-2ac7fcd91d73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3baeb71-77be-429f-ab2d-cd03527395c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cbed5b0-9183-4761-83e5-179ef5e59f62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b92eab0d-bef8-46bf-8d2e-a8ba21003865",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5954840d-5d7f-4c3f-9046-bd7963177f5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b73e6a7-96bf-46d2-95fa-77f212565158"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "754d2f1a-3cb1-41f2-83ea-5a6f453ca31f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a92310a-6061-4a55-abab-aa0fd7f099ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6fa77e9-31ea-4fa6-9acc-e63f9fad846c",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be5c9dc-b6ad-40c7-a140-662df106e9c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce20832e-64f7-4940-96a5-2f071b7abfe4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "168dbb55-0535-4ab0-8c07-c2920d91fe0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e180aab8-d33d-457e-85bb-96e8f0c6614b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ba99769-2abe-4fcc-a990-48dee9e75889",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47471754-339e-46e9-a519-8ca697bef803",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "676eb006-0985-4eff-b83c-a237db34a709"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69c9c83f-f939-4b9f-8606-5353e50d3e5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "461be7a7-322a-437e-b504-067efaab9c72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82a98c2c-81a5-43e8-b9b1-118b61d7aad1",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18a267c9-7bae-4d3b-99bd-2c97b06a10b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "672521a2-f55b-4984-8d0b-57b86bfff95c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6a7269f-3f55-41fd-8c9c-aca88d4e1165",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e30945d-a6fe-4120-8fae-c2efbb613c34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a39d1733-4b98-425d-9e85-66d2a68b59eb",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c694331-6969-4466-83a4-9b26b260177c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2200881d-fe2a-4f09-9834-24ad903fa618"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed452857-6bbe-4b4d-a393-8d98d6eda521",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2569ffba-3385-4f78-93d2-aec796d03791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cc1bbdc-b358-4589-9975-ea9fe81d532e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79282c3f-a214-4516-ada6-ff1290f5822e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76330f11-0933-4554-8565-b94989f0a950"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e46e96c-b91a-4a00-9919-5023f5e903ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a46c1317-f5f7-4b7c-9d90-85e89389d86e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81c44cb9-e50c-425d-948a-ddcb1b0c9d87",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e433f3d-8518-493f-b90a-ce6fd891b01b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb14c3c2-a025-4ddf-afba-fe5bf49f93d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d030a659-29eb-4ad9-af2b-52864050ab64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2c8bf2b-94b7-45dc-a3b4-4ec50bcdac6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08db416e-f8da-4e88-8de1-c759c120fb62",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3f91bc0-04fa-432f-a01b-cab5b011354e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea4c2e73-988f-4120-969c-1598c65983a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00b03b53-3443-4400-8670-cba7899ee296",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8bd62ea-a2b9-4d19-aa05-4a7d42c43536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "761f607e-9137-488a-a534-aa4d1482c6a5",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f79303f-20ef-49c8-bc1c-acdde2cb03a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02181934-78bc-47d2-817b-df4253acc6bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4adbf2bb-892e-4ca7-9660-3cbf0233d6fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "690a77e6-eeaa-48b8-aaa9-81961d31dfbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "698d225e-f8fe-4275-b9b0-e5760e2d3200",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8b4b2d5-e05c-4bb1-9a00-40679006accf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62905193-af43-4063-ab6c-1e5a5a027a05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f58904bf-f8de-498e-8d0a-0b096f05d4d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24926a30-bce1-49b5-ae5c-71a94001b7f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81aaa1b6-7b07-46c3-ba0c-242805889584",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b39c6df8-0648-46b8-8d50-3bf701d133dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1528c799-72dd-4e69-afa1-043e01cded1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d61a179-59ed-4199-96c5-437912059e83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "311641ba-1b63-47a3-b07e-41bb5fa2c056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a67ff44d-9b8a-45ad-9b4e-d959aa8453b0",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f53f606-f1b3-48f5-b334-2a0c46eaed17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50aadd04-8bde-4e6f-84df-b84e3e260841"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01ad07ad-0f17-4652-ab74-9711f23e7db1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63991f36-2e8c-448e-a6d2-6d9f7b10599c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f5b6d93-c2bc-48e2-aa27-2999f7cce82c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76f36a6c-d78a-46ec-a983-a7145d4be2f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2789c55b-7f6d-4791-9366-5644634ba920"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c62bd67b-ae54-41f1-bdf6-9612cd1002e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebeb7616-7557-4cfa-8ea3-9c42a98acae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79d4227f-b185-4993-aa87-2dcb7825d6e1",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b8eb4b7-c45e-40d3-b366-501008bebe2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "430f4105-35ff-4973-b1eb-1948f1233302"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49a202fa-31bd-4d6d-9b99-5b67b064d3af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c36b303b-4531-4a32-89a1-d48b3fdb2f55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e44c7917-f3ce-4da1-ad60-9b30fd4d0876",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab33880a-1353-4423-a476-7149e6d3b6ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ea66cfb-445f-4770-a7b3-3772d380f0a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79a710f5-8cb1-423e-8c82-c2c78a2bef5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5646d14-8f45-4c60-abc3-772c01b7ab3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c651557a-60d0-49a2-a7d4-1f8ced393c6d",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cccabf8-3a11-49e0-9c8e-5081b080ed57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28ccedcb-1b4f-4dea-b9a5-80c36e3b844c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba9f7ff5-389f-4306-9c47-283a39a6d394",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1a41cde-8306-4cd9-8ebe-de1a5fd38d31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e303f82-6102-4145-be08-c3e6bbfe14ab",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0334df4b-7680-4b8f-b977-024a72795b4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66fef655-7342-4a55-8a26-116c03e036a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c24a00-dc62-4439-b0d7-2ca7c57dd735",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72f4c751-7aeb-4381-955d-23a27b965afb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4a890b8-f056-46f9-bb1e-4b82a0dbc485",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54677fa4-456e-4827-a96f-9515518e91f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d25799d0-4802-4af5-a5d3-ef0eaabcf4d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd5c0b4b-df46-4f1d-8387-9012bf2dcd76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdc1f181-144c-4137-9e3e-e658037f2835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "080a3246-18f7-4621-9573-20b7892b132b",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7973a41-c8ab-4c91-8b51-80d3ef1d163a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b7202c4-5537-4612-bf2c-e1c8e6ac1df9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c3de1ae-7b8f-4c3a-bd0a-dfe890440a38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "414abade-bf17-4f7f-b68d-ae6286250093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f172347f-031a-4a6c-8555-96d51c178905",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d7570cb-6d32-4349-a792-1e8ab5a9ab49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8c6d6e1-c2cd-49ac-840d-6ef9cf7a7d2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "684ea803-43e0-4350-9f2a-b5ae943e8d4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8668b3db-cdb5-430f-9c88-37147b922fb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "462a4925-e286-4b7a-8fdc-3b9b154ea698",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7b1d46a-cfdb-47d5-93ff-a2c527861616",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91b20021-ae8a-411f-ab9d-84b22b0e69b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9600899-0122-49c1-99e8-cebe6b8d5f43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ef5c409-ca13-444d-842c-3b9f16604bf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eec15cf4-f8ea-4fb2-aa3a-9c19b9e4adf3",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e896e6b8-5453-433d-bf84-a60086e74cc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2484f4da-4dfe-4ec4-b9a9-c6c930b210db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8e33237-06b1-4368-bb2a-d8a504dc8a4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b16a5aed-f542-48e9-a16c-c5b39cec9e3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3480dc2-d318-4d7b-9d81-4d6e69417174",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aea590b-f89f-4c55-a5bd-c33016356c86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8df3097d-6dff-4ab5-b88b-b1a2481337ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f556c335-768b-4287-b37a-5671e4a9d4d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "077fbc29-8a8a-4ed5-9aeb-35eeffdadf8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "673d0f48-543c-491c-8306-3f5402e6b751",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf07ae2-0cd4-42ad-abf9-9598787975e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd302b28-f7f0-4513-967d-6ed1b168b152"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8a167df-1ff8-4b07-b63b-34875a487e9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb9eb83f-7f58-4a4b-9c2e-9f316c82dfab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b6b8cdf-c6ec-40ff-b7f6-c6d75b6485c0",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec94c218-c69e-4353-841b-8cab4b28c59d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7370b08f-5d58-4bc3-b82c-b15b25b66650"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a176967-5983-4f00-9dc7-1122c1ec5f29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "024dd099-a213-452a-ae58-0678a80c6746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e109db99-1763-414a-a9d9-626e693fda04",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e04f25e9-c9ce-4232-9ed1-eca649c1fc2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e98a77f-f0dc-4a33-80ec-9d476e9c2c5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93f34f54-f860-4fff-bdbd-21c8a7f114ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c670c8a3-77a8-4bf0-a6cb-88e9e99cfe00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02d63701-6b4d-4fd5-9c0e-86e2c8b295d0",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18cf73f8-0db3-4039-9d93-341662ec5603",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e0b0206-7354-4e96-9b0d-5c128ac63540"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "691f82b7-8f6b-4aa6-a226-9fa04401e772",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4fc2266-a5f9-4d96-9086-f7a4ba223c57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05417029-7ce1-4cb4-8c0b-b08832b0ef0e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4eb4df7-b7f8-48a4-b53b-139208c923ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd4dd0ed-17c9-463c-b0e4-0761bdd57fc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "569f0d17-8414-4f51-bc9e-f1594235a142",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f99c6ec1-00a2-44f7-bf68-6f1c22b1b62a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8e8f2c8-5ab9-4583-856b-fe7d7d9daa91",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "605710fe-834c-4b20-a54b-df127ec12bd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7e8bb7c-91f4-4cd9-a69a-fe252f70631b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c63f68d-5a8a-47e3-a365-0a68816277c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20a20409-3fd0-404c-8b44-717ca6b41d67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04f90ee9-5f1e-45fa-b534-c24eb8dc0a0a",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00daa668-e79f-43bc-82a3-617e567cd4e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87fe1fc8-b8b0-4145-a6b4-4667037c1d80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b9d35f4-0f0e-4a1b-8cfe-2c0bcc10ea05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2001ad1-4207-45bc-965f-d62258a73b0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1128c973-9c70-4033-b44c-e091d4bdf799",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b474b2ec-39b6-439f-a339-8271e732336f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2181215-4942-4717-b4bb-dde4b30bfd80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42163caa-f835-4d97-bde9-ca65dc79bba0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fbb8bf1-0794-4ccc-aa18-e084d64dcde9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c963446-6052-48a5-8c81-558b56584d0e",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e6e5512-3429-4336-8f3b-985157b31e41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31c3aa56-b0cd-44b0-bedf-61223a5bf761"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50f85b5b-0e03-4c26-a735-44d8650b06f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddeac882-ad30-43d8-b331-7c0220342128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbf43e23-38f7-446d-8fa6-22253bd90645",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cded8a37-7225-48e3-bdda-8496bf28c729",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7536bcc-3884-49e6-b504-2e6f0a916e70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42ef7336-ce80-4cf4-bb61-e0de07ac5164",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4165312e-b0db-429d-b0fa-b91b71981189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca2a4c02-f984-4a32-aac1-e07b4c1b8293",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0115c98-929d-42ef-a410-83c742df18f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa0191bb-43a0-4512-b9fa-5fbeaafc285a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4f76205-70f2-48ae-9048-d667098198ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddc941c2-8467-4708-843b-57b15c7acc02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60170477-19a3-41fd-beb5-2d705f47e550",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aaf7e80-47b6-4a9a-8d2e-647ab307a73b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d431907-22a3-4517-9018-6ceab2be141a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e287ebc8-e1c8-4651-b42f-23c4df04e548",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f60353ad-7795-4b2a-8af0-b9e53163b1ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "823ef67d-1af2-4822-a67f-d7ef654e1047",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc9b06dc-a11a-4a77-ad04-57bc055aec65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4e5188e-ffff-4671-880b-123bd78d20ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd253c45-5f43-480a-99ca-95ae6c84aeb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24a8cf47-fa8c-4029-88c9-dccd98aebdf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "935e4710-7606-48a1-838e-4af643cbffc9",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60a0ca6a-cad4-46d4-a866-43cce558e6ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea0f21e7-9fd2-4415-b626-524dccff0660"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6460836-3ae8-4e27-85e4-823f65bdd67e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8914ed42-de7d-471b-a623-cefdfc74ca5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19c0f121-de04-444a-b460-912fb7e305d6",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4cbd891-0e55-4f2c-9cf5-9bfc0adf7d83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33541e93-2338-460c-a998-6196269b4ca0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17846e69-62b7-404f-a23c-a380d4680f84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4864c6c0-109f-4407-be08-6541a9180d93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c29119db-909c-446d-b98c-2aa25f56dc15",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8799a800-4b5d-424d-94c6-aa97bde76abb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3048f4e-d4c3-41c7-bee9-d539553c77cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "426c7ae6-67a3-4194-9e31-7a018a0ea33a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0225827a-3bda-4ce0-929d-71e37f388476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61dfd699-c1a1-400e-887a-68aaf3c6a347",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fee4f8c-978a-4c02-a47e-8921470c0cb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77819f8f-1002-4a36-b521-a9e66894c741"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2669929-680d-495e-aea3-2c816c1416f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34a9b6ff-c92f-4e5d-94a9-ccda2d5627fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dc525e9-e0f0-42a8-8f37-b963532100a5",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de51de31-485a-4327-bd4b-3f0e6d62d85e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f023d60-a632-488f-a7f4-9a135c181bba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e8221c9-9696-4b44-a31f-9fd66ded961e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd5dae40-1fdb-4ceb-9cef-9d0d64048e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7fe4c43-d1ee-443a-81e2-e6c8e9902887",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a155d13-8fc2-43fb-b09e-69a4a86218a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8325b54-834e-458e-8937-bac4460e3448"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df6fce21-a164-4dee-8237-e53ad40367d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92ecdc93-f4d5-4f6e-8924-dd2b97902f61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc78b4a9-96e6-4715-b6f5-efa054298676",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07caa0f3-d821-44e3-8fe1-701264cf0069",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed4a5f0c-8f46-48c6-b066-a74e74413b64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ccd776-73de-4d76-8e85-221dd5d57e7e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "383526fe-72b6-4a07-b5ac-1a7e7c710fb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6088ba94-2f13-4609-9c44-0d7e5d59c499",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f738036b-d417-44de-bde4-b5d82b22ba3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7692913a-aa83-48fe-afb9-6c297c042dc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03442cb9-d2c9-4da6-8e9d-4e68cb7968d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d7c8a8e-c4b6-46c5-954f-f951a3088d14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5e43c94-3400-4eeb-99e5-d564e8223a4c",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "473baba5-dce9-4eb5-b07b-b9cd757752fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27e1e9c5-4f3d-48af-940d-844ce24ba3d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd98261c-392d-4226-a135-62afa7b642c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b12d60ec-1ebc-470c-8d0c-82b193856d1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e08251a3-8b38-46ac-b3d5-a384d5614d49",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d91b989a-3634-4e9d-8a36-dbdd0d0cd707",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43e6db78-6171-432d-b877-bc5d00e86191"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4dcfb5e-e306-43e9-9b65-20e5b3a88c73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e340c644-84e1-4995-8c3b-eb7fd2a6c59d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12c95b6f-a3b8-42b0-afc7-b7b2fabae907",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "447fd1f6-cc16-4d56-90e4-3213d1fef0a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "551af362-7ebf-4091-ba03-e055ebab5ea6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fde83598-1c81-4efc-ac2d-dff8cf28c1a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d76e115-7061-478f-b787-936d07d49c59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc5885ce-9c1d-4b3b-a96d-a670963501dc",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "344e8137-721e-46d6-b2fb-2e12cc179f20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c6fa823-e466-4c7d-85ec-5a30c4de2e36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "969ff405-0484-447e-b047-5dfe75c51253",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d121d904-1937-42ff-9b24-33550ace0fb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adb0087e-db1b-4790-b59e-5571342f949c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a3e6b31-debe-4cac-8ae4-d02c70234365",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7707581-6f21-471a-b123-f707830a6671"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6deff79d-e044-4857-8e22-f801d99c9898",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e581664-1148-4ed7-89ab-c2e01ff57710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d4a6496-9560-41a7-afbb-102afa0737ce",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e80a008-d545-4710-b542-9ca2971a474d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6369c987-7c93-4ead-9dfd-db7abeda2a8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bc07223-c6ca-4eeb-bb4a-16fb0565a6b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc1f81cf-b61f-4fe7-8bd4-12ef8f92567d"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "262c7280-1270-4956-b7fc-904f98cda750",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0c9b85e2-75ea-438f-bbd2-f3045f8d5aae"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "919bfe1f-7ad4-4b83-8f13-2816d06fe2b5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "52583234-c7e0-42d4-b2b3-5d71ebe9d122"
                    }
                  }
                ]
              },
              {
                "id": "d0d4d4bf-071e-4e24-b067-0b9450cb02a9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "842ab82e-1b07-4e20-8a48-f1def7031e30",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6504f2c3-1959-4eb4-8e74-4f06af2c769e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "abcedc12-356b-405f-a164-366f1d3cc832"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a56090a-6c08-4061-b21b-d2aff1a978eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "638105f2-7046-4225-b2b5-9a3da99a63ba"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "51c9889f-66d7-4e51-8425-4f7e26a0c753",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0014ab15-94e2-44be-b6c0-84ea6a2b88b8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2f4014a5-73b3-4e20-8321-24d5801928f9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae8b956a-e25d-4c48-be68-f46fbdf4765c"
                    }
                  }
                ]
              },
              {
                "id": "0dd571f8-9fe5-452c-873e-1d231b966a16",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "c062ecc6-8a64-4692-9ea3-8b7e1c7a237a",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ca620ec-3661-426d-8400-4906976e3ee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "14f91c36-d297-4737-b8c4-364e4ab0791b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0e87eab-7738-4614-8720-2e0b1389791e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96912684-5252-46d1-b954-17fba0a5ed62"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "eba23cda-2959-42a7-8db9-2cd1dc5065ec",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bb9d33c8-5548-48db-87d7-24665f684f01",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "65922c6f-1449-49d6-8393-88da65ba48ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "11878873-c884-4a3d-9531-742ed52ea0ac"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "576fcb1d-a266-460e-b24d-aac945061ed0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0c2e0a96-7292-4ff5-9023-916e6c92c1a2"
                    }
                  }
                ]
              },
              {
                "id": "163553e8-0f83-4f48-91c2-d217ca127404",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9b722b53-8498-4c41-b82c-927360cd8942",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2130b7aa-b3b5-4511-bda9-9f73235f5922"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "43ec02ff-825f-4114-9f75-13c116071601",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9a603f8c-138a-49a6-b678-1af65acabd90"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8d7aaca4-7143-414a-8de2-860d6d89bd3f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "86126fdd-8588-4553-8bb5-5c087f60b7f3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "88af03f0-93a0-4068-8104-a705f2b05f6d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6c1b46d9-3141-4d40-83a0-8755eebf7080"
            }
          }
        ]
      },
      {
        "id": "96af8b9d-9a45-4ed0-974c-06d98732e6d3",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "ab34e5c8-f392-4304-812c-720c70043882",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b71fa859-1e5d-4cc2-852a-ec4d9b550672",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c9fb68fb-4e4a-41c6-b6d6-3fb36e72aebe",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfef96e4-8388-42b5-95e0-09d2ec379f5c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b098eaa9-ec13-40c4-8c41-73895336c3e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec682c87-95ee-4cc7-a977-1b524f213d2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f810cdf7-4b3e-4132-8bdd-9c8038802e4c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9ec5d939-b7b1-4bc4-a082-8b150f72947a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ad5a5053-6885-4f65-a2d7-6bcd4f3e1a74"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "72584379-a2a6-4de4-acec-472ae9ff21e9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2280c8f6-4674-4334-940c-c95c8f115efb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ee0ddbc1-60fa-4fec-99a9-1218ecbbdfba",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "dedf41a5-f55c-441b-9352-e104ab5a2a0e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ec75fbd3-1b70-4a15-8fa9-3a208e22524e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "40302a5b-44b7-4669-875f-a1e79fb00bf9"
            }
          }
        ]
      },
      {
        "id": "07d6a7d4-59b3-44db-8e76-36305358774e",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "895aa651-14a7-4ad7-9a10-458799d01970",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0fd82a47-f2ab-4336-bdbb-fa018387c3f5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7ccd4ead-be70-4a75-aee3-f96832ceffee",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaf1ff72-fa58-48a4-bc4f-b2a065adf40b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a9b4e64-26e1-464f-827b-f5bfcf9912e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac03a7f7-0dbd-42f0-8040-6fba11607d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6ebcf931-cc15-48a0-ad1d-b9d3661b944b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b60a5065-3b32-4dd2-8a78-0c503d3508b6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "64e9094d-847f-41f4-808e-240f599992a8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "21da6414-7b1c-45dc-aa89-5283d0976cc1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6af4fbd4-70c7-4754-9fc6-b88abb76b2f1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7e89bdf7-04ae-4307-b262-c1ff49286738",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4627bcec-a8a4-4a97-928d-6c7757127d20"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9843159a-478d-4faf-8b59-8ac8fa6ee308",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "92996ce4-562c-4eb9-8631-76cf5598a9e7"
            }
          }
        ]
      },
      {
        "id": "14618386-d19e-42b6-bcfc-274287e16b0c",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "afa0ed86-bcf1-4d1f-89f4-657fa1bde47d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "80ab68d1-d839-4bc2-a028-f1bd8b219230",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d06f958d-45f5-44ad-8b3f-a36d18a182fd",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d6ff9e1-871d-40b9-b280-3928792dfb96",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4b99a15c-ad9f-4783-8de1-30c38158551d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7d630e3-912c-4673-9110-eb58caee5a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2704d793-cbea-45d5-8477-2256b9304fff"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "34a237b8-60f6-4cf5-b111-b44c325e0088",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dfa3a6cc-8b96-4e48-b641-1b5d85caeed4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6638cfc8-313b-42df-81a6-3333707ecdbc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "12c8ba6d-766e-4d47-b8d7-8e9f072db3b3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "66725f14-9c7f-4b5a-a5dc-4498234cd0fc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "89d04af4-0cce-4c62-89e3-8d6c00926829"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "507b9a65-6534-480b-bfed-e2b3298f8b5c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a1e7bf34-c85b-4380-9701-2658f97d6cb8"
            }
          }
        ]
      },
      {
        "id": "33d0db2f-7935-4f2a-99a5-195478af29bf",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "589a4ecb-7c20-4543-aa06-e37e96eb7c1e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d0d216ad-3221-49fd-b5ae-e75f15c84c96",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "3aaabcd2-17ba-41a5-8d7b-e3d1f83738a7",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7592762f-11c1-4251-bd91-267dc2162f70",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d2b38bca-119f-4eca-a354-afb74ffd3b7f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 141.32142857142853,
      "responseMin": 19,
      "responseMax": 12020,
      "responseSd": 823.5370650294527,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1723509687919,
      "completed": 1723509731787
    },
    "executions": [
      {
        "id": "a9cfc59c-70ff-4baf-902d-7799be609c5b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "ec069958-943e-4194-931e-3b288a91cc12",
          "httpRequestId": "e43bb63a-4dda-48d5-8270-7f1a1287dbbc"
        },
        "item": {
          "id": "a9cfc59c-70ff-4baf-902d-7799be609c5b",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "10439709-58a1-479f-a444-433e930b808a",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 0
        }
      },
      {
        "id": "0853caaa-b2c2-4ecc-8665-d39808d83076",
        "cursor": {
          "ref": "f4f23ca1-088b-49a5-90e6-395201b5172d",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "b7dff372-0d9f-4ad9-9223-81160f3edf3f"
        },
        "item": {
          "id": "0853caaa-b2c2-4ecc-8665-d39808d83076",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "57649537-2fc6-41b9-951c-87108537c3f6",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 0
        }
      },
      {
        "id": "7157525d-7b07-42c7-97a3-9f0b8aa76286",
        "cursor": {
          "ref": "fe2e0c15-7c37-4a48-96fc-177c81334aaa",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "fc2a9fe8-eeb4-423e-9a98-1528c12e5bb2"
        },
        "item": {
          "id": "7157525d-7b07-42c7-97a3-9f0b8aa76286",
          "name": "did_json"
        },
        "response": {
          "id": "852063e0-f318-4810-9d64-1b7a3b08ead1",
          "status": "OK",
          "code": 200,
          "responseTime": 342,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41036a6f-460b-448e-a20b-e0d6f2ce8d90",
        "cursor": {
          "ref": "35908c41-d115-4963-8c15-c0775f3c790c",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0de43bd4-e3af-43a3-a548-40ce28a04956"
        },
        "item": {
          "id": "41036a6f-460b-448e-a20b-e0d6f2ce8d90",
          "name": "did:invalid"
        },
        "response": {
          "id": "7fbfcd06-3f88-4938-831b-db8ccd956ad9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 501,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41036a6f-460b-448e-a20b-e0d6f2ce8d90",
        "cursor": {
          "ref": "35908c41-d115-4963-8c15-c0775f3c790c",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0de43bd4-e3af-43a3-a548-40ce28a04956"
        },
        "item": {
          "id": "41036a6f-460b-448e-a20b-e0d6f2ce8d90",
          "name": "did:invalid"
        },
        "response": {
          "id": "7fbfcd06-3f88-4938-831b-db8ccd956ad9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 501,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "630d104b-5e6b-4d06-af81-5a10cc298436",
        "cursor": {
          "ref": "a6d9dcac-a8ca-4414-8b2f-24347ae0262d",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "dfc5cdd6-915d-4faf-aa87-5090735b6be1"
        },
        "item": {
          "id": "630d104b-5e6b-4d06-af81-5a10cc298436",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "490a3f61-7226-4ec0-bdfe-3f9ac294b373",
          "status": "Not Found",
          "code": 404,
          "responseTime": 56,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cb7a5df-3bc3-43be-aa12-55079542bd2e",
        "cursor": {
          "ref": "892ef36b-28e5-4b45-a519-6654f98c26f7",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "69abdf35-26f4-4cbf-9564-9e1e2b1ace0f"
        },
        "item": {
          "id": "2cb7a5df-3bc3-43be-aa12-55079542bd2e",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "b215ffb6-f387-47c1-b4cc-81e71042b125",
          "status": "Not Found",
          "code": 404,
          "responseTime": 39,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8ad6b3c-8929-4c6c-aa06-c7a4f476a581",
        "cursor": {
          "ref": "92c88adf-8686-49f6-85e3-54807c57a595",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "cdf7f2a0-b44b-4b39-b3a2-acf272513bb0"
        },
        "item": {
          "id": "c8ad6b3c-8929-4c6c-aa06-c7a4f476a581",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "13b22407-e723-461f-abd1-cdf0853c6568",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94c6d342-85a7-4d9d-a779-af66ded5d941",
        "cursor": {
          "ref": "61f2679d-5a25-49b0-bc44-a19fa318c5cd",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e96e5929-d09b-4ebf-8759-035acc7b9367"
        },
        "item": {
          "id": "94c6d342-85a7-4d9d-a779-af66ded5d941",
          "name": "identifiers"
        },
        "response": {
          "id": "bf35bac0-40b1-4ef0-a5a6-931157f47ab7",
          "status": "OK",
          "code": 200,
          "responseTime": 55,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b7f080a-7ca5-41b5-be99-80319837e79c",
        "cursor": {
          "ref": "c644c28e-3445-4b82-a1ca-81686a02163f",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "10f10817-cdf2-4c5b-a62f-8fd32b3e5b2b"
        },
        "item": {
          "id": "0b7f080a-7ca5-41b5-be99-80319837e79c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "08bbf292-e142-491c-a9c7-109271004a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73165c80-feab-403a-96c1-e6d0ee18836c",
        "cursor": {
          "ref": "1a34e8fe-45be-4822-839e-66b346828634",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "895e203f-8288-4d77-a464-1b686f14d342"
        },
        "item": {
          "id": "73165c80-feab-403a-96c1-e6d0ee18836c",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "160a8031-b04e-4318-b362-a2cd4f8a3587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79f829c8-b68a-4c78-b10f-57d8bbdf611d",
        "cursor": {
          "ref": "f8676b47-3b8c-417d-8ea0-a998d430b6ab",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "2138d137-afb2-46ab-a2c3-e1585e5b6d57"
        },
        "item": {
          "id": "79f829c8-b68a-4c78-b10f-57d8bbdf611d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "e0c01d24-8198-4b49-b117-edc1868f3132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b3ec582-f594-46ae-94bd-3e3450dacba1",
        "cursor": {
          "ref": "0fc36c69-890e-444a-81a5-1aa033062c4e",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "fdeff03e-645b-416b-a2d1-86b6f522d60f"
        },
        "item": {
          "id": "2b3ec582-f594-46ae-94bd-3e3450dacba1",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "3fd3ded4-4322-42d5-852c-ab3f35700549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5220921b-ccda-4d1f-9963-f3935425421a",
        "cursor": {
          "ref": "bdcbc7ef-4860-4dc1-920e-58b3814a6c9c",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "d6200851-9cb6-424d-834c-6761062357e6"
        },
        "item": {
          "id": "5220921b-ccda-4d1f-9963-f3935425421a",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "1c78b661-da4e-4096-9f7d-0e10f2a45aba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c4f89cf-00b8-4349-bfa0-bf2bf9a2d499",
        "cursor": {
          "ref": "f43b8daa-8dd2-41b8-8c57-d08183b7bbdb",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "b97d8387-c21d-4a72-b955-718bf9e55800"
        },
        "item": {
          "id": "4c4f89cf-00b8-4349-bfa0-bf2bf9a2d499",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f9a49229-bdf3-4427-ae09-d438819dd910",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6c68fc8-385a-4083-8861-fe076fab936c",
        "cursor": {
          "ref": "fa010940-a793-4fcc-b4b1-45c3dc26427a",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "4eb4ac13-fe5f-40da-a6ec-5843ef7acd9e"
        },
        "item": {
          "id": "a6c68fc8-385a-4083-8861-fe076fab936c",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "062e3f01-cc38-4b20-a7d2-0fbc4391b134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baccc6ac-dac6-4d41-991e-3fcf6a833db8",
        "cursor": {
          "ref": "3d0e31f4-b1a3-4303-83fa-38a08d6f3a80",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "b0fa450f-5541-4380-bb19-7c2b40d2aa5d"
        },
        "item": {
          "id": "baccc6ac-dac6-4d41-991e-3fcf6a833db8",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "c65b2e17-fec5-413e-ad77-fdcf7a82b659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10fda13d-bf00-419a-8a03-58f607115668",
        "cursor": {
          "ref": "bfcd8a5d-4712-4a9c-974d-e73b330ef79f",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "74135978-9d25-4ddb-a374-a18c12b260f7"
        },
        "item": {
          "id": "10fda13d-bf00-419a-8a03-58f607115668",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "7e4a579a-5cae-4a02-8949-98f83f2bbee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "462aec46-b438-47fe-b1d4-2ec9c235d57f",
        "cursor": {
          "ref": "4ccb5de9-78f5-4f98-b4a7-419efe24fb59",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "86403ddb-d923-47c6-9996-97982b1ee013"
        },
        "item": {
          "id": "462aec46-b438-47fe-b1d4-2ec9c235d57f",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "86c82ca5-8a53-4dfe-94d8-c58a60982abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2459fca-d2ed-4741-8cdb-a63e05edc85e",
        "cursor": {
          "ref": "b161f2f4-cc63-4ebb-886e-083d324d96a2",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "4ee3556d-9a80-4d9b-bbbb-3804bbd09671"
        },
        "item": {
          "id": "c2459fca-d2ed-4741-8cdb-a63e05edc85e",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d16915d5-91f2-44cf-829c-35fce2a21cf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac12be4-71e2-460e-8322-df210f538762",
        "cursor": {
          "ref": "5c22a614-29b0-4901-aded-b3bb1ddba34f",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "eaeec3eb-137f-4efb-80e1-3cc0cf759af3"
        },
        "item": {
          "id": "bac12be4-71e2-460e-8322-df210f538762",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "3f575f8d-42fa-4eba-8cb9-1f4142bcb05c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b03235df-c92b-4262-9475-9b35ebb67c13",
        "cursor": {
          "ref": "6bc8b8e6-87ef-4276-b752-f11376ed124d",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "0e238410-3ebd-4ffa-8b04-c5d9a1b59d19"
        },
        "item": {
          "id": "b03235df-c92b-4262-9475-9b35ebb67c13",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "db0451ad-73fc-4748-b4d7-cd91154087e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "975e794b-a3df-4255-b06d-dd2d1a21591c",
        "cursor": {
          "ref": "a3e4aaa3-6e43-4593-8b5e-65591c857f7a",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "efcc3ae3-dd91-475d-942e-c2e33d3d54fc"
        },
        "item": {
          "id": "975e794b-a3df-4255-b06d-dd2d1a21591c",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "fba846b9-b1a2-4a23-b83c-9be3ecf2d34b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a24cce-7cbd-4868-a403-34cdb0fef0cb",
        "cursor": {
          "ref": "935ea961-7dc8-4fa4-82aa-0da8b8fbe426",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "0106b5c1-10e9-4c7f-a9bd-8e2e4a00ccc7"
        },
        "item": {
          "id": "99a24cce-7cbd-4868-a403-34cdb0fef0cb",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "696f9913-0cf3-4519-8d1e-b69b186e6be8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d68be91-0ff7-4309-b202-2dc33622891e",
        "cursor": {
          "ref": "c9a54d7c-50fc-4ab4-b99d-8e44a4be3f5b",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "06eacc71-aee6-4f0f-a30a-97e827f7ded3"
        },
        "item": {
          "id": "2d68be91-0ff7-4309-b202-2dc33622891e",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "d7db9393-7f70-40f0-b304-799c62675f4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f255dd84-f039-4890-9564-1060d4c77e93",
        "cursor": {
          "ref": "552dd56b-70c0-4eda-bb4c-b79d8df005e4",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "595b6830-a02d-44a6-8fb5-52a985ad0680"
        },
        "item": {
          "id": "f255dd84-f039-4890-9564-1060d4c77e93",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "31925d5a-bc66-4bfd-ab9f-6c6496bff49f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bf69e20-2b58-4315-ae11-5bc93aab9d48",
        "cursor": {
          "ref": "23f47ba4-63b0-4780-9961-a08943b8906d",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "4d9ec379-6bce-4e4a-b7b7-aa6bc9ab5397"
        },
        "item": {
          "id": "3bf69e20-2b58-4315-ae11-5bc93aab9d48",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "02c5294f-37de-4e82-a8cb-7d24e3e4b59f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6908ba7e-9d9b-497c-a3fd-344739c3225b",
        "cursor": {
          "ref": "83cd87ec-0b9a-4798-b891-085cc6451f8e",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "36c0a0d7-85a5-4b6c-aa79-4aae52dbc6fb"
        },
        "item": {
          "id": "6908ba7e-9d9b-497c-a3fd-344739c3225b",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "247f2ac7-8dff-4b17-9741-d658ebda69b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96cdfb02-5c04-4d73-a1bd-e8557d9022f1",
        "cursor": {
          "ref": "973cf514-9d0a-4bad-8f33-1e8fb22657ca",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "621ec192-7a94-444f-a0da-300f963a98b3"
        },
        "item": {
          "id": "96cdfb02-5c04-4d73-a1bd-e8557d9022f1",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "9f391061-699c-4858-a485-1aa0113013ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "446083d5-41ed-4cb4-9ad9-b3dd0b9a139b",
        "cursor": {
          "ref": "5dc39f36-a568-448f-94d6-8fecba35c671",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "fc09a8b3-43ed-4cd7-ace5-7a24521ce72f"
        },
        "item": {
          "id": "446083d5-41ed-4cb4-9ad9-b3dd0b9a139b",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "8be83ec5-a7ac-413a-a279-51a8026c5c5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19750311-4c11-4f4e-8ab3-5419f97c2136",
        "cursor": {
          "ref": "799d6835-bd24-4f15-a68a-542babf1c9aa",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "2230d01e-8e2d-413a-af2d-3357b393aeb4"
        },
        "item": {
          "id": "19750311-4c11-4f4e-8ab3-5419f97c2136",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "1aedf480-f8ea-40d4-b326-7b4afd0d966f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25c335cc-705b-4bee-b1d0-2ad4590e0600",
        "cursor": {
          "ref": "88c974f0-d727-46fa-9643-f8e5a847d051",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "de0dae54-4590-4eda-a745-9a475563933f"
        },
        "item": {
          "id": "25c335cc-705b-4bee-b1d0-2ad4590e0600",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "c4db0958-e259-4304-8c48-917702fd3708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cb1bfd7-acea-4b5d-acca-95de8720eee8",
        "cursor": {
          "ref": "820f1865-6a0b-4e4f-ac3a-b520b9accfdf",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "c13617a3-70f8-4b2d-87db-5dc779dd9798"
        },
        "item": {
          "id": "3cb1bfd7-acea-4b5d-acca-95de8720eee8",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "f9b8c3a4-156e-4895-8f58-39dd2802aa4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b86da4d0-316b-4183-be95-f133296d28fd",
        "cursor": {
          "ref": "719f4518-59a6-4fab-8d31-d04239e92f41",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "23f003c5-f739-4143-890a-635ad89f981f"
        },
        "item": {
          "id": "b86da4d0-316b-4183-be95-f133296d28fd",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "c5cee377-7b57-457e-bac9-ca75caef0811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e885c67-7d3d-437d-a6a3-e8b7eda24956",
        "cursor": {
          "ref": "74695010-d860-400d-b972-a02e2d0df08b",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "e0a7d842-1baf-4317-8053-c6eac022cc9f"
        },
        "item": {
          "id": "1e885c67-7d3d-437d-a6a3-e8b7eda24956",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "0cd8a9e3-98a2-40f4-8c74-32b0c1e46eaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c2e9baa-19d9-42a6-8470-f6fba74b22a4",
        "cursor": {
          "ref": "576467a1-1352-4d0f-b2a5-71f1d8aa762a",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "1eb9a1da-77dd-4232-93c6-a852927d759d"
        },
        "item": {
          "id": "9c2e9baa-19d9-42a6-8470-f6fba74b22a4",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "6f0af5e8-cb1b-4c2b-8a30-1fd350f97694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65d1a16d-5f48-4257-8744-f981a9058505",
        "cursor": {
          "ref": "0d1703fc-f07d-477b-bd1f-a94d35d29a4c",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "ddfc8360-99e9-4254-93e5-1caa6ff979a9"
        },
        "item": {
          "id": "65d1a16d-5f48-4257-8744-f981a9058505",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "5c7ae5fb-4ec0-481c-9387-1a015d197892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a73e5d5-637d-4061-938d-3ac4f32dbfd8",
        "cursor": {
          "ref": "2d50434f-5942-400c-8a20-af54c3bf39e3",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "85cc243e-379e-4cfe-86fd-22e8b9b255f5"
        },
        "item": {
          "id": "6a73e5d5-637d-4061-938d-3ac4f32dbfd8",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "ddcb1158-f24f-48ba-b2bd-f5a4de05887c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3b019b9-73a5-416d-b7f0-d0c1e30c873a",
        "cursor": {
          "ref": "3bc03808-2eec-4147-90cd-2556b3a3a5e7",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "117d6d95-bbc0-4af3-a74a-8496993d660c"
        },
        "item": {
          "id": "e3b019b9-73a5-416d-b7f0-d0c1e30c873a",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "aff713d7-2d5e-4d6e-befc-be4e28ff9f2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ad82a91-84c2-42e1-a053-45b2267f51df",
        "cursor": {
          "ref": "3dbcd870-40de-4bcc-b93c-f8a5524beb09",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "8f96fc97-618f-4cc1-8051-288074975942"
        },
        "item": {
          "id": "2ad82a91-84c2-42e1-a053-45b2267f51df",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "2c7b4513-270e-4f24-9689-b71f12f47980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4547de4-add9-4268-8650-cb8951d8bb59",
        "cursor": {
          "ref": "c18b88a7-6d19-4a64-b1fe-ab81e6d181ad",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "9b6b0f65-5f22-4a21-88f9-30b7f394bc7a"
        },
        "item": {
          "id": "e4547de4-add9-4268-8650-cb8951d8bb59",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "2fd45585-f29e-489c-b498-66bc1bdb0924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9dba4e5-9c1c-4477-9588-0e4cc06495c5",
        "cursor": {
          "ref": "9f08deac-626f-41c8-b085-9fd73eb775ed",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "96398719-e9a5-4302-b978-896aff8464c7"
        },
        "item": {
          "id": "b9dba4e5-9c1c-4477-9588-0e4cc06495c5",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "5ebee2ef-393d-4fbd-9a48-3312b3f8abf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "092cf164-42cd-4524-ad72-9c7388ddf784",
        "cursor": {
          "ref": "249cc52f-4843-4177-959c-256ddc0ca690",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "82cb1f1b-fefe-484a-bb60-380ac4b072c3"
        },
        "item": {
          "id": "092cf164-42cd-4524-ad72-9c7388ddf784",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "821de666-24c4-4d47-a720-35369528f60b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6237d649-50af-4673-a7ee-1279fcb5dc53",
        "cursor": {
          "ref": "379d1a7b-66ac-4a98-9308-7f6387a414c6",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "b4736076-e45a-48b6-8383-3b95456a1a14"
        },
        "item": {
          "id": "6237d649-50af-4673-a7ee-1279fcb5dc53",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "02e95cfd-1230-4411-860d-420da424d83f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 123,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a704eeb1-fc86-4537-aff3-7faa85350661",
        "cursor": {
          "ref": "bab03216-367e-484d-b27f-ba7ccc531629",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "af16bdec-4b8f-4ca7-9448-3fff6d072a4c"
        },
        "item": {
          "id": "a704eeb1-fc86-4537-aff3-7faa85350661",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "4c3f52c6-d27f-4516-b9d7-9fd4ac8af0e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d237a6de-ecf1-4df8-8e03-d04c3c98b362",
        "cursor": {
          "ref": "559ea177-df49-4ddb-b740-81fb9bee73f2",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "c16d0144-aa22-4918-af28-0537c93ca895"
        },
        "item": {
          "id": "d237a6de-ecf1-4df8-8e03-d04c3c98b362",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "80e11474-e4c6-4c0a-a6ef-d97f0ead7f26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "899c1a31-5406-4819-a1c7-8b6ffe1f9b47",
        "cursor": {
          "ref": "17d53846-917e-4873-8c73-b37ff4ab1abc",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "66d42d44-4b68-4d6d-8095-391134e64d16"
        },
        "item": {
          "id": "899c1a31-5406-4819-a1c7-8b6ffe1f9b47",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "51f91a7c-3239-44af-85ab-760a1d00b25e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8131e70d-011d-4700-a7fc-41650bbf706e",
        "cursor": {
          "ref": "64e2f89a-ad6e-43ca-9361-d39414d54d4f",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ff3ca259-2415-41af-8bc7-4babb45f1e6d"
        },
        "item": {
          "id": "8131e70d-011d-4700-a7fc-41650bbf706e",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "e610a9f9-1c10-4686-b070-68ae0cce5cc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f880187-d902-406b-ab7d-73787ae33ccc",
        "cursor": {
          "ref": "e0476848-8f46-4c12-ad1d-1d1c4716e203",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "16def877-83ab-45fb-ae9b-991d5ca516c0"
        },
        "item": {
          "id": "3f880187-d902-406b-ab7d-73787ae33ccc",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "854d3849-2fda-4354-956e-c2026087dbc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c73400a4-b793-4135-94d4-79d9c3e2fce9",
        "cursor": {
          "ref": "5e8a7608-5f4b-484b-b4e1-eb71d7e2a6b0",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "21b16576-d847-4950-b397-d30d7eb736a2"
        },
        "item": {
          "id": "c73400a4-b793-4135-94d4-79d9c3e2fce9",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "69edeedd-0b64-4b03-b0ae-a70f2ab1aa64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0964fbec-20ac-405d-a447-d66e67bc55bf",
        "cursor": {
          "ref": "f8044ac0-86b4-4bc2-bb1a-99d5a2dee9ce",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "13dc0c9e-ec45-430c-8dad-93ae70dbd063"
        },
        "item": {
          "id": "0964fbec-20ac-405d-a447-d66e67bc55bf",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "de87f059-6ab7-4539-8511-7840731310b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8578bd0b-7eee-495c-8846-15f34054ac8e",
        "cursor": {
          "ref": "01f82185-803a-4b23-b835-e696653eeb2f",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "1dceffc1-8415-467f-969d-57cd2348b4da"
        },
        "item": {
          "id": "8578bd0b-7eee-495c-8846-15f34054ac8e",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "b43179d5-629e-42bd-8680-216afab1cb8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22b6a9f2-8d98-4e1a-9b32-3267ab86e215",
        "cursor": {
          "ref": "33d4cdf9-4380-499e-bbe9-fd97655ed76a",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "8cb660d0-722c-4a01-9faa-facf629dae93"
        },
        "item": {
          "id": "22b6a9f2-8d98-4e1a-9b32-3267ab86e215",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "8b04726f-5e72-468d-ba0b-b338e7358604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bc47763-c013-4181-ad76-9e332c74d557",
        "cursor": {
          "ref": "288c96f2-9799-4d98-af16-095d10e06eea",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "a85120cb-56f1-45eb-aa5e-a37b2962e077"
        },
        "item": {
          "id": "3bc47763-c013-4181-ad76-9e332c74d557",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "636e7377-c541-4bb5-b494-67b69e9c9340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc945b6c-1b94-4ec8-9d64-03ac6e392aa6",
        "cursor": {
          "ref": "09c35d34-f489-4392-8730-d0cfbe022907",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "f936df40-bdb5-4ff8-a81f-9880336ac327"
        },
        "item": {
          "id": "cc945b6c-1b94-4ec8-9d64-03ac6e392aa6",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b215ef88-e6bf-477d-858f-7fc8893acb2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf851a5c-47bd-4d5d-b078-d77187307f01",
        "cursor": {
          "ref": "d7132e9a-3da4-4249-a0f8-ca71ac0a4102",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "e5d5ca3c-7085-40c3-b8c3-fab5aef3e05e"
        },
        "item": {
          "id": "bf851a5c-47bd-4d5d-b078-d77187307f01",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "1f32e478-6be4-4af2-b7cb-89167cdd3a0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec7890b5-bdf5-469e-9ea4-9bb87f6ee68d",
        "cursor": {
          "ref": "95695fbe-ae33-4fe0-9aba-91595e3dbf62",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "cadc913a-7048-429a-b2b2-7ed9ac62c181"
        },
        "item": {
          "id": "ec7890b5-bdf5-469e-9ea4-9bb87f6ee68d",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "b5fd2ca0-b7ad-45c3-8f4a-55ee0a42c6e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6063dbb9-d6a3-4e9b-8bdc-e97e4f3d1f25",
        "cursor": {
          "ref": "521627d8-ae5c-4143-8d50-5738f31b5e41",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "0895755f-f4eb-4a12-9c4c-ab5c43cea432"
        },
        "item": {
          "id": "6063dbb9-d6a3-4e9b-8bdc-e97e4f3d1f25",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "0a1e4861-1c32-4e01-9c8f-44380ef35b52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a1a4a43-cb19-4a75-9ab6-8afcb310111b",
        "cursor": {
          "ref": "5765cb66-fdcb-425a-8dca-a56aee18ec7b",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "84f58866-9477-4635-85c8-a4af3982c732"
        },
        "item": {
          "id": "6a1a4a43-cb19-4a75-9ab6-8afcb310111b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "aebb6fc0-1b53-4676-aba0-8b51dc47bdfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83e5c3f5-abb8-42e2-892c-27a50c3816d6",
        "cursor": {
          "ref": "984cd384-6c90-41e0-b4a8-d7e495971c3b",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "9edec0f1-33b6-4a63-b981-05c25e2790b0"
        },
        "item": {
          "id": "83e5c3f5-abb8-42e2-892c-27a50c3816d6",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "59d406fa-9259-4ed6-99df-bcb0ccc74827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba2bb3d1-b7c8-410e-ab00-03b41ef24357",
        "cursor": {
          "ref": "50f64bdc-b44c-442d-a9d3-9cce6ba1c81d",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "d08649a8-68b7-4314-ade9-5b808764b592"
        },
        "item": {
          "id": "ba2bb3d1-b7c8-410e-ab00-03b41ef24357",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "c306f96b-4b80-4f5a-b7f5-206691277eb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cce8edb5-089c-48f3-9b7d-4eac5a90979f",
        "cursor": {
          "ref": "083778a8-4362-4671-a12a-ab32caac5dfa",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "21eca4d8-9136-4b18-b357-5e47af9439fa"
        },
        "item": {
          "id": "cce8edb5-089c-48f3-9b7d-4eac5a90979f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "27ab6064-42d5-4449-9697-ff92d794d006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78e39b73-d45a-4f1d-b6db-d5b12fc133c3",
        "cursor": {
          "ref": "0b8bcadf-03d9-4f20-81cd-aa119a0e95ef",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "b1e72591-1e29-4827-805b-caece7080b69"
        },
        "item": {
          "id": "78e39b73-d45a-4f1d-b6db-d5b12fc133c3",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "0d6aa0b0-4945-4510-a466-7cfc486e6b10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ebcf4c-fd9e-41ac-9573-aebe227aa618",
        "cursor": {
          "ref": "73772a56-e607-4b5a-bce2-b77b8c3ec367",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "ff3c6780-3f87-416d-9257-3eb8b25bebfd"
        },
        "item": {
          "id": "c2ebcf4c-fd9e-41ac-9573-aebe227aa618",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "54525388-ee2c-41c4-b2c0-4fe2464c7c9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87d117a3-673e-444b-b12b-9b29d4db8cb5",
        "cursor": {
          "ref": "d7c60f5f-3904-4dc2-affd-aa14012357bb",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "da6e0efc-2ee6-42f9-a1a5-50847e92ff37"
        },
        "item": {
          "id": "87d117a3-673e-444b-b12b-9b29d4db8cb5",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "4d595431-286c-4eb6-95fd-f46c87f6515c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c96ea2d6-00a9-4227-a406-1d1ee6c43183",
        "cursor": {
          "ref": "b129fdba-c750-4704-8136-08301cd6357e",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "b4ed4620-4d40-4129-9bfd-91f8b8b256f9"
        },
        "item": {
          "id": "c96ea2d6-00a9-4227-a406-1d1ee6c43183",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "0841c626-38ee-485f-a373-7c4cbfdf5edb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "018a5daf-2437-4b12-b447-340bbde2a456",
        "cursor": {
          "ref": "8b7856c8-fc00-46e7-a24c-9d078d5afae3",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "49651680-e9a8-4642-ab22-ebaf335abfba"
        },
        "item": {
          "id": "018a5daf-2437-4b12-b447-340bbde2a456",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "0a5f6a2e-724e-4eba-97ae-7b0c8f3b16e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32177fd7-c0ef-4e19-b078-6a177f1496ed",
        "cursor": {
          "ref": "2d67e31d-73cb-4e91-a5c6-e1abb3008594",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "ef46899f-af8b-42e5-bb38-232440fe8a8b"
        },
        "item": {
          "id": "32177fd7-c0ef-4e19-b078-6a177f1496ed",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "a7ed5736-82b0-41aa-a596-f05d21359323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b6bcdd-c8ac-4bff-b92e-0a69dbe4eef9",
        "cursor": {
          "ref": "4068fe99-f260-49cb-b32b-cfff5aaf740c",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "697eadb6-5efb-4f2b-ae6a-2ed4cee0d909"
        },
        "item": {
          "id": "f5b6bcdd-c8ac-4bff-b92e-0a69dbe4eef9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "528768a0-ab32-44cd-ac45-dc59d67dfc84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "530d9cfe-f62f-4038-995c-4287903ccff0",
        "cursor": {
          "ref": "74bef144-9770-4dd5-9590-d0c389e4f813",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "6b0f75ae-381a-497f-b609-bd04a654db19"
        },
        "item": {
          "id": "530d9cfe-f62f-4038-995c-4287903ccff0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "95fac984-589b-4561-8b51-7adbcc918bbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdbecaeb-fd9f-4f0b-b29d-ea9d9358a23b",
        "cursor": {
          "ref": "ae7402cc-ca0b-4639-88b4-914a72917fa4",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "15ce4900-4e84-4282-b142-135db96d9cc9"
        },
        "item": {
          "id": "fdbecaeb-fd9f-4f0b-b29d-ea9d9358a23b",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "bbc0c36a-e2e9-4f1a-b9e6-30c75fdd7015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb5b5068-3b04-4700-a7f8-7c1fec563344",
        "cursor": {
          "ref": "ac756b27-b85b-4986-ae51-f1485f54e865",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "e78f82ce-7031-4f3a-8fc2-eed3cb55ea5a"
        },
        "item": {
          "id": "cb5b5068-3b04-4700-a7f8-7c1fec563344",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "8520430a-d6ff-4288-8b01-6b8094b752c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb759523-da4f-409c-8f8e-f6f6c50de903",
        "cursor": {
          "ref": "08201dc5-826f-48c1-83dc-991e71416bf8",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "2eb174e5-9b6e-4952-86a4-cdba1c3457f6"
        },
        "item": {
          "id": "bb759523-da4f-409c-8f8e-f6f6c50de903",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b71a30d9-cf7c-47ad-be3c-79d921be4fac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17910fb2-d9c0-4707-84ba-b4b837c38e0e",
        "cursor": {
          "ref": "56f65787-a84b-4e8e-831e-29db3e21efa3",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "92087cf6-fcaf-4c0e-bfcb-157a234461fb"
        },
        "item": {
          "id": "17910fb2-d9c0-4707-84ba-b4b837c38e0e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "7cdfc425-e90b-4b28-9841-4dbb18902dea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7250368a-a614-42c7-be67-95571ce973a2",
        "cursor": {
          "ref": "c6da2c32-4128-41ea-bb35-e7e71e8ad16f",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "8e054e01-b595-4b90-8d2d-e96572985801"
        },
        "item": {
          "id": "7250368a-a614-42c7-be67-95571ce973a2",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "c9eaa070-d75b-4d39-9fe3-9f9c21222745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "426f71f2-711a-4171-a72b-90517f485a32",
        "cursor": {
          "ref": "018bc730-255a-49a4-9cd6-4142dc27c4ad",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ae6b8175-a031-4a8a-ac37-2eceb55f0e8a"
        },
        "item": {
          "id": "426f71f2-711a-4171-a72b-90517f485a32",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "a272076f-9995-4401-9292-6b6f4d65e8b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac491ac8-7ba3-4980-8831-2a8b6fe95713",
        "cursor": {
          "ref": "727d58dd-a1f5-4bc9-bffd-74a60ee0579a",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "136bfad0-81de-4d1d-8125-fa2e28bb57bb"
        },
        "item": {
          "id": "ac491ac8-7ba3-4980-8831-2a8b6fe95713",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d12129dc-c3e5-42fd-8873-4bc50745e0dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6add7af-a4a3-40af-a260-471e1cf0834a",
        "cursor": {
          "ref": "bbc2b95e-266f-4a7b-8ef3-7293c76ff9c7",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "7e560a2b-7b6a-4059-89e4-8676e8b93999"
        },
        "item": {
          "id": "b6add7af-a4a3-40af-a260-471e1cf0834a",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "4aac0d1b-e21f-4c99-85e7-abc1ebffdf36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1783af6-577c-4fa3-b65f-e92fe5bd5b74",
        "cursor": {
          "ref": "896115ec-dcd2-46c8-ba0e-1fecace10080",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "a89b4035-c43c-4b7d-ad55-f070be8b58b1"
        },
        "item": {
          "id": "d1783af6-577c-4fa3-b65f-e92fe5bd5b74",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "d9b0845a-1568-4965-9282-26e838506946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8308dd1-f00e-4451-9b2c-53f56c1eec9a",
        "cursor": {
          "ref": "b3287241-1948-465e-b56a-4e8a997e398c",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "9c71972a-50ff-4610-b24e-b87bc00c0570"
        },
        "item": {
          "id": "d8308dd1-f00e-4451-9b2c-53f56c1eec9a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "0f69ca63-f9f9-41e3-b9b0-64757e3e12eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cff54722-ee91-4f08-bad5-98118ae47c63",
        "cursor": {
          "ref": "78f26469-b376-4189-b968-dfe66613bd90",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "78aa87ca-d80f-4ff8-beea-56ed4db19a60"
        },
        "item": {
          "id": "cff54722-ee91-4f08-bad5-98118ae47c63",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "1ef8540e-41b6-4214-ab8c-309db8b7fca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed719b21-3546-43b4-8d8a-c636133bf994",
        "cursor": {
          "ref": "11ae9348-61d0-4717-8173-04488e9bbb98",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "f813a1f4-f2ee-4a6a-8071-0719bb0f2843"
        },
        "item": {
          "id": "ed719b21-3546-43b4-8d8a-c636133bf994",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "7c3a39be-bced-424f-9fa1-ac0eb51ed61d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2acbebf9-5ce5-4aca-a826-5cadec046cba",
        "cursor": {
          "ref": "689b4b00-9bec-4b48-920c-018fae903188",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "e939b836-4467-4ce3-890f-bfe8d05b3018"
        },
        "item": {
          "id": "2acbebf9-5ce5-4aca-a826-5cadec046cba",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "29ff7f39-fe1c-468d-8fa4-f1645e6f6d2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa2a730b-177a-4d60-9941-6d35421753bf",
        "cursor": {
          "ref": "f9a81af6-d292-4d62-ab96-ab565a0d6dac",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "56267a94-e470-4131-89e0-b7f4f6000ad5"
        },
        "item": {
          "id": "aa2a730b-177a-4d60-9941-6d35421753bf",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "295d0335-4831-42e7-bafc-4b0947596004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f034e4f7-f194-4656-96be-177862cbd3f0",
        "cursor": {
          "ref": "aa5671ea-7fc3-46cb-9b15-e1e2d171217e",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "c6d95e3a-a529-4dab-9c6f-e8af8fbd6519"
        },
        "item": {
          "id": "f034e4f7-f194-4656-96be-177862cbd3f0",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "037077b1-51a3-4f7b-976c-71eb0a779e51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7701f57e-717d-4bc2-a64e-0b4d89083c55",
        "cursor": {
          "ref": "216cbc40-fa90-49e1-ae78-70cdbafa6f07",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "3b0f2190-6e17-4d2c-9d71-7110db3f68ab"
        },
        "item": {
          "id": "7701f57e-717d-4bc2-a64e-0b4d89083c55",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "c967cffb-5419-4434-a619-50a2a096d3fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12df4ab3-8344-4022-ad0f-36cb1744a942",
        "cursor": {
          "ref": "aea0859a-dec6-4837-a7b6-13ab32d6b00e",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "25994f8e-a8f0-4403-863a-f2fb09f59383"
        },
        "item": {
          "id": "12df4ab3-8344-4022-ad0f-36cb1744a942",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "771d377a-569d-4df1-bfdf-22cf7b9daa89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "686b61eb-eb07-40fb-943b-965735e1f4d6",
        "cursor": {
          "ref": "d3727592-e3ba-4100-8f41-561618335e26",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "ff0fd829-6e62-43e8-a2c1-396245d04386"
        },
        "item": {
          "id": "686b61eb-eb07-40fb-943b-965735e1f4d6",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "0636ebb9-1920-46bf-b0c0-d8437f0f7226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b6b9e9b-1229-41da-bd42-89994238509d",
        "cursor": {
          "ref": "5b2cdadf-536f-466b-b2af-e7a058a2e4ce",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "03dbb632-04cc-4827-a6fa-9aa08281b6fc"
        },
        "item": {
          "id": "7b6b9e9b-1229-41da-bd42-89994238509d",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "4a0a939e-a4b8-4ab6-965d-b0fd933ce9a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af6ae0a6-2334-4580-87ac-e642f5160e69",
        "cursor": {
          "ref": "18dc00cf-02db-45b7-9bc4-a6368f907512",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "504cc4e2-11d1-4a98-86bb-4482a4e02c9b"
        },
        "item": {
          "id": "af6ae0a6-2334-4580-87ac-e642f5160e69",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "f75a8f98-f60d-4c54-b62b-0df331f1ab1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d916da-494b-485b-ae41-62d1579da414",
        "cursor": {
          "ref": "ee00c6d4-1533-4667-93af-c03f04e87aac",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "915e1f98-a555-41dd-9674-9797ca08ec31"
        },
        "item": {
          "id": "d8d916da-494b-485b-ae41-62d1579da414",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "a501a98e-8967-424c-b8d2-285880a716df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deb8c3f3-a40d-45d9-9d76-860b1d66a859",
        "cursor": {
          "ref": "d3c81781-43c8-4b8e-9d65-1b32bbb9f14d",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "5fb0398d-35e2-4f4e-b6cd-f7ebcdec0d87"
        },
        "item": {
          "id": "deb8c3f3-a40d-45d9-9d76-860b1d66a859",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "a091f92b-250d-4dcf-818d-f786f34a8e94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84df3059-4b6f-41a2-b18b-fed67590f7bb",
        "cursor": {
          "ref": "21788196-2fdf-47a5-9cd0-d5e2a5ef527b",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "139680ea-d882-45c5-8ac3-082cc0309466"
        },
        "item": {
          "id": "84df3059-4b6f-41a2-b18b-fed67590f7bb",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "f5ae86e0-ee50-46e4-996d-9d4403aeaa55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c72186ba-8043-4674-91f9-c743eeb4e34b",
        "cursor": {
          "ref": "99c8a526-f5ae-491c-accc-9f3ebc801498",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "92113812-5495-4d81-bdc8-12d49e1f0636"
        },
        "item": {
          "id": "c72186ba-8043-4674-91f9-c743eeb4e34b",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "027aef6f-6732-43fb-9460-88de5ad5cae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96281008-64fa-4df6-9442-984b2d11dab6",
        "cursor": {
          "ref": "f085c43c-aa38-40c5-b5e8-41f87c1a1102",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "17af8b65-d099-4620-8cd8-f00625d6eba5"
        },
        "item": {
          "id": "96281008-64fa-4df6-9442-984b2d11dab6",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "416278e1-1aea-41c4-b110-a37213caf9fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c6e6cba-b482-4645-897f-2ceb75d8364a",
        "cursor": {
          "ref": "c1318057-0374-49a4-aa64-35031ddde073",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "9a3ba963-0c0a-48af-93ba-ac34bb8db170"
        },
        "item": {
          "id": "7c6e6cba-b482-4645-897f-2ceb75d8364a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "b0fdf064-89af-4313-a909-b03297fb04ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fce1a4aa-d900-48bc-9697-176f24f59ea8",
        "cursor": {
          "ref": "da3350ea-9da9-4ab1-8979-055730de890f",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "7bcacd25-063c-4b71-a451-3faaa731c222"
        },
        "item": {
          "id": "fce1a4aa-d900-48bc-9697-176f24f59ea8",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "569570d4-4c4b-441e-965d-b0c11d6ab681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "170fd264-7919-4da5-b1e2-91526117badc",
        "cursor": {
          "ref": "83b437c8-f67a-420b-a4ae-f0e352f3cd54",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "24369b96-0fa7-455d-8895-41f50bf75a72"
        },
        "item": {
          "id": "170fd264-7919-4da5-b1e2-91526117badc",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "584d4163-32a5-467c-b4ec-231174249b2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "858afec8-16c6-499a-a23f-408f2da631d0",
        "cursor": {
          "ref": "31da347a-69f4-478b-a7f0-808e29db9ca1",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "0a29f74a-b78c-4492-a5bc-bbfa18570c45"
        },
        "item": {
          "id": "858afec8-16c6-499a-a23f-408f2da631d0",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "bac51a03-363e-4862-b8cc-4e736e3d4657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a8600d-9c6a-4b95-be08-6d1eb8061809",
        "cursor": {
          "ref": "67607d79-c1f9-41e3-a26a-f93854338be1",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "4eab3117-b956-4f99-9b48-f3043beafa98"
        },
        "item": {
          "id": "c0a8600d-9c6a-4b95-be08-6d1eb8061809",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "f8293cab-2405-4e75-9f95-b56a11a290b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c16d0679-9f3e-4e4e-a5d0-76b3a4310b9a",
        "cursor": {
          "ref": "a559c198-74d4-4b16-a068-b4bedc0a457c",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "c8d4e731-1775-47ec-8483-d088c25833ef"
        },
        "item": {
          "id": "c16d0679-9f3e-4e4e-a5d0-76b3a4310b9a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "eedefdda-879e-4f3c-9012-bcd7422d3e52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8df2b056-608b-40d3-9fe1-e4481b3d2874",
        "cursor": {
          "ref": "70281eba-f937-45a7-b917-579cb55b10b3",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "4730cd6d-fc1e-49f7-98cb-9cba53fb28e5"
        },
        "item": {
          "id": "8df2b056-608b-40d3-9fe1-e4481b3d2874",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "da6cdff8-7d04-488d-8b50-79991d5b5a6c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c13aadd-f183-4eb2-b492-1e8e9c4ae3cc",
        "cursor": {
          "ref": "45d018f9-9fa5-464c-8fa7-55728cf3fd9b",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "573777e9-8c9b-4b6f-97af-632b0e0af6cd"
        },
        "item": {
          "id": "6c13aadd-f183-4eb2-b492-1e8e9c4ae3cc",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "084c5248-79a3-40d4-a640-6290f668076a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "ee43b454-2668-415c-87de-7944046c9fa1",
        "cursor": {
          "ref": "8a8b9f36-6b6a-4d28-9810-69f669f2072b",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "09104c58-4ab3-45ec-a027-f181d20694ad"
        },
        "item": {
          "id": "ee43b454-2668-415c-87de-7944046c9fa1",
          "name": "credentials_issue"
        },
        "response": {
          "id": "22a5faac-3862-41d0-a455-fa42c5f2d30d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "78aaa239-5392-47ae-9d3b-c7d9a77c0857",
        "cursor": {
          "ref": "b7324106-e78e-42cb-811d-a7e696a346dd",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "4970137d-23c5-4522-ad1c-49015b724504"
        },
        "item": {
          "id": "78aaa239-5392-47ae-9d3b-c7d9a77c0857",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "65e29172-086c-4673-99ee-2c548472ef8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "9a52b205-e902-4969-a1f7-bf8c232036bb",
        "cursor": {
          "ref": "691896b4-c47b-4928-badb-9ee8b4f23728",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "439cd56c-6cab-47d2-b5e8-45ec25d1ec1b"
        },
        "item": {
          "id": "9a52b205-e902-4969-a1f7-bf8c232036bb",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "e8c4fc2b-f905-4f62-8ef7-2fe24ab332a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "ca405d3a-4ecd-4401-8ac4-a579b14e8443",
        "cursor": {
          "ref": "0c9716d8-3b26-42f0-896d-713e33401676",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "def4e3e7-8888-4978-98f8-07e95a38ac70"
        },
        "item": {
          "id": "ca405d3a-4ecd-4401-8ac4-a579b14e8443",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "603d924e-b33e-4806-a98a-16b853369d81",
          "status": "Created",
          "code": 201,
          "responseTime": 12020,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "55b40515-1c7c-487b-a1ab-49763325184d",
        "cursor": {
          "ref": "97f7ca5b-c376-4e66-896c-ed1d7c072bb2",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "636bddc8-cadf-4a4a-8f61-976c1fac040d"
        },
        "item": {
          "id": "55b40515-1c7c-487b-a1ab-49763325184d",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "f101a8f9-0bea-4de4-a062-3028f7040b9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "0059aceb-0d0c-4b94-a8e6-035ec4481015",
        "cursor": {
          "ref": "dd6dcdf4-a7d8-4e61-b287-e72c2e995b90",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "a0c0012b-b715-4fbf-9dd9-4d32d3aeb222"
        },
        "item": {
          "id": "0059aceb-0d0c-4b94-a8e6-035ec4481015",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "8f5dc094-1388-4656-8930-31ced6a77abb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "13cc9699-f76e-4e35-8c39-38d6adf02689",
        "cursor": {
          "ref": "14a09ab4-0bf4-4387-9032-8ffcd683b870",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "d512580f-727b-480f-940a-53c95d157d92"
        },
        "item": {
          "id": "13cc9699-f76e-4e35-8c39-38d6adf02689",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "99d26a62-4f0c-4fab-ba5f-672e7747ed6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 725,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "117dabfb-7a23-4dc0-94a2-021963571ad2",
        "cursor": {
          "ref": "e3c19282-51ad-4739-93d0-a7be9ff103b4",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "9f0e7ddc-2b06-48c2-8aa8-040a51a18a0c"
        },
        "item": {
          "id": "117dabfb-7a23-4dc0-94a2-021963571ad2",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1b79f1ba-fada-48a8-bfcd-10644b123361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c925ff-2762-402f-bbb2-7ca26f3ac0d9",
        "cursor": {
          "ref": "303bc2df-878d-4141-8a22-c0dbc8190a4b",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "6eebb89c-fc33-4eb9-b4dd-bc5424825977"
        },
        "item": {
          "id": "f7c925ff-2762-402f-bbb2-7ca26f3ac0d9",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0897d01c-1238-4ba7-a4ca-c5c82545e862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09c3ad9f-af2d-46c0-92ea-0f9401b23cbd",
        "cursor": {
          "ref": "16f91926-482f-4a76-9331-c05915c3849f",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "17e7e892-5050-430b-ac74-064825efd541"
        },
        "item": {
          "id": "09c3ad9f-af2d-46c0-92ea-0f9401b23cbd",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f97fa5c6-e7e2-442c-9418-d9eb34281874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3db27cb5-1b34-425e-8c69-3c89ad1442da",
        "cursor": {
          "ref": "976a2d61-1d39-4779-983f-73c4841aedcb",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e994e4bc-095d-48a9-af3b-a7acffc2c260"
        },
        "item": {
          "id": "3db27cb5-1b34-425e-8c69-3c89ad1442da",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e75d8908-afa9-4218-bcfb-b409fd790028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17a601cd-2f15-473f-933d-79f4be152c80",
        "cursor": {
          "ref": "88dda9a3-82a6-447c-85fe-56e0e93b6ceb",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "da4f0abc-d2a2-48a7-be16-e519146d1b1b"
        },
        "item": {
          "id": "17a601cd-2f15-473f-933d-79f4be152c80",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "24f188c4-4482-4822-91ff-8649f8bac425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54bc4e88-f43f-4f0b-a70a-e4e91b562d84",
        "cursor": {
          "ref": "4243b93e-d56e-40ca-9491-651104058cfd",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "a2f2c30d-4c9e-4a7b-9337-0c61fcb54852"
        },
        "item": {
          "id": "54bc4e88-f43f-4f0b-a70a-e4e91b562d84",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c2a0a917-bedf-42cc-8821-0314664bd5ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "733983f8-329b-4097-81ff-447ec8385fb3",
        "cursor": {
          "ref": "7efe9333-e01e-4e97-967a-0e082be933ee",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "5e0a5325-066a-40f7-8ce3-4a296fec1826"
        },
        "item": {
          "id": "733983f8-329b-4097-81ff-447ec8385fb3",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "02918889-667f-4975-8924-c6c769e35bf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e698f55c-a176-4166-8e97-5a56d35bf1b4",
        "cursor": {
          "ref": "9efd42ae-3830-4a33-99ed-e4ae2999a983",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "f7dabe22-7817-4104-92b8-8ea949c67cec"
        },
        "item": {
          "id": "e698f55c-a176-4166-8e97-5a56d35bf1b4",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e6440037-843a-4f2f-bd70-d0371b878bd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53e49144-31a1-4462-b590-2e239af9e2cc",
        "cursor": {
          "ref": "b3b36c16-df35-4bfe-9222-e544431a2c7b",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "5f564421-c4a4-47b4-83e0-1f999194701b"
        },
        "item": {
          "id": "53e49144-31a1-4462-b590-2e239af9e2cc",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "52088cc3-0092-4926-8a7a-09b54d605756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e07803d-1801-488f-b6d6-e465ef604f83",
        "cursor": {
          "ref": "cb7fc84c-5db0-405a-b19f-ff9e484873e7",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b61da431-958c-4548-883c-5138d3d67714"
        },
        "item": {
          "id": "8e07803d-1801-488f-b6d6-e465ef604f83",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b1da2210-a189-4614-9616-832d4b5eda5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ee4e6e0-56f9-4bea-8452-b94338669e37",
        "cursor": {
          "ref": "d8e2f9d7-f881-4742-95d3-0c7559765031",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "262a951d-95c5-47b6-afc5-dc77cb5a53c5"
        },
        "item": {
          "id": "1ee4e6e0-56f9-4bea-8452-b94338669e37",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1c799fce-0cf4-4006-90f9-f54c827d0793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "852945a4-c06a-4597-abbc-12c736161aae",
        "cursor": {
          "ref": "2a7d5be6-80c3-4278-a8ad-8a82afa8b2df",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "0f99bcd3-5ad7-4042-bf1c-8136371cf20b"
        },
        "item": {
          "id": "852945a4-c06a-4597-abbc-12c736161aae",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "69c48afb-a260-4cb7-85fc-c75a75d3c015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 127,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39338360-8207-4bbe-9733-ef2d0d23dd65",
        "cursor": {
          "ref": "9230176b-a6e2-4997-b34a-ad993dae7aa1",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e3a6ff55-4e41-4b13-9f34-2e506e21119f"
        },
        "item": {
          "id": "39338360-8207-4bbe-9733-ef2d0d23dd65",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "22604247-17f8-4401-88c4-52689bcf76df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbf5f717-5a40-4984-baa2-3d324beee1ad",
        "cursor": {
          "ref": "c00db6fe-81b7-4818-865d-977a392dec20",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "fbe9399f-af32-4d52-9175-438990e74451"
        },
        "item": {
          "id": "bbf5f717-5a40-4984-baa2-3d324beee1ad",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6d156cd8-f2f8-4f7f-8d3e-6191ffbd1d0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dee52a1-cb0d-429a-83f7-abee58b2b7e1",
        "cursor": {
          "ref": "b43f18ac-47d9-4c5a-bbab-a3573bc9b72e",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "c31ff661-a03c-4ec7-bf4e-3dcbb2a2ba8c"
        },
        "item": {
          "id": "6dee52a1-cb0d-429a-83f7-abee58b2b7e1",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d5381860-14b3-44d6-8a9e-83f8e3fb02f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 783,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a427f643-4e3e-4bf7-a909-98f1a998668b",
        "cursor": {
          "ref": "1af10fb6-b1c5-43ec-81fe-efacfc6a610a",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "09f490c2-7ec3-4bcd-8b40-eec41a4ec187"
        },
        "item": {
          "id": "a427f643-4e3e-4bf7-a909-98f1a998668b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "86a18db3-1f08-4688-a1d1-7b77d2322a74",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 44,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "fdfd73bb-64e0-4fde-a948-aee76531df9b",
        "cursor": {
          "ref": "e8dba7df-6d24-4246-9f68-9749388a1823",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "c26ece0e-4c7f-479f-8cba-f2a1064ad087"
        },
        "item": {
          "id": "fdfd73bb-64e0-4fde-a948-aee76531df9b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "69c33fb5-6646-4d15-9827-d5cab320fbfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58081eb8-8347-4f4d-9747-bd573d786f80",
        "cursor": {
          "ref": "57af39aa-c7f4-4455-bff6-fde097569eec",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "bdb4eda2-5e0a-4378-9834-69abd01c98e0"
        },
        "item": {
          "id": "58081eb8-8347-4f4d-9747-bd573d786f80",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "bd37398e-3bb3-4883-b912-60b9ec47aff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebb2b19c-2015-4851-b03e-0eca4ed8e1b6",
        "cursor": {
          "ref": "4f00a5a3-78a8-41b2-9335-c9bf25722d77",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "d2a987b2-3b8a-444b-b1f7-c2419c95cf69"
        },
        "item": {
          "id": "ebb2b19c-2015-4851-b03e-0eca4ed8e1b6",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8f51a134-d285-4074-8b18-50a99c81f9ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e99ae5f5-f373-42d8-90b6-1cc770c87f93",
        "cursor": {
          "ref": "0f1062a7-985f-4320-80aa-3806053af528",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "9be306c5-dced-4dc1-9569-1746d9e15fb0"
        },
        "item": {
          "id": "e99ae5f5-f373-42d8-90b6-1cc770c87f93",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "3f5e8167-5ea3-4303-8505-34597b4fb199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0809e82-aec6-4bbd-a5a1-5a789dcef9ce",
        "cursor": {
          "ref": "b9f765b9-ae9a-4be6-b51b-a328bd3b11ed",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "1f83a653-44e2-4349-8613-52ff8ed41e32"
        },
        "item": {
          "id": "e0809e82-aec6-4bbd-a5a1-5a789dcef9ce",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c4379388-56db-44f8-b0a1-276db726ff5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c8afa43-f5ee-4aaf-8cf4-a5a60c7c0ba0",
        "cursor": {
          "ref": "4dee268c-aeea-410a-bf19-ce80124ca1a3",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "8ac83f53-bde3-4783-9c16-64d3afcc7d44"
        },
        "item": {
          "id": "0c8afa43-f5ee-4aaf-8cf4-a5a60c7c0ba0",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "19df4a77-5e60-46e7-8fe2-c320e9e2485a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bfdae33-9a9b-49f5-831e-987cba9cac4a",
        "cursor": {
          "ref": "8205c2a7-0654-4b20-8c34-e5deaeb829a6",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "643751e3-1393-480a-95a5-1791269107cc"
        },
        "item": {
          "id": "2bfdae33-9a9b-49f5-831e-987cba9cac4a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "397ad901-942d-4203-aa6d-868ca3e7aebe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "869a1a9b-46cf-4582-878e-5f9874162fa9",
        "cursor": {
          "ref": "46449401-efdf-4c7d-bae8-11b675e54755",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ecd32bfe-ebe6-4497-b282-673a367a186d"
        },
        "item": {
          "id": "869a1a9b-46cf-4582-878e-5f9874162fa9",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d108b503-a353-4269-a17e-3735c0c6ff7d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 43,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "e2696ce8-488b-4f87-8647-9358b9fab486",
        "cursor": {
          "ref": "3deedd99-f37d-44f8-9f77-fe440bbe4945",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d213160b-30ae-4c47-a73f-22e939e6d960"
        },
        "item": {
          "id": "e2696ce8-488b-4f87-8647-9358b9fab486",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b5363948-249c-41cc-a9ba-1589bdcfbf00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ff1234a-a409-4dfc-93f1-1f5122376ab6",
        "cursor": {
          "ref": "b36b4c59-59fd-4e38-8b1a-2d63f5839301",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "beaeeb9a-51e2-4bf2-9ec0-99f03782d487"
        },
        "item": {
          "id": "6ff1234a-a409-4dfc-93f1-1f5122376ab6",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "da8962b4-2b6f-4bbf-b116-5484990b9e73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e4f395-86d5-491e-b9aa-be673b5e29fb",
        "cursor": {
          "ref": "d404a238-85ff-46d8-9104-d232514b6d4c",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "4379f5c7-6aa4-4713-97e2-511ba2470444"
        },
        "item": {
          "id": "11e4f395-86d5-491e-b9aa-be673b5e29fb",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "43d2e542-1b0b-40bf-bbd3-fcea77b1029d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21f2bc92-1bab-4131-b2e7-ed41d7f44baf",
        "cursor": {
          "ref": "abd2be62-4612-4ac8-8d5e-e023225cf15d",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "1303037d-034c-4f0d-b866-730537ec9ee0"
        },
        "item": {
          "id": "21f2bc92-1bab-4131-b2e7-ed41d7f44baf",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ee659656-4958-4f97-a523-93279de15ee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "659f0df1-b1da-4f1d-94ea-9dcd7611a447",
        "cursor": {
          "ref": "16b11bf7-0a79-4a5a-8913-6291c264753d",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "80b02d12-2b14-4a47-825a-f34165220cd4"
        },
        "item": {
          "id": "659f0df1-b1da-4f1d-94ea-9dcd7611a447",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4aafdd05-1376-49a8-9667-1c0305fd45bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d3f7248-b28e-4470-81e2-2265dbce2b2f",
        "cursor": {
          "ref": "d2605ddd-061f-4f01-ada6-45781141b958",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "10b4a93e-3b11-4853-8981-e75231b62d3c"
        },
        "item": {
          "id": "3d3f7248-b28e-4470-81e2-2265dbce2b2f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "dc361c88-7c98-4ad4-ae37-ef77ff330929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1383a738-6a64-477c-b643-b98578cf8580",
        "cursor": {
          "ref": "673d9150-8f84-4497-87ef-06d5ba95a482",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "1a69d0b4-4185-4b8b-8c91-0eb92695886c"
        },
        "item": {
          "id": "1383a738-6a64-477c-b643-b98578cf8580",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "e9475ce7-596f-4984-9db3-53f540608cbb",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "238edfa8-8e9f-4ba7-b40a-cbcc9f1f4a4e",
        "cursor": {
          "ref": "2d7a424e-8e96-4dc0-b941-4be5e3d9a74e",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "509e49ae-1824-4edd-9fa7-d9188735bb61"
        },
        "item": {
          "id": "238edfa8-8e9f-4ba7-b40a-cbcc9f1f4a4e",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "5796eccb-dda6-4873-970a-79440147880e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "112a2b46-9121-4178-930f-4a029e669f59",
        "cursor": {
          "ref": "920516f4-10da-4a40-b7b5-beef3536b919",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "0afb3409-19e6-42e9-bc85-13781fec26df"
        },
        "item": {
          "id": "112a2b46-9121-4178-930f-4a029e669f59",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "846bffe9-3c7f-4e5d-906e-359b1e43da43",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "9b9ab53e-64ac-4ebd-b83f-e0d126c338a2",
        "cursor": {
          "ref": "d299e958-c917-4fed-a2f2-eaa13e98b453",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "5675b48e-ca27-4f76-980f-2a64f4449687"
        },
        "item": {
          "id": "9b9ab53e-64ac-4ebd-b83f-e0d126c338a2",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "1c257de5-9082-4a0c-8c65-d90d1c684359",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 47,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "cd22b542-7bc2-47c6-acdc-5e1d43110f89",
        "cursor": {
          "ref": "c573b7d6-1024-4384-984e-5a0c1fe1d5c2",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e51b0638-47f5-45d8-9a58-303ef7db6994"
        },
        "item": {
          "id": "cd22b542-7bc2-47c6-acdc-5e1d43110f89",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "598e398e-ea3f-4700-84e6-5173f45cc370",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 63,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "69fa3dba-fb04-40f8-8aa1-5e9da8384463",
        "cursor": {
          "ref": "57d1d9cd-521e-465c-85a8-3d56d4666fca",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "c41333ae-94ef-4d75-8b2d-5002c6925561"
        },
        "item": {
          "id": "69fa3dba-fb04-40f8-8aa1-5e9da8384463",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "9ddb82cc-2b6d-4d3a-9d88-1a86d9df98f7",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "a7fbc9c9-ff71-4418-a893-a9200735d371",
        "cursor": {
          "ref": "08360ba8-32de-489c-aff0-ea291d698662",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "264ac9e5-8763-4e76-b949-48226a9347f0"
        },
        "item": {
          "id": "a7fbc9c9-ff71-4418-a893-a9200735d371",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "ab0e8c20-4f2f-47b8-80a1-160bc3a4578c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84b0dbb5-8d9e-4f40-aad0-2ce945ef7095",
        "cursor": {
          "ref": "23087a12-f200-4747-bf77-a2bd1db09e08",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "3ec78b4e-b015-46d4-b576-e38ba3b79ca8"
        },
        "item": {
          "id": "84b0dbb5-8d9e-4f40-aad0-2ce945ef7095",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "fb9414bd-3b30-4f3d-83e3-bdbafada3662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b34f3544-8474-4335-b256-e4ad45f4b341",
        "cursor": {
          "ref": "cf0df96b-2adb-4e39-9a15-4f026903b992",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "de10c5a0-c4a8-40a5-aeeb-937640455564"
        },
        "item": {
          "id": "b34f3544-8474-4335-b256-e4ad45f4b341",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "14b8c3ac-b131-41e8-bbc8-3886d14e163a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fc25296-2f51-4495-9d6e-2d4ae8034782",
        "cursor": {
          "ref": "2e0612a8-1179-4a33-9db6-3e72ec9ac4e7",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "6b28a7e3-08bb-4240-96c5-49a170f15d1e"
        },
        "item": {
          "id": "7fc25296-2f51-4495-9d6e-2d4ae8034782",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "de983b5f-6e5a-4c62-9a1d-e38932f0512b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9e968fc-7011-4333-9f2b-97178b929c8b",
        "cursor": {
          "ref": "4bcfc79b-3dba-48aa-9e6c-4dcc3bb4344e",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "f52edf4b-2892-4ea8-9372-67b49c904776"
        },
        "item": {
          "id": "a9e968fc-7011-4333-9f2b-97178b929c8b",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "18199d84-0001-4825-99b6-6721ea2465d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fbda829-2241-4fa0-9dd2-2d22dbc953dc",
        "cursor": {
          "ref": "c4457f6d-dd09-41a4-969b-6d2ef804df01",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "7b901a0d-b606-48cf-93ea-5ac4b95d0024"
        },
        "item": {
          "id": "2fbda829-2241-4fa0-9dd2-2d22dbc953dc",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "771d7f9d-fda3-4b02-9590-a61dbf1d1201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "febe887d-3949-48be-a3e7-9919ba1b1529",
        "cursor": {
          "ref": "d03e1a54-9f0b-46ca-b472-2f40ac29f198",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "a4bdad27-2b92-471d-ab50-395931e35937"
        },
        "item": {
          "id": "febe887d-3949-48be-a3e7-9919ba1b1529",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "a9940159-bccb-48a0-807a-8cc6a1917e40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78cf1b61-022a-4954-ad94-bbd3144814f8",
        "cursor": {
          "ref": "0bf76591-3dbc-4c60-82ab-a1a17b2e319d",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "5e4a867f-e4a0-4394-983a-feb85332246a"
        },
        "item": {
          "id": "78cf1b61-022a-4954-ad94-bbd3144814f8",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "394bbcee-764b-48c5-a1ba-311076c3466e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d4290c-20bd-4312-b6de-0bda1dc20432",
        "cursor": {
          "ref": "685a93e1-201f-4b4f-92f6-a9b642bc3379",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "27fa7a5a-73cb-4c59-adac-9ee426e98d5a"
        },
        "item": {
          "id": "29d4290c-20bd-4312-b6de-0bda1dc20432",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "89f0f124-7769-4319-8136-b60dbc840dcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "188ed748-00a4-4fb2-aa51-efb97df5da61",
        "cursor": {
          "ref": "f7af6539-8e38-48f2-b7be-65d2899f20ba",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "a862a0b8-4f85-4cfa-8475-54cfe505ccc4"
        },
        "item": {
          "id": "188ed748-00a4-4fb2-aa51-efb97df5da61",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "56322488-6b4f-4ff2-a3ae-8bfa0cc99885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dad3dc6-2ee1-4b67-b36f-4328ae56246e",
        "cursor": {
          "ref": "05f10eb5-5366-4504-8ab4-fea03656888b",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "e7ad5e9e-d910-4167-9b6b-c942650e6f30"
        },
        "item": {
          "id": "9dad3dc6-2ee1-4b67-b36f-4328ae56246e",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "74e943b7-3dd8-4804-b52a-3f3e5cb6f36f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd430655-d6ff-4d0a-ab8b-9f84c4481679",
        "cursor": {
          "ref": "6787322a-c5f8-416e-bd10-4259173b2d41",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "83cefefe-5dbe-47d8-8357-abb9100b4d96"
        },
        "item": {
          "id": "cd430655-d6ff-4d0a-ab8b-9f84c4481679",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "0e1149b0-82a3-4499-9d38-44dbed19fd60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e95eb7a-167a-4f65-a1a9-fe226ae1b17b",
        "cursor": {
          "ref": "ad6ff70e-14bd-48bb-9a54-2156dab6abeb",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "9c61a03c-d1c9-48b2-bcd3-37a38951e531"
        },
        "item": {
          "id": "8e95eb7a-167a-4f65-a1a9-fe226ae1b17b",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c81abe01-8067-48f3-ade3-d42e6248a928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ccba8b1-5fc2-4fd3-9eca-ae5d3e1a210e",
        "cursor": {
          "ref": "a537d94a-6f14-4c2d-a196-910f7664a6fb",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "1b0a67b1-a18c-46fc-b2b7-26f455dd7388"
        },
        "item": {
          "id": "4ccba8b1-5fc2-4fd3-9eca-ae5d3e1a210e",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "88cf5947-279a-4c9e-8f47-45c7b913f45a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6ea58dc-89a2-4597-9cd5-34ec267e8877",
        "cursor": {
          "ref": "6644e5ee-5228-4ed1-9b80-bf1c69726901",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "b5acd0ff-ada4-4b43-873e-515a7d5d8417"
        },
        "item": {
          "id": "f6ea58dc-89a2-4597-9cd5-34ec267e8877",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "980cf939-d86e-4f77-a617-399bdff0165b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d39e1f0d-0963-41d7-813c-fb84baeca933",
        "cursor": {
          "ref": "bcb7298d-58d2-40b7-977b-b9712b82532e",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "859d1632-f424-49a0-a68f-cf9983fc8b01"
        },
        "item": {
          "id": "d39e1f0d-0963-41d7-813c-fb84baeca933",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "0782c0ee-33f8-4824-9e9c-a8f6dca116e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31e19fc2-975b-487b-8ce2-332a66c5c340",
        "cursor": {
          "ref": "22a746fb-2529-4456-8c03-f430d7d28a2d",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "33ef2935-5f02-47fb-8ae4-5ae86bf0bff1"
        },
        "item": {
          "id": "31e19fc2-975b-487b-8ce2-332a66c5c340",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "05a964d6-3d60-4924-bfd3-6bf6c374b542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5adfc1e0-3fd9-4cca-b115-af194c8f8105",
        "cursor": {
          "ref": "c5cee4ba-fe50-4004-b905-3d2542384a8d",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "d4b95d0d-da42-4e99-b91f-543c371e490a"
        },
        "item": {
          "id": "5adfc1e0-3fd9-4cca-b115-af194c8f8105",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "fcd214e4-f3be-4bbd-9ccd-4ce5d78bf82c",
          "status": "OK",
          "code": 200,
          "responseTime": 81,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "981e5f7d-2c6e-4752-a7bb-c6a60f4a8739",
        "cursor": {
          "ref": "36c68261-d38c-483a-b437-e6feef2d0df3",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "05b5d02f-5b8d-4d45-8355-62e9badf4bd0"
        },
        "item": {
          "id": "981e5f7d-2c6e-4752-a7bb-c6a60f4a8739",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "969118c9-9be6-427f-98e5-fda8c9f9fbc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98520629-02ee-4cc9-bf91-ec3632f6906c",
        "cursor": {
          "ref": "72b971e7-a493-44f3-be62-0cc3dcabec12",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "de6fc6b7-5b9f-4764-a2c1-d1704245d92e"
        },
        "item": {
          "id": "98520629-02ee-4cc9-bf91-ec3632f6906c",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "7f9c55db-2dbf-4f0e-9e5a-4759948f428b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03eea1f6-76d8-4cb1-9885-b50ff8a512bb",
        "cursor": {
          "ref": "3db6851c-c24b-4c58-8a3a-16c37c3a3c34",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "42c8988f-a51f-4e2f-a467-f768121e5878"
        },
        "item": {
          "id": "03eea1f6-76d8-4cb1-9885-b50ff8a512bb",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "24ee2452-c86b-41a8-b32b-364b2ccae5ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a56df0fb-ab4c-46de-8367-57e858160863",
        "cursor": {
          "ref": "baf02840-4234-45ac-a866-734c0031967b",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "4060ab6b-e493-4b6f-8103-1efa3d8a3cba"
        },
        "item": {
          "id": "a56df0fb-ab4c-46de-8367-57e858160863",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b8c9a6a0-44c9-4c51-9e90-5bbab1056135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b62fe18-7e29-4b5b-8367-b824894521cc",
        "cursor": {
          "ref": "552aad67-8710-44b9-ad2a-530a8a02eb45",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "56f1f443-d9ab-4230-911b-1806becc433f"
        },
        "item": {
          "id": "8b62fe18-7e29-4b5b-8367-b824894521cc",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "68f9d298-cdd7-4278-b4b6-28512d835a06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9309cd1d-b8d5-4eb5-91f1-130ac045ef12",
        "cursor": {
          "ref": "500396cb-7a90-40ff-8df2-f9af2e39b3ea",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "0339f5ea-18d9-40ab-b283-f0a3485b34b0"
        },
        "item": {
          "id": "9309cd1d-b8d5-4eb5-91f1-130ac045ef12",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "586c6b84-8f04-47ff-ba2b-b13f17a3b089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1700446-7dc7-4957-92d0-69480c005418",
        "cursor": {
          "ref": "55603b6f-a24e-4ebd-a8de-189d4dd41f52",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "3aea7f17-c4ca-40ea-b679-c76ddc5d4b08"
        },
        "item": {
          "id": "e1700446-7dc7-4957-92d0-69480c005418",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "e1283797-b2b2-4807-aad2-ce19e9a1092c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9e9faa1-2110-4193-b5c7-6c7cda5da6eb",
        "cursor": {
          "ref": "3de4960f-a3ec-4146-8958-5b3aa1f15676",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "3f998e5b-6974-401d-bb5d-57e852a2323c"
        },
        "item": {
          "id": "d9e9faa1-2110-4193-b5c7-6c7cda5da6eb",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "7fb7e04c-22ec-4217-9e77-99f595450f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a60784f1-9f3a-47b1-aba8-5ac2e9ed9469",
        "cursor": {
          "ref": "8782618c-b080-4905-b160-9867bc6cdeb5",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "2a5ea498-8226-4d2e-9790-b380f9ed6b97"
        },
        "item": {
          "id": "a60784f1-9f3a-47b1-aba8-5ac2e9ed9469",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "1f471d89-c7ee-4e49-8a08-5d4965786279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a9d9f93-2454-443a-bffa-a79e46243b81",
        "cursor": {
          "ref": "e55b2812-4a63-4872-b3c0-62bd26ac6268",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "8406fa76-b082-4ac2-8c0e-b8eddb9a5655"
        },
        "item": {
          "id": "3a9d9f93-2454-443a-bffa-a79e46243b81",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "b9e388e0-11d2-4534-a09a-879131201fc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "855355fc-5932-409e-9e1d-66ff2c2d433f",
        "cursor": {
          "ref": "55a5cd98-e8a1-4313-8aa7-c480ea7e05dd",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "04322549-1ef7-4351-9f1f-1ce87c296460"
        },
        "item": {
          "id": "855355fc-5932-409e-9e1d-66ff2c2d433f",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "d203945b-43cd-47af-9552-b0bdaae858fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34285765-e54e-4396-a353-b8bab105289f",
        "cursor": {
          "ref": "641978cc-5c5a-44ae-af84-1c254322bf34",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "db897c0e-e970-4429-86ca-d008514aff81"
        },
        "item": {
          "id": "34285765-e54e-4396-a353-b8bab105289f",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "8a82f783-04e8-445a-a813-917b1678298d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e29c8cd-faea-4b6d-b80b-6672825b629c",
        "cursor": {
          "ref": "4a1f1344-70d8-412c-9d8a-17d1db0ad89e",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "67a24f4f-1e1e-41e8-986d-f1843f84a3ba"
        },
        "item": {
          "id": "0e29c8cd-faea-4b6d-b80b-6672825b629c",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "0c6e4c12-a959-4241-a4c3-1b4aedbc4842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19fbaeb7-6eb4-4f67-9058-7abf7bc7e891",
        "cursor": {
          "ref": "87704f12-15c7-46cc-a0f3-9cfd4385f15b",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "ae6951cc-616a-42fa-b13e-9344233488bf"
        },
        "item": {
          "id": "19fbaeb7-6eb4-4f67-9058-7abf7bc7e891",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "30c99547-3d17-40a8-ac57-b2c8a6eea59a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab012d17-095d-4cae-b245-caa486ef7137",
        "cursor": {
          "ref": "f9313b35-e34e-4e1e-8ce1-98dcfc90c0db",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "2613fc0a-8943-4f03-b9df-9396c84c4ca1"
        },
        "item": {
          "id": "ab012d17-095d-4cae-b245-caa486ef7137",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "3ee11dcb-8481-4213-88f3-861b49768d8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59ddddfd-ba28-4891-8641-2bc0d21a9551",
        "cursor": {
          "ref": "ee79b9e6-87a0-458e-9325-daa9622bd72b",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "952f0147-317e-40a7-9dfa-1609d80fe341"
        },
        "item": {
          "id": "59ddddfd-ba28-4891-8641-2bc0d21a9551",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "0b3dceb0-2337-40c8-8ed1-0748f77223cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e100ae48-34da-4f2e-b572-bf83d42e4072",
        "cursor": {
          "ref": "2f506374-5013-420d-8295-4e20e5537ed0",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "16245349-9c3c-472c-83bf-708bcde7d7e5"
        },
        "item": {
          "id": "e100ae48-34da-4f2e-b572-bf83d42e4072",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "8610617e-d21a-4d9c-b6db-c8fc071c92b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e53c2a3d-a995-48a9-ad00-7a3cc13c191e",
        "cursor": {
          "ref": "b6e26fcb-b461-42da-aa07-1ed96645c32c",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "e1545476-6cb2-495b-b770-d8e55f8aa3b7"
        },
        "item": {
          "id": "e53c2a3d-a995-48a9-ad00-7a3cc13c191e",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "67717212-dab9-479a-a2f0-59bb9fc9f9c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bb882be-2e7d-46f3-98b4-bd9b682b734b",
        "cursor": {
          "ref": "3660f3db-6573-4e5e-8a0a-a34a01cb4dc2",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "6145ace1-1695-404d-8597-73bf8016ba0f"
        },
        "item": {
          "id": "2bb882be-2e7d-46f3-98b4-bd9b682b734b",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "5ae53bb4-5ca9-4e3e-9ef7-c7ff63688e24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59ac667c-4287-4af9-9b3b-6ea12668f803",
        "cursor": {
          "ref": "e8cc9914-683c-416c-ae61-7fe124077807",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "302b0d0b-e419-45c9-9ed3-3603375c0dd1"
        },
        "item": {
          "id": "59ac667c-4287-4af9-9b3b-6ea12668f803",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "5c49baad-a2b1-42da-ad59-baf06a334968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f82d100-1ce1-497e-8285-ad0ac278f0d8",
        "cursor": {
          "ref": "cb93f8a4-fb4a-40ca-bcba-4cb9c29f6cb1",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "3dc80347-c8c0-4568-8a61-3e11b33b0292"
        },
        "item": {
          "id": "7f82d100-1ce1-497e-8285-ad0ac278f0d8",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "26012fd0-c200-482d-8852-2ca8d4da321b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b90a5410-3364-4c37-af8d-0264aa2f1f40",
        "cursor": {
          "ref": "7c429360-6989-441f-8063-b3a9a77060c2",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "c77198cd-8d99-4b1c-b845-c8e0aed7a356"
        },
        "item": {
          "id": "b90a5410-3364-4c37-af8d-0264aa2f1f40",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "c60016f2-d564-4097-8868-e4f497e4b0a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfcaff2b-638e-4189-8eb3-f5226e93cb0a",
        "cursor": {
          "ref": "bad285b0-c671-4a0c-9ea8-37665d1549b4",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "11aab1a2-d082-49e0-ae09-c052cb8c3cc2"
        },
        "item": {
          "id": "cfcaff2b-638e-4189-8eb3-f5226e93cb0a",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "5b103a40-edf5-47d0-9f21-4d226b6f3184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b9880e6-806d-489f-ae33-a5b3e953ca40",
        "cursor": {
          "ref": "4620160f-3780-4640-8cdc-87b1a28f2d1c",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "e9971aaf-9697-42c5-b32e-1f7913c99b38"
        },
        "item": {
          "id": "4b9880e6-806d-489f-ae33-a5b3e953ca40",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "1378c3e6-ad8a-4f23-86e8-64ba24cf2a48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a82a563-a710-4fc0-9339-0cf0d9fdb6c0",
        "cursor": {
          "ref": "4ac57d3f-d50a-4659-9b88-cd6e9408b30c",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "514b357a-75d9-4710-ab10-33c5ab048dcd"
        },
        "item": {
          "id": "3a82a563-a710-4fc0-9339-0cf0d9fdb6c0",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "af660df6-4b7f-475b-826b-b250f67b71ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "556a4029-12a5-45d6-b60e-791782f27bda",
        "cursor": {
          "ref": "be8df01a-7379-40c9-b212-e6d437c93633",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "c45d6bfc-02e1-43f9-be3a-dced9a1ba05e"
        },
        "item": {
          "id": "556a4029-12a5-45d6-b60e-791782f27bda",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "1394ecd9-7128-43d6-abc3-e68ef1ae592c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "059567b8-8ec0-4f36-8f00-5ef7051be18e",
        "cursor": {
          "ref": "02f9bc00-6a0e-44bd-b030-66f538838c30",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "ecb70a8b-61de-416a-942e-eebdfabbd511"
        },
        "item": {
          "id": "059567b8-8ec0-4f36-8f00-5ef7051be18e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "40905dd5-5701-43d3-a4a9-87e821b98064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a0f136b-5d26-4668-95b2-119e676cf5c7",
        "cursor": {
          "ref": "7a278eb6-391c-4465-9104-5e80bbb02adb",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "16f77c50-c9bf-45c4-bd2d-44fb86dca339"
        },
        "item": {
          "id": "5a0f136b-5d26-4668-95b2-119e676cf5c7",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "8d9a32a2-995e-441c-9f57-ecf90c6040a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af9003bd-3749-4a51-926a-83e1abc855dc",
        "cursor": {
          "ref": "7c0b3c19-60d1-4161-a685-fe644107070a",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "20c9805e-5e4e-4717-adbd-a5baa2afc82b"
        },
        "item": {
          "id": "af9003bd-3749-4a51-926a-83e1abc855dc",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "7646ff26-1cd0-47fe-9f29-04b1e4c01212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d300194-34c2-41c7-ab78-118e0ec6dcd9",
        "cursor": {
          "ref": "0a930aad-e236-4c70-8f7f-faca9fe3ee61",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "80d304c5-5f06-4cc2-92d3-aff0511987d2"
        },
        "item": {
          "id": "8d300194-34c2-41c7-ab78-118e0ec6dcd9",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "87865e3c-f825-4479-a02c-e29affb6c7b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b92eab0d-bef8-46bf-8d2e-a8ba21003865",
        "cursor": {
          "ref": "f91c0f21-8ff6-46cf-bea1-0d18004e7888",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "54ce7d20-4451-47a8-ad1b-ce874bbc699c"
        },
        "item": {
          "id": "b92eab0d-bef8-46bf-8d2e-a8ba21003865",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "8eab0f28-579b-4610-8aaf-c3f4d22d4371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6fa77e9-31ea-4fa6-9acc-e63f9fad846c",
        "cursor": {
          "ref": "a0f18f06-4469-4dcf-b821-e0cac0d566d6",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "e0983232-4874-44eb-911c-76a725496480"
        },
        "item": {
          "id": "b6fa77e9-31ea-4fa6-9acc-e63f9fad846c",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "16d03ca6-8ed1-4241-bfb6-6a4762a4a76d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ba99769-2abe-4fcc-a990-48dee9e75889",
        "cursor": {
          "ref": "3dc3e770-6e0e-4993-a93d-d9ca188a901e",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "748e15c1-55e5-4329-bc1e-61ee5da64cd8"
        },
        "item": {
          "id": "2ba99769-2abe-4fcc-a990-48dee9e75889",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "0770b59e-dc49-498c-87b1-b60ade6af68b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a98c2c-81a5-43e8-b9b1-118b61d7aad1",
        "cursor": {
          "ref": "6381f068-5672-48b7-ae59-0032317d878d",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "02401fa4-a3f3-4697-b6ca-4a941e02881f"
        },
        "item": {
          "id": "82a98c2c-81a5-43e8-b9b1-118b61d7aad1",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "9e34aab7-a7e1-4168-a056-40736196e530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a39d1733-4b98-425d-9e85-66d2a68b59eb",
        "cursor": {
          "ref": "66a46cba-8f35-45fa-85ed-e74a21da4b6b",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "b36edbfd-0255-4d7a-8a05-ef05ff5c5c60"
        },
        "item": {
          "id": "a39d1733-4b98-425d-9e85-66d2a68b59eb",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "727d7392-6625-40ad-abcf-cba3f9118f2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cc1bbdc-b358-4589-9975-ea9fe81d532e",
        "cursor": {
          "ref": "aaf31a21-42fb-44a4-9349-1f038c0d2d7c",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "18b98de8-8cf8-436d-99ca-82ea1c949262"
        },
        "item": {
          "id": "3cc1bbdc-b358-4589-9975-ea9fe81d532e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "6874970f-0140-41f3-b48c-0eae376f12cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81c44cb9-e50c-425d-948a-ddcb1b0c9d87",
        "cursor": {
          "ref": "9e2cfa9e-9694-465c-887d-0f2c930a063e",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "f90a200a-5f15-4950-b79e-c7e567c44ce1"
        },
        "item": {
          "id": "81c44cb9-e50c-425d-948a-ddcb1b0c9d87",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "d9ad779c-d05c-4833-8fa0-74c5cbdc6708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08db416e-f8da-4e88-8de1-c759c120fb62",
        "cursor": {
          "ref": "31134d26-48e2-4457-bb59-8529f8ad88ac",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "11d45232-5799-4b91-81b3-77ea85fad464"
        },
        "item": {
          "id": "08db416e-f8da-4e88-8de1-c759c120fb62",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "4644a68b-ef08-4c63-b3e9-2c7b9d361f70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "761f607e-9137-488a-a534-aa4d1482c6a5",
        "cursor": {
          "ref": "89b722f9-36a5-4d8a-9d5b-bf7b5c0c00e6",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "3cf5c15a-3c9f-4da3-903b-2e3934066613"
        },
        "item": {
          "id": "761f607e-9137-488a-a534-aa4d1482c6a5",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "5b762478-0b48-4bbd-819d-c3a1672a7abf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "698d225e-f8fe-4275-b9b0-e5760e2d3200",
        "cursor": {
          "ref": "48437dfa-76b1-4986-86ff-1c6807c1f6d8",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "43f77805-f37c-4aa9-947f-b649159bd8fe"
        },
        "item": {
          "id": "698d225e-f8fe-4275-b9b0-e5760e2d3200",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "1ae4a747-842d-4603-b478-85257f3f83fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81aaa1b6-7b07-46c3-ba0c-242805889584",
        "cursor": {
          "ref": "2276a1c2-3fb7-4e1d-9cb8-1288ace504b1",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b2b6ce7f-1d68-4c5b-954a-03b7b83747d6"
        },
        "item": {
          "id": "81aaa1b6-7b07-46c3-ba0c-242805889584",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "2f30a560-87e9-43a8-a90b-f39f8554c460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a67ff44d-9b8a-45ad-9b4e-d959aa8453b0",
        "cursor": {
          "ref": "38220347-874a-4b76-bf10-3759e3470210",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "3319831b-6aee-4074-a470-5766c764f00f"
        },
        "item": {
          "id": "a67ff44d-9b8a-45ad-9b4e-d959aa8453b0",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "5065c929-4bc1-452e-ba57-59a424bdf2b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f5b6d93-c2bc-48e2-aa27-2999f7cce82c",
        "cursor": {
          "ref": "36c2536b-aa98-4d85-ae68-8dfdd06f2f11",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "f1b382fb-e67c-4a85-8969-87d1e2eb56de"
        },
        "item": {
          "id": "2f5b6d93-c2bc-48e2-aa27-2999f7cce82c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "6b0e284b-8576-4a6a-9945-104af43bb02d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79d4227f-b185-4993-aa87-2dcb7825d6e1",
        "cursor": {
          "ref": "9a8ef118-7943-4f3e-8bb7-0ce20933dd92",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "983ac37d-04bd-4ded-b3f9-a77a08f6e1b9"
        },
        "item": {
          "id": "79d4227f-b185-4993-aa87-2dcb7825d6e1",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "4539069f-8735-44bd-bc09-fab860bbbecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e44c7917-f3ce-4da1-ad60-9b30fd4d0876",
        "cursor": {
          "ref": "f3e514db-9937-4b3e-850c-6de98832b7aa",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "037117f2-4043-4af8-b763-c1d375ed313b"
        },
        "item": {
          "id": "e44c7917-f3ce-4da1-ad60-9b30fd4d0876",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "e43edbc8-8ec8-4974-addc-5736e645cf9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c651557a-60d0-49a2-a7d4-1f8ced393c6d",
        "cursor": {
          "ref": "c1e215cd-2a40-45e3-8ef9-3c17de8107d0",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "da9409de-b61f-4845-a10a-e7b534e19206"
        },
        "item": {
          "id": "c651557a-60d0-49a2-a7d4-1f8ced393c6d",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "9b9ec2c9-7426-4d38-8b71-cfd009a485f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e303f82-6102-4145-be08-c3e6bbfe14ab",
        "cursor": {
          "ref": "e7cfbf17-f2c0-43d3-ba2a-ab7bb9c83819",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "80694a64-90c4-45da-a6cf-f1b73c240780"
        },
        "item": {
          "id": "7e303f82-6102-4145-be08-c3e6bbfe14ab",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "8b81139f-ae49-4e1d-9771-4ebcc92c57a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4a890b8-f056-46f9-bb1e-4b82a0dbc485",
        "cursor": {
          "ref": "91a891e4-d2a2-4985-b58d-4da232d447ee",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "034ff52c-d0f2-4bf0-82fb-d80febc2cc11"
        },
        "item": {
          "id": "e4a890b8-f056-46f9-bb1e-4b82a0dbc485",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "ea05c49b-24ab-400f-9c14-780faf8cf75f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "080a3246-18f7-4621-9573-20b7892b132b",
        "cursor": {
          "ref": "af839867-8948-4145-893d-0383f34e1ddc",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "cce6049d-8a2e-4d24-a4cc-4161a9c7f036"
        },
        "item": {
          "id": "080a3246-18f7-4621-9573-20b7892b132b",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "47a4c2e0-6919-438f-b378-c366934cc020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f172347f-031a-4a6c-8555-96d51c178905",
        "cursor": {
          "ref": "6640b66d-1c63-419d-b35d-d40d2331fbaa",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "b59f85a6-aa62-48ad-80ba-9764eb093be6"
        },
        "item": {
          "id": "f172347f-031a-4a6c-8555-96d51c178905",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "549b28a6-11b3-4662-8527-05c4830905dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "462a4925-e286-4b7a-8fdc-3b9b154ea698",
        "cursor": {
          "ref": "5d348e44-8124-403f-bfb4-492bf6cf7248",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "dc99fd12-81c9-449f-943d-b837fb3dffd6"
        },
        "item": {
          "id": "462a4925-e286-4b7a-8fdc-3b9b154ea698",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "8472b5cb-f5af-4011-b0b5-dbf5a1e8d6fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eec15cf4-f8ea-4fb2-aa3a-9c19b9e4adf3",
        "cursor": {
          "ref": "fb139680-dcc4-4f1e-a0fd-728972e428e9",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "2dcec3b0-ac6d-4220-a394-7473480ebe9d"
        },
        "item": {
          "id": "eec15cf4-f8ea-4fb2-aa3a-9c19b9e4adf3",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "2a611b68-f6a4-4bc9-937a-c4b5496e1000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3480dc2-d318-4d7b-9d81-4d6e69417174",
        "cursor": {
          "ref": "638330eb-4844-458b-9666-d2e8a83fb7c1",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "a9869d31-4ccf-40d7-85e0-236c9016d19f"
        },
        "item": {
          "id": "a3480dc2-d318-4d7b-9d81-4d6e69417174",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "342df970-10fb-4e76-8104-333988392515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "673d0f48-543c-491c-8306-3f5402e6b751",
        "cursor": {
          "ref": "3a80779c-6e28-432d-be16-68b619f672f0",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "603afb98-d019-428e-9005-a0a9e8607c9a"
        },
        "item": {
          "id": "673d0f48-543c-491c-8306-3f5402e6b751",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "5c25bbb6-9ff2-4b74-87c9-69f038475096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b6b8cdf-c6ec-40ff-b7f6-c6d75b6485c0",
        "cursor": {
          "ref": "dc647e81-41c6-4672-92e4-3a7f65c73f8b",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "ada3f134-533b-4684-8fad-404439ea95bf"
        },
        "item": {
          "id": "6b6b8cdf-c6ec-40ff-b7f6-c6d75b6485c0",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "33bc7c21-969f-4266-ab97-fe05e99fb99e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e109db99-1763-414a-a9d9-626e693fda04",
        "cursor": {
          "ref": "425ffa9e-440f-4fc8-918d-58e1652bb664",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "d37f490c-1db2-41d0-b02c-09845f8e0bf8"
        },
        "item": {
          "id": "e109db99-1763-414a-a9d9-626e693fda04",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "443d0c46-c7cf-42db-92b4-aae31e70cee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02d63701-6b4d-4fd5-9c0e-86e2c8b295d0",
        "cursor": {
          "ref": "24ed8253-1db4-4f6a-93b8-75f6cf6eeee4",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "da2dcce9-565a-4ce4-b76b-ce3de0af2694"
        },
        "item": {
          "id": "02d63701-6b4d-4fd5-9c0e-86e2c8b295d0",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "31e6db1e-0cfb-42e7-b7a9-50bec8b98feb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05417029-7ce1-4cb4-8c0b-b08832b0ef0e",
        "cursor": {
          "ref": "a9f548e0-52a0-4ac8-8743-803224843620",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "dcef260f-35ff-48b6-9c9d-e8c8c0952bad"
        },
        "item": {
          "id": "05417029-7ce1-4cb4-8c0b-b08832b0ef0e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "8fa47eff-60db-4626-b8f1-5e0072e60750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8e8f2c8-5ab9-4583-856b-fe7d7d9daa91",
        "cursor": {
          "ref": "0c7094ca-645a-4ef8-bdc8-118d59ce9b05",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "82c79982-fe9a-4f9d-b90b-5c0e145b9b55"
        },
        "item": {
          "id": "b8e8f2c8-5ab9-4583-856b-fe7d7d9daa91",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "e08a079d-c8e3-4a88-af00-3af51208c4fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04f90ee9-5f1e-45fa-b534-c24eb8dc0a0a",
        "cursor": {
          "ref": "fd259e74-2793-4756-86ad-562c39cd7f29",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "9cd03a11-1fe2-4c9f-88cf-f5fab9db8ac5"
        },
        "item": {
          "id": "04f90ee9-5f1e-45fa-b534-c24eb8dc0a0a",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "6ee25ce4-8689-4be5-b5e5-7dc61e2ae444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1128c973-9c70-4033-b44c-e091d4bdf799",
        "cursor": {
          "ref": "62ab63b8-c9e4-4e1f-aabd-8e73fc19e0c3",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "4cab8743-b4b7-4efd-87fc-0e05f1b39974"
        },
        "item": {
          "id": "1128c973-9c70-4033-b44c-e091d4bdf799",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "9f72a0a6-9004-4c52-8e15-8ea77eb6a56a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c963446-6052-48a5-8c81-558b56584d0e",
        "cursor": {
          "ref": "820a35d4-9ce5-4881-8c14-cad538815c41",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "242945e2-016e-497a-9fa6-9f3169acb107"
        },
        "item": {
          "id": "9c963446-6052-48a5-8c81-558b56584d0e",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "33ae11d7-08e4-4eba-ae8f-fa9e68ce9eef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbf43e23-38f7-446d-8fa6-22253bd90645",
        "cursor": {
          "ref": "8e38c40f-5b5f-4e80-ac69-fad89f8c4698",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "e4f25d1e-980c-40a9-92e8-ab05254660f8"
        },
        "item": {
          "id": "fbf43e23-38f7-446d-8fa6-22253bd90645",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "50cc8ceb-b680-479f-b113-ce31f40e7102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca2a4c02-f984-4a32-aac1-e07b4c1b8293",
        "cursor": {
          "ref": "f5e3f292-3c39-4665-8f66-29d5bc104635",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "92570b17-6b4b-4d5c-9f06-09af81488aa4"
        },
        "item": {
          "id": "ca2a4c02-f984-4a32-aac1-e07b4c1b8293",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "941bd616-7052-497d-9e47-5e9722fc5b13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60170477-19a3-41fd-beb5-2d705f47e550",
        "cursor": {
          "ref": "d97df751-ee24-4514-b16d-2f06cd56d441",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "b2c72cff-851d-4902-8670-a19429c1b337"
        },
        "item": {
          "id": "60170477-19a3-41fd-beb5-2d705f47e550",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "fb393d86-dcc3-4058-b29a-5ba3cb7f98a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "823ef67d-1af2-4822-a67f-d7ef654e1047",
        "cursor": {
          "ref": "bf799c29-4744-42cf-8d66-a8dda2162d87",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "069438cf-a1b0-422a-8ed5-c974d02894e1"
        },
        "item": {
          "id": "823ef67d-1af2-4822-a67f-d7ef654e1047",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ff9f2a17-9c3b-4b09-b037-272ef7e91a82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "935e4710-7606-48a1-838e-4af643cbffc9",
        "cursor": {
          "ref": "a685f52f-c081-41c9-9c65-893dfb58b64b",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "42ce5536-cfb8-48b8-ae47-4a29e3499391"
        },
        "item": {
          "id": "935e4710-7606-48a1-838e-4af643cbffc9",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "ac69fe48-ee40-4f24-b45d-aaad17306b7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19c0f121-de04-444a-b460-912fb7e305d6",
        "cursor": {
          "ref": "ce7b5237-bb19-4462-b411-3ad3eaace590",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "178595c2-620e-4d51-9b39-fd449d7e6f29"
        },
        "item": {
          "id": "19c0f121-de04-444a-b460-912fb7e305d6",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "28f85ab3-a8f5-4293-9b3b-cc355abbcb31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c29119db-909c-446d-b98c-2aa25f56dc15",
        "cursor": {
          "ref": "6e92db72-ace0-4057-9853-a7e4474cbaf9",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "0c4aa99f-ef50-495f-933b-8ed5902d3963"
        },
        "item": {
          "id": "c29119db-909c-446d-b98c-2aa25f56dc15",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "50d9d01f-bb1e-4846-95a1-f59ea3bac369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61dfd699-c1a1-400e-887a-68aaf3c6a347",
        "cursor": {
          "ref": "3bafd48d-1b9a-4ee5-8ccc-8c7e12559b0c",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "e05ebe12-ccd7-40b6-b2db-db638393129d"
        },
        "item": {
          "id": "61dfd699-c1a1-400e-887a-68aaf3c6a347",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "cbe1511c-4992-4beb-9736-6ce2b7522a28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc525e9-e0f0-42a8-8f37-b963532100a5",
        "cursor": {
          "ref": "b9d5c3e5-538f-4163-8deb-1e03f6e05e06",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "e8581eee-075c-4fb1-8e99-6f8ec9e5d854"
        },
        "item": {
          "id": "6dc525e9-e0f0-42a8-8f37-b963532100a5",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e4373169-d793-438e-98ae-fbf2c52e60c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7fe4c43-d1ee-443a-81e2-e6c8e9902887",
        "cursor": {
          "ref": "b4def99a-a50e-41ba-81b6-78626e7d36f2",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "2554195d-7b87-4201-9339-254ed2ba617c"
        },
        "item": {
          "id": "e7fe4c43-d1ee-443a-81e2-e6c8e9902887",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ebfcbb8f-6c11-4a20-bd4f-19a04a297c03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc78b4a9-96e6-4715-b6f5-efa054298676",
        "cursor": {
          "ref": "575f3c5b-3e27-4654-b9e9-898143d19218",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "768e2cd7-5b7c-47cc-920d-91c9eda53598"
        },
        "item": {
          "id": "bc78b4a9-96e6-4715-b6f5-efa054298676",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "a678a250-2763-41b3-8180-3ab1a0596535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6088ba94-2f13-4609-9c44-0d7e5d59c499",
        "cursor": {
          "ref": "2edbbee9-31bb-47d0-bdca-7c00ca5acca6",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "16202f6c-35f1-453e-8725-69dcc1a9b12a"
        },
        "item": {
          "id": "6088ba94-2f13-4609-9c44-0d7e5d59c499",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "97cac9cf-3ce6-47b6-ac74-94e8ccf0cb59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e43c94-3400-4eeb-99e5-d564e8223a4c",
        "cursor": {
          "ref": "a31f75e3-48cc-4654-a889-a2fbdde0e450",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "e13c14ef-4a70-4bbe-95c9-982a30613e7f"
        },
        "item": {
          "id": "a5e43c94-3400-4eeb-99e5-d564e8223a4c",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "8c02b6be-4925-4747-b140-92840a90bfdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e08251a3-8b38-46ac-b3d5-a384d5614d49",
        "cursor": {
          "ref": "ad4dd9ea-1e27-47c8-8dc9-040f41befb18",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "2b8b9721-499e-43a0-887f-d254d7410e3f"
        },
        "item": {
          "id": "e08251a3-8b38-46ac-b3d5-a384d5614d49",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "0d38f198-457a-4924-8311-c7754746a131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12c95b6f-a3b8-42b0-afc7-b7b2fabae907",
        "cursor": {
          "ref": "05041bd8-8ef2-4baa-8d76-2dda8a2cf03f",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "ee0215d4-880c-4667-9e01-1638b79a8313"
        },
        "item": {
          "id": "12c95b6f-a3b8-42b0-afc7-b7b2fabae907",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "ea9236de-65be-4c3b-8c64-69ff21dc1837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc5885ce-9c1d-4b3b-a96d-a670963501dc",
        "cursor": {
          "ref": "ad2e9f08-17a2-4405-8e4e-52fb21ca07ea",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "c7d5ff82-fca0-4cac-910a-13ae3066a672"
        },
        "item": {
          "id": "bc5885ce-9c1d-4b3b-a96d-a670963501dc",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "a7a433a8-c26e-485d-87d3-fd0a93ca3473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adb0087e-db1b-4790-b59e-5571342f949c",
        "cursor": {
          "ref": "0140c969-1270-4df3-8f4d-2c47e741eee0",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "d6c1931b-338b-4d05-b5d5-b97db3d3fabb"
        },
        "item": {
          "id": "adb0087e-db1b-4790-b59e-5571342f949c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "1d7107e8-f56d-4b02-b1d3-fd1d46c880f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1045,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d4a6496-9560-41a7-afbb-102afa0737ce",
        "cursor": {
          "ref": "f0eec188-7ef3-4101-a457-75e180ff8441",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "a665b66e-15f7-4040-a45f-7a7bf93ba50d"
        },
        "item": {
          "id": "1d4a6496-9560-41a7-afbb-102afa0737ce",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "c9251fbf-b359-4a79-8060-7ffb1b2ad3e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "842ab82e-1b07-4e20-8a48-f1def7031e30",
        "cursor": {
          "ref": "57abeeb6-90d2-4b57-9b0d-f95161b352d4",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "00e5d4cd-edcd-4243-94d3-e787572fef43"
        },
        "item": {
          "id": "842ab82e-1b07-4e20-8a48-f1def7031e30",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "f178fe6b-2694-4ed1-993f-f236dc5e5a39",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c062ecc6-8a64-4692-9ea3-8b7e1c7a237a",
        "cursor": {
          "ref": "4f8f1b06-00f1-41a8-a566-4cccef61993c",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "282a15ae-2754-48b2-9cab-190f62be5bc6"
        },
        "item": {
          "id": "c062ecc6-8a64-4692-9ea3-8b7e1c7a237a",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "3e077608-8e17-4dbf-b89d-e978454943ca",
          "status": "OK",
          "code": 200,
          "responseTime": 68,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb9d33c8-5548-48db-87d7-24665f684f01",
        "cursor": {
          "ref": "1505a02a-8a38-47fc-ae7d-ba50b0210342",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "9aa0c4ab-e588-4963-aea1-24c93a794b4f"
        },
        "item": {
          "id": "bb9d33c8-5548-48db-87d7-24665f684f01",
          "name": "credentials_verify"
        },
        "response": {
          "id": "71eafb9e-6181-4dac-837a-cc8dd7134fda",
          "status": "OK",
          "code": 200,
          "responseTime": 2712,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "163553e8-0f83-4f48-91c2-d217ca127404",
        "cursor": {
          "ref": "f83f6268-c388-4e5c-85d3-55d4221c86ad",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "7d480470-c7fa-4597-b9a4-4bc91e6e71d2"
        },
        "item": {
          "id": "163553e8-0f83-4f48-91c2-d217ca127404",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "66d59362-5a7b-48c3-9d89-7d02d753dd95",
          "status": "OK",
          "code": 200,
          "responseTime": 4323,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9fb68fb-4e4a-41c6-b6d6-3fb36e72aebe",
        "cursor": {
          "ref": "32b6d0fa-7d89-41dc-b49d-2023f2dc090e",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "3adb17ba-dda4-4e6d-958d-425241c4014e"
        },
        "item": {
          "id": "c9fb68fb-4e4a-41c6-b6d6-3fb36e72aebe",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9f626ae0-e660-4957-aa92-d3055c893afc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9fb68fb-4e4a-41c6-b6d6-3fb36e72aebe",
        "cursor": {
          "ref": "32b6d0fa-7d89-41dc-b49d-2023f2dc090e",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "3adb17ba-dda4-4e6d-958d-425241c4014e"
        },
        "item": {
          "id": "c9fb68fb-4e4a-41c6-b6d6-3fb36e72aebe",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9f626ae0-e660-4957-aa92-d3055c893afc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ccd4ead-be70-4a75-aee3-f96832ceffee",
        "cursor": {
          "ref": "0c45a160-6acb-4706-81d2-59075bd4c10e",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "76735ea0-3c52-479e-863e-2946e93c1904"
        },
        "item": {
          "id": "7ccd4ead-be70-4a75-aee3-f96832ceffee",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "128214f0-db83-4c8d-89a3-a69028380a67",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d06f958d-45f5-44ad-8b3f-a36d18a182fd",
        "cursor": {
          "ref": "e61f2cf9-670c-4634-be0f-c7d002c15770",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "2804cd25-0755-41b5-a6fc-79d0a5677626"
        },
        "item": {
          "id": "d06f958d-45f5-44ad-8b3f-a36d18a182fd",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "11525ec8-c550-489c-a7de-e5d52f6f13ab",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}