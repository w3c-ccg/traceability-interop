{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "4a766ab3-2808-4d9b-8a51-c9d68db7208a",
        "name": "Clear Cache",
        "item": [
          {
            "id": "88f6ce78-022e-47fb-9fb6-bfc8c10c8a82",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a0e17c84-846d-424d-82eb-2b808a10baf5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f647b8ff-b572-482e-94cf-29df2e0c6cb2"
                }
              }
            ]
          },
          {
            "id": "86bd39ed-beda-4dba-bdc9-3d5175b2b544",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "23433480-6e13-4bcc-8e6f-c636104a49a1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1a91f2c2-b1fa-48ea-a8e4-b41f81f01422"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "1affbd7b-1b9a-4fc1-88e2-3eee4cb882eb",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c1868d70-c1e1-43f4-8b35-a657270317a2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "51fd34c4-d021-4cee-9e4c-7febe7edd535",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "445fd8e5-ffc1-40ae-a703-9366434fdc26",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c4ab4e63-9bfd-4417-a523-c90d0c395051"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7894a4b3-2b94-43bd-b3d0-dd990a9a5f24",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5033047a-bf32-4958-862a-23b6b577e3df"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4cd5ac13-4619-4618-88e6-89bc0f65e9b8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2dd2a8a2-a687-412c-b5de-2ce318849304"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eba31662-4f68-41f4-889c-723a4f9c7d88",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "abd8063b-4ebf-496f-91e0-0ad3cbc424f6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aca61642-2763-417a-b085-a6bec0f9c137",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6542343e-0af5-49c8-904a-2963e699e0d3"
            }
          }
        ]
      },
      {
        "id": "5a0990ff-be02-43fc-9aec-b50a3f7b4b96",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "5917755a-be45-49d7-8bf0-b0ef16c6e03d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f95c7976-1acb-4976-8326-bc0abe33b43f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7516e4fa-d63e-47ca-b384-24b199dd6210",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eb8c726-7b93-4824-be0d-bb7905fae025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5b68c001-b739-41f5-a75d-686f4223ecf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63a40756-5ec5-4868-a884-587aa8778cf5",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e165cd4-3ed4-4834-9bc4-81e8bbdf5cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4f61ef20-4b2f-46f6-b4cb-119cedd9e0d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57694be2-b0fb-4e23-a32a-6d6aa5d3b19f",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4ac6bfd-4373-4955-83da-93d6484f7109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f878479c-374b-40fa-a93a-423de7895b71"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "03324890-2a7e-475c-bb1d-3a8bc6195079",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6c16fea8-71b6-46c1-a9c7-c84587adb8c0",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af2a0168-21f6-49a5-a8a0-f2ba362842cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "accbcb50-a9aa-4d6d-b109-f0f617102c36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "840b8614-1b5c-4b1d-ba4e-be91ea49aa80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "804f144d-9081-4c56-9751-7f4fb2c39cd8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ba7385d0-c5e7-43d3-a85d-170c8e15857f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "86eb1b8f-d06f-427b-8820-30c26b7a7196",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c02288d2-b06c-46a6-837c-10b791490878",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "86824a75-9f50-46e2-9531-b81f562a278c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6e9f445e-96d5-4401-819b-3243b0861640",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "dc055134-b342-4fa7-ac70-ca42a31a871c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "985f69c9-4170-4205-983e-34f1ed57adf9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e8527d49-b94a-4a03-bcc9-7d37a1b68c20"
            }
          }
        ]
      },
      {
        "id": "97097b91-fa93-4ced-b3a5-3b0a09b3d93a",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "60e5b34b-902d-43c7-8647-94f9b0b27b91",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ac2aceb3-82c8-4237-a997-bfa7082b6b5a",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "501a8dd6-abfa-4213-8a34-dd2b5e1b5939",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a93532f-47f0-4216-9ed3-4c82c15f7fdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26e36880-5a48-42fd-a8cf-c1b3d6df20bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c590c795-0df1-4b70-bbd3-abb546f5ad70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "50329442-b220-4f62-aa1f-d34e9f7db8ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc9b2119-0f91-40fc-baeb-16acd4992beb",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "297b1051-0140-440e-a5b2-1ffa6a3c012b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7720ae7-3bec-466f-9ef3-d3c46e60cd23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4af2d544-786e-4312-9290-c0b12b669508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e6833f59-b518-4e74-bc85-9e2689663cb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a306c41-b475-4010-9535-2cea17d4ef36",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cbad684-7f78-411d-b567-6ebf549df679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1de00d02-e437-4763-922c-72327748b60e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92ed4e8e-a644-4aa7-82a9-8a7a08e5536e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "82f06f9a-b011-45b7-afbd-70aecfa97771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc9bb540-4658-44ba-8772-70a664038c4e",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "300da850-b12f-434a-b04c-855709be6ccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39b1577b-ab90-40df-be33-151de77f9c32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ab4acda-2f79-47d8-b485-71131c24dd9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "20c59a19-a094-4940-a078-04737efc8fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e18ddfe8-bf84-465d-9624-fc1dff38d6a5",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be1b4870-20ce-4595-aed1-6751b658b625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60e51fb5-3ee6-465b-b7c9-833b49f8805f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bca7737-dd1f-4c49-8df4-8c753cf33131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ea0bda69-7c4f-4c8f-afdc-8359fadd5b83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5019bfc1-63e0-468e-b94e-180b747d7f4d",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "201aae9e-a5bd-4c7c-b308-dc4eedb00f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e6967cc-7364-4857-bb5f-d2782e0b108c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b50e03d-f228-420c-bfae-10bc7391b934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "473275bb-82b2-4b93-88dd-685f4263ebb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e2a7862-3b98-42e8-bf6b-ca8fcddb3c67",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a91fb34c-1d77-4fa0-b7bd-b2155a06b2f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10574263-7091-4e75-9d29-e4358715f669"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d2dc837-3f08-4f3d-a0d5-37074957be1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e0e3cac-c1d1-421a-8498-72be72f817d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13251c58-b650-48c3-a808-cf57a5b44aa4",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f59f74aa-864b-4ac2-8d2d-16493734715c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9a2e40e-1fdf-4ae0-9183-02b96f741617"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d40e1f38-9343-489d-97eb-f55976fb1f27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "20466e40-efdb-4f21-938e-6f681a93d28c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd746d5c-9b46-4056-a4b0-d83fd662235c",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be788edd-58e8-43a7-9e89-633f5049c8ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00cf5c0a-85c6-4571-b220-a885a98cc5aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ba35ae0-53c2-4595-8aad-7756b9102151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4c83190a-2739-4836-a457-ab8d25210b82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a1be94a-1cf6-4a27-9e88-66f903756a12",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9a6636c-40f6-446b-ae87-a42c2c8550b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90f3fbf9-a1dd-48e3-9e2b-988c2048c6d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7562d634-1375-4334-b64e-f0c85fe0354e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a1d9375-0249-4e9c-9ab0-d8a932ede060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a4b6bb4-d9f5-48b3-82ee-a8ab954d6859",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d7d8db9-9b0e-4f9f-a7f6-e7ca317de97a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6736c15b-f3d6-4d05-af07-c70bb7cc05ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "266d5d6a-8ae6-41fc-9d9d-4a2e737c9aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "303deb08-1680-4d83-8795-33458e60907c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ce5d53e-0f09-48ac-9e72-e5e4326818a4",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b2ea07e-c63e-4ba4-9378-632cdeb3f176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94c4c00f-5fbb-4fd0-a780-ce98fe26cebc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50e25b1f-06de-4a0f-ad94-b3fe1bdb74d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0fa745a-c2ec-4747-9597-4165efeacbc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36f33167-a68f-47fd-972f-5f96ffbde365",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "945a2398-0a62-441f-b38a-f7ca9fefcadf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98546f34-4a1e-4908-8a54-6eb2fe639204"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7b9e932-aab6-4815-bdd9-f7aec03599cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "82679622-3b15-4928-bf48-32c81f03ca81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a180b078-94b5-4f74-ab5a-3731cc5832c7",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76228d79-2c58-4afa-88b2-d140f6687394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efedea1c-8f13-4309-a788-52127bbbab36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b10d2a65-18a2-40e3-9dc7-cc93e174c189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "87112607-891f-44e6-9f56-4750e183dd49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8156c3f-8274-4b66-9f25-23353a0c6c3d",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92eda564-0675-4ad3-86ee-c5a889ac8ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02ad7c6e-c26c-46a4-a61e-0623915d197d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b29dd6a1-a0d8-4146-a1ad-8c9f1073b61e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f21f235-3597-4eb8-a9ee-9080695244b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfdad783-3668-4c4d-88a6-9250708e6bc3",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78d5051c-7589-4739-b37b-27d4d5e55414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d292e363-cfb8-4bbc-837b-d4767a994806"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "491c658a-efa1-46d2-ac70-403771992754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1f4c5cf-53ac-4c86-a45e-288c3ffaffd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "894b06a3-0109-420e-aff8-674ff9458034",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "260acb58-9601-4252-abc1-8667f3aec9b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b587a766-8796-4f99-b4f3-5cf44e41904a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0dd7763-971e-4bc9-9c44-4dba7c12ee90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d3043d9c-8678-44a9-baaa-d9a0e59dc2dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7845bfbc-bff1-4e34-abf5-dec83ae3052b",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c114412-8875-4dab-bb5a-e6070fd2c66a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a08518e8-7e7e-4d85-989f-aed4a733dc63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2161c24-2ba9-4a03-89a1-639bfe6f24b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ad6ec90-77d2-4b6e-8f8b-a87dbf13a79d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "155f1577-708c-4825-b41a-788a4f496bb9",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e6ac123-b83e-412e-9f4b-0a60a8ede4f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0f60dc8-2a2f-4c8a-a286-d83d12862ba0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc254667-2359-4853-86e6-e69afa163d63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "56c787f6-be54-44fb-bf24-8ece5d67ae70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "606c6f94-8fec-46a7-bdfe-de100bf80ab7",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d564e9aa-de4b-4490-9125-9674e67b63b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0df43e6f-c118-42ec-a22e-d91042c3c471"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1cca7df-8c93-442c-b017-0a8d25a23380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b5d6702-6118-4814-92a6-4b3790409f70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81b0492a-54ad-439f-9ff1-2ce5696a9774",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "871efab3-972c-494a-a1b5-3fb5666ea5f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "767989c6-3213-4ece-8682-976f3d3ff2c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8818ef3-3a62-4fe1-86dc-79d7b1b40c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c81f30cc-c3d0-42a0-a48e-556460f6dec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f40c1b4-4665-46b4-8531-33c26586e346",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19fed5c4-d6ba-4363-bd2e-01915c4602bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15ed11f0-9f49-4f94-b5a4-9cc16fff6901"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01d7777d-ed34-4137-9981-653a87f56353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e71868f-e3c4-4612-80a9-05b5056c4cae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9464d34c-cd3f-4f43-8fb6-8e0133e6c7fd",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0d00bea-0d6c-48a3-8285-5bea374a078c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8fad0b0-d13e-4401-af1e-0b8a985f7244"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38080a78-cfc0-46d9-b3de-f07b363dd5a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8868b323-0c29-4369-9744-7e065f165ceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bcee407-7eb1-4227-afba-d0a9b6d294db",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c39767a-7f8f-4617-8df0-b20daa1ab6bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf867dc8-957b-4256-9cf3-39bc1b70452b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8667676f-e7fd-452d-b414-41324fb256fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e51cf86-bbe6-482e-83d4-7763acffa740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c75e96b6-4067-4b28-926c-eea25e7d2a14",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa80a6b2-b834-4ff3-bb7c-f8c3eb5669cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36cc2d3c-f9a6-41ad-ae62-847204c82c89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de541635-f2b9-44f4-bd56-7c185df0300c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4df7df26-08e5-4e57-9a34-65ea4fd0a651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b4b0dad-c3c3-4eef-84df-dcd094a98765",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd814db5-6b79-42b9-8ae2-cd2385db1d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abb6058c-d8eb-409d-ae0a-8ae21b0d7819"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "485a139c-1367-4e5e-8ec1-cf19ec50561f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8025647d-519a-49ef-99e2-937b13a92c92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19ced198-cad5-47c5-b605-8d9b8a8c3971",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc97bccc-61e6-439e-b16a-8049db63032f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff122ba5-8adf-4c12-9dab-81416c3b2997"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbce70bd-1323-423c-b898-df555a69bea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2824c954-f4e6-465c-9d5a-a53b00c3988f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f007429b-ebae-4b15-aa83-5f6deadf61b1",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b76a65eb-0deb-48c3-b846-44abd4cea967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ff76f1d-f686-43da-822b-6c44223959f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87d10dfe-c623-44e8-a362-774a0d8c4aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb34f9e3-a6f9-46bf-8665-5a0f8e6359da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45e10153-d543-4e79-a841-99abf8b93ca0",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bb678c2-847e-4e08-8f91-2bb3107881d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26597889-6baa-458d-8559-eb6855181d7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "056d94ce-a7ba-4103-b40b-ca976f65444a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1080f703-5fe6-4bba-a429-9ee0ebf1f7c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "181932b5-73eb-493f-9661-6e458405d751",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9afbd1ee-2958-435b-9875-5b925d5a3352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f88a0f9f-e837-454a-b03f-5f8b433d5316"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c9cbb09-5adb-4434-a4ad-457b5468d48f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c5a8992-22c3-4769-b842-a3e5cc8322d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "470b1681-b8ae-4dbd-a099-a7008e712282",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2229d490-3e6e-495c-9ec1-cd657b43d1b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b300d3cf-38c4-4990-a42e-62a3d7106036"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38864dc9-ef7f-4c5c-9a69-58f1f6ee89d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fd75e3a-b257-409e-abc8-2e08c3c49e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1cb7fb4-121f-49f1-8fe6-de5a9b30662a",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edf5f50f-fde6-49e2-9eb2-d94333c40278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c061b03-63c3-4754-8c62-ac208507a1ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53453587-e95c-4691-a10a-cf84194610b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8f40219-4967-4965-a884-7c20a2437f6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdd92a09-8d2c-4416-bd23-246f9f34eee7",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5732f1c3-3065-48e7-a56f-608af641ff16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d9c84e9-86b0-46c5-97af-511f3994503b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "652a3a1f-1f69-45f7-af6f-e758484f4890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a5df7a0-26ce-4d22-a509-be8d08f60966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdbb7b7c-009f-4998-a5d8-f934e36a2d6c",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08aaca46-fe82-42d8-ac03-a2c6a7897629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a843817a-0d1c-4361-ae98-f668f223a809"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f2463af-dfa0-465d-b4d7-466f71f4cb4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "16b3b563-5dc7-434d-a926-b2dd84a86258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52541c68-a08e-45e6-b92f-0b04cbaeedfc",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7629aea-cfb2-4659-b11e-e7e9b9cfec48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1634aec0-4ef9-49f5-bdaf-778b389dc0c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7650aa15-cbe1-410d-abf4-84e217cc2318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "b112a0de-27b4-4273-99ab-765c82e11c63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "446b33e9-9bab-4ad7-9a33-a5cbbdf2dd42",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84c28e52-60a5-4185-9302-4fdf3e3b2f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c2c86b60-b41f-4394-80b8-8d70d73f4383"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c2dc767-949a-4204-b808-51d5580d7373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9723dfbd-6d98-4e08-8d36-51d552c28ff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b654b8d-5868-48ca-821d-a3c1f4162898",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82e8b034-4edd-470c-a800-f76c34f33235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d000095e-d46d-44e1-a620-9fbff6a92672"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05cc2ffe-147a-494a-94dc-2097e3481aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e024504-2035-4bf8-99b2-3655028732db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e2d6ece-a5c0-4f27-91a8-e6d5117a9ed4",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ec9f044-c8d6-4e90-92db-ff47e1cc0361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3063704-d168-424e-a967-96af86b15544"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf3291e5-21b3-40af-93f4-84b8775b0931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a2cb9be-3c9b-4b85-b860-b2b39a0d4870"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2129b114-a2ba-4d18-a1ad-6c7ddc2a781a",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47f66924-49c1-4991-87d0-03b5ed7fcf1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc54d156-1f6b-4959-b61b-f3fb810249e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f16b50-62c4-4595-82b3-810b0a95d90a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cabcdc65-ea8e-4011-b162-c97c41d8a723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b57d4707-8abf-4247-8df2-6e6f3df9af45",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aadac7b3-ca27-466c-a096-b39bef530073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b37c524-2b59-400d-9d00-9ec263e8af2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b9939d4-8057-420b-879f-339fad3daca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "677fdb55-aa52-447b-9270-233c76667d11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1483d138-f7d2-44b5-90e0-db5375898108",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "372756e9-5952-44a9-a3c8-c7b43834ca39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e37c0a66-fae6-4de5-81e5-3d233efd30e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c93029b1-b6f4-43fe-ab26-1d74942d1fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd26614d-e78a-4852-8d88-8fe2f7a2effb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b64dd72d-0620-4193-bf0d-4cd318ac0954",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e08ebc11-e810-4857-8822-20bbc63d619e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fea5d206-584f-4621-9db6-eeb59111969b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65f61e98-53e3-45bb-a42b-bc96ee73ce80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "ed33787f-9f07-4665-a484-94c96303fe76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf6a4afb-fcae-40f8-b9a8-a0c9205b7d12",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c291de1e-9763-4575-b30e-7b7cfda03aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e6620e1-b663-4eaf-947b-b405c7033df6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fd830b4-7c04-4909-a25b-3b52552768b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "007c50e7-847a-4ba9-b014-d7094c410d03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b06d7636-e571-4537-bcb7-98fe17fa5635",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4f58a88-a994-40d0-aebe-010e2a5c5c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0df94206-1a3f-40ac-b13a-00984291e87d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9d9e3d7-2b4a-4ed9-aed4-ff1d269794c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "70fb7b45-6ad4-42a1-b0f1-b8d33c40f38b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3769dab-886d-48f8-ba9c-7d44b73eb699",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ed0d5ed-2616-4fc8-80f0-8438192cc29f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "549bd7ce-141c-48d9-81a0-f0fb6aa685d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8923c3da-15b4-42d6-b928-e58a72a77084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "36ecf10c-9ac5-4b2c-b0c2-dad130f4296e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed50310d-3912-40be-ba6d-93a7df58d2ed",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abb9d9af-afcb-4aa9-82cf-f8a73f188613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79170ef1-5436-4300-bbc2-cc1daa5592b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daccab7e-93f9-4cdb-8f4b-a802fec2a33d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4baa8ac7-dbc0-4e98-bab7-188079041c86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3d432bd-a87b-44fa-b665-cccc95fa8ea7",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d432de8-2e60-4978-a5c9-4461ad9295a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0f387db-bc5a-423e-9f0d-939fef1bc6cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "009d5e26-9e46-4cad-a50d-b6ae9a2802db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "60375c93-19e1-4373-8f87-477319032be3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1628ec14-e232-41e3-8bae-04c76d1d31dc",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ae698df-864e-41ab-8d2a-ef19fbdaacc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46dd4448-18f2-4eb2-8506-528c019654ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd4e081f-1c48-4855-a563-7038e1f9a148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "59f995c1-7681-4dcb-835e-0d466df0635b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b461e0d5-4247-4e2a-8420-7ebccd7de852",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "806ce85f-f33b-4d67-911f-52dad01a77b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9258e880-e5b5-4d43-ab58-b704a7503bf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d14f97da-7f58-4b36-85ce-6889a8382f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "54b8017d-2508-4b53-8ca3-57f5aa4fc533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e9bb269-bed8-4296-b7d6-576d3945302a",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcd45cc4-3657-4771-a5da-b18f9980569e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2134b39f-e87d-4a35-897b-f69654b99702"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6303195e-9bb3-45b1-ac6c-99b02029aac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "95253627-6e32-4204-b4d1-4885773b4144"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3c37ed8-837a-4407-9a09-d0cbbb40fabd",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36a238bc-6fae-4f08-bba7-cdd534a4c048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2866a787-f040-4dfe-9463-4a764a9b1ee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55230ad1-02d6-49d3-a5a5-8e78b0dd5294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "89c490a5-9542-4fef-a9df-8df56c33781a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43edbafd-a038-4653-8a42-7cc6b66f205a",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aca06ece-87f1-4e19-add7-e04fe03718f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "054371ef-b5fc-46a5-abed-b6e1a3d29092"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2db1e8ba-e3a7-40b6-ab2a-d04789d22511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d08ce63-f82e-49e2-8f84-01d222c16115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ff07dfc-3e91-4e11-a441-d0787a16d2d9",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd20b731-fe76-4436-9e58-15ecc1d1d1ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a84b989c-ed41-4a1e-ac78-37e3f3c81525"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df78b86b-7262-4d8e-9800-f32ddb5cf704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a6d5714-b222-4fc7-ac7c-8f0c48aa4e67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b19d8ef6-0a1d-45a7-a733-33c96b043b4f",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d609baea-7906-439a-8b97-30328d022a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eb85a22-85f5-4403-b67d-f3ff52c94bc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc24d226-6dfd-436f-b1f0-2e7bfe733dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7dd91964-47ff-4933-a6a4-3bfc1620e34e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1e7a98b-ffea-4756-afd8-45689a41f4ea",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed7b491c-db34-4025-b002-dec3d92f8be9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3bcd2c6-ad55-4acf-b82a-f9dca133551c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a83ecf7c-0fd0-4f7e-9a04-08f990e55c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "44e44e64-a966-43d8-917f-d4ac2ee7ea0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dceabef8-8ce0-45bc-8c20-5e29fe60b477",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e15ffbc-6f1e-474f-af3d-85649ead5525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6394bef1-18b9-46b9-9930-4879ef69ad28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "887e7d63-8d46-498e-9f9e-bf01008e91bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f410b5b2-fdb5-4d4a-8c2d-8833c3b39cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68d3c980-b1e6-4837-bb2c-8244e996aac8",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de9a41de-92ff-4e86-a96f-6cdf86554ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b81fc61-400b-4f0e-9441-a9fe7bc585f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d150ae0-1a60-44df-be0d-4dce9c0dd0a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7fa7a70a-3a9c-4454-98f7-c7d6d5a8e7fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8bbd22d-5d6a-4b42-bf03-81de330959ff",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1352e45b-5f7c-4348-a166-f402998c70a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9a7252a-639e-42e6-a7e2-f222e954f749"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "440292ba-9294-493f-90fe-e6dd4a52d081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d1b3dba-0b69-471c-b508-3d5b09f7f29b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "475d3256-50c2-4d1d-a2bd-053b361a593c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e034d0c-383c-4a5d-8ce2-e33abf03208a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fff8ca3-030f-4d01-b92d-58f7f90f6856"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2fe709c-8fc3-4a57-b745-ffe3ed81d9b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f5427512-de27-4408-802f-a256f2c70d62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c927abf-e2d2-43f5-b9b4-6c666c79178a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9f0fb74-ff40-43ff-afca-de9a950bd52e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e94c420-0a86-4c82-9694-5c454c27b20a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67883251-d1e8-4903-b839-86ea1e74ba07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ae20d35-76d7-46ce-b617-df55dd5a2489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dda2fc36-aa52-4925-af66-aea2742d7ec2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b396ea0-3670-4c2f-b471-501ff83e83f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f68f48b4-7652-43b0-b760-437ce6d788e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4e64bf3-0384-46d2-99b3-b1ddea3b8bc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e58aba70-ad14-4e6f-b8d6-1a56dd8d3af9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7563c385-f697-4a47-82b0-fa852ee90f8c",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2766f28-c4af-4c70-9016-80a4c7338949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeb25c8a-7c68-4e96-81a6-bf0fe791d670"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a2921e3-d988-4a43-8f9b-1bd8b3c48c77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "e53232e6-c5a8-46f0-a4ce-a672600eaf23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1873b91d-a333-4194-bd0e-7209a055035f",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bef85123-2b23-43df-82e3-5168ae24fcdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "651e9eba-ed9f-4e79-8d06-c74e7c11caac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0647f23-a9b3-49eb-8018-a3077fb28074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fa824dc-2e7f-4f4c-97f4-7ee2d4e9892b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80ad321f-a8e0-438b-b1be-8710807b7c45",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bd9cfa8-5365-411e-8ba9-d5871144d173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1751db43-3481-4edd-b1d4-acde0a0a079f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74d8e8f4-8d8f-43f6-9981-02f65cea498a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "984d1864-0fe5-49b4-a18e-2a0a411a19d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f146fe3-e222-4358-8d26-3af2ed3b88ad",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fccfce3e-f7de-438c-aa5f-0d8fc12f2dac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07d67336-d7e0-461b-842a-f4edb5b356cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54f65c56-1cdb-4bd8-8786-c908e02983e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "afb44cf9-6307-488e-a3f9-f471071f2bde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afa1da65-5612-47bb-9521-f27a20754c49",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9bbb100-55bd-4f57-8aad-e6f6fc4766be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "898d05e2-914d-4db9-9bd9-f2ef1850cfdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd2d759a-79a9-4e53-b131-94f103b9c8f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1f1f799-c3b6-4b57-aa1a-bd32137d1eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a67a4ae-1441-4058-9135-5029d9f4bc37",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf788423-29ff-44fe-88a8-b39db5af708b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c80a0f5-6ffc-45ff-bce6-8a90c912034e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4de599be-51b8-4cac-862b-b0fd8a952b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "606c4047-9c01-4b6f-a409-f9dc63c086c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5db1f843-d2b6-4862-8bc4-551aefbf8254",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bac7629e-b8c1-4eda-8207-1ff30158eae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82de3e0b-1cf1-49ef-8319-1a01e89bb869"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6349a132-8b24-4172-a99e-01b3c2cdb93c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d32bb19-cfad-4fe3-9cfb-28fabd58ac9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e6a8acf-7da8-41ae-ae57-c9c38e83b968",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79732c23-74c8-4bac-aeb1-f06316011a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dad947a1-f3e3-4fc8-94b1-e1c8b92b5f3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "516a21d2-ed0d-4f46-b3f5-006cb4d731f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "99dbb7b7-2222-48bc-81be-6b34cd8ce30a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b49c0b5-2e7e-412c-946d-384602616a15",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0caa2fbc-9ed5-4c84-95a5-1364e728b74e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a05f1d9e-7e3a-45a4-8434-247903e9f7ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29f73e5d-2dc6-40ba-a8cb-0be7b3fe15f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "711db481-015a-4740-b708-b557f2a0b2ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c09cf3b3-1dd0-4f80-8d79-3e6fdb607249",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7221342-c39e-46da-822d-4376b7975141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc85cd48-bdf7-47b6-93e3-67dec4020e02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecff0770-ec04-47ca-9b9b-396bd6c853d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "08f9a43e-92e8-4eca-aebb-313c2e6da39c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "106303a8-bf92-4da5-b34c-59d897845c61",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2afb1f3a-e9dd-4977-bc2b-a44bd8d96afd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eacbbc8f-0261-4a64-9ced-4b5e77e76d16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f091f569-e4b0-4594-b607-14706ec643c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c227ba2d-4457-45a1-9ed1-47e2e8e16207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a497446a-16e8-4df9-9522-b5322a398693",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2afce6d8-2b61-428c-a1b8-48af42cb146b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3a11211-d48d-4433-9613-1f4df5696159"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f825565-37f2-4432-9d24-a261ec1b6990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "db5e9d62-c1a7-44ca-8b43-8ebbc261213d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "667c9d33-2cee-45bc-88ae-7bf8752185d4",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cef92f07-d9aa-4a40-8743-ef93d0d3baaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8e8c3dd-89d0-42f9-b1f2-ee008c2bcaa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39ee91de-49fd-4322-81ba-a57a1c241e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a5cc074a-b367-4669-9283-a74767f16413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79a63edf-83e7-4654-a880-226dd86cb162",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ccee94-6be8-4be2-98ac-e40aa6f38d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb423517-6ff7-494c-8715-6131f4dbfc0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12b8c6f0-e771-4134-a589-169f61844f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4592812d-7acd-4f2f-8ca1-5096d2fae034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3695dd86-ec72-4754-bfd5-265e5b598b99",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5598defe-b209-45b3-b23c-ee26d6e58c05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3145076e-dbaa-482e-8bfc-5c715352897d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eee057d0-4365-4b44-9f6f-c1cd8866827f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "68511049-8558-42ab-9494-d2874737b8c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c175cc2-6dea-4f7c-8c81-44b69f3413dc",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a31dfdfd-8f46-41c4-8345-daa204d891ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b265f0e3-bfcb-4919-897d-384ee75adce1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a29cad65-f8fe-445b-a75f-61f5f37693c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "06be27e0-78fa-44da-acb0-a533ddfda02a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fecca1fa-6c6a-4604-945f-bf57b6a26786",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c87e667-ea6b-44ee-973d-d1b89a1d9880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf150c3c-d1e5-4424-a218-4b37c03a78a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bf5d70c-f41e-4936-8354-f7d9650e039d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "de546ab0-469a-48b8-bc9b-2ce73b37aabc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3e55971-4419-4123-9f90-5768b699de72",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6db1f45c-cff1-4d77-ae42-19a4d5ab99b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f66aabc-ddeb-47bc-8f87-001c9a421ed6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a62b13f3-67bb-4f0e-9c60-b432c15c091e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "66f790f1-c6f2-426a-a224-f928e147070b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49ad5f5d-35ab-4605-8985-aa3d0d341dd5",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2524a22e-3b9e-42d6-9e9d-32385337680e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11f30070-d2f8-4887-8dc4-4e637d2f8b0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e365b543-3317-4b2a-add9-af9ede3b3b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "38505a6b-5754-49c3-91e5-6a0bbcab4e39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "274a7f64-b581-4285-85fd-1c50779b477f",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a41fe5cf-15f6-47bf-950c-a21de8dc0670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e248d111-513e-4365-9c98-870e3c7c6d9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "572e545a-7563-46f9-b008-a3476df029f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cdaf0ce-09b3-4830-9871-e5f49e830319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9874335d-f249-442c-956c-aa8759f23b6e",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abd101c8-e40c-4b19-a3c1-342212c1ba2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e14ff46-ca13-4bc2-9592-ebd7a8359e6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "716e0138-b744-4915-b377-ed0a766e1f01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a2537d6-843f-4b21-9f3d-75f817e95fbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "721c48db-e691-4b3c-aed1-89a53279ac5b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a255666c-6eb0-4b83-ae71-5a00d462ff51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d88d2f6-fb3f-4b44-a4a5-0900bb1315e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d2dc2de-12cf-47a0-b227-8bc25f9d3b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c24edc12-0d13-4e6d-8e54-6ed69ab89d85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bef5f3a2-763e-4e7c-852e-cf3e66e55ee6",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29d86aa1-86f2-46f4-8b68-21328bff51ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cbd16bf-8c27-48dc-a628-bc15444ffae4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb731a1f-5974-494d-82b1-feebd47f1821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "062b3fba-9944-48dd-9dc4-49cbbeb05b7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "888b46e2-5c9c-4ce0-8868-cf0195e3ab28",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c74bcb19-0da7-4ee6-93a4-05899ecbf896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c1bc57f-022b-4028-9027-9b157b8e68c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "569e784b-61b3-4fad-8459-4a9f43377db5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cc7c3fcf-f78e-4f9e-816d-fbc8d670da0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bab5759-8c33-498b-8e94-ba5dc80825d0",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daa87b03-8f21-43dc-a3ca-2cd57103e943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4d6f495-ae9c-4232-b702-e8f79532c411"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a44ab6ec-bd23-4699-85c8-4f3a7e6ecc69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "827676aa-6274-4633-8ef3-8358747ef331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c941404c-5623-40dc-9d11-f4d068c4fbbd",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "644d35ba-4943-4d59-bb47-1e3798eb2ea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec56e375-1f21-49a7-880c-2fd63939687f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84ad0e53-5cdc-4783-886a-bf8db448cbf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2070e256-74da-424b-baf3-b88d8b3cf649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65f34558-f9e6-4c3e-af3b-ffc7bf076a9a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98a1aded-644f-4d37-9202-ff258a0897a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19b37cc7-403e-4b2e-8106-b371512fe0cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9539697d-95bc-40e2-a8f6-81377df3048a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5a63b43a-3eb1-4b39-8169-3ef43a8bf455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43be04ed-d6d6-455a-be3c-dbc98eadb612",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af6ae384-2115-4f18-a69c-cc71de10229c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "791674bc-234a-490e-9304-5aa85bed6c7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edd94eed-d82d-468a-ae5c-b8993b2cc3fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "24c36786-f2b2-42b1-a1e7-ee8183d16151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb351f51-3c4e-4ccd-95c4-b9835fb02df3",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1acfa7ee-354d-4830-b375-fa2ebf0a040d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "159b012e-1b1f-43df-aa52-f24b1fb0b0f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "689c896e-073d-4625-9a85-5ca67c388d2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c8301bd-b624-4247-8931-5abf7235ef57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26a2b2e5-3580-4e19-8e84-d7b70f985977",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8b06238-810d-4cda-9fc8-aae9be48f029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f187fe4-12ca-498e-b07e-abf1fb3ab0de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15a5767b-28b5-4d5b-aa0d-c4895d9c3569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1f36355-6db2-413b-95e9-77040c19b97a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9d8ee40-32a9-4cc7-a48d-9dd4c646046a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "392c7df6-3b04-4c33-9b1d-4e5aff196415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "64d79fb3-adc2-4896-bf1b-79eef8a173ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c669a752-abea-4e96-8a43-fbc769280a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c9166f2-2b9a-4578-850e-cd352f161260"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "144fd610-9898-41da-b723-29720ea0923f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d9fa2396-752f-42d6-83a0-5379a2a01a13",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca247de6-d4a6-4fcb-bf7c-ee28fb80867f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6dcdb8ea-1187-4310-b87f-bf1d07dcf359"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59d828f5-c10b-49f7-ae62-6d5cbd1e57f6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc2bcbc6-1b88-4089-806f-1678dcde880f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "034e3db9-6109-4cf1-ad0c-f9ecd89bcd35",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "781f5523-4b86-49d7-8e36-7f114125b434"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cf8db7fa-6dbf-4d48-849d-953c310e4464",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fcdc03da-0af6-4e7a-817e-35d830366707"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3c0db643-c095-4b2d-aeb0-1c99f60125e1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "76e0fb40-a219-4e03-b0e2-56d669f4f434"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "dcb6d185-6dd0-4476-8bbb-26b1c9f6ffdf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8b6a8091-6cd3-46f6-bfd4-51d8157fb49b"
                }
              }
            ]
          },
          {
            "id": "ca51e46f-0412-4977-a9ab-eddcc4d509bb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b16f47ab-614b-4da4-868b-3aa418bb6e9a",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "75ac01f7-8bdd-4a97-9c12-cdae8df1a9e3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "130d893e-d386-4720-9f18-133a267820b9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6f4b5323-794f-413b-a24e-d8ed77c8d4a0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3a76f4d4-1358-4403-a95d-ab670c7b74e2"
                    }
                  }
                ]
              },
              {
                "id": "9ecfd36e-c1aa-4cca-9c37-4aeaa39df3ad",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c45a975f-ff4b-4eea-9975-c9c6d4c6e36f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a6c8c312-2dfa-4240-9909-da3099fd6cfe"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e5ce09e9-a81c-40fd-9b93-f6d305a1b39e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9eee211f-384d-4f5b-ade5-e256ac160baa"
                    }
                  }
                ]
              },
              {
                "id": "8767c49b-12d0-4328-a14b-5af197e725d1",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3a4503fc-67bd-49f7-a469-d5f4ed9e1242",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "87698745-deac-4aee-99a9-22784dff3012"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e19fbe49-db47-42d1-996f-eddebf0912dc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9d837e0f-5daf-487b-84ac-c58d6165dc68"
                    }
                  }
                ]
              },
              {
                "id": "465e288c-8f67-4317-a814-485d67d878d3",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eed4e98a-38c7-43f1-8ae5-78b9d9e01120",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4ac76c15-f2bd-48dc-8016-c375d0dc23d4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b5ca7335-adcd-482e-bbaa-f10acadb308d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "8e78857b-0c7a-4b71-968d-fc38d1a602b1"
                    }
                  }
                ]
              },
              {
                "id": "9683cf6b-4d64-4067-a15d-69cc10039e08",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd5f69fd-ba73-4497-8f67-38ccf9d80610",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a975fb86-cd31-4dfe-bc0c-8e15cc12f847"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d2158e4c-b415-4584-b1d4-fce09c43f8ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "ebd6a0dc-20d6-487d-bfa2-a30d8bb26cc5"
                    }
                  }
                ]
              },
              {
                "id": "3867276b-3ee4-4ac5-b05e-001c6bb698be",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7bbace67-0b4a-432e-a4ec-9133833f2a90",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "288b80ee-5ab1-40aa-8959-62b36e845c33"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0c1cc711-4cc9-42e7-a8f7-5dcbccce3c7e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8e241415-ece9-4676-9c5a-809572330748"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7845585f-d8d8-4f36-a01a-173b310ade54",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6418b605-8c4b-4993-b004-f5af21351f5e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7c2e7d41-952b-491c-a613-8d52050b9e6d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e5611f34-491f-4f75-99c4-94bfe8a076a1"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cad25885-aab0-4901-8170-4ddf33337a04",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "894eb1b4-a486-447f-9414-4e540a41b150"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dd3cbdcb-6ff7-4418-a445-3ba545798b03",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6f3fb101-cdc1-4d33-8f9f-798bb74c7984"
            }
          }
        ]
      },
      {
        "id": "86699d63-af6d-473f-9abb-268421a9d02d",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "ce61c266-c7b5-4433-98e5-9ecb85c39e9e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f5c3c3b3-7394-45cd-8b14-5d8a0501ebe1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f227842d-7341-4469-9e05-d438fae30ef3",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3708418e-4654-4304-a108-d5fdef2af287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f05af63b-b2a2-4671-8622-2126d9c3e175"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f58f9417-c0a5-417f-a0f2-0882e0c5795a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "864adb9a-dcc4-49a5-8b81-f935e407b5d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7d8ff35-4391-4738-a89d-ae602273cb12",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "619cebcc-7b7e-4284-9eb7-c60260b088c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd9b2ad8-098c-4c6b-b515-bd3ab688b80c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2763707f-ee06-41bf-9f3f-0467cf332c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa6a296d-61a0-4433-a4b3-e54261652c50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dacfa39-859c-4a58-86c5-e1abf1c50f69",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24462c11-91f9-498f-8634-5765976961fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "def1090a-c8a8-46f0-b3e7-ce66d44b862a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8b68335-cace-405e-95b6-90e24843b194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "44ff7f0d-dfa5-41cb-a84e-220714aed538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0be908d9-ab7a-4937-a122-846fc25c9ee2",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddf529b0-7b1a-40a8-8ec4-ce1ea24e28d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64cf63d7-93f5-4be9-a346-019f507ab769"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5a2af34-c398-45be-b1c5-0ce6bfba011c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "41966f26-bd8f-41ad-a598-961835cce426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce15f65a-23b0-45c0-ba6a-6f1b1b038d79",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c00ce7f-bbbf-4c38-8e4f-313d612206df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78d791fb-3a1a-4f88-ae9b-dbbc5f6ced26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "054a5296-5b2f-4da1-91d5-a94f5148ed89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "77eb2185-e1c5-4937-bbd7-cd2a1552d359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c684be-08c6-4f67-a93c-09df44ad5d42",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dfa4d43-04a3-4ea0-bffa-93ead893d231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2acf0708-b870-4636-bee5-aacc8cc56790"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e86010fa-f230-4f37-97de-3c36b6d590b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0108b702-d251-4bee-bfbd-fc663bcbd298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d138e6e-569f-4c77-89f8-1f9dcfb526d8",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "539aa6b5-cabf-4316-b1d6-eaa58997ff51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b0f8163-69f0-488e-aa5c-17a44f74cf1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0ee347f-7b66-4f38-af62-dca2a0c4e1f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "bca3432f-c41f-4abe-b3b5-2dc46830f485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82c5dc78-ac57-4a8c-b09e-5d85d731d6df",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44b36548-dfbc-436a-82d1-f7f99326da8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "363284d7-6ae8-4909-a39c-977eddadac72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8907ca73-fd82-44a1-bf7d-3b12769c71cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6245423f-ea0b-4410-9f26-a568fcc62ffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc1c1345-a40e-4ba5-8ef6-e82852824fda",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3566b0d0-6375-4096-9f56-e7a2f93ad887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b912fbc-886b-4bd8-a16b-5211ce11866e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "966c58d5-e612-4676-92c3-080929b7fb96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "48055212-304c-40b0-ba83-9b293f0f3110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a2823df-fa9b-4bf1-807a-eb3bd5f9e9ca",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61a45f96-5906-4801-81b8-1160e64209e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05dbe26d-a946-4012-aa46-6a7f8e97ce20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a00ecac-c322-421f-9cdd-834b294ee671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4132b97e-84b2-401a-aeee-91d744c59153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "360bf087-d3c6-482e-aa4d-706f52cda314",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7934887-51a9-4d66-967b-f3a375a881c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "453c8383-b307-4b6e-9f73-54c5acfa0f78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03f3c324-5c35-4a31-b509-967c2ded1cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "78fcead7-46e9-4852-b11e-313efc19d8a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c9393d2-25bf-47a1-a533-4bd2d47cb9cc",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61819d57-f2be-461a-96f1-a31549210e95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab121699-6710-4772-88f9-15209e3c902f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89e4e681-9894-4224-b037-d1c109a4a824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4787e825-a930-458e-9385-ba275159beea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a2fa293-fa34-4cd6-bc92-0a83228d5afb",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a24c4a5-4cb4-43c1-9ba9-7e0bc84e720e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95c957bd-0fe1-4d79-95b7-e54737a9bf3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f45b2a99-3cf6-41c2-9590-462feea6ba5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff5483d7-4bf1-4a14-95ca-371fecd0aa1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9018d8e6-5f7f-465a-a7cf-e9b83a768eeb",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e74900c-2609-4366-9b8f-e1ca3f99f707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70d3f1aa-d4ee-4660-bfa1-b637c7e0aeaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75c22ede-e075-4097-a3c8-993bccc4d1ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "141e3125-e1a0-457f-8908-8fa05844352b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a870690-b35a-4b7a-a436-e8feb4e8caf4",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e0ff547-ec88-45c9-8511-2cbe399aae08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1be0411-22ff-4686-9cde-237e82d67a41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88f76dd9-0b91-4e19-b694-dd96248ef2a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fee644a-1196-4292-90e3-8b199d7fe88a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a317aba9-be38-4ffa-9879-49060fe604f8",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d7540c4-bd47-4c01-a221-1a13ad483327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35927c9a-8e5d-488f-98d0-1d54dfe05416"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3c46773-420c-4d5a-a455-e470165f7cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "cce82e01-d697-4294-99b3-2b74f56c4b89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92a23ac4-7930-4d9b-8f53-b1be7381f3e2",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcbe0dfb-21de-4be5-ab81-7d5d9eaa5234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d11c8072-e62a-4a68-a7e1-e2a6cdf33024"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58e81759-2813-4f17-a570-768ab7f79844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5a20a5f-74bb-46dd-af2c-9e7c350a3164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "033052b4-062b-4881-b3dc-b1030b8a7717",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccf6dbec-667e-4242-b8cb-07ad7c2fd2ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81789380-777e-455d-b2c2-78e0bdf13780"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa40710e-35b2-40c4-91c2-84f6eed205a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "da443dc8-db9f-46cd-9f4b-854553b74880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cdd5841-c928-413c-afd9-560b63d297ce",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c804bdb9-d333-44e6-841f-3f658c79c339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c12769f-c784-45b5-9a47-fb5dce3b19ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29556464-d660-4ea2-a00a-429ac31f3662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47c1429a-c87b-41ad-bb7a-dd2104c4e4a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c4fc691-a681-4c96-a9c9-f63da10edb0e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a396ae35-5c3e-4868-98af-eccf3fc29987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4063b8a7-c6d8-4148-9585-87d628c7b31b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76260f0a-c736-4ecf-96a1-6a3aaf6609e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "676d12a4-2236-4cc7-9dd8-fd723bedb72c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f25911-c3de-4a23-a0b3-9c28841b564a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f3bb75f-b4c5-4ea8-8b87-13a785156bbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "493cb603-b857-4d3b-a6d6-0cda52861c90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f1d0f3-be7d-4adf-8beb-64b44ece73b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdcd9a3e-0ab0-4c11-8526-f8bc59886c9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "456cb0fd-d525-4055-b2be-24ed43d773d8",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e347e1-a25f-4358-a5ec-5e0c59bea1c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bf6ce90-c689-4fa5-9604-ee12c3e22e3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78c73a5c-34b9-47d9-b647-4e472d200614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "44ac7a6e-a03f-43d0-bbda-ed9ae0a35981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc10db20-5e2b-4f9a-b46a-d6bb5581e212",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "976adcaa-ea5d-4aeb-91fc-56421ca18c5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9979351-3ccf-4b99-b696-2fbbf255cdb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4ff37d0-38a8-464b-b800-864bdd673215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f513017-9fdb-4621-a643-24d63a85ec6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "418e3fe7-e3b5-40ac-a789-59d97216fd4f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecc23b64-a017-4399-ae2a-3c1f059687e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dac1edf-09cc-4c5e-9f63-af1772db38fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4880e4ba-fd6d-481a-82c6-9121fd9b2d4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "988817c1-4234-41da-afaa-f16ac0b98ca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e6a1626-e608-4516-b667-393978371420",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10b8632a-2c77-4216-944c-4c58b391a2d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57ac26fb-b6f7-4519-a63b-5257fb75d7d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a6ec6a7-cc89-4b50-a737-9d452517e1fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3943b077-0ee5-46d7-9232-1cb280dc9f30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71accf33-865e-4e88-8a3d-c3cd1c5e5d00",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd1276b6-3ece-4dfa-9a21-57506b3cfd7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d009cf2d-e142-480c-a072-7b12ac5a2d74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e67862d3-0ce9-44d5-bf8b-30edd6828687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd8f714a-b80c-4c43-9d25-a630d37eb8bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec61a34c-1198-4728-9a79-96aad54c9dc9",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "986e1b75-8706-44de-9a68-30be5cba0511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd44b874-e2d4-4533-9332-a36030307ff7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "965c951a-170b-4ab5-a47b-e3c85d97b7f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7df3f81c-580a-43d8-b9ef-af8ee203dbd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c506dc0c-af3b-4e1b-baa2-fec7cc86581b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c191554a-40ee-42a9-8630-9fe0e9cca8f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0083d158-efa3-4191-baca-68956fa91032"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "021d7d26-724c-47c9-999b-f824daa2aaef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1512f5cd-5bd3-42c8-95a9-2d399d3763bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f31ce309-8138-4222-8408-5c0567c2ef9a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3b5d7b6-88fd-44c5-9598-17ead1aba4ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b915c2df-651a-499e-93a7-ea2613f5bcd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20bc4316-cc2b-47d5-a6c3-c4becf545522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f28e3069-49e6-4de9-8ae5-5f9ee1e5d5dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92346d31-8b07-4ada-a8f5-88459673e6c5",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7c5be3e-ccb9-4147-b4af-07caedcad6a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11293d2b-7988-4b6c-8efa-c3bc0a1344da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a609645f-7759-4119-b718-e4c4566c5351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26aa2f53-5bb9-4716-a52c-2e5bea34ba31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "705b0bf2-6fdb-4c37-b060-011d53562b66",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25ce8872-6443-4a79-872f-282bb2272e61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "131e2c6a-1175-4136-ad34-5648214be2af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9434fff4-6745-456f-9935-c7018675ebaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b11a44f2-ee1b-48aa-bd58-4dfa776ab7aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e347ae21-d8d4-4f18-b446-e71a9580bcb1",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b41a5324-d1a8-4640-a581-d4a54f0f4a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02370670-2040-4c70-81b3-fa31796fdbfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34107acf-7fab-4649-ad08-2db9b5c20ff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c82656c9-437a-4e2a-bfc3-78a609d63f11"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "77a1d23a-c430-4590-b01e-12aaa160497f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "64d88545-d7bc-46da-851a-e905445038f2",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "335bcd07-c13f-4046-99c9-c0a21d41c1e5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "61b45758-f093-4b82-a01c-a0395fa32e4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa7a9e41-7792-4335-b372-17a7a5c2b06c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ad24028d-996c-4afa-86b4-8da11c397a2e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "35d4add8-9f95-4f28-a2d6-20d92b1fa9cb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "48bc7339-5591-474d-91f6-5b9da7539fe6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2886f75e-062a-497f-b04a-27fdecb3a39f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e5556d7e-bfa9-41c8-b21c-7fc9fb18a876"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c37378f1-5369-4c01-b408-4d1c0a52632c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e0cbe26b-e9d1-4a2e-b2dd-12a5e016d2d5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "55c4e408-2f9d-4084-8cec-aa0898fc911b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "354d8889-b172-4366-93c7-c8731ed983e3"
            }
          }
        ]
      },
      {
        "id": "0f8b66dd-cd05-4c29-9561-bab9083a9807",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "2e470e37-7e11-4d45-a276-b7aa4e062b23",
            "name": "Negative Testing",
            "item": [
              {
                "id": "94a4aa2c-9321-48d2-9648-ed56ff03742f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "476085d4-75ad-4b98-b1b6-0e81bd96f21f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d442b68-6f27-4b98-99da-2f12d0b0c38b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43d1c30c-608b-42ce-8702-7d922ee4c2d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bf308cd-4780-4147-aff0-fe1f6526ec1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4536138-dd04-4aa9-bb72-1a1cdc1afe5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47650d2a-95f7-495f-b1c8-72d33b7f3102",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59f3eff6-c60a-47fe-8dd5-7b5504e11f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e33e1f6-3007-4858-bf58-36fc9af12611"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6565725-1801-4027-a755-76c55290212c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "80da1cba-9317-40c1-8294-8864e609d2c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7456954-888f-4c8d-92ea-f6fea5ab508f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b2606c9-dbe3-4ef0-91b9-5b0de4e36e1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47114d3f-b8a8-4ab1-bb10-bb2b9b68719c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "604407e8-b015-4173-9761-40e3fa0d425c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6ae44df-c924-4fbf-8171-9fe6f23830b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a85ed485-5dc5-4cae-8840-63acb1d8da6a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e585c3d8-59f5-4753-aea7-62a508a5e40e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cf98973-4bb5-4a7f-9f17-e2f504b4eff6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69cc6f93-cab3-48d6-8ea8-669d9696f401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "47bfda95-ce5b-42e5-ad9b-744b590e5c70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "619db5fa-7d03-482c-b20c-65822b9754ae",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "623c84f5-c911-4fe5-8c18-593673d3d626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8edc91ee-37d7-4e8e-85b6-402a3fdec53e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89874636-ed2b-4b4d-b4ca-a06c9c63721c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee051076-f587-48dc-b7c1-4624343b5ec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b566417-b3e7-4fd5-9381-9f1c38eba662",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6441602-158e-437c-a698-c21a700505c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dfcb667-0843-417a-af2a-dab4f6f3b34e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7feca822-a5f7-4466-b2b1-cde81a6512f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2bc45e48-9ebe-4307-bd9e-c6d56378dc94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8da0341a-6877-43e3-88e3-61a5f1d9b795",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d4324e7-5a0c-4705-b6c7-6e1acdb29568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ae37ac9-2bd2-4274-8133-a62d203f383f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af8276e7-6f7b-478f-8340-5f64e739d671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c849d109-bd50-425d-a353-d6fab7ea5bb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d14c6fbf-08eb-47bd-bbec-05f41141dcb0",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c20fd8e8-1e37-48d9-88e2-2120844db048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5619c274-67d6-46cb-b77b-2b821563ba79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdd7489b-0802-437a-aaa6-15b36084fd58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "29a48c88-3d46-4ad8-a242-4a02efa13389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f0537a1-874e-4971-8b21-03f92abb2d08",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "894d477b-5368-47de-a73a-efabc14e739c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38849462-1daf-4e16-a7c9-31e6f7bfa6f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "306966c5-373b-4cb8-a831-32bf91b21db6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b53ff10-2688-428a-bfd5-ba1294dc850e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fce1534b-8144-48ad-8dce-0c83e3781bae",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b9848ff-d305-405e-8182-ccf9254ef0b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61e41d92-745f-4897-ba39-ca6d1a0169a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b94863e-34b8-4cb9-ac93-81658ce72cc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "526b4ca7-1750-45cd-b2fd-7923b6ef55b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4e49eee-4c3a-4a2c-86f6-8b5911aaea0b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e35d944-2420-40ea-963c-bae1e5e43c60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddf83aec-43bb-45c3-8d0c-c6b83e40f496"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b98d0411-0de9-4a43-bdbe-692ce5957a5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "efdadadc-9dcf-4098-82c4-a62176059ccf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f74c41c-53e2-472e-8657-eb4a336c906e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e164245f-3dfe-4dbf-b230-8f51d264d5ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4523a0a-06dd-4bfc-a689-748ce917b5d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01f12826-9080-4821-94b2-32fd5f380619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2a81d6af-1595-4db9-a694-458b63e4ed19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a054b3e-6479-4fe8-91a9-84d8db144051",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fa9a240-984e-42be-bebf-f2e64a007f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69f811dc-c8a1-4043-9d9e-741c74ffde3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3f743ed-69b1-474e-b4d1-6c7e13c9f906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "92398c2a-f7d0-4026-8bb7-e246d6aa9117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4487f7a3-f33e-4821-8e38-43532cecc6d8",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f76c92a3-9a38-4776-b97c-9e1ccf4205fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47d71400-4d4a-42ef-ae48-40d408be29a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49efb3f8-a995-4f87-a6c0-3e17857f1052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1dabd40e-7b99-4359-8743-e9d05a308602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f1268ad-a3aa-4005-a86b-a3dd70641df3",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1623c48c-c1d8-44d9-8af7-10a837682c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54ce5a1d-c037-4ee1-bb0e-cf78dbd90089"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3216a46d-a72f-4b59-9712-90dd9f1112a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "7aa02c18-c01b-49c5-8d9d-445983440f26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e8efec0-15ff-4c78-8ab4-b930f916c763",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed549da5-793d-4d30-b8db-e73a2bea239c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c218b63-08a8-48a7-a2a9-5d59da12f4e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d140566-38d4-4eac-97ba-4c64c4280e3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2b2cb07-0f89-4b5b-b21e-8e17778f55c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f1dad99-5c3c-45f3-b818-ba1c83f1552a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b519ac32-397a-45ba-8be1-10d04ba98197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bd5281e-07ff-42b8-8382-a6a22babedc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6393986c-553c-4c02-bf39-e94bb14824d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "19a8cf49-c180-44de-904d-2c5ad03844b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0fc4912-caa5-4928-85b8-1ba810f8bc6b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dadca259-65a8-41f5-a7c4-5d48301fee7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78c4eed9-7247-418a-bea5-d2aeaccaa2fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77d763a7-8149-4f0c-9795-a2e33bc3a756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c9f5606-9927-495d-9847-12731fca79aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fc8fae2-e3f9-4a71-88dd-f129f2991085",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d77a8f1-2c06-4cab-8740-85b5550256a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2362ee32-a1d7-4b72-a4ac-dd788c7ea52f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c066bc0a-2553-4a08-98e1-14b04a70b05f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c90df9e-e669-4b0d-a234-2005baaf8f2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ef26fdb-7dc3-4273-9848-1334a7d41879",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d07148a-a31e-435a-85b9-3eeb0b26a456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "157783d9-79f7-40c0-90bc-206ee52f8cc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e1ce09c-b858-4d12-82f9-d1da4e021b4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ee19b3b-4419-41a4-8d05-18af8c75c3e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eccf5f0-25ba-44ec-9aaf-deea324be0dc",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70c4cb6b-5e84-47c2-a0da-053cabcf8332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34ea9f8f-a037-44b4-a17b-4307d71f8049"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f2e3e82-f082-431d-b9d2-f5033a54bd64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c20bc84a-1f0b-4707-8265-56d34aa4f28a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b685f609-5c0a-4557-8671-14843a433185",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "367fdc72-8b30-4f6f-92e9-f2cfbacacba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bd0daaf-1696-4103-ae79-c29a3537e0ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29babfa6-7b3c-4fe3-a275-deea04bde0a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e87f5e8-feea-41b0-9ac2-8de7016679ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea77261c-8294-4329-b71f-cff8ed15c889",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dc1f231-3981-4f1b-b36f-fc8a577bdb07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa0cb621-d98a-4e0a-b193-18d5ca35802a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d00109e5-50e9-4226-853b-ead33701a93f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86ccb975-3661-4a21-ad47-8867165d4da4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2abc05a-9b96-4a5d-9abe-473c86f9213e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26543abc-212c-484d-907a-495f9fff02dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6a91d1d-e723-4ca2-b35f-c8e067b2db7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffdbcfc2-4aba-4ff7-ab4d-7d4556772884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d87b15a5-4c81-4b26-adef-9a4728c71407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "238a98fa-b61b-4a27-81d2-d6b2342aec05",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42cc9aab-e3e3-42ef-8bb1-4b6d6d890478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c0add9f-2661-493d-a3f9-772833dd6383"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f63b5ea3-d5f1-4e57-8bc6-88b9968d011d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d0f086e-f178-4d38-9226-bed06cf7a246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98754571-239d-420d-8847-bbba29c47930",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8219ffaa-5156-4fa2-a3da-e06065ab3c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a885dd5-7fb5-4d97-ad7d-5d1daceeb70b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b521240d-b2e0-4a34-911d-58e5e7cddd7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e8d6ef1-80d8-4e14-aa54-66fafbf20c3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "162453da-4a3c-4502-bcbf-9f87b903d107",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b44cc17-462a-4426-919a-a0f0d8540382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06fe641f-4b05-432e-84e4-f78a65a8ec81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a000141b-4d51-457c-9a98-ebc80c5f1ed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "901c1a0a-ec22-42e7-827d-47f144419162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1659dd01-d4c1-418b-a6e9-8f03c201eaf6",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d121331f-07ef-4dfa-99d7-741c65459228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28c4d7f1-0435-4b57-8fbe-4d076bacefe6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38185602-50d8-4fbd-9aeb-32f418aecd2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc97f3c6-8bdb-45a0-87ff-c1537c203f59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dee3b6b7-fbee-494f-85f3-ba18da8a9b26",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a71ce7-dc07-4dec-b6be-7ffc2dc9efa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d259624-af53-400f-a9b9-cda085a8d300"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ddea465-9f02-4798-aee6-0f3b453b3d50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df686d1e-6380-4ca2-bcee-f9cb51778c0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e469bc06-594a-43ff-ad01-01adadd9827c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6d06984-62ac-4784-bacd-176320df9c1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b9140e2-0e09-43de-b026-eb1954b53d26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "626466b2-dec7-4c00-bf91-2a3a3ee8401f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "250dd693-1812-4eb2-be3c-9f133115ac3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "350596a7-a5b6-42c3-b578-c0c350697942",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a57d4176-bd75-49bc-9989-68d042fa62db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "649d7df4-bb48-4c58-bcd9-cec50cdecee8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a1494e2-161b-4dc5-8534-c2eb1ff09dd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d3303ea-0287-4441-bd73-19e12690466b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "902ba796-30eb-48a4-81df-575a3f1d1e82",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a562a90-2e28-4663-a804-6cadf53319ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21242bd4-4606-4747-b97a-e08891f90049"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da7b6355-4fd0-4a21-b9ef-9c62d1385e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4223f30e-de15-4a9b-9ddb-b5280630e2a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b510c9e-cf3f-4960-a365-f27e0fde0474",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b2f329c-3e19-4bf3-8b67-26791a1194bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b91fd6b5-591e-4d43-b27e-1badd0b72f2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1df3f34-b516-402c-bfd1-1019f00003d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "555388b1-de2f-4344-9281-3092b3ad162b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dcfd920-ab4d-43be-8365-2c09fc901565",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf892c70-0fa6-4169-ac1b-24544d179bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39ca3255-f3bd-47f7-922d-494965c86791"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b97904a-afba-4355-913b-9bab71287a00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f8504a1-76f3-4f3c-a9c0-f6f856b07ac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef428340-dda6-4e6e-8748-5c696fb72216",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3796696a-d0a7-4f59-9aba-98166622d46f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3b90970-4e01-4d8b-9cc4-4abefe54ceff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55bfcc69-1578-426c-a963-a7cadb7d40cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9629f089-1e8d-46e6-9114-2abde739c5c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "234ff5de-da4b-42cd-b6d0-ae80dd3c0a62",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc1742f3-9815-4068-985f-3921df7239a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53dd8b49-4fe4-4c7d-b6e1-feb08303d4c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00163a63-2c85-4fb5-9d09-8feb9e38374b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca84b190-bd5d-41ac-a41e-bdadd1687c08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82ffd88d-7020-45ea-9721-40ed63cf93de",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78b4e01f-0710-4bfd-ba07-185f62086292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9b1b896-bdfc-41ca-ab75-0f5ae6fbabf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe636b56-2c7e-4a5a-bfa3-ca3f28f76be9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbf06dd9-5527-4297-8b57-d7b5c2726f98"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "52bdd4fc-1615-4228-8876-3f5b91c9a018",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "df64426e-9270-4dca-9575-fdfa4c027e25",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e0d2f9b-4d31-4aa4-acf5-9d3e6b8997fc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ccafff65-c4ee-4098-a515-0c388d916cda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a26e6aac-9cc4-4de3-bae3-b51111da29c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8e51ef69-9c17-49ed-a752-a327d877994d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7c994ca2-3e10-4e2c-b3eb-e1722336de3b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "26d0e754-0fe4-48bf-bd52-2b2dc365f5c5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6302c167-4b3a-47b6-9646-fcc4a2087dba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8a69827c-ee65-4e70-a610-0ca9569d15f0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ebb89711-37f8-4b37-9898-008faa5b438d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1601e06c-ca80-405b-b4ce-1d2e5716ba2a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5935003d-080e-4cd5-8700-12d8ecc7a504",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2e002b0b-864a-4c27-90f4-dda98f3d0ff0"
            }
          }
        ]
      },
      {
        "id": "1af9d4a1-154a-4137-a5bd-8bbf8b8a009a",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "264b700e-ed8b-42dc-a484-bfb7b4169f56",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6c9dd80f-eac4-4f46-b0ab-6a059a180059",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3309bad5-7e96-46e3-b9b5-9d0c700c7432",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a73540f-df4f-4414-8078-9e6a8f46b499",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23497992-78b6-4f42-b363-87b38425db54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bcb2660-dd90-4d00-9a1c-d6ea2f8f10c5",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e97435ab-421e-4d0c-8b81-d6cd4bd8f3d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "234848d3-8bea-41f3-864b-7fcf6012a4be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e8356aa-ebf0-40bd-92f7-bf3ccbab2f64",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f65924fc-4c25-45c2-8242-ee555254e397",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f198b713-d3eb-40c8-b327-b574f1100079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c7c76b8-fdcb-43e2-bf32-431c884e92e0",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "537ffbc9-eced-4150-95ce-609a8e2a78ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03861128-6aaf-4e19-8170-b7a949af95cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f32b79e1-7ae1-454d-872d-cf906c98e527",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b0235ce-4ef1-4f16-b83c-0920ccdb7625",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b43d3285-59e4-49c7-b136-49adec1c8318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a6f8207-3c2a-43c3-b46e-c768e0ab2303",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8feb6953-85ab-4fa8-a2f6-53c1e21e9071",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca92dea1-6b31-4bf3-84ec-0aecc755a1af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "779591c7-e81e-4d0a-a4c4-89e7fa47335f",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3124c247-275d-4c85-a213-60e8813d43fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1755057f-28c8-46f1-8859-4ec66f87f960"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb3f4022-906d-4d16-98f1-1576477742b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9d1e527-07b3-4572-bf31-4bd9554539f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c2ee199-0744-4467-b7ea-304f19ae3fa6",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "028fad7b-faf9-4760-903a-357879818e57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2cf742a-8f6b-42b5-87bf-3ddad2fc72fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97fbfe2e-83ad-4a09-9d0b-4c68bff7a3ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b92e3caf-919e-4ecc-8526-88d42c6cf18e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d28e286c-8e97-40a4-8b02-2aab0d35ad00",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c0a5d12-a90f-429e-af35-0d32ef540a29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec69f568-8e5f-4753-b9ba-30afb005184c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ca1da92-1095-40bc-b854-a4b03ad9109d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c19e0afd-a61b-4858-b6b7-57bdb8140323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3ba7b24-224f-4b8a-81bb-7c1ea535e040",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5306aea9-5ad3-476f-9064-9350c89a57b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7caab324-8f5f-4931-9348-4745de18d662"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "462a543e-d48f-4d65-aacf-40ba42a8dbfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bc47e8d-73cc-47ee-a48a-6208da13b9f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9229bb61-488b-48b3-be5b-6bad491997ac",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91f61006-8e04-4cc2-b4a8-53c171e27f23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a2dff49-786a-43e8-8d8d-ed52219f2603"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9be971c5-313d-40bf-9ffd-3ff2f0ff044b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0ec7053-fdc4-4959-bb3c-c78b4567c540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96c3aec8-afab-4c91-a57a-5e6aced99bc6",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5681dd3c-ab18-4e72-80f0-1a8970bef8d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "427451c0-d7cb-4156-b7e2-caded9937ba2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65e175e0-86a1-4738-9d44-b4cc36430ef3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b27eea7-a83c-45f1-a182-0288a2bfb806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b2d6ffc-ceb9-4886-91fa-855cecc32ece",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ea32d15-5baa-42f0-bf9a-ccc1b9612754",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "628e4376-c4a3-4055-babd-e24fde473798"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f79e8505-a510-48aa-9b27-a933e690cf4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3197f87-baab-413b-b966-b979a1f9c495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "500d9bdf-c5a2-40d3-920a-245d56dd5953",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6e862b4-10db-4254-aa9c-286d7d00879f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42f36616-7bac-4927-9540-8d0a5677cca1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "730215ab-532c-44b8-8c41-67f82d9eb6d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c29fa67c-2adb-421a-8485-e16ce02c6b47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a710d2d9-1afd-4088-b81a-1a47fed1be58",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f0807b4-95eb-44d9-ba9a-959116352f16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e24cff27-aa75-4f2e-a746-2bcc7c4f1c1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80676634-b6f2-43d2-a5bf-ff4b1b4a1305",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e6f9f9b-0920-4c0e-a650-a914bb6e3e7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fc08d83-4350-44bc-9158-eb0b3cdf42e2",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e5557f8-482a-4b07-a5c1-208ac01ae58f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cfb36cd-3f07-45b9-a315-ffe9e58f62aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2080e50-30a0-4ceb-93d8-08a253d06dc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e00a1b0-0dba-4dfe-9d17-527a2c1161fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "456691a3-75a2-489a-87af-25b381bb982b",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "753813e0-b615-45ae-bded-71413f1f9a88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45fa2b55-cd69-4c37-8e08-b275f4195ff3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a516d5c-10a2-41b6-b7b1-a0d38d59896c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbeaf5fc-ed05-407b-ab3f-4f6db26a86cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0903afb-2262-4b80-b57c-9f5a7cb3f134",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f69ac5e9-cd87-407e-98ee-4dfb2bcedb78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb8f7744-57a1-4ec8-92c0-1c307beb650a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50658b0d-467a-4499-acc7-506b99bed0be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e14e032-2814-412b-8be7-e462f37b5fa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93aa7d88-af54-49d1-9f98-22ad88020205",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f6718cc-d5b3-4c7c-9ad7-cf5d080da9e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4725783c-b5f8-40d7-b9e7-402d374ed807"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34c9c4f1-62d3-43ee-867c-8dca67b472de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8364206-0fc1-4173-b58d-c7b50515b6d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "428d52f6-a8ea-4e7e-964e-0fe77de99a4f",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63cc4aa2-4d57-4f8a-8ce0-5098c74658e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d97793f-8a89-474c-a461-1b3d8e931e82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ab175a4-1d9f-48aa-8588-9aa18a7a4679",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f14cac61-df2a-4afe-b9d3-9b43fbd1727b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cf94d7f-67ac-4d30-94fd-75000405fc8c",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cf5405a-18b2-4515-9873-8df67816d0f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4af4756-98da-4840-b865-164612fdff66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d18a23cb-9256-4316-85cf-0d086d1c714a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "532486d0-d580-418a-a788-5d531e8660e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1f331da-1a88-47d2-ad3c-3889a4103b1c",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7954078-69c2-4c9f-81da-60aa1a4a9cc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08ddef8e-2db3-4990-9ce7-164d2647e436"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4f311d5-414d-44a5-80d2-66f8da5ef2e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dea18843-d244-4f12-989e-330e2beb4d83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e5cf961-7c07-4637-b400-5e3ec45a1e0f",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29c43987-baaa-49ff-b604-d87b81a7205e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "447ca541-cb57-484d-8da2-3aa2512056b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f881417-ce2d-418a-92d2-6b0cd79e4ef9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76132c4d-2142-4bd0-a277-b31501aadd97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3cf26bd-f144-442a-b6b5-2e79c2cfecdd",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "472a969f-7a6c-49bf-b01c-256407abf483",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "510a6f5a-3e3a-4e17-9ef3-c5fdfeada758"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9561c628-6784-4d7f-b2bf-6d70b4207a68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb4fe791-6f6f-440d-9b9a-022a71ec211d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42f52bf2-8d9a-4228-a317-edfcc6f53312",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d86915a3-6595-4f9d-9b0a-781a2e25b019",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93efdee0-cce3-4202-98ee-5f8b684951f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f29569a-a3d1-42ac-9573-a3092a6fe5e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "012ff107-ae4f-4039-a80d-7f32f7187666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c65897f-5285-44ec-9b40-d1667db792e6",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57455ab1-206e-4698-9474-7f1dd4e799a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ca8c0f0-cd2a-490c-8d15-b5c95968496b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47e241d5-ae53-42e9-adbb-651c1cf8fc78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2798e1a-d619-4531-93c2-b88113e575ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64a57d07-8f34-42d1-ac8d-3831483463a8",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfb9b61c-a822-4dfb-91e8-31d60f05a29a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17fcbdfd-82cd-4024-8b02-0d72c6c9e9f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe17405-ce2e-4509-a02d-c420854b5a9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7279693f-be34-427b-940b-38fa6e9fd4f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "515fd614-3d34-4b35-ae41-2dbacf8f77f8",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dffd1c8b-06e9-470d-9bb1-9cc8ee130a0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cabbc9f-695a-45c3-8517-2ee03638fb3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0040496-c738-4de1-b1ba-5acc20ad1bf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79a6e877-2cb7-4ea0-9447-b0eb5383687b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "647e42c4-18e8-4bdd-a91c-e1c3ae8e2785",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daeb3a7a-c7bf-405e-9321-01c81150e6c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3cadae2-a671-4cab-bbc4-eb9f8ad6809d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b00652f8-e4d5-445b-9433-570df5144cb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fef0c828-6ab8-4050-bbec-0504c074261f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b166364c-056a-4735-9eb2-073ec78b447d",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1583c0d-2219-401b-a385-6105e973114f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcc94baa-8ca5-499a-856d-cce08a9bc2e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c63214e3-6df3-4de4-895f-513c77fff07c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58741b2d-36f8-448f-bb91-4e92356910fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9715b1e-ee1e-4ffa-afbb-329c7b7386c5",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "038ff75b-d91e-4bb7-8645-e7fb80c00f83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00c3fa98-9f8f-40b5-8e0b-0c2110372aca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5695ecc-f88a-468f-8e25-766554f0761a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc81f199-885e-4e06-94ad-118bb3771424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdc1f6fb-03ba-42ba-88a8-11a2b495578b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9336f9d-c1a0-40c3-b828-1244a567f756",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d5d2882-80b9-459b-b526-52643c30665f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02685148-2e1e-4754-a937-ff0143517b7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01139e51-0b90-401e-8be5-2bf6410c7c8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a055dc2-3c29-4b5e-81d2-8e5e285877cc",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aa24a06-e668-489e-adcb-37d566d5ce9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c99c8e1c-af3c-47cb-91b4-a90bcd567f34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "942cadb1-7205-4ab4-9fab-87bcbf50aa9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "350bbe9c-74de-470e-b6ce-142087f00a07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43ecb8e1-fc91-4d57-b487-a9e4f723eb8c",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18dd9e4d-6526-4c36-bbd6-058b33ac5c92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ce2ae36-70e2-4bc5-bc58-d0bbe13b56eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0120308-e5ab-4549-b5cc-96e8e1d27040",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72b40756-37e2-486f-b158-df84264929eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "566ddc6a-d0ec-4e22-84c2-1a848458e305",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c5c1c5b-0ec4-4041-a4e7-834ada9eca3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47044045-1bc1-436d-88c9-176188b11e74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8420a564-3574-4d04-b043-37a3b6fc652c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48e83539-db62-4519-84a9-38af9980fec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "393edbfe-9d49-4c72-8f7d-828535712f2c",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dec63e97-c39c-4b6f-9167-184ea6729379",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d95bef9-3152-48d3-b0e4-29c172350322"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88e36d7b-24e4-4d66-b728-50e96a610ae9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce14a84f-1920-4e5c-93eb-a0244080ab50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9886e025-1486-49fd-ac07-0fbf8fb6287e",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f2427ed-cff9-4765-86f5-f3eef2e1306d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "847ec3d2-fad5-43ef-94d7-fbc561591dd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "455a2b01-e88a-42f4-894d-3ac96f56dea1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8755858-e9fc-4fd2-893b-0b78bb019ad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a24d50fc-a3a2-433c-b6ef-89628f84dcfd",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7e58a44-570b-4c3d-b533-2f5111dfd290",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e4ae838-6b29-4c57-a633-222f4c8f70d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf743cc8-348d-443a-ba6b-cdd045321ed5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5480557-ea77-406e-8b6c-19a294ba6333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f0dac17-feb2-43d3-870d-dd32221fb7a3",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99f4b6bb-cb34-49c8-b3b4-369d9fd0a0e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d998b7a4-e592-4bd9-ab12-cac088662f25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4618a66b-201c-4b2e-a3d5-50f0289b2fcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c6033c6-1201-4ef0-a4c0-ff0165ec60e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b88750a-72c4-45ce-9f20-3878e1e5edd6",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "964ce048-271c-4d46-b371-1a362c7db994",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16e33f32-be43-44a9-999f-4dd983a52858"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99130fe0-534c-42d8-abe6-eb9a1904fb9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8efa8175-ff46-4c32-ba3f-0779c8eeda91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "671246b9-cbfb-4e1c-95c5-d25adf950ad8",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa8b8d8e-bb8f-419a-9e55-8c474f1cda54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d787cc3a-1b89-408f-bcfe-d5b7b2cb0457"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31ca0cc0-5453-4649-81f2-db320e1fd9d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "226f8336-c0cb-408e-b9f5-d177742d2c8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47606cb0-6965-4afd-bfc7-7ecae4a9081c",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e09df791-77fe-43d1-b28b-42ea902acbc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd4b2493-2dd8-41c8-a75d-de55f99b3e1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10092e3b-1029-4469-ae4a-df799fcac761",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d31c63cc-a7f6-40d0-b65a-f9d850b33f80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6c31c52-a383-4f74-bd40-032b88e62207",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a05bb99-b487-4230-86a0-329657d9051b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f9e7b8c-e200-44a2-b7c4-028700df64bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce37ca48-eadc-4aec-8ab8-6fce21b8f8c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df55149c-f8a8-4374-a84c-1cdbb3251e7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29b99160-c0b9-4175-84f4-73422c583217",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f7031e-81fa-4f12-b304-2d9d4560f1ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b2ba4f3-dfad-494a-99ae-256da1832365"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74a0ed4f-af35-455b-b96b-028a6e010883",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1adf9f6c-3dab-43eb-9b9f-e73c57ddc370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4b73d7f-d8f3-434b-b045-c3606457d3be",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e36d3488-d5a3-4617-8d49-7509e9754633",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "968f8f67-c4ea-4ff7-85ce-b2d762376bc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "319640af-c4a7-4158-890a-899267c265eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25bf611c-8863-4099-8f83-fcbf2a541b0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b7d270a-c41e-4af2-a4ab-fcf857e572b4",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f880b2bd-c24c-4011-b181-3bd21b0ab1bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98257664-bda8-4e21-a38c-ac1c4c2fa9e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b2efc56-a8e6-4439-a196-1ff0b10618d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0394b861-c72f-4dac-892d-27aa6011ecdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9f8b5b4-05ce-48fd-a416-8afffe30644a",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f54ffe2-3e1c-4cad-942d-a2b5ac98d6d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61e200ae-e171-4c3e-9fe0-e60663b5992e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5491a2b0-4b1b-4594-9808-de5378153c09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5c426d3-4105-42e5-8311-6bdf496d993a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b48500b-7b86-4b8d-a8cf-706ad78196fc",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c670ebb-d818-49fa-bd46-ff4b446d28ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0b07877-2fe3-44ef-9808-4f2e42f1d766"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "385922b0-0543-4a8c-9c09-f46cd408b8df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e9cde27-a03c-4d1f-90cc-0846255f7d0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57ddd6fc-ecb7-459c-a57c-1781db1c3781",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58f1b3f6-e312-455d-b2fa-0f6be85ffd21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "312dccf0-14d9-427b-97cd-6e847fa99ca4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fae2a2de-bd40-4298-aa35-c2ff4441bb86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68a4d453-ff1f-4c4a-b922-0b59c07921b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8f0c2c2-0ffc-4d6a-8be3-b386745736a1",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5893a37-a540-4814-9acd-6d73f3077a66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39e1a469-0870-47f9-97f6-81282359e271"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e060d571-4fa5-4c78-8a3a-fb1e98bd5666",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32f41c41-4d8d-419e-8c57-a6a3e0c2dc39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbab28b6-929b-4f8e-8e01-7fbaac8953b2",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75d47b15-896b-4a44-83dc-9241588bf483",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a37da305-5ca5-42e0-a438-17818a59b422"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f0e1427-25b8-4fdb-b85a-90c768cf401a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be7ce6b7-63f6-4ff3-a1d3-9c16e2b07019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daa1b590-4046-42ef-9bae-1aecc5a5334a",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d6420a6-7970-4e38-b7c4-971298e0e416",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "656d283b-ac78-45c8-ad00-c2fe0c4b5bdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71b1d3b8-a0d9-46bd-997d-ddea17571d51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef7ce65c-5ec8-4364-8eac-1281d33b257d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "084c6817-2329-42ad-a90f-e0e98385280f",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9d189d1-89dc-4429-81ce-60d47c028932",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2dd65a5-0ccf-483e-a5a4-0846776533b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee364535-c07c-434c-996b-d853c9933761",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21e29303-31ad-4e6d-a7b6-dd0160eaa3f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca227b86-50f2-4c76-8062-22c072cb4083",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23cb5b6a-5bfc-404d-8124-ce1b05c00b4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "096d96f1-17d6-4d55-ab75-b33652c05678"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fce7bef8-ec2b-4b54-854f-5d5ff07ba6df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "667be133-5d38-4ae3-9c65-62f488108e57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "560adfa5-d155-4442-aeb5-c3329887fa74",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "460404e4-784d-49d6-927b-cf195f236c72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec6692df-c696-4f15-b45d-71b33341547d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe8ec3ae-a14c-467c-a06c-91035ecfd99a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d11481b-ee08-4bff-8aa8-97d02b5b45a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f9364f8-568e-46fe-9b19-31148a06cb1d",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cf609ee-7f32-462c-844b-afe7bb0c938a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3abecdcc-7e78-47c4-9778-3a6a48be2c35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e70f1910-cb9a-4f0b-92df-bb4b671435d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc6a9c60-7fb9-4c6d-bc64-57d73d5fc1fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e2e83b7-9ffb-4988-a4a9-894df3186d7c",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "107a0ab9-2d59-4da6-9994-6dae7ef7fc7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "459768d8-f102-4340-9378-904b8075933f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6731062-a645-42dc-b8d5-4f7dcd64b8fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c765149a-7eb9-4e1c-b63e-33bf7781acc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a55651fa-f1a6-46fa-a374-a4622a6e072f",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed18f574-497e-4687-9e06-8b74b5fa29bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9673aa8-f7f4-426c-a11e-53397bf9b1c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59e77cf7-b998-4c9d-93cb-3e1ee8da1289",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7509709-c6a3-4be5-9bbc-f650b2a37342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98701a2f-35da-4efc-9cf7-91274314ab74",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "554a25bb-7408-4fd3-b5db-34062210f8ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "367a920e-b9e4-4eee-bcc8-a6715dd9597d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f1339eb-45c9-4799-bec4-b7cde2d6bcf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a12d1289-8190-45c7-ba96-fca22da239b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a3eff7c-a8e6-431e-84b7-21e66e10ec1f",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6029ee6-a328-4b0e-94d5-a7d9e6c7022e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbcb96e2-ea5d-4fe7-b9bf-e7c797770b55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0862f82b-45cb-4a0d-bc85-c23a55a25710",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6fb3100-9ff5-4f85-986f-6217ec07ddfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a04cbc9-3b3d-40d0-a88e-9b11e8f59158",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa07a505-6187-4cb1-a6ec-a7ea7cb7df0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeea98d7-5330-47a3-a1f1-2522fea97832"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdf72712-b40e-4ccb-aff8-4dce18ebc5df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "513af502-c381-460d-a764-f31cc9218011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb651277-549c-410c-acc8-02cf9c71c198",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ea8f734-2501-409d-9c20-476f7e567031",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d2bf089-5ee7-4aeb-9900-2296c55022b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a52e9b48-4be6-43a9-bde5-10e8dd639000",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6227b425-052d-40a4-aca1-79c464152d59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03ac6fd0-89f1-47ae-b3de-9395761a0571",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2618261-457f-4618-bc6e-7c5c60ac19e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1229def-6654-42f8-803a-3c2790f55047"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e08529f-3fa4-4bc2-92ec-b42e08481edb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fed0b04-07e2-4098-884a-94547734cb07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6614e38-1540-411d-95ed-ec4fb4d49c68",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b869d68a-8cbd-4b1d-8e59-6aee2319fda7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e783d27e-7709-4e27-830d-ba6902088b0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "514c3934-76eb-4c8a-8766-13853a4cacea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac12f9ac-92af-4a39-8ef8-ee879299e6c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3e6c74e-5869-4142-a9de-57745b486431",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3d70150-e3aa-46c5-aeda-9348449700d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3d39650-9b6f-4667-9c83-19cebe4a1e6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49b8a9b5-5bea-4033-b295-76dbab19cd0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b26df87-91f5-40ba-b439-68b6cc6c43c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab03fd4f-d07d-4d6c-b7eb-b83f5c1f7826",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fdaa78a-1bf1-4114-b1a7-228b0043ac53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f78d98a-eff4-4d38-a7bc-886625a90ff5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f74eb83-5b87-4ea4-8c24-5e016dad6f95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f01c0d3b-67da-42b0-b0dc-3f99af2cb1e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfda715d-a955-4a57-b5f1-7fdc14237fc0",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a6cbec3-3c92-40e3-a4cf-c162122990f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bc0a362-c496-4563-aa59-590e5fee113a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04775e41-30bd-4539-8d6a-e14f74eee0a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2472677f-4bf8-46d0-856d-bc9fdd1ea086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a2165a8-6c2f-4761-ac7f-01876383c670",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "191ae8f2-7af8-4345-a27d-fe4854a3a234",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00ad0b35-10d0-4912-bd5e-9e68d2a3c7a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bebbc9f2-4cc5-40e6-a260-bd8af20059df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a843aa2-b402-4a40-97fc-34054b3d2191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7cebc46-ae56-4125-8be5-fea1a66e5a9c",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "003d47a3-d3ba-4266-a8fe-670e8b2492e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a00cca51-844c-44fe-86c7-b19020f4b85e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf9e2d65-1bcd-47e4-8e00-e4fc1ecc86e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74aaac3f-5b78-47a5-97fa-5c130d97672e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7e09407-4273-4209-838a-601d7baa92aa",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "835f86ac-b46e-470f-85d8-a8b161a4764a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a96092de-c7c5-4dd4-a9cb-cb65e414d759"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90079c33-f9b9-4e8b-bf27-a95168ec247a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aedc92cd-76b2-49a6-97f4-f477630f5541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79316416-6b3a-4305-846d-4e43734a6a1d",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed552f3d-0116-4341-b112-6203ed948875",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6bde934-80cd-442e-b0cb-a2f4ed7d4b91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cac2c285-6148-490a-823a-4e960393750f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49b85216-b408-4545-941b-17fa9957631d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "742a2092-fdfe-4e5a-b8ef-a860f1166f97",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59e51145-c570-471a-a76e-8c52e403d266",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59d37b5d-7395-4fcb-8968-2a6129991bf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86db88df-8fbb-40f5-a3ae-f82adc5e1c80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3273c72a-4ee4-4528-805e-096be60ac9b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "523d2411-ee51-4ea8-9cbb-82734bfb4a2f",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e209a7f-635a-4fbd-b335-ddc2bd2495be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27e7a605-9c2b-4f2f-a0e1-070f04ecacf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5e25e84-5a2f-4d79-acc3-efbd1aadf690",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16a0e03e-bd19-4009-8c7d-00b62558dbf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24f6f3b3-817d-43a3-b171-a814b17b2a29",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "496ca193-0cb6-4fd4-b5e0-626ba1c9cd9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b81be289-87b2-4500-8233-2daaf1ae3f31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40edbb7d-bacd-4308-bbfa-df931d774a77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dfc47cc-8a94-480d-a599-f52f0423f1f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56b7f934-a5db-44ba-9bec-34ea2f93219d",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20e27117-3b9d-4367-bf15-948066c25d31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30362699-e8ab-4a90-bf44-f1ee7d1a02c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48784d7d-3f02-4322-a62b-cac522cd06b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62e3821c-8ba9-4444-98c6-be5166f36180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d7429aa-c8a7-4790-b2c5-c15779cc0149",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeb27ee9-a293-4a9d-b9d2-55344e0e830b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bf231b2-c5fb-449a-bc3c-a71d0de38262"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d9a2acf-12b4-4873-b654-52260d34c8bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b3e32e3-ee9f-4ffa-8f23-68da2c907f6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7216cf07-e4f1-4992-87e1-0498dfce03e3",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7a68cde-41bc-4d17-9bdc-581ef36f975c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b947baa-4c3c-456b-bfa1-e9fff56091d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6de85ab-cc25-4a55-89f3-cdf1766c46f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d9cb7ab-0603-4794-a18e-3c221e1468e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fe258dd-432c-4aaf-b75f-36b18d51212d",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12083c94-da49-426d-ac0d-d77223ace5af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2466e1c-5f3d-4aef-a0a0-3e4adca4c507"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eb3a9ef-5722-4210-871b-cd6e5e47989b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cca0566a-a167-4dd6-a03a-28723c6fc554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9b00a80-3722-48b3-9a6e-53be22f362cb",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20b68353-3a78-410b-ae8a-61abbadda917",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ddd8a5c-99ce-4586-9cb2-3afabf321629"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac5f3008-66eb-4bed-847f-44e16e0f51e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41321ff7-d382-423f-91c0-40e3e8d5202c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d743aa5c-bf43-4971-aca4-c8a47424e28b",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd3a7626-1cd7-440e-ba00-08fe5f4bca47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35b00c0f-d8c7-4848-a3b6-6ce72f47cafb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6236123-89be-4d3d-a1b8-10a20f06c945",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72024e70-0cc4-416b-a750-045925ba1273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cae783a2-cef2-4d63-ae02-361321e69257",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db3d4b9d-20a6-4886-a0ca-bdc9fef47787",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fd4ce02-88bf-4cdb-9732-40db9606174b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96672543-2035-493d-a71f-710a50f804de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea728e10-ea4e-4333-bf73-ee3026d57798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d070d6a6-8e22-4e3e-819e-bec687154fdf",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "984d3ea7-6962-441f-b718-e892ece09ea1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e26be5e3-ef99-419b-82c0-ea35fe61f3ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c513339e-b759-423b-9530-9690df711eda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11a7cbe1-bee9-430b-bcee-c76e5009b96e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fd4d697-1039-4ba0-816f-0b9393c872f4",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d7b591b-d6df-4f51-ba88-acdb28f96b83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09440cc6-0516-46ef-aaf6-208a723dab2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbac0b36-33ab-4e0d-b6c1-3732b89c9077",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dbbacdf-818b-4704-a926-e6f47193a95e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48a938b9-081c-4faf-9f62-cc57fdd9467d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83fb1bc1-b614-4eab-a4d9-8e060239340b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7c82f29-d631-4f10-86ef-908a91015eed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffc6af47-7e8d-4393-a710-c991f8a52cae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74697e63-18c6-453d-bbe5-ab420c23b5a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c59a0b4-b0f4-40e9-89f1-ed2daee597c8",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d8c40c0-ea47-4df3-86a6-ab889c0b8565",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50d485a3-8ca1-4d26-a3c0-07e2c2b54ed4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20b9eaa7-662c-4cb3-b656-3b38d3b4b3b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2597adda-dc27-4ada-a6db-645c5796739a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39677a0c-fd94-443b-ba0c-bfd1d945f961",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89ab878e-c665-4d90-b91e-a8f57ca4ff0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49ca2aab-7025-4ce7-8ea0-653514acdb84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5419ec66-b5ae-4be8-b648-8958c78bf138",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ab19595-1c3f-4db0-a344-6f15bf6bd6bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70219cfd-44f8-44aa-b309-94af1f4a68a2",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76e9fefe-6700-4807-a2bf-d6968a556ddc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18a24d71-1f6d-4b3b-a050-12aaba06313c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34bd2e4f-195c-4045-9285-8ce5af6d678f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1c81c20-9d71-4858-9d06-0fa52f56a067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90e9a668-11ac-4433-bc14-d25bdb003257",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30711812-a622-4e10-8198-040c00af6324",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5564a66c-6a64-4373-b553-f70088c13e62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a96ded9-8035-4cd0-bb9d-257c0e36b71b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "260d47a8-bbbb-4692-b6e6-f915af088103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a99bff7-61d6-402b-a7d0-7bd0f1f53cca",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe01effe-8b58-4147-91c9-2b3b869b5cc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4230cc3e-3d82-443b-a97f-73665cbc6e7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e2abeb1-d2dc-4779-b21d-21ff9ca2c535",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a21fea94-7dd8-47bf-94b2-179f9d1e2877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e00d7052-0bf7-4be8-b7ec-82db124d882c",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5613acf8-2147-4c24-a639-13765408343d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94c350cd-9bb3-4be2-b4d3-0b64bec11a71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1add71ba-b6a7-43d6-9277-3bfbb44ab2e8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e069f75-9980-41bb-8999-b6b37cfa90b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "117bfa68-4084-4b1b-8879-74fafc511d6e",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddf919a7-c2c3-4919-8023-cebc0ea5e9ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86ff701d-ac2d-4158-a009-d79a05fd44d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d2caf99-e6fa-41e4-8dc1-a277c3dc22d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5eebdf0-b991-45bc-88d4-9a7ddfafabb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc0796a9-f1b4-46ba-85a5-6155df885729",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f50dc30-5fa7-4f56-8a56-c26ca3a42bed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd43be15-bb4b-47fb-80d0-b8a8d5b7587e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad051880-9abe-42d4-afd2-bdabf19d916c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5557d6d2-a945-4aaa-b1ee-ac5685033d2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "020c811e-7966-46e7-905f-1b08ceabe9e8",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d413c82c-b55b-48ac-85e7-acfc02aa4bc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5ba1cd3-d69a-40d6-b503-387de37d13a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59d7e985-2669-4570-91b3-2342b898fb07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9126532b-32ef-489a-8a9c-5af0b9d7ebf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5432e15b-cd3c-45ea-870b-ecbe01b62da0",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f7aa579-7edf-480b-b268-c4e568ed88e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ae62079-f1cc-43f8-92a7-a0f96adddb13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbbfa4c9-d27c-4d8e-b42c-416803bf71bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "039ea8a7-6c69-4fa7-ad3f-e3f312612467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08b8ce8a-9bdb-4916-ad53-75d5d5ea5286",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc1238c-fa68-4490-aaa2-e31dd59e893c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8419348-5eb1-46de-a6ab-98fdb956f736"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1363cf0-ce2e-4e76-baeb-4fdee2bd2397",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e6fc5e8-6467-427d-a823-1b3d5c117dec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c577a50d-af34-479b-9d92-e4c4b6976d3d",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bdfa2c8-ce29-4464-b070-adf135e2e7dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90005cde-2eb9-42ed-a36a-8730108718b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36fd995b-3566-4943-8e1f-c0871a3f4684",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e79bb4c-98e2-4568-8e57-d833d1507994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be9b7430-8bfd-422b-bf84-856b066a4d67",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd8c113-ac7f-4dd5-bb42-8b17bb03391d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5ef783a-05a8-488b-bf11-fb0c35905da5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70f587a4-fa2b-438f-88e7-0d399dc790f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e547a704-3a6b-4b0f-a279-1dc5444306bd"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "344b5735-4831-4df9-b4b9-9dc35e28500d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "458bae32-d56c-46cf-a6ab-5a2b6b2323a4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "12d15bd0-398d-4a40-aae5-2c66115fb30a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c8066dc8-c70a-48a7-b758-8094e55ccc17"
                    }
                  }
                ]
              },
              {
                "id": "25388c61-37de-449a-90c5-290a8e545004",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bae63de2-06c7-44cd-b863-01865934224f",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b4dbe73-61d9-417d-bee8-381ad607a795",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7f021a60-31d1-45cc-a520-2815b7907852"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2dceed6-cb67-4942-a6a4-c552e8cd6e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "74589e69-aec5-471e-b342-1f25ea392fe3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b74c2975-0289-4d01-a777-d7f721db4397",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "33fdc784-667f-4c98-9cce-2268c7623126"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7c3f1f2d-ca4a-4e0f-ad57-bf72a232abf3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1b59cd3c-a2b8-4f5a-9454-5e31ad58fdd0"
                    }
                  }
                ]
              },
              {
                "id": "7770f09b-8006-43d0-90ef-0a361406901e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "154df41c-d0a2-4a7a-9c31-fa8300fd984d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b0cd586-45e0-4713-85aa-bac9e4e7bf34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "45e4db1e-d0f8-4b5a-8884-a9b4eb77921c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9253c33a-8816-4f89-b425-b675a0ac2cf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3cbad0e-ba01-41e3-a31d-00fbb4630eb7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "67920c10-b069-48b0-95ba-dcdfe8f5cda0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "392aad9d-817e-4feb-a6b8-6381fe1689c6",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "73d3a92b-55ae-4c01-bdc8-56bca8479ae5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "01c4ad81-fe78-4024-9b12-a6ba6c5929e2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "67758e95-adff-4dc4-ae49-7459c4ade370",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "18100162-943b-4ab0-a888-fa226884135a"
                    }
                  }
                ]
              },
              {
                "id": "50cf31ec-5843-4498-a214-d1ee490dae5b",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e015aecd-5d00-4308-8c93-2d0d1bd4fbd9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e82adc63-c9dc-487c-804d-6d53ddd915e5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "50ea706d-768f-4222-bb35-61ac1bcf0d20",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e65e3c7-63a6-42b3-a327-1aa92e98905a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ab459d1e-b41c-413a-8926-b2ed7c021904",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "9631c9ee-88c0-4673-abf2-0ba2c816d241"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8aef1154-e9ca-4f9a-b41a-640d084c3cfa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3ea5a70a-6180-463f-96e3-9c953ae12278"
            }
          }
        ]
      },
      {
        "id": "3d86482b-06d4-45f2-8e71-7a3fcdc6e0f5",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "61341b1f-234a-4966-bf58-6805876acdec",
            "name": "Negative Testing",
            "item": [
              {
                "id": "523c86a7-f2d0-45f7-9092-216b53df2628",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c5359560-0e3c-433e-abde-a79255ab450c",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12023ec5-1ad9-494d-8f80-873c3a89c048",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "21068ea0-e826-4a2a-8c29-13b7977362f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b408fe48-c92e-4e22-bc31-63f65122fe8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "16a00585-2672-42e6-84d8-f11735ac3822"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "58138422-9cdd-44b5-bcce-77b265ae1ecb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f60dfa4c-f7f1-4a2b-9446-c5cff5f2edaa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a079de12-a73a-4a69-ad4f-2b98383f6c81",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "699316f2-f993-43f6-96f6-12c17492eb03"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "56ce849b-5e66-4b0c-8752-2e39f5b3efa7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "f0c1a991-b873-4ea0-ac5d-c6b67f22ea5f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3a6b87ff-00f5-4746-b2fd-a4f37568e7b3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ea762d04-a935-426f-9995-f8e1e4f1477d"
            }
          }
        ]
      },
      {
        "id": "62bdac3b-b370-4d75-83e7-ddbf4ba910c5",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "eaffbddf-3014-4c3d-8d6e-fb4ea7c836da",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5315f388-cfbd-4807-890a-0a69c02c77ad",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b36bdbf0-b2dc-4816-abb8-a8eadcca1ddc",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21292c51-f943-4b3a-be68-f115a8157d81",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "99cfd27e-666f-41aa-ac33-9fecbc50112d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccb2a1c1-fb04-41e5-a9b5-7ce875dd2ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fa7f5133-b11d-40a3-9673-ca9ac5d823ff"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "561d732d-30f4-4b20-bd4f-c0284aa236d1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ac60f701-a848-4061-b3e7-93c042066958"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "953ecf7c-6961-4433-be81-ef63ad68bdef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "32b5b389-9c16-45e8-bf1c-26edafdb5ef6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "82068536-47cb-4a0f-a4e4-2f507e68a099",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8f6ddb86-9f30-409b-a6e3-cb58e19ad7fc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "242042e4-ce78-4f78-a108-f0795bfb931d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "902c2746-d034-42fe-8d8d-15841bfb32d0"
            }
          }
        ]
      },
      {
        "id": "018dd8f9-f7f1-4b7a-bc98-6a25cc424adf",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "e6f679fe-c15a-4bd8-b57d-e4826ec675ff",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7de4c312-fab3-4f39-8d1d-5cda073c07c8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9efad37e-e61e-400c-8b64-f5256d3fb290",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fde48c16-9a8c-400d-9d17-6ec68f6d6a4b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ec6df1b8-8225-4073-bc99-ed7f29def7e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2df6d4a7-303a-4082-a460-78eccdc668ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1ba3532d-8d51-45da-90eb-54d254f81867"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0274c8dd-061a-41ef-ad50-ca8a6fe1e52a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a6f07405-488b-4f23-b9c2-80d51f98c08c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e080663c-04ee-47a8-8857-f9d0489391b9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9ec01ead-3ddf-4274-a36e-aea1c1bde229"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "24a3a68c-6372-4828-9cf5-46c772fde120",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "57c249ac-19ea-4e78-8afb-88ef6f72859c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "31abaefb-f605-4c77-86fe-e4f7913f7b6a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c234d177-129a-4e1e-a3cc-149d25938cba"
            }
          }
        ]
      },
      {
        "id": "2625620d-c3ab-454b-a79b-e7442d7c5b6f",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e23363fe-34f5-4f23-ac12-42a520c3b81e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5cf66f03-a83d-4473-b5f2-0f5c746cb3ee",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "ee2799d5-d9fc-42b4-bf34-0a7a6f3c36be",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e9984403-b12f-4b39-8917-231e52c72538",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "29c18852-57ab-4708-b9d9-a3ca2493882e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 66.90140845070418,
      "responseMin": 7,
      "responseMax": 360,
      "responseSd": 25.389032194290973,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1693528522565,
      "completed": 1693528554043
    },
    "executions": [
      {
        "id": "88f6ce78-022e-47fb-9fb6-bfc8c10c8a82",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "2d81080e-b736-46d7-89d2-f0ab1fb60bf7",
          "httpRequestId": "fd8b9c07-9568-49ba-ad55-afbe5e55077d"
        },
        "item": {
          "id": "88f6ce78-022e-47fb-9fb6-bfc8c10c8a82",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "6e8cb7ee-396a-4c6e-b68c-2fdb1b21a459",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 0
        }
      },
      {
        "id": "86bd39ed-beda-4dba-bdc9-3d5175b2b544",
        "cursor": {
          "ref": "d9d4f672-487d-4b48-97c1-885199de0089",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3a001a2e-48b9-4e75-b2b9-2f64d46838a6"
        },
        "item": {
          "id": "86bd39ed-beda-4dba-bdc9-3d5175b2b544",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "8f17ec29-eebb-40c1-8b77-02e03d523de4",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "51fd34c4-d021-4cee-9e4c-7febe7edd535",
        "cursor": {
          "ref": "26ddbfac-4ddb-4ed8-afca-fc9cd018da04",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "ec36ada1-7783-480a-8ae9-fe8795433568"
        },
        "item": {
          "id": "51fd34c4-d021-4cee-9e4c-7febe7edd535",
          "name": "did_json"
        },
        "response": {
          "id": "18832330-80c1-4baa-97cd-8b66fd675c08",
          "status": "OK",
          "code": 200,
          "responseTime": 360,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7516e4fa-d63e-47ca-b384-24b199dd6210",
        "cursor": {
          "ref": "22eb4894-11dd-4f85-964f-6188e18a33ba",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "47d39418-3f73-4376-9888-9fce45376d92"
        },
        "item": {
          "id": "7516e4fa-d63e-47ca-b384-24b199dd6210",
          "name": "did:invalid"
        },
        "response": {
          "id": "79d96e42-49c3-4e1f-8cbf-27ac360621cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7516e4fa-d63e-47ca-b384-24b199dd6210",
        "cursor": {
          "ref": "22eb4894-11dd-4f85-964f-6188e18a33ba",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "47d39418-3f73-4376-9888-9fce45376d92"
        },
        "item": {
          "id": "7516e4fa-d63e-47ca-b384-24b199dd6210",
          "name": "did:invalid"
        },
        "response": {
          "id": "79d96e42-49c3-4e1f-8cbf-27ac360621cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63a40756-5ec5-4868-a884-587aa8778cf5",
        "cursor": {
          "ref": "de2da10a-d620-42fd-bd79-cf63172e5b46",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a97fce7c-e73f-438a-918b-d4dc072c538b"
        },
        "item": {
          "id": "63a40756-5ec5-4868-a884-587aa8778cf5",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "fdf28cac-f39d-4b58-ae1e-d6bee232f87b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 95,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57694be2-b0fb-4e23-a32a-6d6aa5d3b19f",
        "cursor": {
          "ref": "0e395a63-6f47-41b7-907e-fa2e1a005eb4",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "26a67017-1895-423e-94fc-b37dbab01686"
        },
        "item": {
          "id": "57694be2-b0fb-4e23-a32a-6d6aa5d3b19f",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "8f49d616-8709-4f91-905d-ac8cb00173d6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c16fea8-71b6-46c1-a9c7-c84587adb8c0",
        "cursor": {
          "ref": "37604d26-d282-41d0-8974-0942c8fbd2b3",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "82b48924-6a31-4845-babb-fca83d0b79bb"
        },
        "item": {
          "id": "6c16fea8-71b6-46c1-a9c7-c84587adb8c0",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "d07ecfdb-7541-4971-94d1-894279ac2bb6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86eb1b8f-d06f-427b-8820-30c26b7a7196",
        "cursor": {
          "ref": "28106130-1e63-4d9b-9ccb-55447ab3e605",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "4bd1538a-9ef8-40ec-a9ff-d455de126f1c"
        },
        "item": {
          "id": "86eb1b8f-d06f-427b-8820-30c26b7a7196",
          "name": "identifiers"
        },
        "response": {
          "id": "08ebd654-ef27-4778-b00e-00913b401024",
          "status": "OK",
          "code": 200,
          "responseTime": 110,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "501a8dd6-abfa-4213-8a34-dd2b5e1b5939",
        "cursor": {
          "ref": "b280723c-a5ec-4a50-aba4-f421f2e218af",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "dd51ffd9-290b-4874-8cb1-51fee5eb2bc0"
        },
        "item": {
          "id": "501a8dd6-abfa-4213-8a34-dd2b5e1b5939",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "6e0410d4-2c61-45f1-ab1d-966c28cfbd09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc9b2119-0f91-40fc-baeb-16acd4992beb",
        "cursor": {
          "ref": "e9cf9b94-2138-4ae9-ba2c-45ed22c407d3",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "2ca95204-8ccd-441e-b7c5-e279241278b1"
        },
        "item": {
          "id": "dc9b2119-0f91-40fc-baeb-16acd4992beb",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "65595a7c-2b9d-467c-be76-e2f8946e9c11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a306c41-b475-4010-9535-2cea17d4ef36",
        "cursor": {
          "ref": "e7ce9816-2fd5-4494-9a44-0c09aab6a576",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "78eb533a-8e35-4f61-894e-49aeecd48891"
        },
        "item": {
          "id": "7a306c41-b475-4010-9535-2cea17d4ef36",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "f2d0a835-7ea7-4f67-9dc2-39f8e7544816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc9bb540-4658-44ba-8772-70a664038c4e",
        "cursor": {
          "ref": "d53a54c3-a561-4946-be21-7c5ba619e342",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "7d9f3195-068a-4e75-bf1b-ff4bc1ecc453"
        },
        "item": {
          "id": "bc9bb540-4658-44ba-8772-70a664038c4e",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b8eaeb8f-4980-4678-a9d4-20ff7fee2edf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e18ddfe8-bf84-465d-9624-fc1dff38d6a5",
        "cursor": {
          "ref": "7dca238b-37ba-4c8a-a5c2-739bd5d90792",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e36c4413-4c45-4b44-85b6-af44a5e438fc"
        },
        "item": {
          "id": "e18ddfe8-bf84-465d-9624-fc1dff38d6a5",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "796cd955-816e-4b02-94c0-b5667a09d86c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5019bfc1-63e0-468e-b94e-180b747d7f4d",
        "cursor": {
          "ref": "331df888-9d7a-4e29-a688-7201732ae82d",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "2ea4bce0-3d72-4270-a717-b636d04dfff8"
        },
        "item": {
          "id": "5019bfc1-63e0-468e-b94e-180b747d7f4d",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "49170ffd-c345-4177-bd5f-6f5f54337c8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e2a7862-3b98-42e8-bf6b-ca8fcddb3c67",
        "cursor": {
          "ref": "f71e547c-db5e-4c5d-8229-2cadc9c8215c",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "9f0fe3c4-fd6a-4703-8d01-ab3845e6ed16"
        },
        "item": {
          "id": "5e2a7862-3b98-42e8-bf6b-ca8fcddb3c67",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "cf298495-b0f7-403d-9bd0-9ea9729812dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13251c58-b650-48c3-a808-cf57a5b44aa4",
        "cursor": {
          "ref": "24a15e86-3cc9-4f64-8dae-8452a8d28090",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "92b8ae04-a159-435f-9425-bab248432fe8"
        },
        "item": {
          "id": "13251c58-b650-48c3-a808-cf57a5b44aa4",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "4ca0fe73-4987-4d88-9faa-409b0a6f0bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd746d5c-9b46-4056-a4b0-d83fd662235c",
        "cursor": {
          "ref": "6ab51cb8-6f53-4ec8-8eef-a854dd102033",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "5be5399f-3538-42e2-a73f-691e17c684db"
        },
        "item": {
          "id": "cd746d5c-9b46-4056-a4b0-d83fd662235c",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "53baceb8-d891-471b-b6f5-ddaeaa479161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a1be94a-1cf6-4a27-9e88-66f903756a12",
        "cursor": {
          "ref": "13ad3236-16c3-4e25-9931-29e9af1d545d",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "bb4a20b2-3398-482e-9aea-5c466146af83"
        },
        "item": {
          "id": "6a1be94a-1cf6-4a27-9e88-66f903756a12",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "cbc2bcca-bef8-447c-a772-15a6473c4fba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a4b6bb4-d9f5-48b3-82ee-a8ab954d6859",
        "cursor": {
          "ref": "5b37a431-97a2-4cf7-9bf2-80cc783882ff",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "ce08ffff-d220-4113-96d7-8fae37ec3971"
        },
        "item": {
          "id": "1a4b6bb4-d9f5-48b3-82ee-a8ab954d6859",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "5ad7751f-a2e5-4c8d-be6e-c5336d390499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ce5d53e-0f09-48ac-9e72-e5e4326818a4",
        "cursor": {
          "ref": "6c74912f-c3b8-40b9-9650-9f260ed23fcd",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "7fccacd3-dda7-4420-9980-774e9881a06f"
        },
        "item": {
          "id": "8ce5d53e-0f09-48ac-9e72-e5e4326818a4",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "c4622a4d-692c-4abc-85f4-b2805bcfde4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36f33167-a68f-47fd-972f-5f96ffbde365",
        "cursor": {
          "ref": "545ed548-842e-419a-bf21-8557f582b887",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "59eb95a5-79f9-47ee-a1ef-f39c3eb52834"
        },
        "item": {
          "id": "36f33167-a68f-47fd-972f-5f96ffbde365",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "08f32d39-71aa-43fb-b1db-73a72be09de4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a180b078-94b5-4f74-ab5a-3731cc5832c7",
        "cursor": {
          "ref": "f8ed321f-8382-49bf-9c63-47be63ced76e",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "eaf97e19-6ed2-48be-b5e9-ca651d189115"
        },
        "item": {
          "id": "a180b078-94b5-4f74-ab5a-3731cc5832c7",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "5ad952f3-d047-402d-ad5e-b9410faf40b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8156c3f-8274-4b66-9f25-23353a0c6c3d",
        "cursor": {
          "ref": "31e972ac-2715-47fb-a5c7-3f0dbcd7f526",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "99ffeb75-341a-4454-a12c-aab726d0e547"
        },
        "item": {
          "id": "a8156c3f-8274-4b66-9f25-23353a0c6c3d",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "da6e0b44-c965-4a30-b2c1-34cf7145af52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfdad783-3668-4c4d-88a6-9250708e6bc3",
        "cursor": {
          "ref": "9705a116-c86f-46db-b222-1245540fcb54",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "986d180e-4b2e-4245-a410-0f3ec335a2e5"
        },
        "item": {
          "id": "cfdad783-3668-4c4d-88a6-9250708e6bc3",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "c761698d-4730-4eae-8acb-8383fc7c7c4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "894b06a3-0109-420e-aff8-674ff9458034",
        "cursor": {
          "ref": "936573a4-9e88-4269-b84c-de8e95adfe09",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "20233f2c-3622-46d8-9fbe-f7580f2ac8d0"
        },
        "item": {
          "id": "894b06a3-0109-420e-aff8-674ff9458034",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "1be06ee8-2f3e-49f8-b1ac-7e4e7e6ac673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7845bfbc-bff1-4e34-abf5-dec83ae3052b",
        "cursor": {
          "ref": "c016efe9-f586-47dc-a845-fa4dbc657323",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "cf5758aa-ade4-4e50-b115-d065ab0c47f7"
        },
        "item": {
          "id": "7845bfbc-bff1-4e34-abf5-dec83ae3052b",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "9ed6067f-d6d7-4f5c-a5f6-1882ca7add09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "155f1577-708c-4825-b41a-788a4f496bb9",
        "cursor": {
          "ref": "d9c71f32-ee31-416f-8844-26b9c40ae357",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "e9b68d9e-d5d6-42af-abb2-b7d4f8be8ee9"
        },
        "item": {
          "id": "155f1577-708c-4825-b41a-788a4f496bb9",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "689a3072-7b93-412f-871c-902ae4147c9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "606c6f94-8fec-46a7-bdfe-de100bf80ab7",
        "cursor": {
          "ref": "69a19bd7-1fb6-414d-a0a8-bcf6d9ce10ef",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "db0ceed0-fde3-4430-bd13-a30eeb36257c"
        },
        "item": {
          "id": "606c6f94-8fec-46a7-bdfe-de100bf80ab7",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f4e6b05a-e502-4c79-bd04-c141f291b5aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81b0492a-54ad-439f-9ff1-2ce5696a9774",
        "cursor": {
          "ref": "cac73fca-7cff-4a96-8d8b-7959e4569c92",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "0e08d50f-233d-4d48-8d55-edab0a38a1d9"
        },
        "item": {
          "id": "81b0492a-54ad-439f-9ff1-2ce5696a9774",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "c8cc27ed-642f-41b9-a21b-e4e49bf68ca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f40c1b4-4665-46b4-8531-33c26586e346",
        "cursor": {
          "ref": "f0c6ee76-883a-4890-86a2-6c368b0bcead",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "26f2bd0f-7d58-4b59-814d-dda1d5aa40fd"
        },
        "item": {
          "id": "7f40c1b4-4665-46b4-8531-33c26586e346",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "41ee6608-6053-4a54-a89a-f868e7c5b649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9464d34c-cd3f-4f43-8fb6-8e0133e6c7fd",
        "cursor": {
          "ref": "cc32ddea-3706-4cc1-8ffc-452cd9f2c602",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f3866efc-5ca1-4c1e-83f7-2cebc2099649"
        },
        "item": {
          "id": "9464d34c-cd3f-4f43-8fb6-8e0133e6c7fd",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "e45a6aa8-d4d6-49a3-9f2e-63a5f483e2b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bcee407-7eb1-4227-afba-d0a9b6d294db",
        "cursor": {
          "ref": "31cd82c9-5397-4c8d-8138-82ffe4fd74da",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "507679bb-4511-4f08-b198-c597c26d2088"
        },
        "item": {
          "id": "3bcee407-7eb1-4227-afba-d0a9b6d294db",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e68a9650-bd88-4e3b-8e58-d6015ab6e50c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c75e96b6-4067-4b28-926c-eea25e7d2a14",
        "cursor": {
          "ref": "fdba72ed-8f07-4934-98b5-3e45876fcd87",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "ce8dccbf-ffbd-4e61-ab72-669216cb9fbe"
        },
        "item": {
          "id": "c75e96b6-4067-4b28-926c-eea25e7d2a14",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "cd48b4c6-3ac2-444b-90e4-cd10c7e6efe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b4b0dad-c3c3-4eef-84df-dcd094a98765",
        "cursor": {
          "ref": "ea2dc4e9-d4f0-4163-804c-2fcab67b3643",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "249fabfe-9f0b-48fc-b09c-f2e3b7063b38"
        },
        "item": {
          "id": "6b4b0dad-c3c3-4eef-84df-dcd094a98765",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "24a823aa-a2ca-40bf-9dd8-e805279e427c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19ced198-cad5-47c5-b605-8d9b8a8c3971",
        "cursor": {
          "ref": "4370474e-db68-43fd-b44a-049c97b8bffb",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "7adb222a-26c8-4640-a13c-7db372e0c379"
        },
        "item": {
          "id": "19ced198-cad5-47c5-b605-8d9b8a8c3971",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "6e5f7251-96f6-4f19-90c5-d1b08882049f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f007429b-ebae-4b15-aa83-5f6deadf61b1",
        "cursor": {
          "ref": "f4590d4c-9113-47d6-ae5e-b3ae66061057",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "5a55cd32-cc91-4a38-935f-9b5189757ea7"
        },
        "item": {
          "id": "f007429b-ebae-4b15-aa83-5f6deadf61b1",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "811de50b-acff-4d55-a84f-d76816f3ccd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45e10153-d543-4e79-a841-99abf8b93ca0",
        "cursor": {
          "ref": "e47cfdce-13ab-4669-9800-b8e4c76a7f10",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "6298472d-4c21-410b-a338-4336f5edf4c5"
        },
        "item": {
          "id": "45e10153-d543-4e79-a841-99abf8b93ca0",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "8ca6b542-8440-48e1-80aa-2e008d6daadf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "181932b5-73eb-493f-9661-6e458405d751",
        "cursor": {
          "ref": "b09c24ec-af37-4ec9-b207-c59feff41447",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "41e6c679-80f8-47e5-a937-f5e701dc33f5"
        },
        "item": {
          "id": "181932b5-73eb-493f-9661-6e458405d751",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f787a681-1a0e-4f05-91e6-ab4422a50052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "470b1681-b8ae-4dbd-a099-a7008e712282",
        "cursor": {
          "ref": "589c2f14-3d29-496e-8195-607156795f6f",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "1438621b-237b-475e-9fe1-28ad9fc3d4c6"
        },
        "item": {
          "id": "470b1681-b8ae-4dbd-a099-a7008e712282",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "30897d04-0e79-4c45-a74b-53b67935a36d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1cb7fb4-121f-49f1-8fe6-de5a9b30662a",
        "cursor": {
          "ref": "3947b05f-8bd4-4c9b-996d-cdbbc1097f4f",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "c6a0a5a4-e2b7-41c9-a4e9-212f456cc302"
        },
        "item": {
          "id": "d1cb7fb4-121f-49f1-8fe6-de5a9b30662a",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "29dcc714-7fbe-4317-9afc-5e6d3e83c6a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdd92a09-8d2c-4416-bd23-246f9f34eee7",
        "cursor": {
          "ref": "74827d38-8026-4dd6-a5c4-3f5d113f8564",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "97ecd3b9-3006-4585-9ec3-e3a38f87681d"
        },
        "item": {
          "id": "bdd92a09-8d2c-4416-bd23-246f9f34eee7",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "3f176a22-84d3-4197-bbb7-2663396c37eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdbb7b7c-009f-4998-a5d8-f934e36a2d6c",
        "cursor": {
          "ref": "61c96937-823f-4900-bb73-a3ae72fc1aa3",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "fe3a961b-e140-47a6-88e3-6ccff28cf2a7"
        },
        "item": {
          "id": "cdbb7b7c-009f-4998-a5d8-f934e36a2d6c",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "cc137332-6093-4fe6-b87b-0251670a51a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52541c68-a08e-45e6-b92f-0b04cbaeedfc",
        "cursor": {
          "ref": "fe9456df-e9dd-4763-919b-9c8d4f6c44e1",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "9cf8cf2b-8999-4a12-8953-cbd7f1aa19d5"
        },
        "item": {
          "id": "52541c68-a08e-45e6-b92f-0b04cbaeedfc",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "7a1d87c4-7ca4-4605-a06c-fa96c9fe618a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "446b33e9-9bab-4ad7-9a33-a5cbbdf2dd42",
        "cursor": {
          "ref": "647c5efe-6be3-4509-b7bd-a666aa310531",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "22aff00d-fab3-4b30-b900-b742b307332e"
        },
        "item": {
          "id": "446b33e9-9bab-4ad7-9a33-a5cbbdf2dd42",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "c07877e5-88c2-4d27-b480-24ec48dc6d80",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 93,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b654b8d-5868-48ca-821d-a3c1f4162898",
        "cursor": {
          "ref": "ab1576fd-5314-418b-a4a0-a41323800df0",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "b47d79a0-bbd5-4a01-a0bc-fe38d46a0f00"
        },
        "item": {
          "id": "1b654b8d-5868-48ca-821d-a3c1f4162898",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "af32e0f3-f6a1-4ec9-8608-402b2c39e32e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e2d6ece-a5c0-4f27-91a8-e6d5117a9ed4",
        "cursor": {
          "ref": "2c6c5b6b-cf88-49a7-b150-c0d1d575f65a",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "8363d745-7e8b-4ee5-b36c-766a3df74009"
        },
        "item": {
          "id": "4e2d6ece-a5c0-4f27-91a8-e6d5117a9ed4",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "3e017d8e-3683-47fb-88e8-20002d2cb591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2129b114-a2ba-4d18-a1ad-6c7ddc2a781a",
        "cursor": {
          "ref": "60703a29-fb3f-4979-9d55-8c07b814d932",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "49df7e00-1f0f-4aeb-b713-6ee9c95cfda9"
        },
        "item": {
          "id": "2129b114-a2ba-4d18-a1ad-6c7ddc2a781a",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "43969b68-878b-4c72-ac58-60aba35b2ee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b57d4707-8abf-4247-8df2-6e6f3df9af45",
        "cursor": {
          "ref": "9995f19f-f805-40c7-9725-a52ac21225f6",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "c36eeeee-0dbc-4b5e-9200-5ffcdd86cfdd"
        },
        "item": {
          "id": "b57d4707-8abf-4247-8df2-6e6f3df9af45",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "5c5a0cbc-8cae-4233-9cb3-37aa32a7690e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1483d138-f7d2-44b5-90e0-db5375898108",
        "cursor": {
          "ref": "fff35cb9-aef7-4327-bed4-cd83f405d73e",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "23849960-d1c6-42fa-aeeb-d1f29e74d884"
        },
        "item": {
          "id": "1483d138-f7d2-44b5-90e0-db5375898108",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "c57224aa-5bf0-47ee-8e04-e679c5d02b09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b64dd72d-0620-4193-bf0d-4cd318ac0954",
        "cursor": {
          "ref": "8db3d6c8-bbe0-40a3-ace2-4f8908fa3f37",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "140373ab-cb97-4491-b5db-dfd14ca424d4"
        },
        "item": {
          "id": "b64dd72d-0620-4193-bf0d-4cd318ac0954",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "3d2eb982-d836-4c5b-aaa7-e9e8b0d5f791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf6a4afb-fcae-40f8-b9a8-a0c9205b7d12",
        "cursor": {
          "ref": "75dd6289-f4b2-4bd6-90d4-bc83be6870fe",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "63eff375-b58c-4c17-bd33-97d60f48e4e5"
        },
        "item": {
          "id": "cf6a4afb-fcae-40f8-b9a8-a0c9205b7d12",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "b7d4a9a9-3678-49c4-bd23-a88ae6612b2e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 76,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b06d7636-e571-4537-bcb7-98fe17fa5635",
        "cursor": {
          "ref": "bda64207-6838-4f41-98e2-df607f758489",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "7410c742-c1f3-41a2-81dc-4e7a566937d9"
        },
        "item": {
          "id": "b06d7636-e571-4537-bcb7-98fe17fa5635",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "a1c17e05-6cae-493d-acce-42e7ebde032b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3769dab-886d-48f8-ba9c-7d44b73eb699",
        "cursor": {
          "ref": "8aa03421-2474-494a-b756-b0f566659e12",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "50f01903-7a87-4395-ab68-ac078f7ddc0a"
        },
        "item": {
          "id": "f3769dab-886d-48f8-ba9c-7d44b73eb699",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "1dface00-9cab-4a12-88e7-448da1312c8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed50310d-3912-40be-ba6d-93a7df58d2ed",
        "cursor": {
          "ref": "a9747b47-e927-4bf1-b0cf-6ab4a96ff1ce",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "3e350b50-6646-4db3-8211-30c436293be3"
        },
        "item": {
          "id": "ed50310d-3912-40be-ba6d-93a7df58d2ed",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "04c9db46-acab-4ff1-ba2e-5987130279f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3d432bd-a87b-44fa-b665-cccc95fa8ea7",
        "cursor": {
          "ref": "84c5410c-98c9-48c2-a4ef-3b93c0ab1533",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "59928d02-d4b6-4aeb-8b23-15baa777866a"
        },
        "item": {
          "id": "a3d432bd-a87b-44fa-b665-cccc95fa8ea7",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "b37a877c-0831-4003-8662-596bb885874e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1628ec14-e232-41e3-8bae-04c76d1d31dc",
        "cursor": {
          "ref": "bcd35563-418a-4066-8d9d-1f3ba15c196c",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "4d2ed9e9-6fe1-47d3-bbc5-d1ca10a304ce"
        },
        "item": {
          "id": "1628ec14-e232-41e3-8bae-04c76d1d31dc",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "98435578-fc37-4611-a9e9-622555feea48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b461e0d5-4247-4e2a-8420-7ebccd7de852",
        "cursor": {
          "ref": "b58d374f-3aa8-4ad8-8f1e-8820e0b9b2cc",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "bf67e64a-4921-449a-b2b3-8cbc5875f9b8"
        },
        "item": {
          "id": "b461e0d5-4247-4e2a-8420-7ebccd7de852",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "6f3fec41-947f-4f5e-b426-9dbe4a4360cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e9bb269-bed8-4296-b7d6-576d3945302a",
        "cursor": {
          "ref": "ac231b34-b8f2-4f41-9c01-03028e47e714",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "ff2397ad-8182-41ae-8506-b00501ec86e9"
        },
        "item": {
          "id": "1e9bb269-bed8-4296-b7d6-576d3945302a",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "332f7f7c-378f-4e0c-b612-52fc80f8465b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3c37ed8-837a-4407-9a09-d0cbbb40fabd",
        "cursor": {
          "ref": "0dcefc9d-d023-48c6-8735-77fd3b796a70",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "0748470c-8f78-4a6c-a273-62390f8e694d"
        },
        "item": {
          "id": "b3c37ed8-837a-4407-9a09-d0cbbb40fabd",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "38f02e0f-497e-48c5-8faa-c55d2677b437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43edbafd-a038-4653-8a42-7cc6b66f205a",
        "cursor": {
          "ref": "3ef4578f-e207-474b-ab90-a36f50bf30d9",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "1ab6a7cf-4caf-4706-b195-15b77febbd05"
        },
        "item": {
          "id": "43edbafd-a038-4653-8a42-7cc6b66f205a",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "7e34e776-f2c2-4e2b-8e78-c4766d459834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ff07dfc-3e91-4e11-a441-d0787a16d2d9",
        "cursor": {
          "ref": "401cf89c-d517-47bf-b330-f25fa8b1ccc2",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "230ee57f-e12b-4310-9b1f-470936df7738"
        },
        "item": {
          "id": "4ff07dfc-3e91-4e11-a441-d0787a16d2d9",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "4b23ba7a-ef75-4a2e-9b8c-87ceeed83b56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b19d8ef6-0a1d-45a7-a733-33c96b043b4f",
        "cursor": {
          "ref": "83cda4cd-de4a-4181-8236-5ae4f29282d4",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f8533d74-1e0e-4053-a25d-c117df9b88ce"
        },
        "item": {
          "id": "b19d8ef6-0a1d-45a7-a733-33c96b043b4f",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "1a7e43a1-25f1-4ff1-8ec4-3da1f571fb77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1e7a98b-ffea-4756-afd8-45689a41f4ea",
        "cursor": {
          "ref": "78cf092b-af1f-4b32-a68b-85ed54274544",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "659cf1f7-d106-431d-b4a2-799b16110a98"
        },
        "item": {
          "id": "f1e7a98b-ffea-4756-afd8-45689a41f4ea",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "a33c9bff-e3f2-4c2d-b207-cc46756979b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dceabef8-8ce0-45bc-8c20-5e29fe60b477",
        "cursor": {
          "ref": "2f0f2afc-4e11-4f67-a0d3-c8086b75e885",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "9bd1790a-15e5-4c45-a8ee-e92d74f65fe2"
        },
        "item": {
          "id": "dceabef8-8ce0-45bc-8c20-5e29fe60b477",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "f6bc516d-1a38-40ad-a432-38e166eeaa1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68d3c980-b1e6-4837-bb2c-8244e996aac8",
        "cursor": {
          "ref": "d8c4b5b5-c83d-4b4b-9d66-4c640c14338a",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "04b0da28-fd0c-440d-98f1-3597eea6142a"
        },
        "item": {
          "id": "68d3c980-b1e6-4837-bb2c-8244e996aac8",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "b0a29474-5f26-4138-a57e-0ce7d137f9ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8bbd22d-5d6a-4b42-bf03-81de330959ff",
        "cursor": {
          "ref": "649f6308-01bf-49c4-bcd1-43c4cc97528b",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "e8374f1c-449e-4893-a6e2-02b637acb374"
        },
        "item": {
          "id": "c8bbd22d-5d6a-4b42-bf03-81de330959ff",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "6f06955c-92fb-49e2-9192-cd7fc5e1c46c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "475d3256-50c2-4d1d-a2bd-053b361a593c",
        "cursor": {
          "ref": "48f59267-2a49-4be0-b31a-3d98d8dad585",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "c3b19b24-b72f-4241-bff3-0c556752ea94"
        },
        "item": {
          "id": "475d3256-50c2-4d1d-a2bd-053b361a593c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "c6870f22-9095-444d-a387-b9ff970d08a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c927abf-e2d2-43f5-b9b4-6c666c79178a",
        "cursor": {
          "ref": "60daab50-8803-43b8-8856-663d12f714fe",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "90303768-8ce5-4f69-b149-174e6e5e3dc1"
        },
        "item": {
          "id": "0c927abf-e2d2-43f5-b9b4-6c666c79178a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "9c277d5a-dd70-44c1-b863-7b45fd779218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dda2fc36-aa52-4925-af66-aea2742d7ec2",
        "cursor": {
          "ref": "ee542887-94fa-44e7-a42f-52908e25a1c1",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "549d7e2e-2570-495d-9ce2-d540f4bb8370"
        },
        "item": {
          "id": "dda2fc36-aa52-4925-af66-aea2742d7ec2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "d1b0114b-64a9-4b2f-a69d-0ef6597803fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7563c385-f697-4a47-82b0-fa852ee90f8c",
        "cursor": {
          "ref": "6ffec619-5d2a-4b79-b04f-87f766b54f9b",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "b21b7ca8-ba9a-453f-9664-1b4ee92b6acd"
        },
        "item": {
          "id": "7563c385-f697-4a47-82b0-fa852ee90f8c",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "82888c5b-0b6d-4fcd-848f-64bcda7b0fca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1873b91d-a333-4194-bd0e-7209a055035f",
        "cursor": {
          "ref": "4f7422dc-6b9c-49e9-a7d3-b97af95b6372",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "bf0b2b19-0c0c-4a54-9a7c-29213a9cb9c1"
        },
        "item": {
          "id": "1873b91d-a333-4194-bd0e-7209a055035f",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f7c0ecd6-318e-427e-8bda-e1fa637e3281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ad321f-a8e0-438b-b1be-8710807b7c45",
        "cursor": {
          "ref": "d33bb4df-bf72-4508-b9bd-43fa26b6c873",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "ff3f0bfa-5a35-4413-b2ee-cbdc16546f72"
        },
        "item": {
          "id": "80ad321f-a8e0-438b-b1be-8710807b7c45",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "7d223710-ea4a-4f21-805c-d53b5197fbfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f146fe3-e222-4358-8d26-3af2ed3b88ad",
        "cursor": {
          "ref": "09dda9b8-ffbd-473b-8f50-4da1fed3ee24",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e566d4a3-3594-48c2-81fa-2778ddac839d"
        },
        "item": {
          "id": "3f146fe3-e222-4358-8d26-3af2ed3b88ad",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "c8c4cc27-df38-4867-8223-adcc19eca5f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afa1da65-5612-47bb-9521-f27a20754c49",
        "cursor": {
          "ref": "c51fc179-c4ac-444b-b653-e0ebda769458",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "799b64c0-cca6-48b6-9203-e3d7fce3e86b"
        },
        "item": {
          "id": "afa1da65-5612-47bb-9521-f27a20754c49",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "544d4541-f73e-4dfe-8929-44c078a9e7c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a67a4ae-1441-4058-9135-5029d9f4bc37",
        "cursor": {
          "ref": "595c77ac-c9c8-4135-a6fb-a1986794b849",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "0013511e-ee2f-4132-9f0b-24b57e54cf54"
        },
        "item": {
          "id": "1a67a4ae-1441-4058-9135-5029d9f4bc37",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "a3b622d9-1941-4f7f-af45-515ee40dd603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5db1f843-d2b6-4862-8bc4-551aefbf8254",
        "cursor": {
          "ref": "c2d98713-1f49-4203-a052-0cbb51871b38",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "712e8684-cc49-472e-8163-2f346c7e7aa0"
        },
        "item": {
          "id": "5db1f843-d2b6-4862-8bc4-551aefbf8254",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "769dfd4c-e1fd-4654-803a-cf9f045b9704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e6a8acf-7da8-41ae-ae57-c9c38e83b968",
        "cursor": {
          "ref": "dfda0588-4057-4376-b265-b1db20193868",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "3fa36b9b-07b4-4506-80fd-28d9ca1f7cfc"
        },
        "item": {
          "id": "9e6a8acf-7da8-41ae-ae57-c9c38e83b968",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "d6e6c257-885e-44fa-8aa6-b732be4a4a23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b49c0b5-2e7e-412c-946d-384602616a15",
        "cursor": {
          "ref": "964d9868-eafc-4d29-839d-f0dd7f10947c",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "f945bc51-19d2-41b4-a81c-37d8fc72a00b"
        },
        "item": {
          "id": "9b49c0b5-2e7e-412c-946d-384602616a15",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "75808cb0-2033-490c-bffd-efba60793a18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c09cf3b3-1dd0-4f80-8d79-3e6fdb607249",
        "cursor": {
          "ref": "be8a4cc8-9fe3-4711-8e34-f71361c4b1e1",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "8c5fe34a-29f8-42bb-a923-3c9ee8549ca5"
        },
        "item": {
          "id": "c09cf3b3-1dd0-4f80-8d79-3e6fdb607249",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "5986cfe2-4bb6-4f46-9c10-1c47ac88e92b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "106303a8-bf92-4da5-b34c-59d897845c61",
        "cursor": {
          "ref": "7fe8b688-493d-41e4-a49e-f277c9fdf8ea",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "2926a213-e952-472f-a23f-23e592f79049"
        },
        "item": {
          "id": "106303a8-bf92-4da5-b34c-59d897845c61",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "c78f13a9-9f23-4682-ab17-fc6b1ce9324c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a497446a-16e8-4df9-9522-b5322a398693",
        "cursor": {
          "ref": "791b08c3-6bbf-4029-90dc-f5b20c6289f5",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "1b5c814d-a293-488c-89ac-67b7e99f7eae"
        },
        "item": {
          "id": "a497446a-16e8-4df9-9522-b5322a398693",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "03f41f3e-05b4-4fcb-98b9-6ea83bfc0379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "667c9d33-2cee-45bc-88ae-7bf8752185d4",
        "cursor": {
          "ref": "77f1b188-0b34-4898-9f31-2e91256661fc",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "500dcd0a-ba43-4b8c-995f-9c713ba29c51"
        },
        "item": {
          "id": "667c9d33-2cee-45bc-88ae-7bf8752185d4",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "b8c846f2-1d4f-4bf8-a41f-eefac5e38ad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79a63edf-83e7-4654-a880-226dd86cb162",
        "cursor": {
          "ref": "82c44462-02c3-409c-90ca-096ab82f6d44",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "4d93c824-7ae1-486d-80e8-6051cb351280"
        },
        "item": {
          "id": "79a63edf-83e7-4654-a880-226dd86cb162",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "deac0b79-e4b7-4d47-8eb5-5e35a7a5fdce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3695dd86-ec72-4754-bfd5-265e5b598b99",
        "cursor": {
          "ref": "d2b6009d-d651-4689-ab97-df76aee612c1",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "6e325cfe-6af1-49ba-9fe7-4f6367054617"
        },
        "item": {
          "id": "3695dd86-ec72-4754-bfd5-265e5b598b99",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "c53a807b-553a-4a50-944e-448fdbb8a9d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c175cc2-6dea-4f7c-8c81-44b69f3413dc",
        "cursor": {
          "ref": "6d8c7991-1626-462a-809d-515103945950",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "b22a833f-6d79-4a65-9518-d488ca3685c7"
        },
        "item": {
          "id": "4c175cc2-6dea-4f7c-8c81-44b69f3413dc",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "82b49013-a586-45dd-a3d3-1d10b8f7c747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fecca1fa-6c6a-4604-945f-bf57b6a26786",
        "cursor": {
          "ref": "4daf5adb-0436-4603-9dfb-5a95c58161ef",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "40a67569-7e5a-482b-a268-ab9c09077f4a"
        },
        "item": {
          "id": "fecca1fa-6c6a-4604-945f-bf57b6a26786",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "7e203d98-fdaa-4c80-8b0d-a57b712a583f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3e55971-4419-4123-9f90-5768b699de72",
        "cursor": {
          "ref": "0d355afd-90d2-4107-a739-ea1dc45e85f1",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "a58615ce-bffc-41b7-bfe7-76d4e7456a01"
        },
        "item": {
          "id": "f3e55971-4419-4123-9f90-5768b699de72",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "e0b50364-962d-45d3-9569-9013d51008a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49ad5f5d-35ab-4605-8985-aa3d0d341dd5",
        "cursor": {
          "ref": "bb803f7a-3b7c-4ba1-909d-d491085f8489",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "475b108b-b71c-489b-9b44-02a9f6de2283"
        },
        "item": {
          "id": "49ad5f5d-35ab-4605-8985-aa3d0d341dd5",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "f9938917-7500-4eb2-b580-1d6be59d50b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "274a7f64-b581-4285-85fd-1c50779b477f",
        "cursor": {
          "ref": "ea30be19-d706-4ff0-8c3f-de5adec89355",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "aeececea-f0e4-486d-99c3-e061c1636c88"
        },
        "item": {
          "id": "274a7f64-b581-4285-85fd-1c50779b477f",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "95db9fbb-df65-4d2e-a3fa-05a2d639a877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9874335d-f249-442c-956c-aa8759f23b6e",
        "cursor": {
          "ref": "c2f4c665-1e01-4d6c-835a-a875c4875081",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "61c23023-006b-4539-890d-5c77d799b3b0"
        },
        "item": {
          "id": "9874335d-f249-442c-956c-aa8759f23b6e",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "ade3c591-6d27-4a26-906b-f4ec8530b1a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "721c48db-e691-4b3c-aed1-89a53279ac5b",
        "cursor": {
          "ref": "b3f2c005-7979-43c3-800b-225463ef5c8e",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "056733f7-6f75-4a70-b5f8-9a5d17b49d6c"
        },
        "item": {
          "id": "721c48db-e691-4b3c-aed1-89a53279ac5b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "d6ef6ae1-02ce-4ae2-9410-58c3a908e8e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bef5f3a2-763e-4e7c-852e-cf3e66e55ee6",
        "cursor": {
          "ref": "53276abf-b23f-4158-88b7-364ebecc4330",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "06d178ea-567c-4cb9-bd7e-1bd3440ea7bb"
        },
        "item": {
          "id": "bef5f3a2-763e-4e7c-852e-cf3e66e55ee6",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "8bed519e-10e1-436a-9552-abb7bef44d70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "888b46e2-5c9c-4ce0-8868-cf0195e3ab28",
        "cursor": {
          "ref": "7f971c6b-916a-44b7-9788-305f7747edee",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "9cceff39-518d-45d1-bf51-baca5b6117f6"
        },
        "item": {
          "id": "888b46e2-5c9c-4ce0-8868-cf0195e3ab28",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "a1d675df-5eaa-49b1-aa58-c2b71fc0424f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bab5759-8c33-498b-8e94-ba5dc80825d0",
        "cursor": {
          "ref": "564309b2-bebd-4162-bbce-1277dcb1b6fb",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "685e197c-8c28-4e3e-8b2a-68152fd7b5fd"
        },
        "item": {
          "id": "4bab5759-8c33-498b-8e94-ba5dc80825d0",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "cd7f862a-b31d-4f08-b8c7-ade464964073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c941404c-5623-40dc-9d11-f4d068c4fbbd",
        "cursor": {
          "ref": "83ac44c6-71ba-41e3-82af-b8120ee21590",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "daa1d835-5511-494c-a9bc-403437beb0c5"
        },
        "item": {
          "id": "c941404c-5623-40dc-9d11-f4d068c4fbbd",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "d4208f36-b05f-4fca-8c52-c0bb6797bf3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65f34558-f9e6-4c3e-af3b-ffc7bf076a9a",
        "cursor": {
          "ref": "449ed270-76f3-4e0b-af4f-143a3687adcc",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "71c4443b-3752-454a-93ca-fdd704ebfee5"
        },
        "item": {
          "id": "65f34558-f9e6-4c3e-af3b-ffc7bf076a9a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "3ac8de68-473b-4099-b141-7f987e08edfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43be04ed-d6d6-455a-be3c-dbc98eadb612",
        "cursor": {
          "ref": "01636eb4-8714-47ba-b66d-4d43a65c4ea9",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "24f01770-e002-448d-a9ef-ce9250f87949"
        },
        "item": {
          "id": "43be04ed-d6d6-455a-be3c-dbc98eadb612",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "e94a7c23-90cc-4171-af11-a3d38d097168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb351f51-3c4e-4ccd-95c4-b9835fb02df3",
        "cursor": {
          "ref": "1a60645a-91a9-497b-bb17-d5da9ab007a8",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "4ecfb83d-a4b3-4b56-a1af-767157d0367d"
        },
        "item": {
          "id": "cb351f51-3c4e-4ccd-95c4-b9835fb02df3",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "1e56ad8b-26d9-4937-ab54-8f6e11d8803c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26a2b2e5-3580-4e19-8e84-d7b70f985977",
        "cursor": {
          "ref": "4823fd4a-fda0-4e22-8cf2-56f11e1e5236",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "8c6773ba-73a8-467e-be00-de3c5d31dad4"
        },
        "item": {
          "id": "26a2b2e5-3580-4e19-8e84-d7b70f985977",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "5f2081d6-de54-47cc-8295-15d1fa408f2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9d8ee40-32a9-4cc7-a48d-9dd4c646046a",
        "cursor": {
          "ref": "bba0c7e0-730d-4cfb-84a6-07341b623dcf",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "83d6790f-bed5-4e5c-8aae-68617b7bc56f"
        },
        "item": {
          "id": "c9d8ee40-32a9-4cc7-a48d-9dd4c646046a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "c6e9871e-a4a1-427e-ac76-bca7010aaa28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9fa2396-752f-42d6-83a0-5379a2a01a13",
        "cursor": {
          "ref": "ebdae7f7-740f-43ca-b495-63940b81adff",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "51c3b2b0-3dab-4072-b69f-3722dc2ba41b"
        },
        "item": {
          "id": "d9fa2396-752f-42d6-83a0-5379a2a01a13",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "9a067cae-c983-486f-b33a-918f75c12683",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b16f47ab-614b-4da4-868b-3aa418bb6e9a",
        "cursor": {
          "ref": "967b879a-e3af-4492-bc97-47cd9fca2e7b",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "5d3ae822-ecf9-4401-a59d-582abaa93c71"
        },
        "item": {
          "id": "b16f47ab-614b-4da4-868b-3aa418bb6e9a",
          "name": "credentials_issue"
        },
        "response": {
          "id": "f8a866c8-aaf0-4d90-a9d8-31a911250243",
          "status": "Created",
          "code": 201,
          "responseTime": 97,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ecfd36e-c1aa-4cca-9c37-4aeaa39df3ad",
        "cursor": {
          "ref": "452d3b06-f687-4434-9abf-bde6c88a8b31",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "da40061b-696c-4f26-beb0-a2fb9fd673dc"
        },
        "item": {
          "id": "9ecfd36e-c1aa-4cca-9c37-4aeaa39df3ad",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "dbf74d2c-2855-46d9-9a31-1a2c383461ee",
          "status": "Created",
          "code": 201,
          "responseTime": 264,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8767c49b-12d0-4328-a14b-5af197e725d1",
        "cursor": {
          "ref": "8fd72c2a-2a6a-4c23-9f48-424808e37967",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "593beeb9-523f-4459-9f13-e73e6135a4c5"
        },
        "item": {
          "id": "8767c49b-12d0-4328-a14b-5af197e725d1",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "309994f3-4ca1-4248-a9cc-ec6622478cc4",
          "status": "Created",
          "code": 201,
          "responseTime": 93,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "465e288c-8f67-4317-a814-485d67d878d3",
        "cursor": {
          "ref": "fb21761e-b15e-46a6-8721-0dbb4f599de2",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "76f6c26d-66bd-4191-b19c-8fdf8d62c5a6"
        },
        "item": {
          "id": "465e288c-8f67-4317-a814-485d67d878d3",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "1331a73c-e3e5-4bc7-961b-e809eb1641d4",
          "status": "Created",
          "code": 201,
          "responseTime": 87,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9683cf6b-4d64-4067-a15d-69cc10039e08",
        "cursor": {
          "ref": "59318bd5-7f79-44b4-ae2b-e856493bb212",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "81fe7147-aa58-4992-96f4-60c4ece45223"
        },
        "item": {
          "id": "9683cf6b-4d64-4067-a15d-69cc10039e08",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "0edeef62-73dc-4e3a-8602-ddb85e30ec23",
          "status": "Created",
          "code": 201,
          "responseTime": 87,
          "responseSize": 907
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "3867276b-3ee4-4ac5-b05e-001c6bb698be",
        "cursor": {
          "ref": "e1a5dd04-0255-487c-be49-d10fc8cfef92",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "04f83875-1e42-4400-997a-4cf1796a65ca"
        },
        "item": {
          "id": "3867276b-3ee4-4ac5-b05e-001c6bb698be",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "43c5fb75-c8bc-42ce-bbce-021bdca3b23c",
          "status": "Created",
          "code": 201,
          "responseTime": 89,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f227842d-7341-4469-9e05-d438fae30ef3",
        "cursor": {
          "ref": "f72985de-cde5-4069-90a8-367fb44585df",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "451405c9-8e19-4e1e-8188-97aee1cf4bcf"
        },
        "item": {
          "id": "f227842d-7341-4469-9e05-d438fae30ef3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "acf520e3-955e-4a99-ac3d-355ac3bcb6c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7d8ff35-4391-4738-a89d-ae602273cb12",
        "cursor": {
          "ref": "8f60104e-edc7-497d-ac6a-1994f5b6fda9",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "a4c7c4e5-3521-4f48-af1e-a03c07a9aa46"
        },
        "item": {
          "id": "f7d8ff35-4391-4738-a89d-ae602273cb12",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "3369f724-5c86-49d0-bc8d-ed25774b0b1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dacfa39-859c-4a58-86c5-e1abf1c50f69",
        "cursor": {
          "ref": "71566761-8258-4eba-bd1f-f0b84fdd1bfb",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "7449ee51-c47e-48d0-9eed-ab35c61e9325"
        },
        "item": {
          "id": "8dacfa39-859c-4a58-86c5-e1abf1c50f69",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7c3e7d27-84b4-4105-b377-a646cddb099e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0be908d9-ab7a-4937-a122-846fc25c9ee2",
        "cursor": {
          "ref": "84ca7d70-9547-4ceb-89d5-24dba57fd7a1",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f2f5eff3-69e7-40b3-8577-254e7f8b00a7"
        },
        "item": {
          "id": "0be908d9-ab7a-4937-a122-846fc25c9ee2",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e0aed49a-5775-4476-aaac-66f485cc7edb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce15f65a-23b0-45c0-ba6a-6f1b1b038d79",
        "cursor": {
          "ref": "d3ef406c-0979-48ea-84ab-e9ec1ec69e69",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "2c96001f-8179-40cd-a774-055cf3f37eb6"
        },
        "item": {
          "id": "ce15f65a-23b0-45c0-ba6a-6f1b1b038d79",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "04ca5da8-b03a-488f-88a3-3e8ff6173830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c684be-08c6-4f67-a93c-09df44ad5d42",
        "cursor": {
          "ref": "54f7825f-70ba-49a9-8bb2-6908323c7ea1",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "bc6acf33-4d1c-461d-a823-2a6865d39286"
        },
        "item": {
          "id": "92c684be-08c6-4f67-a93c-09df44ad5d42",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "555c7d56-f6c4-4cdd-b28f-4c978fc4d482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d138e6e-569f-4c77-89f8-1f9dcfb526d8",
        "cursor": {
          "ref": "cf839ac6-ef9c-4288-87c0-ad8e1a8be783",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "86cf4cb6-2bf5-4aff-99d1-24fc3b310b5f"
        },
        "item": {
          "id": "4d138e6e-569f-4c77-89f8-1f9dcfb526d8",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1610dd1f-b9ea-42f1-9ad2-a7673c8426af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82c5dc78-ac57-4a8c-b09e-5d85d731d6df",
        "cursor": {
          "ref": "807eb95a-7786-4773-ba94-4a5865d1e34e",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "4e9bcf97-1211-4a3c-80b2-a85f4ce759d8"
        },
        "item": {
          "id": "82c5dc78-ac57-4a8c-b09e-5d85d731d6df",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "56cb3fae-de8d-41dd-baf2-3247720c8009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc1c1345-a40e-4ba5-8ef6-e82852824fda",
        "cursor": {
          "ref": "e105351c-6501-48ae-9a93-bd2ed5432bab",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ac4d9481-a029-4daa-be71-9cf41099562b"
        },
        "item": {
          "id": "cc1c1345-a40e-4ba5-8ef6-e82852824fda",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "85db7398-1e5f-40f6-8eb3-1384b3898275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a2823df-fa9b-4bf1-807a-eb3bd5f9e9ca",
        "cursor": {
          "ref": "9c0c20e4-acb3-44ae-b8f9-3d68e83b794f",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "8497282a-aabb-4b32-8ff5-824f91ff0149"
        },
        "item": {
          "id": "1a2823df-fa9b-4bf1-807a-eb3bd5f9e9ca",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "85c7e849-fe3f-41fa-82c8-843cab12bb30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "360bf087-d3c6-482e-aa4d-706f52cda314",
        "cursor": {
          "ref": "f9e5eef2-9091-473f-b4b4-d976eb38f456",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "43bf6610-a2ed-4492-bf45-145eee8c43a1"
        },
        "item": {
          "id": "360bf087-d3c6-482e-aa4d-706f52cda314",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d378f3cf-5d96-4885-8409-2f2d63bc8e2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c9393d2-25bf-47a1-a533-4bd2d47cb9cc",
        "cursor": {
          "ref": "7b4364d7-ddb4-4c66-89e4-7a4577b6f415",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "ba7cd1ce-7829-4651-9ca2-140c7120d185"
        },
        "item": {
          "id": "7c9393d2-25bf-47a1-a533-4bd2d47cb9cc",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "52efbd72-e220-4245-96ac-738c35a46d7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a2fa293-fa34-4cd6-bc92-0a83228d5afb",
        "cursor": {
          "ref": "b0d0496b-41fe-4761-8fca-5aa494d17984",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "fe8ff24d-24bb-4317-a62d-d15429d104e9"
        },
        "item": {
          "id": "4a2fa293-fa34-4cd6-bc92-0a83228d5afb",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "efc907a0-8cac-4f03-85e5-7cb9e7896dbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9018d8e6-5f7f-465a-a7cf-e9b83a768eeb",
        "cursor": {
          "ref": "7dc20dfc-c4b8-4225-bc0c-1e27bfafbed5",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "883d9079-7d65-4b2a-80ab-0e15ca982f83"
        },
        "item": {
          "id": "9018d8e6-5f7f-465a-a7cf-e9b83a768eeb",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "0e4e759a-32e3-4738-a018-57937ae0c3e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a870690-b35a-4b7a-a436-e8feb4e8caf4",
        "cursor": {
          "ref": "74b4e442-1876-4bd2-901b-d4d4414f1f54",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "f24e7056-670a-4a5f-9fd9-b5a73156de70"
        },
        "item": {
          "id": "2a870690-b35a-4b7a-a436-e8feb4e8caf4",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "14380608-a31d-4bd8-8dd2-b1b82d03ecb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a317aba9-be38-4ffa-9879-49060fe604f8",
        "cursor": {
          "ref": "dfa46b1c-cd1a-46ad-a81a-cdcc73a137fb",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "fc9bdb45-0d72-4734-b956-ce7bd3cceaa2"
        },
        "item": {
          "id": "a317aba9-be38-4ffa-9879-49060fe604f8",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5ab9095e-a5d4-4eff-912e-ef351453595d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92a23ac4-7930-4d9b-8f53-b1be7381f3e2",
        "cursor": {
          "ref": "27c7c549-8f20-47a6-8204-ff2333301104",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "4b408eb6-958c-45ef-8c81-5f65596fed42"
        },
        "item": {
          "id": "92a23ac4-7930-4d9b-8f53-b1be7381f3e2",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a5c06086-a041-4c34-816f-93fc212f0666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "033052b4-062b-4881-b3dc-b1030b8a7717",
        "cursor": {
          "ref": "3342740d-2959-48e4-840b-09d587a3d1ec",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "57904f4b-cd1a-4642-81a3-50820d71c06b"
        },
        "item": {
          "id": "033052b4-062b-4881-b3dc-b1030b8a7717",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "815939a6-0f7a-4546-aef8-03f7a31ef67b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cdd5841-c928-413c-afd9-560b63d297ce",
        "cursor": {
          "ref": "eab5e8df-959b-46cf-a9cb-5775b0a130ef",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "e64ffe02-4a7b-4ccf-8085-e9adf62baef0"
        },
        "item": {
          "id": "9cdd5841-c928-413c-afd9-560b63d297ce",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d46d2274-b929-4a2e-85ce-a1568ebed586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c4fc691-a681-4c96-a9c9-f63da10edb0e",
        "cursor": {
          "ref": "0fc58911-0522-4a17-9492-fb1ef345d112",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "053d8490-4ca8-462d-b8ab-b38f2e212c03"
        },
        "item": {
          "id": "5c4fc691-a681-4c96-a9c9-f63da10edb0e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "17c2ecd1-0e14-485d-9e3d-93ff8964d990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f25911-c3de-4a23-a0b3-9c28841b564a",
        "cursor": {
          "ref": "a0880237-30fa-4a8d-b0a2-b54cca4069fc",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "bd070a62-1140-46e2-a81f-44b2468a3f0f"
        },
        "item": {
          "id": "96f25911-c3de-4a23-a0b3-9c28841b564a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "03aee71f-32ee-4d21-a8c1-b60acfe32fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "456cb0fd-d525-4055-b2be-24ed43d773d8",
        "cursor": {
          "ref": "1c7ee44d-7cac-4a23-8ce7-9f3f258b8455",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "01da4a28-a310-44e6-b32e-ca4821874183"
        },
        "item": {
          "id": "456cb0fd-d525-4055-b2be-24ed43d773d8",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "aa396eef-377a-440c-9a56-620b70e90205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc10db20-5e2b-4f9a-b46a-d6bb5581e212",
        "cursor": {
          "ref": "7421fe64-1977-4d71-bda0-91eced082ee1",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "095cb659-4a9e-46f9-ae90-90734f239c5b"
        },
        "item": {
          "id": "fc10db20-5e2b-4f9a-b46a-d6bb5581e212",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a76dcced-67de-4480-bd3e-12dd90dbf513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "418e3fe7-e3b5-40ac-a789-59d97216fd4f",
        "cursor": {
          "ref": "81063bc9-0f84-4c30-a9e8-f4ea775b9702",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "f3d6d75f-7d52-4bba-a0bb-5a404c8157e8"
        },
        "item": {
          "id": "418e3fe7-e3b5-40ac-a789-59d97216fd4f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "97a2fc81-9a73-4afa-a3a6-06d2fb073f0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e6a1626-e608-4516-b667-393978371420",
        "cursor": {
          "ref": "3b0ac19f-00b0-4bf8-95eb-ced84f575f88",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "1721c78c-504a-4902-b5d7-a70c9f26812d"
        },
        "item": {
          "id": "1e6a1626-e608-4516-b667-393978371420",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "81f06e57-9511-41e3-816a-ed2415cf31c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71accf33-865e-4e88-8a3d-c3cd1c5e5d00",
        "cursor": {
          "ref": "5457d1d2-76c2-4a7c-a5ff-1d5f96a72420",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "238de7fe-de71-48d7-a630-24cc80475595"
        },
        "item": {
          "id": "71accf33-865e-4e88-8a3d-c3cd1c5e5d00",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "81edac98-19ab-4288-97c5-02f96c6f4de6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec61a34c-1198-4728-9a79-96aad54c9dc9",
        "cursor": {
          "ref": "bd328fd1-1214-4634-9118-aaecc616d090",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "6d09d122-d1a4-46e9-8cc0-9c696d91fcc0"
        },
        "item": {
          "id": "ec61a34c-1198-4728-9a79-96aad54c9dc9",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "59880641-3aa8-4627-a38f-89c842928c70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c506dc0c-af3b-4e1b-baa2-fec7cc86581b",
        "cursor": {
          "ref": "efc23b55-801c-4dff-b9b4-11abc7b2d80a",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "62936d33-8e80-4e16-9ec6-b45da04281ce"
        },
        "item": {
          "id": "c506dc0c-af3b-4e1b-baa2-fec7cc86581b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ef1c0880-4546-4148-93d3-548edffd1922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f31ce309-8138-4222-8408-5c0567c2ef9a",
        "cursor": {
          "ref": "0ee830f9-9bc5-4c94-986d-d860f3973146",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "bb2009a6-6a9a-4203-ae56-332436074404"
        },
        "item": {
          "id": "f31ce309-8138-4222-8408-5c0567c2ef9a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "140cdb7e-2576-4123-a281-372a28f3514c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92346d31-8b07-4ada-a8f5-88459673e6c5",
        "cursor": {
          "ref": "d35bf671-5052-43ba-87e6-5e2674411311",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "e2b0c103-6f4b-4ab2-835e-71783c9fc253"
        },
        "item": {
          "id": "92346d31-8b07-4ada-a8f5-88459673e6c5",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "13526386-ffc5-4b41-a46c-4b88948a585e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "705b0bf2-6fdb-4c37-b060-011d53562b66",
        "cursor": {
          "ref": "df6299d7-675d-4bd1-8eab-d8e2f26a7a5c",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "7c8b1ce1-1322-4d39-8d01-22803274adfe"
        },
        "item": {
          "id": "705b0bf2-6fdb-4c37-b060-011d53562b66",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f8b94349-0406-4314-8f55-5572451ac35d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e347ae21-d8d4-4f18-b446-e71a9580bcb1",
        "cursor": {
          "ref": "feeb60a4-61d0-4ffd-9ca3-1067e1d6972b",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "cfbb680c-381a-4e13-84f6-765e261f8120"
        },
        "item": {
          "id": "e347ae21-d8d4-4f18-b446-e71a9580bcb1",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "5ecf551f-d557-4142-9447-6f1cab9698ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64d88545-d7bc-46da-851a-e905445038f2",
        "cursor": {
          "ref": "b98d03ba-9eec-495b-996f-ca1a7d8469d4",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "a7ab601e-7e95-4509-8d37-42b7577e0445"
        },
        "item": {
          "id": "64d88545-d7bc-46da-851a-e905445038f2",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e3c865e8-b538-4c6d-a833-7beb0259f0ce",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "476085d4-75ad-4b98-b1b6-0e81bd96f21f",
        "cursor": {
          "ref": "a7f295c9-412e-47e7-9f32-0008186db655",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "1ef42cb5-3401-4aaf-8b8a-e9bd8583f0cd"
        },
        "item": {
          "id": "476085d4-75ad-4b98-b1b6-0e81bd96f21f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3a65f45c-2ca8-473b-a78c-69b89789740f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47650d2a-95f7-495f-b1c8-72d33b7f3102",
        "cursor": {
          "ref": "0c9bc2cd-0a38-4d01-bb05-365087fd3ca5",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "364416dd-8bf1-4d1b-99cc-fbd2efc94e02"
        },
        "item": {
          "id": "47650d2a-95f7-495f-b1c8-72d33b7f3102",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1ab66ef8-e67f-421a-bd6a-699d9446de28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7456954-888f-4c8d-92ea-f6fea5ab508f",
        "cursor": {
          "ref": "774e2fc4-03fb-42ee-8ce1-9b2a5b872fcd",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "365e8598-94f8-4be9-afad-ad41e4d5d850"
        },
        "item": {
          "id": "c7456954-888f-4c8d-92ea-f6fea5ab508f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "aa1a2f3d-550e-43fe-9eed-8d1be0d04b57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a85ed485-5dc5-4cae-8840-63acb1d8da6a",
        "cursor": {
          "ref": "1ee42c25-709f-4352-bc4b-5ee17c45e9c3",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "02abe697-0145-4184-b356-2a128fcbe39d"
        },
        "item": {
          "id": "a85ed485-5dc5-4cae-8840-63acb1d8da6a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "561bab95-5c21-4e75-8359-b5762d34c157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "619db5fa-7d03-482c-b20c-65822b9754ae",
        "cursor": {
          "ref": "69d0f7dd-0fbe-4065-adee-64e75775ae5f",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "690cb1fc-6a74-4d31-807e-5aeab76f3037"
        },
        "item": {
          "id": "619db5fa-7d03-482c-b20c-65822b9754ae",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "221789f8-6983-43ac-ad0b-ef368c1ffe6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b566417-b3e7-4fd5-9381-9f1c38eba662",
        "cursor": {
          "ref": "2485aa33-fd41-4006-bccf-dc319232848f",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f5d0f13c-f9ba-4fc1-8e4f-e1e683ff56c2"
        },
        "item": {
          "id": "1b566417-b3e7-4fd5-9381-9f1c38eba662",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c697cd17-85d0-48ad-9b21-6f0fdb54c861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8da0341a-6877-43e3-88e3-61a5f1d9b795",
        "cursor": {
          "ref": "ff2e1dc8-cbe6-4df6-81ad-8e703e826e4b",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "15554008-e97e-4927-8ec7-f806e71833bd"
        },
        "item": {
          "id": "8da0341a-6877-43e3-88e3-61a5f1d9b795",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c2f70008-4bd6-48ce-a0ac-46f412f9329f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d14c6fbf-08eb-47bd-bbec-05f41141dcb0",
        "cursor": {
          "ref": "ff959253-e2ce-4c6f-984a-7f248c012e6c",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "23bc04df-b8db-4091-a8c6-4136940bf26c"
        },
        "item": {
          "id": "d14c6fbf-08eb-47bd-bbec-05f41141dcb0",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c4e8c5ab-b4d9-41ec-829a-565ae9e9d96f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f0537a1-874e-4971-8b21-03f92abb2d08",
        "cursor": {
          "ref": "4978f1a3-146e-4ead-bf84-b11d026e71f6",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "9a45134d-c942-431b-a490-7b5777292075"
        },
        "item": {
          "id": "5f0537a1-874e-4971-8b21-03f92abb2d08",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "95083efa-5c8a-4ab9-a50c-e8faa7b0b0bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fce1534b-8144-48ad-8dce-0c83e3781bae",
        "cursor": {
          "ref": "795247fa-9266-40df-98da-7b6d797e7b97",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "3d7e47bc-4ea3-4bf0-9d54-ad9f58daa713"
        },
        "item": {
          "id": "fce1534b-8144-48ad-8dce-0c83e3781bae",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "8d0ad248-841d-4dfb-a281-0bc160147ca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e49eee-4c3a-4a2c-86f6-8b5911aaea0b",
        "cursor": {
          "ref": "14796dbb-711a-4e36-8b3d-b80b18789c4b",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "f035daa5-7ac0-4659-9826-2fd6a1383c36"
        },
        "item": {
          "id": "a4e49eee-4c3a-4a2c-86f6-8b5911aaea0b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "01d55776-1305-495a-8951-2bd4f648655f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f74c41c-53e2-472e-8657-eb4a336c906e",
        "cursor": {
          "ref": "0e127942-9e0e-4fbf-876a-723e70db7840",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "37ab8177-a71e-4e27-94b9-568c07d86179"
        },
        "item": {
          "id": "9f74c41c-53e2-472e-8657-eb4a336c906e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "82c6d8c9-9bb6-40d1-bd89-55888e51fe26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a054b3e-6479-4fe8-91a9-84d8db144051",
        "cursor": {
          "ref": "098e044f-2d34-4e21-8838-9ad35bcea984",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "aab5cfab-80a2-4a7d-b8ff-f268bc28f15b"
        },
        "item": {
          "id": "3a054b3e-6479-4fe8-91a9-84d8db144051",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "91ff6866-7d3c-459d-8b25-25263b4d56f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4487f7a3-f33e-4821-8e38-43532cecc6d8",
        "cursor": {
          "ref": "c7d5ba05-d804-46c4-b9a5-43d925a5f992",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "89df0916-0790-4e04-b5c8-c8f78cda8d03"
        },
        "item": {
          "id": "4487f7a3-f33e-4821-8e38-43532cecc6d8",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "193fb1ff-baa8-42e0-aaef-92dcb03492a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f1268ad-a3aa-4005-a86b-a3dd70641df3",
        "cursor": {
          "ref": "4db85f6e-2b91-4648-848b-89aa5da1332f",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "0faf336a-a6c1-46ad-9192-500832657bbc"
        },
        "item": {
          "id": "0f1268ad-a3aa-4005-a86b-a3dd70641df3",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "53190cd9-287b-4b5d-ba05-8e919d799c8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e8efec0-15ff-4c78-8ab4-b930f916c763",
        "cursor": {
          "ref": "23ba8d94-dce3-4883-95c3-31376b8417ed",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "5d64e7b5-962c-492c-916e-370c0a2a5190"
        },
        "item": {
          "id": "3e8efec0-15ff-4c78-8ab4-b930f916c763",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c53ec4d2-9ca3-4af7-8e91-12849d881f95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f1dad99-5c3c-45f3-b818-ba1c83f1552a",
        "cursor": {
          "ref": "77241964-dd34-4a29-9ea9-9e833beacae3",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "3ebaf147-83fd-4e50-b8bf-2a1f552e95c8"
        },
        "item": {
          "id": "5f1dad99-5c3c-45f3-b818-ba1c83f1552a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6ce01f93-2de3-4381-ac90-c9dd715485bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0fc4912-caa5-4928-85b8-1ba810f8bc6b",
        "cursor": {
          "ref": "f0efe291-84ad-44ae-bc23-fb5f0d252b53",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "e7a957d0-79be-419c-a3de-42c0c9ec9ba7"
        },
        "item": {
          "id": "a0fc4912-caa5-4928-85b8-1ba810f8bc6b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6dd4d7da-3f2d-4abd-8bf0-c6869b0289d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fc8fae2-e3f9-4a71-88dd-f129f2991085",
        "cursor": {
          "ref": "a03adcc5-dd0b-48f3-9a8a-be2eb99fd483",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "ce903f06-c05d-4f48-8c63-c6c8e06d6069"
        },
        "item": {
          "id": "3fc8fae2-e3f9-4a71-88dd-f129f2991085",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "fe308ae0-ced0-493d-b8bc-40fd9ed574dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ef26fdb-7dc3-4273-9848-1334a7d41879",
        "cursor": {
          "ref": "d07328c8-3976-4aa5-b7b3-172922eca80f",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "8c95d088-5f6c-403c-9a35-b624c6538d41"
        },
        "item": {
          "id": "7ef26fdb-7dc3-4273-9848-1334a7d41879",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e7efa861-fd75-4f3a-aaf1-deee90bab554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eccf5f0-25ba-44ec-9aaf-deea324be0dc",
        "cursor": {
          "ref": "ad50ca4e-fe6c-4cce-8716-2d5bb1b5fded",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "cbf5f3b0-1d8d-4e9b-92db-eb644811cef4"
        },
        "item": {
          "id": "2eccf5f0-25ba-44ec-9aaf-deea324be0dc",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4aa2860d-daf1-459d-a77a-a3f1f451144b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b685f609-5c0a-4557-8671-14843a433185",
        "cursor": {
          "ref": "0fc0c112-8774-4fbf-9191-9cbf4f63f9b8",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "d11e0dc7-9458-4542-8262-0e0183ef3a69"
        },
        "item": {
          "id": "b685f609-5c0a-4557-8671-14843a433185",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "738e2e92-eaab-44d8-83fd-739e4d28d8d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea77261c-8294-4329-b71f-cff8ed15c889",
        "cursor": {
          "ref": "205494cd-419b-4f86-a714-cc12461b34c9",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "d34d5cfa-2956-401a-b43d-26052bcf69ce"
        },
        "item": {
          "id": "ea77261c-8294-4329-b71f-cff8ed15c889",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8eced568-57db-4ea3-a4b2-915e2b9abc65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2abc05a-9b96-4a5d-9abe-473c86f9213e",
        "cursor": {
          "ref": "bb6cb58a-19ea-4a75-b5d4-1c875790f324",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "be11b8eb-7bb2-4390-9133-57e880e15c55"
        },
        "item": {
          "id": "e2abc05a-9b96-4a5d-9abe-473c86f9213e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "27f58ccc-7bae-427a-99a0-66d9854ad3c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "238a98fa-b61b-4a27-81d2-d6b2342aec05",
        "cursor": {
          "ref": "9f686d57-5810-4367-80a5-e4f586fec890",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "be324e78-57f3-415b-a172-b7695a4e8660"
        },
        "item": {
          "id": "238a98fa-b61b-4a27-81d2-d6b2342aec05",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "559a559e-bfcb-40df-8ec2-e36a3889ae00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98754571-239d-420d-8847-bbba29c47930",
        "cursor": {
          "ref": "8116a8f4-e3a9-4dc0-b58e-ffb46929e8d5",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "b328526f-b577-4840-b633-d0296aa62899"
        },
        "item": {
          "id": "98754571-239d-420d-8847-bbba29c47930",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c9e617be-3289-491c-8088-c91bd53a11b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "162453da-4a3c-4502-bcbf-9f87b903d107",
        "cursor": {
          "ref": "68af3941-94c5-4d2f-9479-4ba79b032346",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "87ed7813-d8b1-4028-9bf7-4be3ab8caa78"
        },
        "item": {
          "id": "162453da-4a3c-4502-bcbf-9f87b903d107",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "bf3b557d-b33a-4ca8-af13-3217f9255fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1659dd01-d4c1-418b-a6e9-8f03c201eaf6",
        "cursor": {
          "ref": "98c84692-c166-4781-9d44-3b4fb52a1ebb",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "d1ae939d-3340-4d2e-8dd4-86b3a6cb63fa"
        },
        "item": {
          "id": "1659dd01-d4c1-418b-a6e9-8f03c201eaf6",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "1191d095-df83-4f71-9d56-1ee63d05bbca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dee3b6b7-fbee-494f-85f3-ba18da8a9b26",
        "cursor": {
          "ref": "2fffd3de-dc42-49fa-aefc-d466b1d8b54c",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "8fd118ee-7227-42d4-a383-41c2de4f061a"
        },
        "item": {
          "id": "dee3b6b7-fbee-494f-85f3-ba18da8a9b26",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a5592ca1-7c83-40ce-a66a-8d93c48dad58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e469bc06-594a-43ff-ad01-01adadd9827c",
        "cursor": {
          "ref": "7b2cc11f-2b38-4bdc-9c62-292e4e226ce5",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "28d3f046-b0bb-4baa-a24b-256af3d15db2"
        },
        "item": {
          "id": "e469bc06-594a-43ff-ad01-01adadd9827c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "7ba90e36-dc71-4033-a554-c0e098abf30f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "350596a7-a5b6-42c3-b578-c0c350697942",
        "cursor": {
          "ref": "3793ff05-d4fb-4181-b57d-920ac6458b82",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "5d3cb947-de77-48c4-adb9-4c67ec179650"
        },
        "item": {
          "id": "350596a7-a5b6-42c3-b578-c0c350697942",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c182c34e-69fa-48c7-8af8-21724ae207d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "902ba796-30eb-48a4-81df-575a3f1d1e82",
        "cursor": {
          "ref": "3f1ab098-0abb-4e9c-874b-026c82e2ce6e",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "4c3e6b73-7ac3-4715-a31b-dee1fa22af9d"
        },
        "item": {
          "id": "902ba796-30eb-48a4-81df-575a3f1d1e82",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "b22fabb9-c669-4d75-a56d-609bd3a50865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b510c9e-cf3f-4960-a365-f27e0fde0474",
        "cursor": {
          "ref": "43c6a6d5-9ceb-4305-8921-8fc35e22afc7",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "0f6a025c-6c7e-42c7-b11f-4a33d676d276"
        },
        "item": {
          "id": "2b510c9e-cf3f-4960-a365-f27e0fde0474",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "8109bb0a-a5a5-4923-850d-793a4c49d337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dcfd920-ab4d-43be-8365-2c09fc901565",
        "cursor": {
          "ref": "6b1a5063-54f8-4043-ba5e-a11e7c335088",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "f6908a63-755b-4080-b6c8-c7dc149ec010"
        },
        "item": {
          "id": "4dcfd920-ab4d-43be-8365-2c09fc901565",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "1bd330f0-3131-4f3c-999a-81038c32bc0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef428340-dda6-4e6e-8748-5c696fb72216",
        "cursor": {
          "ref": "9758d209-f28e-48e3-a0ca-61e6f84457b7",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "4b931f9b-93d4-40c6-b510-1c5adfb9f35a"
        },
        "item": {
          "id": "ef428340-dda6-4e6e-8748-5c696fb72216",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "990115e8-71ca-4477-b506-168d4ecf5da4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "234ff5de-da4b-42cd-b6d0-ae80dd3c0a62",
        "cursor": {
          "ref": "15bb7a68-1a54-442f-b4a9-127b9f636464",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "1e6b48d0-a91e-4409-ac62-da526d026b7d"
        },
        "item": {
          "id": "234ff5de-da4b-42cd-b6d0-ae80dd3c0a62",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "2487807b-a95c-464f-8520-1a8d6e927090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ffd88d-7020-45ea-9721-40ed63cf93de",
        "cursor": {
          "ref": "60d1a1b7-32de-4464-878f-31ebf2f75e7c",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "c3fe5775-77d8-439f-864d-38c0c1f643f4"
        },
        "item": {
          "id": "82ffd88d-7020-45ea-9721-40ed63cf93de",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "22a0d8f2-345a-4def-beb8-85fd89dfdf1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df64426e-9270-4dca-9575-fdfa4c027e25",
        "cursor": {
          "ref": "e1450d5a-8afc-4b5c-827b-9b1755cd96df",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "3ce0be84-1fb6-449f-82c7-9ef3eb503b68"
        },
        "item": {
          "id": "df64426e-9270-4dca-9575-fdfa4c027e25",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a2512e39-233d-4bf3-a6ed-0277a8c6e39a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3309bad5-7e96-46e3-b9b5-9d0c700c7432",
        "cursor": {
          "ref": "9cf298d8-f390-4daa-ad68-bc926970c9ed",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "ac318f0b-733e-48cc-859d-87dc34eb274c"
        },
        "item": {
          "id": "3309bad5-7e96-46e3-b9b5-9d0c700c7432",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c6e6b5e8-0abe-4278-989a-32020764c437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bcb2660-dd90-4d00-9a1c-d6ea2f8f10c5",
        "cursor": {
          "ref": "8bbdf5a0-00f4-4a89-99a9-43889f86fdf4",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "716af095-211e-486f-833f-8f97fab22be8"
        },
        "item": {
          "id": "6bcb2660-dd90-4d00-9a1c-d6ea2f8f10c5",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "7bd4bda1-0101-4a34-8199-220eeca17830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e8356aa-ebf0-40bd-92f7-bf3ccbab2f64",
        "cursor": {
          "ref": "200d5378-56e6-40a3-8277-a3033db03ac5",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "e44c5e76-2002-4c5e-a586-4229c07c8ec6"
        },
        "item": {
          "id": "1e8356aa-ebf0-40bd-92f7-bf3ccbab2f64",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "ca4a75b5-69e1-46df-b94f-6d2e8fd8a5e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c7c76b8-fdcb-43e2-bf32-431c884e92e0",
        "cursor": {
          "ref": "7f0a177a-0e4b-4c13-8a99-bf45c3e0def7",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "3d1f5bca-d47f-447f-b892-663358d3c3e0"
        },
        "item": {
          "id": "2c7c76b8-fdcb-43e2-bf32-431c884e92e0",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "7d16b506-4ce1-4dd8-82a6-a432cca17812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f32b79e1-7ae1-454d-872d-cf906c98e527",
        "cursor": {
          "ref": "17fdbb89-f549-42ed-9a36-cda91075f7ea",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "c2a8694d-101d-46fc-a36f-f4f1d37b1620"
        },
        "item": {
          "id": "f32b79e1-7ae1-454d-872d-cf906c98e527",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "3fb1e179-a2d9-4c36-b392-52c554031fa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a6f8207-3c2a-43c3-b46e-c768e0ab2303",
        "cursor": {
          "ref": "0730c771-d009-424a-8a70-b3901f26ad6f",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "b72a0349-e3ed-42aa-bb74-05f1fb5f4a82"
        },
        "item": {
          "id": "5a6f8207-3c2a-43c3-b46e-c768e0ab2303",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f45e29df-9bb3-4de5-99cb-2267c31a11b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "779591c7-e81e-4d0a-a4c4-89e7fa47335f",
        "cursor": {
          "ref": "9f15c0e6-6bcb-4c84-94be-d8de8c6a56e8",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ba69dea6-b122-47f3-94c9-405db6b50092"
        },
        "item": {
          "id": "779591c7-e81e-4d0a-a4c4-89e7fa47335f",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "23445872-8c82-4983-9c71-848aab64ea28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c2ee199-0744-4467-b7ea-304f19ae3fa6",
        "cursor": {
          "ref": "e6730cbd-6368-44cf-8cb8-666243ee15ce",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "b70df895-0c51-4022-8997-ce6903cf1f77"
        },
        "item": {
          "id": "9c2ee199-0744-4467-b7ea-304f19ae3fa6",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "0e68e066-5935-4ef9-b026-015a86c4bbce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d28e286c-8e97-40a4-8b02-2aab0d35ad00",
        "cursor": {
          "ref": "8b289121-36bf-4df7-834f-ff2481ddda93",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "16aa16c1-e225-49f6-9db5-9db520cf6f62"
        },
        "item": {
          "id": "d28e286c-8e97-40a4-8b02-2aab0d35ad00",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "0d9e2af2-49bb-4730-8b83-a18d7cb6b939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3ba7b24-224f-4b8a-81bb-7c1ea535e040",
        "cursor": {
          "ref": "1f36d5d5-1bc0-4905-83a2-6d22b490f7a3",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "27caffdc-58e3-476f-9d5e-6888e60d61d6"
        },
        "item": {
          "id": "f3ba7b24-224f-4b8a-81bb-7c1ea535e040",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "38f8fde2-b43a-400a-80a0-7581eb80b460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9229bb61-488b-48b3-be5b-6bad491997ac",
        "cursor": {
          "ref": "c200db12-2130-4593-a094-34f33f149df7",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "223201b2-9f68-46e9-bd3f-d87de2339861"
        },
        "item": {
          "id": "9229bb61-488b-48b3-be5b-6bad491997ac",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ae5216fa-a767-40ee-93fa-00da97471098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96c3aec8-afab-4c91-a57a-5e6aced99bc6",
        "cursor": {
          "ref": "9f383390-96ed-4569-96be-83a4cfcd33f3",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "98fd30fd-45da-4b28-91d3-7ae5c864606c"
        },
        "item": {
          "id": "96c3aec8-afab-4c91-a57a-5e6aced99bc6",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "9ac19232-b736-4c20-abd5-69f2a4ea7ab0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b2d6ffc-ceb9-4886-91fa-855cecc32ece",
        "cursor": {
          "ref": "cc5311f3-65e4-4adc-a44a-86b5a49e7047",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "036478b3-5bb1-4889-b059-a887564dfaf8"
        },
        "item": {
          "id": "9b2d6ffc-ceb9-4886-91fa-855cecc32ece",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "0a9984c6-6e38-478d-a513-f780ebba8f15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "500d9bdf-c5a2-40d3-920a-245d56dd5953",
        "cursor": {
          "ref": "bc041e9d-03e6-4af2-9d57-ce8e5b42c642",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "d4ebbcd7-89b3-419e-beb0-71d80ec95969"
        },
        "item": {
          "id": "500d9bdf-c5a2-40d3-920a-245d56dd5953",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "a623201d-d62a-4959-a156-1bb8751909d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a710d2d9-1afd-4088-b81a-1a47fed1be58",
        "cursor": {
          "ref": "2cd977d3-c5e5-4e3e-8c2b-2227270820b4",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "90acbd6a-0b33-48b6-812c-0f76c70f6341"
        },
        "item": {
          "id": "a710d2d9-1afd-4088-b81a-1a47fed1be58",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "5ea2bed2-83a5-4021-9d4e-930beb3b92fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fc08d83-4350-44bc-9158-eb0b3cdf42e2",
        "cursor": {
          "ref": "15343c60-363a-40bb-aa8d-ad682385b549",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ea00bbfe-f684-452e-a4dd-facc35fa434a"
        },
        "item": {
          "id": "0fc08d83-4350-44bc-9158-eb0b3cdf42e2",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "8d1903d5-d6a8-4a26-bff1-f65702d057b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "456691a3-75a2-489a-87af-25b381bb982b",
        "cursor": {
          "ref": "3db55fd8-f544-4a2a-aca1-0c7ba8114c07",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "12fb074e-abdf-4234-a24e-a1b18b7feb91"
        },
        "item": {
          "id": "456691a3-75a2-489a-87af-25b381bb982b",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f8dddff3-5299-4900-8830-e6db4373053d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0903afb-2262-4b80-b57c-9f5a7cb3f134",
        "cursor": {
          "ref": "a0c15cf4-686d-40e5-a6ca-57b929491a48",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "fde9cedc-b67c-4b1a-8255-48e2c0258690"
        },
        "item": {
          "id": "f0903afb-2262-4b80-b57c-9f5a7cb3f134",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "4378b084-6b20-4e44-880e-45c67ae849f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93aa7d88-af54-49d1-9f98-22ad88020205",
        "cursor": {
          "ref": "6509ba83-4b35-42a2-a8ed-24c6fca72f2c",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "a9d9f101-43cc-412f-b385-0d13a3b55827"
        },
        "item": {
          "id": "93aa7d88-af54-49d1-9f98-22ad88020205",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "e7b77420-0905-43b5-a00a-efd2fef03b54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "428d52f6-a8ea-4e7e-964e-0fe77de99a4f",
        "cursor": {
          "ref": "60010be5-3ab6-46af-8480-8e8b817782a6",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "59b56356-0dce-4912-9f93-376a988c3dda"
        },
        "item": {
          "id": "428d52f6-a8ea-4e7e-964e-0fe77de99a4f",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "f1c05796-3616-450c-9a3b-53f50fa1791b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cf94d7f-67ac-4d30-94fd-75000405fc8c",
        "cursor": {
          "ref": "6bfdaf8c-65c4-4cc9-b905-21e4fe735111",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "9c19985c-a8ee-4beb-b698-d871afbff88f"
        },
        "item": {
          "id": "0cf94d7f-67ac-4d30-94fd-75000405fc8c",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "4af3d109-4085-4d65-afec-ab235b3c9e7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1f331da-1a88-47d2-ad3c-3889a4103b1c",
        "cursor": {
          "ref": "8aa1669e-1723-4667-84aa-ad2fcfb95402",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "627f440f-5f59-42ed-889e-b353b4b4c71e"
        },
        "item": {
          "id": "a1f331da-1a88-47d2-ad3c-3889a4103b1c",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "fe6a8170-f7b0-4de1-b51a-3cd51233fc21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e5cf961-7c07-4637-b400-5e3ec45a1e0f",
        "cursor": {
          "ref": "fe90b4de-28a5-4dbc-bbff-9b30ea263da4",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "7d3d5661-f2ea-4a6b-beed-986fca590a89"
        },
        "item": {
          "id": "6e5cf961-7c07-4637-b400-5e3ec45a1e0f",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "906a34b3-e2aa-41a9-9324-98424748ceef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3cf26bd-f144-442a-b6b5-2e79c2cfecdd",
        "cursor": {
          "ref": "d2f674b1-ae43-4f71-9a31-4a4d43677055",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "f66ed88a-e414-4006-979b-56bcaf8ce254"
        },
        "item": {
          "id": "e3cf26bd-f144-442a-b6b5-2e79c2cfecdd",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "2e0c6e60-e8b2-4886-a809-cfe65d898294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42f52bf2-8d9a-4228-a317-edfcc6f53312",
        "cursor": {
          "ref": "84a5d020-08ca-4281-bffa-ab28d1478465",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "793358b2-c5fb-4e91-a470-00fc81d2ceeb"
        },
        "item": {
          "id": "42f52bf2-8d9a-4228-a317-edfcc6f53312",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "f6bdc1ca-5a17-447e-bd8e-66ec442d3ecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 221,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c65897f-5285-44ec-9b40-d1667db792e6",
        "cursor": {
          "ref": "1c9953ea-44a1-4941-881e-0f8fa6ff1875",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "3f74b0d3-d7e2-421a-918f-a42091302e44"
        },
        "item": {
          "id": "2c65897f-5285-44ec-9b40-d1667db792e6",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "32eb2f6f-fe68-4f97-b359-c970851f1171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64a57d07-8f34-42d1-ac8d-3831483463a8",
        "cursor": {
          "ref": "d0d5b782-2b8b-4a6a-8a79-0b3981411703",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "d5ee0bf7-bf17-4a20-b7fb-5e9ff1e8ddfa"
        },
        "item": {
          "id": "64a57d07-8f34-42d1-ac8d-3831483463a8",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "7a0f7783-e855-4af1-88a2-6186974ca60b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "515fd614-3d34-4b35-ae41-2dbacf8f77f8",
        "cursor": {
          "ref": "a0c35a89-53d6-473b-b69b-1c3fea783875",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "56dc8428-6161-4e08-a276-6459ca7f979c"
        },
        "item": {
          "id": "515fd614-3d34-4b35-ae41-2dbacf8f77f8",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "1da56f93-ff2e-41a9-b153-3437e12cc3ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "647e42c4-18e8-4bdd-a91c-e1c3ae8e2785",
        "cursor": {
          "ref": "213107b0-69b8-4af3-ba79-f85630f3408d",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "391c4201-335e-4fb4-990d-e9c6b9907034"
        },
        "item": {
          "id": "647e42c4-18e8-4bdd-a91c-e1c3ae8e2785",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "1639fc50-8b9e-45db-a2de-580ddc21cc79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b166364c-056a-4735-9eb2-073ec78b447d",
        "cursor": {
          "ref": "58d4f38e-7139-456c-83e5-868e12126b61",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "2a1057e4-d84a-4871-8b65-7ee39aa7e5b6"
        },
        "item": {
          "id": "b166364c-056a-4735-9eb2-073ec78b447d",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "fbeb83e5-aaf1-4d0a-8d8c-7ab04519c955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9715b1e-ee1e-4ffa-afbb-329c7b7386c5",
        "cursor": {
          "ref": "8934db2c-466d-43b2-bf8f-43eb589e0aa7",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "fb03fb83-772a-42f0-a146-10851704f39c"
        },
        "item": {
          "id": "c9715b1e-ee1e-4ffa-afbb-329c7b7386c5",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "585a7526-0b32-40ec-8436-6a9c875ea87c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc1f6fb-03ba-42ba-88a8-11a2b495578b",
        "cursor": {
          "ref": "ff90281c-b3f6-4519-a15f-d0de92525e48",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "40ecf295-7672-4d38-8d64-85de0ed6c8cb"
        },
        "item": {
          "id": "fdc1f6fb-03ba-42ba-88a8-11a2b495578b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "1a65e06f-1372-42a7-8b38-6b6208362453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a055dc2-3c29-4b5e-81d2-8e5e285877cc",
        "cursor": {
          "ref": "16ea9e38-b773-45bd-89a0-b41a18f515c8",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "61f1995a-8e81-4340-b604-b391994b0b43"
        },
        "item": {
          "id": "0a055dc2-3c29-4b5e-81d2-8e5e285877cc",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "357b9b83-842a-4f96-8d9f-5f12260197b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43ecb8e1-fc91-4d57-b487-a9e4f723eb8c",
        "cursor": {
          "ref": "a6ea7c38-7897-4114-80fa-31fadd6a6e4a",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "8b400111-462b-4a04-87fd-572150869ffd"
        },
        "item": {
          "id": "43ecb8e1-fc91-4d57-b487-a9e4f723eb8c",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "ab3e3a29-7f4b-4914-9d28-dee998ee1e65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "566ddc6a-d0ec-4e22-84c2-1a848458e305",
        "cursor": {
          "ref": "06a87e9e-b978-4e44-a22c-b3ff1ffa1c37",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "5836ae9f-68d5-476b-83e8-d1e61440cb8e"
        },
        "item": {
          "id": "566ddc6a-d0ec-4e22-84c2-1a848458e305",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "8a0b0eb5-3644-45be-a70f-e59dc3776d33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "393edbfe-9d49-4c72-8f7d-828535712f2c",
        "cursor": {
          "ref": "4835424e-0a00-41da-8861-834b7b817b9a",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "ca05559c-ecb2-42f6-bdab-fa6c4ae7029a"
        },
        "item": {
          "id": "393edbfe-9d49-4c72-8f7d-828535712f2c",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "b1355373-672c-498e-ab1c-d9b7554edf7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9886e025-1486-49fd-ac07-0fbf8fb6287e",
        "cursor": {
          "ref": "06bfa863-4c70-4a6d-aceb-328da31e0897",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "90a066d4-3632-43ed-9390-539b8b0eedd7"
        },
        "item": {
          "id": "9886e025-1486-49fd-ac07-0fbf8fb6287e",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "35987519-21a5-469e-bbe6-842eaf8ab5db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a24d50fc-a3a2-433c-b6ef-89628f84dcfd",
        "cursor": {
          "ref": "eef6bd7b-410b-451b-ab9f-5bd7a9749aa9",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "5790a202-0834-4d86-95a7-f875698ac64e"
        },
        "item": {
          "id": "a24d50fc-a3a2-433c-b6ef-89628f84dcfd",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "55d816de-862f-4d03-b531-76e98180fe6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f0dac17-feb2-43d3-870d-dd32221fb7a3",
        "cursor": {
          "ref": "890db4c7-4ad0-42c8-8379-3af10c920821",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "071d3a49-8b62-41a8-a413-0a7550d4a4fe"
        },
        "item": {
          "id": "5f0dac17-feb2-43d3-870d-dd32221fb7a3",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "91d0bb9d-cacb-48a3-81d4-394153ceb3c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b88750a-72c4-45ce-9f20-3878e1e5edd6",
        "cursor": {
          "ref": "734842b9-894c-4e66-8e06-3950d70e9a02",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "4b5d24db-aa60-4cdc-84de-9baac71ee6db"
        },
        "item": {
          "id": "7b88750a-72c4-45ce-9f20-3878e1e5edd6",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "0b36ca0e-55d2-4bc1-86d3-ea445ffee2b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "671246b9-cbfb-4e1c-95c5-d25adf950ad8",
        "cursor": {
          "ref": "e9c8e35c-d8ef-4371-b4b7-0c9d5609def6",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "7eaf36ab-9c39-477a-bdc9-7a8cbb97f426"
        },
        "item": {
          "id": "671246b9-cbfb-4e1c-95c5-d25adf950ad8",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "b01a5031-0594-4734-9c23-2f916254a425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47606cb0-6965-4afd-bfc7-7ecae4a9081c",
        "cursor": {
          "ref": "d5ed86ef-9cd9-4535-aeb7-345101cf758e",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "74ff67af-c5a8-45c7-b168-ae045b4d9c7d"
        },
        "item": {
          "id": "47606cb0-6965-4afd-bfc7-7ecae4a9081c",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "4a2a9cb5-6b61-4536-809c-4344c48efe69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6c31c52-a383-4f74-bd40-032b88e62207",
        "cursor": {
          "ref": "0efcc8b5-d6e0-4467-9ec9-21c117a6180c",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "03ddddaa-ce52-4153-832f-8d841d9dd84f"
        },
        "item": {
          "id": "a6c31c52-a383-4f74-bd40-032b88e62207",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "87be3423-076a-4f67-9a60-3fe5de9b1fb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29b99160-c0b9-4175-84f4-73422c583217",
        "cursor": {
          "ref": "fbf16dc5-d69b-401a-927f-5cf13170270b",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "c5aa3cad-1daf-47e7-acce-dbc1d32d5168"
        },
        "item": {
          "id": "29b99160-c0b9-4175-84f4-73422c583217",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "3bb12c8f-b09e-4fb5-9434-e14b2dc246c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4b73d7f-d8f3-434b-b045-c3606457d3be",
        "cursor": {
          "ref": "004d1974-d888-4c12-8281-406f47bb813d",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "88c37fba-6553-4845-9992-35b81739d25b"
        },
        "item": {
          "id": "c4b73d7f-d8f3-434b-b045-c3606457d3be",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "3ca79899-a6ab-4d39-8378-b615ae292b44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b7d270a-c41e-4af2-a4ab-fcf857e572b4",
        "cursor": {
          "ref": "d4a435fb-f9c7-4cf4-8d3f-5845526808af",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "5f4d1fde-e3b0-4ada-a4da-66a9f689439c"
        },
        "item": {
          "id": "4b7d270a-c41e-4af2-a4ab-fcf857e572b4",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "c53728c7-dadc-4996-8d58-ce08ace00db3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9f8b5b4-05ce-48fd-a416-8afffe30644a",
        "cursor": {
          "ref": "01e3ad19-de74-4068-aed6-0145660ea071",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "89715179-571e-4256-a925-146710525c2f"
        },
        "item": {
          "id": "f9f8b5b4-05ce-48fd-a416-8afffe30644a",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "9258f23f-11f1-4c35-bbb2-0a5c2b06ad5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b48500b-7b86-4b8d-a8cf-706ad78196fc",
        "cursor": {
          "ref": "35daf298-089a-44f3-a057-2474e5645f32",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "d0204fa5-9c6b-4648-bd1e-dfa6a5ac6f69"
        },
        "item": {
          "id": "7b48500b-7b86-4b8d-a8cf-706ad78196fc",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "13322a0e-1a98-4b8f-ba24-aaaaf6c9da09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57ddd6fc-ecb7-459c-a57c-1781db1c3781",
        "cursor": {
          "ref": "e7727dc2-ea3f-4f9c-8297-5e4ad0c7ae6e",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "4321be93-0511-4f90-8ac8-efb131752d37"
        },
        "item": {
          "id": "57ddd6fc-ecb7-459c-a57c-1781db1c3781",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "be38fcee-4dfa-4ef5-8814-1fba3c674545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f0c2c2-0ffc-4d6a-8be3-b386745736a1",
        "cursor": {
          "ref": "f8cbf6ef-c9ca-45cc-9e58-9ebaaf7e6801",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "edc5b049-db07-4919-9b45-8a59de8e8a60"
        },
        "item": {
          "id": "a8f0c2c2-0ffc-4d6a-8be3-b386745736a1",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b91f5fff-f4f1-47db-a818-800fd73a9b7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbab28b6-929b-4f8e-8e01-7fbaac8953b2",
        "cursor": {
          "ref": "01a5fe78-3535-467b-b2e0-ef23ec4a18d6",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "2e2a96f0-c676-4a35-bc41-b409f7eac9e3"
        },
        "item": {
          "id": "fbab28b6-929b-4f8e-8e01-7fbaac8953b2",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "3baae257-b1bb-403e-b367-22fb089e8ff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daa1b590-4046-42ef-9bae-1aecc5a5334a",
        "cursor": {
          "ref": "0b2ac3b1-273f-41e5-a29a-3754db928db4",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "e19373f5-fcf5-4ac0-8577-f47af6fa8b25"
        },
        "item": {
          "id": "daa1b590-4046-42ef-9bae-1aecc5a5334a",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "9665d971-1c71-4446-80f4-b35667d0271d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "084c6817-2329-42ad-a90f-e0e98385280f",
        "cursor": {
          "ref": "23611fd8-9c02-4e0d-a347-757213dda826",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "852ca497-32b3-404d-8058-6381c223d14e"
        },
        "item": {
          "id": "084c6817-2329-42ad-a90f-e0e98385280f",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "73070816-47ea-4809-8fb9-43a037c0f0f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca227b86-50f2-4c76-8062-22c072cb4083",
        "cursor": {
          "ref": "07446704-d4bd-47c4-8855-bb9561507b3f",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "07c165f9-f43b-43c1-97bb-892e33944745"
        },
        "item": {
          "id": "ca227b86-50f2-4c76-8062-22c072cb4083",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "047380b1-9601-4f11-9ff8-e013fb23d0c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "560adfa5-d155-4442-aeb5-c3329887fa74",
        "cursor": {
          "ref": "e97291e4-a39f-4989-aec0-8de568ee5b76",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "9d342d2d-63a0-478c-99c9-72be59ed5ca2"
        },
        "item": {
          "id": "560adfa5-d155-4442-aeb5-c3329887fa74",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "9ededda8-feb5-4698-a04c-c4abccbd47ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f9364f8-568e-46fe-9b19-31148a06cb1d",
        "cursor": {
          "ref": "c1b214c9-f794-41e5-836f-dc91bde962f8",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "c97bc9e8-3e46-42e7-b277-865779472ccf"
        },
        "item": {
          "id": "3f9364f8-568e-46fe-9b19-31148a06cb1d",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "ee38d4c8-2c59-42ea-ad99-523c978364ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e2e83b7-9ffb-4988-a4a9-894df3186d7c",
        "cursor": {
          "ref": "3280c3da-e514-4fba-8fb2-5a212f9dfcd8",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "9ca18623-6da6-4934-9fe5-de89cbb27cea"
        },
        "item": {
          "id": "0e2e83b7-9ffb-4988-a4a9-894df3186d7c",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "29187895-e328-4f5b-a00a-5b26ee4ff0df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a55651fa-f1a6-46fa-a374-a4622a6e072f",
        "cursor": {
          "ref": "6cf6f124-24d2-42b6-abba-8d33b8da2f65",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "8885dbac-bc9e-46d5-af8d-64afeea4e36a"
        },
        "item": {
          "id": "a55651fa-f1a6-46fa-a374-a4622a6e072f",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "a789443e-57c6-4fce-bf72-25c61516c4e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98701a2f-35da-4efc-9cf7-91274314ab74",
        "cursor": {
          "ref": "8ef4f6e2-e8d2-402b-a40c-a4f28cfd7445",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "6741a9b6-ad94-4247-8693-ecaf6336d643"
        },
        "item": {
          "id": "98701a2f-35da-4efc-9cf7-91274314ab74",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "46a300ea-38f2-44da-a5b3-8135959f6da9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a3eff7c-a8e6-431e-84b7-21e66e10ec1f",
        "cursor": {
          "ref": "4bd3cac0-2561-4ab0-bb7b-114dd368ed0c",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b28f5440-e157-40b9-94b4-13cc71a23e05"
        },
        "item": {
          "id": "2a3eff7c-a8e6-431e-84b7-21e66e10ec1f",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "e29a776f-7ab1-4d9f-8f0e-c125be805877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a04cbc9-3b3d-40d0-a88e-9b11e8f59158",
        "cursor": {
          "ref": "ba95c8d7-a076-4829-bf8a-1711bbfb311d",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "86d04483-5d1f-4127-aa3c-79cf0f1adf35"
        },
        "item": {
          "id": "4a04cbc9-3b3d-40d0-a88e-9b11e8f59158",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "ee7a35e0-7fb6-44e0-a603-67db8ef154da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb651277-549c-410c-acc8-02cf9c71c198",
        "cursor": {
          "ref": "c685bfb0-c746-4b84-8402-095d29673f22",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d7b6e94a-9b6a-43fe-95e0-98bf1249ef4e"
        },
        "item": {
          "id": "fb651277-549c-410c-acc8-02cf9c71c198",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "116e8094-0fc0-43e9-9e23-fb3ea14d4bfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03ac6fd0-89f1-47ae-b3de-9395761a0571",
        "cursor": {
          "ref": "7da8ab0d-708d-4ca7-b915-7b5ab59b7ae6",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "562a2a55-f793-46cc-9ebc-3c295e8a9492"
        },
        "item": {
          "id": "03ac6fd0-89f1-47ae-b3de-9395761a0571",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "906374fb-e920-4e11-8cbd-d8b4c3b8d72e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6614e38-1540-411d-95ed-ec4fb4d49c68",
        "cursor": {
          "ref": "ceed1300-ae69-4afa-b0e9-9aaa045eb8d0",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "73d0970c-cbe9-42b8-b204-76559932f9a5"
        },
        "item": {
          "id": "f6614e38-1540-411d-95ed-ec4fb4d49c68",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "17177db7-5b92-4755-80c3-9f506d9461c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3e6c74e-5869-4142-a9de-57745b486431",
        "cursor": {
          "ref": "171a64b0-a550-458d-954b-d029c666c124",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "d80607a6-024b-4a81-8c78-ec817fa8ea31"
        },
        "item": {
          "id": "f3e6c74e-5869-4142-a9de-57745b486431",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "51132970-2486-4a47-8184-17e95dfe5219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab03fd4f-d07d-4d6c-b7eb-b83f5c1f7826",
        "cursor": {
          "ref": "bf4d3eba-60fc-4fe4-8b5e-84c82cb554cc",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "9cfd9a9d-8b5e-4fb2-926b-18124a80bf92"
        },
        "item": {
          "id": "ab03fd4f-d07d-4d6c-b7eb-b83f5c1f7826",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "eea79a09-41b0-4030-8e67-10944aeb9faf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfda715d-a955-4a57-b5f1-7fdc14237fc0",
        "cursor": {
          "ref": "c4fc79c9-e155-4b45-b772-f8b6cae17566",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "d033c14f-8337-401e-8df5-124d133dce7e"
        },
        "item": {
          "id": "dfda715d-a955-4a57-b5f1-7fdc14237fc0",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "8ebc06a6-7049-48df-bd4d-ac7225edb6b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a2165a8-6c2f-4761-ac7f-01876383c670",
        "cursor": {
          "ref": "eaef3da2-49ea-4a53-b7d6-15ae39f678f5",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "0b689677-5abd-4fb3-86ca-4258f78470ff"
        },
        "item": {
          "id": "0a2165a8-6c2f-4761-ac7f-01876383c670",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "ff4ba0e1-51b1-4d4b-a124-c477787d5e4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7cebc46-ae56-4125-8be5-fea1a66e5a9c",
        "cursor": {
          "ref": "be3d8ec1-7d34-4a59-9ba0-8d45185ffc47",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "27a1b0d1-3f3f-4efe-a207-75d7f29d0cad"
        },
        "item": {
          "id": "b7cebc46-ae56-4125-8be5-fea1a66e5a9c",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "b8c6463e-7c5f-4dc8-987f-381b5f5c92c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7e09407-4273-4209-838a-601d7baa92aa",
        "cursor": {
          "ref": "58db8e90-e886-4e7e-828b-61a3a10eb78b",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f2630eb9-bf56-4cb5-8b47-a2984d1c72d6"
        },
        "item": {
          "id": "d7e09407-4273-4209-838a-601d7baa92aa",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "942f78e8-8d89-42c8-98af-f04c52fcb7a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79316416-6b3a-4305-846d-4e43734a6a1d",
        "cursor": {
          "ref": "87bf7c11-2afb-426a-ac34-4185cccb4155",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "c08cd4c0-2de5-4028-befe-2f5b0e2908ed"
        },
        "item": {
          "id": "79316416-6b3a-4305-846d-4e43734a6a1d",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "6d3d62ec-4ff0-4bb7-b98b-28fada12389a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "742a2092-fdfe-4e5a-b8ef-a860f1166f97",
        "cursor": {
          "ref": "6c905488-e61c-4ad5-9779-47e6f2d63c32",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "696c54dd-57b2-48b8-ba68-46ffbb9c9b06"
        },
        "item": {
          "id": "742a2092-fdfe-4e5a-b8ef-a860f1166f97",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "58d6d1e7-6783-413f-a780-3f2a87eba8c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "523d2411-ee51-4ea8-9cbb-82734bfb4a2f",
        "cursor": {
          "ref": "4508ee81-d091-40fc-80b7-eeca3ab6349a",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "527ef59e-b558-4bc6-bdc8-bec70631a61b"
        },
        "item": {
          "id": "523d2411-ee51-4ea8-9cbb-82734bfb4a2f",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "7a89b0bb-6750-47f0-a60b-2ce1180d24b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24f6f3b3-817d-43a3-b171-a814b17b2a29",
        "cursor": {
          "ref": "9267bbf2-abde-4783-9bd8-04db310c8fda",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "cb33e7f7-125b-4980-913f-6452bc2faf7f"
        },
        "item": {
          "id": "24f6f3b3-817d-43a3-b171-a814b17b2a29",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "12583338-7d69-4ae8-a90e-2bebc07f3936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56b7f934-a5db-44ba-9bec-34ea2f93219d",
        "cursor": {
          "ref": "4df04220-745b-4fa4-9cdc-60229d147ec8",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "7771b3a5-ecac-407f-9715-e919205ddf51"
        },
        "item": {
          "id": "56b7f934-a5db-44ba-9bec-34ea2f93219d",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "96e03414-fdfe-49e1-9a96-70192c077485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d7429aa-c8a7-4790-b2c5-c15779cc0149",
        "cursor": {
          "ref": "73c46d94-3a1f-465e-9bf1-fbb150ca9203",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "e127ac03-0b83-4527-996a-02a6e9ea6ac8"
        },
        "item": {
          "id": "2d7429aa-c8a7-4790-b2c5-c15779cc0149",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "22422b80-e872-45bb-9164-46a89980cc6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7216cf07-e4f1-4992-87e1-0498dfce03e3",
        "cursor": {
          "ref": "e2c789d3-0358-49f4-9a97-58ec4c97897d",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "9731c8b5-4dcb-41fd-b3c4-1af1357140ee"
        },
        "item": {
          "id": "7216cf07-e4f1-4992-87e1-0498dfce03e3",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f8e6b922-b02c-407b-b687-46da4c61ebfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fe258dd-432c-4aaf-b75f-36b18d51212d",
        "cursor": {
          "ref": "439615d0-f28f-4fd8-a309-bdd347884b51",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "0a572cc1-347c-4c29-b03f-299d024a7232"
        },
        "item": {
          "id": "2fe258dd-432c-4aaf-b75f-36b18d51212d",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "5b9e7db0-e661-4990-aba3-94ebe1b8e58a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9b00a80-3722-48b3-9a6e-53be22f362cb",
        "cursor": {
          "ref": "b178cdea-4fde-4b81-9b65-0ebbea386ca9",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "d476863d-c1a6-4813-a584-ca2d772715e6"
        },
        "item": {
          "id": "c9b00a80-3722-48b3-9a6e-53be22f362cb",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "cd64bcc2-504f-406f-8e0f-d64948081ea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d743aa5c-bf43-4971-aca4-c8a47424e28b",
        "cursor": {
          "ref": "e33e7ae3-7778-4154-9fdf-64df8272c445",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "3dcb92f5-e623-4057-b0fa-5bdc442b25b9"
        },
        "item": {
          "id": "d743aa5c-bf43-4971-aca4-c8a47424e28b",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "7c8349ba-8009-4798-bd41-33456ea97efc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cae783a2-cef2-4d63-ae02-361321e69257",
        "cursor": {
          "ref": "ef4f0840-b8f8-427f-a1e3-5a0e2646256c",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "c1a9d846-8a71-4d0e-9d78-d0a001f073ef"
        },
        "item": {
          "id": "cae783a2-cef2-4d63-ae02-361321e69257",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "72a4afa2-57c2-4cba-b04c-17ca6fccc4a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d070d6a6-8e22-4e3e-819e-bec687154fdf",
        "cursor": {
          "ref": "0b6a88ce-64c9-43f6-ac07-e411de629ded",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "d760db8d-3388-400c-89a5-b067fa856b11"
        },
        "item": {
          "id": "d070d6a6-8e22-4e3e-819e-bec687154fdf",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "ee472f39-2096-4a68-a6b9-4ad63e4fc4e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd4d697-1039-4ba0-816f-0b9393c872f4",
        "cursor": {
          "ref": "c292d8ff-629a-45af-ad47-47b68d21176a",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "8ae032df-9b96-4a8b-b0be-e57dd0c4a206"
        },
        "item": {
          "id": "2fd4d697-1039-4ba0-816f-0b9393c872f4",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "b114c60b-ad96-4c71-97b6-bb8e92131c49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48a938b9-081c-4faf-9f62-cc57fdd9467d",
        "cursor": {
          "ref": "17762796-2540-4dac-ade8-018a750f2ee8",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "2caa14a3-7a93-496b-b786-06cadf0e1524"
        },
        "item": {
          "id": "48a938b9-081c-4faf-9f62-cc57fdd9467d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "02ca91e6-f801-497c-bb60-af86918ef3cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c59a0b4-b0f4-40e9-89f1-ed2daee597c8",
        "cursor": {
          "ref": "3f1fb495-346b-49a8-80ae-6c0948d9b634",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "e1d29214-116e-486c-bbd0-fa5d5f4ebdb2"
        },
        "item": {
          "id": "6c59a0b4-b0f4-40e9-89f1-ed2daee597c8",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "198ea661-fd04-4adb-b036-9e5ae8b08f27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39677a0c-fd94-443b-ba0c-bfd1d945f961",
        "cursor": {
          "ref": "b1ebc0f6-928b-4351-acf2-b0747bd41e68",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "548cd911-3bd7-4cc2-9ae7-9a6d0bcab886"
        },
        "item": {
          "id": "39677a0c-fd94-443b-ba0c-bfd1d945f961",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "d331a7d4-1a84-48b0-a9f7-e8b388b94230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70219cfd-44f8-44aa-b309-94af1f4a68a2",
        "cursor": {
          "ref": "32bc0a61-e485-4e1f-9b1f-e46877c00401",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "99ccfad1-2c49-4732-b379-517bcbe190b9"
        },
        "item": {
          "id": "70219cfd-44f8-44aa-b309-94af1f4a68a2",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "82916815-d94a-400b-849f-926ef17e8aae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90e9a668-11ac-4433-bc14-d25bdb003257",
        "cursor": {
          "ref": "37827857-aff5-4f58-b703-f81bc5a9e6eb",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "657cbb2e-dacb-405f-adc5-536deeeb2b40"
        },
        "item": {
          "id": "90e9a668-11ac-4433-bc14-d25bdb003257",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "78005a7d-823e-4cfe-b809-ac007b505e31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a99bff7-61d6-402b-a7d0-7bd0f1f53cca",
        "cursor": {
          "ref": "e32c3a45-eead-4ecf-b732-135b02fdd29e",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "2968f65f-d017-4b43-9094-4b540a8c5602"
        },
        "item": {
          "id": "4a99bff7-61d6-402b-a7d0-7bd0f1f53cca",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ac710a3b-a1c4-4a37-ba69-54cdeef90286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e00d7052-0bf7-4be8-b7ec-82db124d882c",
        "cursor": {
          "ref": "557d3f52-9979-4f98-ad5e-ad2392da60d7",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "e7bd6b30-b059-4902-af42-c373c19049b3"
        },
        "item": {
          "id": "e00d7052-0bf7-4be8-b7ec-82db124d882c",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "6b88498d-30d8-4b76-b3d9-d2f38b29ec4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "117bfa68-4084-4b1b-8879-74fafc511d6e",
        "cursor": {
          "ref": "4990eeaf-2b03-40c0-8aea-a8e376d74b80",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "13e32f09-75ad-445e-a060-6b4067591330"
        },
        "item": {
          "id": "117bfa68-4084-4b1b-8879-74fafc511d6e",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "598dfed7-c6b4-4ba7-a0f8-6c8584e3b44a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc0796a9-f1b4-46ba-85a5-6155df885729",
        "cursor": {
          "ref": "bbdf3a80-f5ac-4f1d-9542-24c99994935d",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "88c672e1-4a00-4f89-b42d-b57a131e3c27"
        },
        "item": {
          "id": "cc0796a9-f1b4-46ba-85a5-6155df885729",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "db4dd9a2-1452-40eb-a21b-522fe10b393b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "020c811e-7966-46e7-905f-1b08ceabe9e8",
        "cursor": {
          "ref": "2e5a394a-02a2-4bad-9cb9-6f9cf6f38a87",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "7e4de152-ae9e-4261-8f63-852dc8d78a50"
        },
        "item": {
          "id": "020c811e-7966-46e7-905f-1b08ceabe9e8",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "2ebc5885-cb23-4e25-8e1c-7087882c2263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5432e15b-cd3c-45ea-870b-ecbe01b62da0",
        "cursor": {
          "ref": "2ef1b927-33e8-40d7-8c29-a52f70280b7e",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "059bf4da-61e0-4eee-a0ea-c36a766d5290"
        },
        "item": {
          "id": "5432e15b-cd3c-45ea-870b-ecbe01b62da0",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "d8a68698-b048-44f0-889c-a9fd46d3a4ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08b8ce8a-9bdb-4916-ad53-75d5d5ea5286",
        "cursor": {
          "ref": "380bee82-077f-4162-8a27-c56f3e9f8663",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "8b0dc435-e7c2-41ca-af72-ec2c2cb2675f"
        },
        "item": {
          "id": "08b8ce8a-9bdb-4916-ad53-75d5d5ea5286",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "0a9abbc6-c690-4913-bff7-574903bdf3c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c577a50d-af34-479b-9d92-e4c4b6976d3d",
        "cursor": {
          "ref": "7855e764-db9a-4ec3-a194-69affd4a72e0",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "d56ac377-e91a-42da-b45c-ce996c6c1986"
        },
        "item": {
          "id": "c577a50d-af34-479b-9d92-e4c4b6976d3d",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "21559da7-d030-4e18-86e0-8c31a18fec69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be9b7430-8bfd-422b-bf84-856b066a4d67",
        "cursor": {
          "ref": "84c44198-d282-4459-a22d-03bc80071abf",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "5929d5e0-b86f-4f04-999f-2b7ffecb10e5"
        },
        "item": {
          "id": "be9b7430-8bfd-422b-bf84-856b066a4d67",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "803540cd-8d27-41ec-be5d-6733376cdf63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae63de2-06c7-44cd-b863-01865934224f",
        "cursor": {
          "ref": "c511e97f-1123-48d5-a6f5-6e5bb9ce0b63",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "2d37f1d5-3ef2-4e5b-bfc6-6632ee62da55"
        },
        "item": {
          "id": "bae63de2-06c7-44cd-b863-01865934224f",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "11d4c2e1-54b7-4669-9ef0-d6ae82b9deb0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "154df41c-d0a2-4a7a-9c31-fa8300fd984d",
        "cursor": {
          "ref": "35bdaf5c-e2e3-41f1-b192-644ffc26d125",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "388ccd12-2401-47a5-ab1b-32073617ad0e"
        },
        "item": {
          "id": "154df41c-d0a2-4a7a-9c31-fa8300fd984d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "acb69689-d6a0-472f-8d5f-949921c8aeac",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "392aad9d-817e-4feb-a6b8-6381fe1689c6",
        "cursor": {
          "ref": "1f9f70e7-8fd4-4cbb-a23a-c95952ad8f6e",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "94b29f41-dcba-4c35-a02c-0ed0c820b3f9"
        },
        "item": {
          "id": "392aad9d-817e-4feb-a6b8-6381fe1689c6",
          "name": "credentials_verify"
        },
        "response": {
          "id": "8dfdaf56-af6b-4249-96fb-9c06334a37d0",
          "status": "OK",
          "code": 200,
          "responseTime": 77,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "50cf31ec-5843-4498-a214-d1ee490dae5b",
        "cursor": {
          "ref": "516b1b30-eb22-4a90-9bbe-17cee7dbe695",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "4e9ed8bf-0b0b-40ad-9944-f8fd10c5541b"
        },
        "item": {
          "id": "50cf31ec-5843-4498-a214-d1ee490dae5b",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "540a55ae-8d1d-45e0-9de9-d80319580f3a",
          "status": "OK",
          "code": 200,
          "responseTime": 78,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5359560-0e3c-433e-abde-a79255ab450c",
        "cursor": {
          "ref": "a9308aae-42f2-4e5c-b207-f32d738d4952",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "583d8d11-5c0b-407b-90f1-66c8b665747c"
        },
        "item": {
          "id": "c5359560-0e3c-433e-abde-a79255ab450c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "90e4cf37-3afc-4b03-ac37-cbc1ab3597fb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5359560-0e3c-433e-abde-a79255ab450c",
        "cursor": {
          "ref": "a9308aae-42f2-4e5c-b207-f32d738d4952",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "583d8d11-5c0b-407b-90f1-66c8b665747c"
        },
        "item": {
          "id": "c5359560-0e3c-433e-abde-a79255ab450c",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "90e4cf37-3afc-4b03-ac37-cbc1ab3597fb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b36bdbf0-b2dc-4816-abb8-a8eadcca1ddc",
        "cursor": {
          "ref": "d5856c7e-5537-4aed-91cf-cff5541d3d07",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "44ae3f66-2ea8-49d9-8078-d366d4128c94"
        },
        "item": {
          "id": "b36bdbf0-b2dc-4816-abb8-a8eadcca1ddc",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "99031f64-56d8-4371-a9d7-ca671fd8d6e9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9efad37e-e61e-400c-8b64-f5256d3fb290",
        "cursor": {
          "ref": "7b4db8d1-e452-4e62-a309-8be37b0a72a0",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "fb8a593f-d3c8-42de-aa3e-29e377d3101a"
        },
        "item": {
          "id": "9efad37e-e61e-400c-8b64-f5256d3fb290",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "02d24d8c-db07-4de7-975b-0ac724783b56",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}