{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "01f1638e-7e6f-4912-a357-f2a9546122cf",
        "name": "Clear Cache",
        "item": [
          {
            "id": "16e0879b-f0b7-4775-a18f-342bea6acb2a",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3e8996de-2141-4f49-b4b4-344977a9c748",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "be18ce11-2851-4d44-a2f3-ea631223d3c4"
                }
              }
            ]
          },
          {
            "id": "afb8065b-a5d1-4865-9795-fcee543535c9",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "85013d38-8670-4041-a846-9fc9cf63fb30",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d500d5ad-53c2-41b3-9e3d-b95c8c5add71"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "e4ac6af1-3887-43a3-8a2d-7a9e30578155",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "27e631d0-03a2-4c20-890b-1b2dd355e50f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "75148e48-0156-436f-ae2b-6f2962d96579",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "382c414b-b216-40d1-9c1e-b93bcddcc08c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d2d7bddf-4aaa-46a8-a1d5-495f5f3496f6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "24a0b746-b297-46ac-88d2-4304dc722ce0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6094f1db-05e7-4690-bb75-151c89f0d558"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d607a58a-e46a-4deb-a92a-5367abd59253",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3042a753-5b60-41b8-9ff9-2375053f8edf"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e5ecb6dd-ee75-4bea-bb5c-24869656add4",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "e54688d4-13ad-471c-810d-aa6a2af59f71"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1a687e4e-8306-497e-a4c4-389a82df53e6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6251224e-e9ea-43e9-86f2-38fb9edf17f8"
            }
          }
        ]
      },
      {
        "id": "c0e44d2b-5782-404f-9586-05fc21797131",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "cd15717d-7a85-42d9-9c4b-11a7d167bdd7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fb36b1f0-7d9d-47a7-a208-075076a75502",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0cf065fc-64f6-43f2-90a6-57f3db96cacd",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5109e60-120a-4a21-aa4a-932945c812f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e270349c-18c4-435b-9708-66a5b72edeba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "885fa139-1392-458a-ab51-e3459a811db2",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "002c388d-0fd3-4077-a70f-7e7fc7a2d8cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "51f1ad23-ec8a-4784-a9f3-ca1f7a52f980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c3a11b0-29d6-4153-b619-3536c8b04884",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "813feb7b-4beb-4ad1-9db8-16534a113b70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3577236c-88bb-4a28-bc73-dfe0e94895d1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bf845ec3-ee66-47b5-bcaa-80cb874650a2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "40787bd8-3de2-48e0-a422-82182f9fe4ed",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2da0bd3-fdf2-4f25-9acb-e07bb5fa9907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "67cde3d1-e4c5-4cb2-a8ae-1c88aae4c492"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9c659b6-851a-4682-a2e4-de47f5142931",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c1c68dc-60bd-40d9-a35d-4b7de9944e53"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "476678b8-75f2-4944-879d-5cceb74e496d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2accf596-1be0-48fb-a189-eaeac4ad6d54",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "45488a2c-784e-4cf4-9494-974d4d528c05",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "0422acc3-6ab5-4299-ad20-7b74d3943ca9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2e37663d-f3a4-46c2-92a1-323173d52806",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "26da1616-91d8-4c09-a00b-02875ccdf6a9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "af04920a-2b10-412c-97bf-abcd8fa84fa1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bcce7960-bb6b-4e71-b05d-8ac2886f2194"
            }
          }
        ]
      },
      {
        "id": "dbd04527-da98-452d-b53f-0dd6e96b15d2",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "170667c6-4359-4eea-a742-14e69806ff84",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ea585d24-669b-4406-ad50-ba15e8d7ab72",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "946924af-c7e9-4bcf-8ebd-e538dcd4e312",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "906a9ef5-f1b7-4b5d-ac72-0d5de4746c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70bdb40f-e20b-4206-8fce-00f23b25c54f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9dda79f-5433-4e66-84c0-fce02d5902c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac214b00-674e-42c1-ba9c-a94ceac6dbdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37b85175-b8a0-4bfe-81fc-210669397f5a",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b961839e-a8c4-4d3e-b524-1fc9faa103e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3df32df7-3a23-4bcd-a224-821348bef83c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb4ed219-8c15-4d78-9ea9-6d056c46fcd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e8b75a80-03ba-4685-a070-1a882728e689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bfafd0c-88d6-4377-b2e5-3da113e497bd",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d25f8942-1b7b-42a3-b375-0c465f68ecac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec619df7-8b51-4f97-b8d6-2fd8e94a7421"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c535321-d0b2-4fe7-a001-ef5bbef4c5b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "00df5531-251d-4251-b32e-da07e82c2694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "767941c4-ebdc-434a-9007-921b6e043926",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "312067fa-2736-4dbb-bdcc-5b182fc12da9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67df67a6-aa05-47b7-abbe-424bff194999"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9798dad-f577-4ffa-acbd-f3380ad1f894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cbf72a00-b681-41b8-83b4-0773542061dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bc35ae1-0a2f-4a4b-9a3d-d8d0b8b16656",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aa9f0b3-c702-441f-892a-e4a2a0e4e9b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c283e611-26d8-46c9-a69b-9a50de219548"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24ac3359-4a4b-460b-a549-ee0d3e2781c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5c3a4ff1-bd5f-4d80-b1dd-af6491d607af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a0c6197-844e-4023-a1cc-52ccea69ce63",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b96fb8b-69c4-4c75-8862-f346cf876474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10abafb1-61cc-4104-8bb0-1e62a458fbae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca6a7ffe-5ab1-455e-a78e-362f85130545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e2a69a7-846a-4013-8059-02dd2e809f60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "373a3118-6ba6-47dd-beea-46bbedd5ae7c",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb0363a4-8513-4688-95d5-f56d78bab38f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14a801c9-5eb9-44e5-912e-98d80b94b5fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3bb61de-ee8b-460c-8ef1-5d15771401af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d9dc1ec5-7a42-4ca8-94f5-1618a6faad8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f309b83-3ef1-4caf-a2c9-c0833f014b03",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c224bc9d-4ba1-43aa-ad22-247c1ed3bea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3bc9c99-ed29-4e1e-b9b5-5b8d0642fed5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b652c4cb-f04a-4ff7-bf06-0c2d8c11fb72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed97934f-f5fc-4a17-8928-86cb9e9ecfcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b96fb6b0-67c5-49c7-861d-19beca70ef1a",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf5ecbc6-e5f6-4904-ae8e-7cb8062b3293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cb1ccd5-e486-4d5e-acde-74931d505dd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc8744fe-dff7-41db-81b4-8b589e28f752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7486fdd9-1a5f-43dd-92a4-c964b76ceee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "782b4483-9550-416f-bc9e-b61827bb8d70",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a43b6a2-17ce-48e0-a1ec-dc80211a21c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bb104bf-114d-4784-b397-e4cee0d5d222"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04593bf8-f032-4b80-a28c-63bef81b758b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aac4a87e-c203-4a4d-87b6-6d49e1538640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47d91688-0a6c-49fa-9206-b7a8abedb2f1",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "715ec657-512f-4d4a-b342-d3a36b5482c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2cd7834-d6b7-487a-9388-eab18c3bc060"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8360e29f-8580-4703-bcdd-5d4aae5ea1fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6f8d144d-175f-4c5b-91ca-f9992563b4e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9ee61ea-146e-4433-bf7d-19290beb1aa1",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96ce1883-17d7-4405-b4e9-c41f5fbd16c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7cc1902-43e8-47e7-a648-02c39a6d0284"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9752f47-b98e-45a5-9c40-7b51de5b65b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "579d6279-1f77-4353-a3c6-51a26ce50bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a511564b-427d-4498-b375-4631061caae8",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67992550-8523-4f3c-804f-025ad2ac7758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ea97b4d-8726-4d56-bc41-801ac4422f67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c5fe303-878b-47ba-8603-ac70f3438b93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "76fcda87-398c-41aa-904a-c05aacc05dde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4519eb15-9092-4b52-98b8-cc68e844ef10",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5edbeec-e15e-4153-bb3d-cef678a2387d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faeb61ff-dee3-4026-9fd0-1b6e9dd619a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a832ce6-8cd4-42c3-8e3c-88027d7dbef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "16bcfec9-4666-4965-8e25-ff05b0c609d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08421902-18c9-49b6-9575-1ced0d3c8245",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b4ef2e8-a7cb-486e-82ed-ebcd491f2826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55a1cf9e-c92a-4309-9adb-a3b168d99098"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b414679-0ee6-4f6c-80fd-28a584e11854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c9910c9e-103f-4be8-8ccc-468af54d9995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b53c92c1-2947-4a62-b9f0-305a058ab770",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c2b623-ff9f-4ec2-847f-286c57eb39a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27ef2c61-bb2e-4092-b3b9-c72126408339"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dff715a-30e0-4e8e-b645-c2c2dde5902a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3bec5b2e-fccf-4d16-9b62-62db187d3d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "046bf1eb-c194-4721-aa55-88eb798c942c",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de0e559-471b-4db3-9960-4180edf67b86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2eb94315-e2e2-465a-862b-e25c99c1f84c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a69e7936-3608-4d6a-ba17-63592f086ea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d8267c08-3e6b-43d2-9aae-14d59fb5cad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8642e54c-dbb2-4d76-8a6a-1459a513bc82",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f418fcc8-dddf-4501-bce4-cbecef8814d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "835cd6e0-be64-4f73-9951-5c7bafb37bf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6280972-614e-4ecb-8794-0310b4c28d5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f813bbc-b3d0-49cf-99cd-081dd3fc9116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cc09662-149b-44f2-ab35-155c789642d7",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aabcd75e-163c-4038-82fc-5b2142a859ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9585604e-ffb7-445c-8c09-07cfc1880377"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc45f362-d3c7-47dc-9ed8-0fba96c9e115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab03c412-3fa0-468f-841d-53ed1471b1c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e2eb5e6-e384-46c9-aaec-b4ccac958963",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34e01ca2-e287-4f2f-beb2-da8dbe05b727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77582d05-6de5-4a4e-a745-799e36a90afc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad1f4c31-7789-4373-8f7b-03a04be72918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ff7a8f0-6720-4a58-ab5e-c1bf2cbbd19f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a18c705b-45c0-4e28-ae63-ceabf0012d5f",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8316769e-ef4c-408e-82c3-1baecfa4038c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8145edc-73bb-4d60-9224-50d6a7d8af7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d13e931-f5a6-40f6-b49e-6ea602122ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4d6f3ae-0cd7-4d7a-9236-0a1caeeeff73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "453f6f22-c9af-467e-b838-ccdf2686fc15",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "105d7a76-1c36-4b8c-b79e-aff225917fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bfb051b-205f-4738-8869-8aaee2fbcd1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c60c2f8-cb8d-494f-bd5e-3f485aa9f802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "73c89660-b5ed-493b-8312-b4b9fb042fab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a77ee687-bef5-41b1-b454-9fa036431174",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f82ea5-fd74-4eb6-9a16-49313394d513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09179c8b-69dd-42f5-af99-f0cd7c813eb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d401f1b2-479a-4d94-b485-e88fb7b388dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "569ec36f-ae28-4d12-8c71-2cf6843af2c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9126922-1f08-4d71-b7e2-89f32f75bf6c",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ffa78e-0b7a-4a23-bdfd-2c978fdb752a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af7f1a10-3a0b-4c8c-82a3-87bdc63e0131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85cbb335-1548-4ccd-911e-c34b930e79cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad680878-8caf-4302-bfd9-7d98ca8016d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bad3b1a4-8cc6-4210-88fe-ecb6a60b44bd",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bccca686-7b62-4c1e-9381-590751c75134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68e91ad8-8047-4ba8-9e03-53a5dc49b2e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11c4a5c3-7965-4058-8ce0-82c21b06ec0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d87ffab2-3442-4140-a549-d74713858838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e525e27-f7a7-40fa-b1ac-38d3e052f322",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edd677dd-34ef-40dd-abc7-c110bc0ac09f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afefdf22-5070-49bc-958a-a5d1d602140f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48749fbc-5a10-40b9-abee-a938d2f80cd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "39579f7c-5eb8-4d1e-9b8f-f4dd974f1b74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f4ba68e-75e2-443e-98f8-6a036915f9bf",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4cdd5c7-efa2-40cf-87d8-0521ffc707da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20033ba1-b8b2-4d4f-b58c-0b7743280c7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f650a0c0-0c24-4386-9f93-d229bbe8106b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab1d9b17-417d-4e96-979c-b7c2c4bda89a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a59200fe-2b7a-450d-8af1-c5e1049ef36a",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a554cc75-ccea-4c3d-904f-bfbb939cd719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f6e98ca-84ff-4917-b90c-678f69798e37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef8d3ea-337b-445d-8f95-73a36c584bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a923d534-4943-472e-b8a0-8716d929ece0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "113b0fcc-c686-4aa9-b51d-9a7a2759ff78",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb2f990a-a0a3-4b92-8bbd-18c78bc0199e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d073fb2d-eb07-4ba1-b3fc-ca51e46aadce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9aa0ac6-aa6c-4c3c-ba39-cbdce9357069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dad476f2-e1d7-4cf1-a4d2-6980e9ef3926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0250135c-061c-4487-9468-9e7c7b3e2a5d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfb31e9f-4164-4821-b1fd-f8320a3456c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab9d37e0-26c1-4761-baad-9d4c7f000130"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51e73aa4-0ec9-4222-b3f8-61a2d4cc7e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c70d415-69de-4473-b429-01c83c47e885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3609f819-badf-45f6-9485-7214e7372666",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32926341-d983-4d47-bafb-7208f1b95854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dea16251-5fac-4c17-ae70-5e0ffc4241cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "135b273c-8164-438f-aa48-47adcbf9b3f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "633f9644-cc84-43ee-ba55-5799ee11dc41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71455544-1740-429b-b84b-4b041c801fa2",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "051500fa-6656-4f66-85f0-d2a8235e0672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a173abe4-02cc-4062-bb62-2799572dbe2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd07ee71-699d-47a0-a7fc-326f9cb49cd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a459ba2c-9ebb-4a17-8ddb-b4ccd2026d4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97edfe79-2a44-4638-b8c4-2a2a98a8314c",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfe30113-9f79-4a86-9737-80709d39344b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a3bc8db-cd89-4298-a338-a313fe1a5cd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29b8e806-bcf4-4dc5-9ec8-6cd45da7d0d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fbb88846-28d7-49b3-859c-9384ca00caa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eeea6c8-73ad-4bcf-bbef-a57d346d27bd",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5ade4b0-61e6-453e-988e-71ab7d87e647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a56ecdfe-d8b2-4dd8-b94d-9408b36d6b5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd3dce5f-8c20-424c-ae15-604e662b4810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc1eff90-db37-40bf-973d-a420e8229c13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb380716-de3e-48d2-853c-096840a90fd6",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8506314-17ff-475f-b993-4f41b3023660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5862645-0479-49f3-9e5c-067c14c508ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78ad2091-0f5c-43f6-aabd-d1fd64699da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "5a5aa1a8-8dd4-4733-b00a-6c79875d2149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abed1afc-1a6e-4c70-94ee-22a47b097b43",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b5a316-60e4-4267-8a42-54b5205389f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6bd45b6a-ff6a-48d4-91ae-09fad3b90950"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4c8bede-850d-42ba-a417-9a3a8232ca7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0f20003d-4b9f-4903-907d-bbca4818b971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "385eda3c-b53a-4f9a-be92-1af74f0c82e0",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3a9758f-501c-43e9-882a-f80ada02ec73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22eb6cd8-0f1d-416c-8393-31a26e67e407"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f312c1f8-1d80-4b43-8f6c-1478aacab4b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "81436a3c-0d5a-4a74-ba07-f8b88cc6bf5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cf077f6-b0f9-4004-a2af-4d1542e025e6",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2beebbf-2c76-4ca2-a51e-cf4800ebe362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd377cb7-033d-4c50-8086-0671f51e8e90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92c19552-4ba1-4785-87de-cc8eb3579368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d580ecf0-20b5-411b-a822-5f7216140282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bab649aa-5b5a-4567-a27e-743017e2f0a5",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f4fb390-f87e-4bcf-9cce-2b064540870c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a06276b5-13d4-40c1-8a8c-a13c7c1da2f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bc23fec-b60f-493b-8dcf-50090d6095e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4405ccbf-9db6-41f7-923b-f2cecd02a016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86e376ce-7b58-4b52-9261-a926d0d71450",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87421641-87a2-4121-a641-14d4756cb82f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12997143-572b-4b64-9089-eb4e2bb08500"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8617c5a0-3e54-4692-9eb3-dd0c15890e15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "de9d47f9-caab-4343-9836-22081586ea92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84ef9cdd-3aac-4502-b136-1c156b8c3801",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af3dd3fa-b99a-4817-92fa-82730f02c1d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d91f971-7881-431a-8360-8e9ead3e65a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0128549a-c16a-441f-b6fc-423a83212414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5482b939-57cd-45f6-939f-2e7becc20f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b8c3098-3cfa-4b8b-a3ea-1cbddf173eaa",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fab6c138-1bed-4a23-b541-54c0dd552869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b72884f-c8a8-4617-8fff-675087b5fb56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "678bfa9e-fed9-4a77-b376-3a8cf147cf5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "a3e8700d-2cb9-47b7-a4c1-935083fec4d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9f058fe-49e9-46ee-ba6a-e3065438523c",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3684c445-1b8f-4db4-86ea-b78f1eac03d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b43ac4f6-653e-4556-8e33-18ab5a492b96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d862922-4892-4267-8905-fb9565fd98bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "11aa5d48-6166-405f-967e-f6bf6a255042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73699b83-523a-4efa-803f-0616f6109964",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b30bd2d2-75be-452d-9083-02ae183076ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53101e30-77e6-4edb-95ca-cb90d0425a96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbca4a51-0420-44a8-9943-0902313fc074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f6e651e-4523-4ea1-86f3-cb9a01d427fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92a6cb96-5c10-4976-b2f1-77c187e87e7d",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1efc821-8fd6-48a6-baf6-639f001e01bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4f5442a-75e4-42c8-bf4a-3023bcbb2a42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ca19a4e-6432-4d52-bf51-72b07922c6e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "03bc385e-f5a9-4541-984f-8be117c07615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d1b0489-8380-41d8-aa9e-d1a1a8973e27",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2683f0f-f9ad-4c85-8491-773337e4a96b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79ce8723-cc5d-43f4-8903-6c612edcafa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b18fe9e-299d-4900-ae05-54c480419356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d351e985-cca0-4fc4-ab31-03bfca8ac199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "622fe284-2f53-4ee3-9930-d3b908e59adb",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a88e3093-6c25-4c64-a3fe-2b466504a304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0fc3988-83ce-43be-9838-ce47d1edb115"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1dafb65-2b19-48ff-9ae8-224806d4aa9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "50d2660d-1dd0-468a-a621-e2c300bbc021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "027fdd26-2f8d-433f-8068-d6145b44d01f",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28af9276-9cca-4ce1-bc60-f4d496889e09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ede6ee16-d707-4600-ad2e-317c84d66f02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be716a9c-1de4-428d-b982-87a237d2d346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "71c90b14-01d4-4670-b1c7-26784e44e033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef49eb83-e85b-4ed0-b3df-624a7d9d8230",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2383b8e-4c7a-47bd-857e-0220b0aaf622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f589b71-7500-46bd-9a78-7b42796082e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09716c74-8f35-4f1d-8b8d-3951581cd0aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c45513d-009b-48a6-9430-1594468cd6fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13ed1420-1d73-4969-a9ff-0220227108fb",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a1756e7-688e-471a-b96b-e3c1120eef5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4598dbb2-4e3c-440b-bc1d-0b463371870d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a25285a3-49ce-4c3f-a54a-454891298ac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6901f818-762c-4c97-b528-437cc921feb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36859059-3035-4a06-b329-6025c67bcb0b",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e3b4b89-08a5-4e3a-9242-f20edbf942eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd364482-f7de-4e65-b292-c4398bc54bea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "619e5245-1ab7-4196-865d-e1cd8b295d29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b7c9df1-9ae3-4608-81bb-8c525bad191d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0285ca55-2377-4234-81e3-d5159fc22a38",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d42e90c-840d-46c4-b30c-99bf11cfa9ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8ef8882-f252-4fb8-a76f-843de8fadbd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71449647-0853-4b0c-9b5d-75cbec7c64b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3a34e9b-e579-4b0e-9072-d57164ef5631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "709b58f9-691f-4316-9068-b62c1c624c92",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ba50a41-e5c1-4a44-990b-12115e067d39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0d4cd97-dbc2-4c42-92d3-af86524f55b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba869d98-ba22-4724-ba51-c77c72293c47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "010bba17-5514-4246-97f1-5d1c03263497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cb2562f-581a-4ba7-87e5-901ceb7eb924",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e18eabcb-9735-4092-8f59-5f71c5d0a1b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40ac3612-c356-4094-b183-7c54b22bce07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d02b4f5f-74a4-44a0-bd6a-8d7826fd69d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ee7d37a-f659-47ac-9d4f-2cf92c0dc60f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "358db32e-27d5-4c0a-a1a0-ee6b685169c7",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "950f8d70-a6fd-4590-bd95-fb51543eafa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "216269f4-275a-4b37-8039-a07246efa10b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2068337-789e-4f76-85ad-6ef94c6ec4a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "305aa059-a1f4-4de0-a925-c18c569f01ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71791c0c-2d21-4601-b2c5-56b3aaad0ce7",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa356255-d2ea-414c-bfaa-2ca9125ebfdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "936110fc-2364-4adc-857a-e82fdcf41978"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42d788b9-e95a-4f7f-8e7c-01a1c0b3f195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "5a094bf8-8ce7-4ac6-b446-db272325a0a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "750b0b5c-f702-4c49-9c07-6ad6b0f6fdb5",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "525eb599-72b9-4357-bdb6-49b1acc1b446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "859d9502-b3d2-4c7f-a967-6d60e479cdf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00d37bba-61ed-45f7-962d-c0997350bd43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a45f63cf-4282-4ce4-bae5-6a3a568561ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd662e44-ad95-4237-b8da-ec83132ba851",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88edd189-214d-4282-a79c-b71cb7434d5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "262a455e-5dfc-4bc8-a1ab-d704f5b0ffd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48f30ac2-3f43-47e6-b37f-a77f9fecc321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d0f76555-e74e-42a0-a6cc-84bb1b1f90ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cb412fd-377e-42f9-aa59-9031732bb1f8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d0b6e16-d44a-4298-bf74-68ac4904f118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78cc1ff4-84cd-430f-aa34-92912c17158d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a7d96bd-da61-4d40-92e7-1f72174f0896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c9e8f6f-b52e-4f41-8a1a-81c79614d023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "144db0c5-5071-4b7d-abcb-fb400250efbf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5370158e-2632-4705-87a9-8face86b21fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48ffdcad-7f4c-411a-8702-e2bb8aad5577"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de056ffa-1f4b-45e8-8ab6-59aadef28caf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8eb2d63-de6d-4e4d-b6ba-e89db910dd22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e0c1dc2-03c8-4e1f-baff-f29d52f30b8e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee11f199-d7dc-40fe-ab88-4d1748a3825b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9d51f05-5775-4949-94de-2295cab885d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41c72e5e-6cb5-4707-ad1b-10e39e4e21c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "96e4d7c1-9006-434d-aa7d-76cdf496112c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fc9d0c0-5fe0-456b-898e-bc8789dd82ff",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6284d579-6843-4494-85d9-19264a374506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17513202-6954-4a7e-95f1-e5316481e96b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f194421-dad8-44e7-919b-b01a0eed1475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b2415dc-c4dd-4a9b-b713-a0cacff02be7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c73712c-e782-4227-bfae-c5e1eee5f4d0",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eccfc67-a384-4af7-88d7-766b8a8c2580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d775e762-714f-4c6e-bf9a-b71fa5648d3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51bdeaef-1da1-4a5f-bea3-29c816e02267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "255fb3ec-6e16-4ec3-acc2-06bd30b7500d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "048e633c-9281-4b30-9dbe-8764aa839f87",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca58de6d-5977-4b0d-8d5a-7c0bba91976a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a28f0381-6057-43a4-bd22-e3366e49974a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b9c59cb-3365-479c-b45e-382ef30b0a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a63cabb4-000b-4f1c-80ab-f306b9d5067f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed42a02a-2f93-43d9-b536-b31c8c33313a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d388ca72-e479-4d0b-8ab1-7d0d75119187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff060ad0-af00-4c1f-b78c-cd20de0bb8a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7eef66b-8ae7-47b9-a612-87a1495142a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e33c6c6-6ab6-4b08-9ce0-d8597515daa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f15050bb-a275-41e6-b913-9198bb6dfb23",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e93b8992-a1cf-46d3-81d4-8ea70e17a0be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "680da0c6-92d1-45b0-b134-1ab81cc68211"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49bca2c7-3ad0-4c19-bb2b-e73d82c1d224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "86a1e16d-1cd9-4fcf-b527-28bccadef534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e72ece0d-af1c-4264-b37a-5d326c3ce568",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12899f8a-7905-4ff7-afd4-2d826a92f3e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e074df11-aecb-4930-bbde-4d5a2819f129"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7848b12-0ce8-4db7-83ce-6be7c91a6b56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "217d7e46-e0df-4cba-9fc3-f0ef2bc1b0b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e022750d-6152-49c5-afd9-b0a1b5928a4a",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6083b549-3d53-4b3f-a7dd-3cfef3cedc39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3673b365-4650-4f01-90c1-d08404678b37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d1785aa-4c7e-4ccc-be8f-bc015c2cdedc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "505c25ea-744a-432b-b5a4-257cc0ab9f2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8552fdd6-0b8d-46f9-82cb-bb511838f555",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c90205-5048-41cd-88eb-2760ef420a05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aebbb11e-4de2-415d-9a72-260c713dc977"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d1445a0-1cc3-43f3-a146-f141de2f8271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "318c8ec4-afb3-4792-ae2e-2f3a677fe355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ff56b13-4806-4e89-aa49-fd447340a7f8",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fed71a4-db1d-4aac-b106-0ddd59c8c3c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2458616d-41d0-409e-8a40-53140c9fccd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40af7d6b-37a7-4952-bea0-6514bc78dbdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "487e9892-5857-4e5d-aad4-59a38b112adb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2281c772-868c-48ef-9f18-4aca91672424",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8571bc3b-a34a-4664-be9f-08e28a041cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97c4b5a6-8d4a-4c70-9255-7f632fe2151a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d41ad50f-5fa7-49b7-add3-feb1519e4060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7bde2d8-653c-4e57-9066-b11aec408bd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6a542ef-9b81-4def-b071-fbc7d246d267",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4616777-9e8b-42a8-8330-640f86214611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26c08208-0977-4fb4-9b90-3170feee5f62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d84ded-0ebb-44e6-8f25-187367271c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "78a0b1bc-1caf-4579-acce-3cf2b68be4b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86212cba-e67b-4463-a308-26a74adefd26",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9898fe7a-0972-4281-be34-990c2ee1d314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d52be10a-3a9d-4f30-9e1f-679b5c5264e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60d29045-1c83-4b8f-acc4-7ea22231c731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1fb8987a-240f-4de9-9849-fe2f758592ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "734f22dc-d31e-40ca-8488-cd3bf97028c2",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "452bda1f-5db6-496d-b392-e6e2bc95dd76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfe2e66d-d80e-4259-a271-b581ac3d2fcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eec0ce8e-8eaf-4a89-9ef7-4538931f5c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "66102c0d-c886-4387-9fed-dc8010bcf2cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "135f1f68-b902-4d7b-b10d-9fd1f0433842",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fdedee3-5da1-441c-8215-e552c65a10f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f72fb00-9155-4581-9e1a-c47a2d74721a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "978772aa-448a-42f5-a0f0-b49e89616d90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8f1423a-86ed-4470-9224-cdee59aaeebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27fb7502-5f88-4e77-a2cb-af9beaa13f2e",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9efb598-7252-4293-b95e-e2124fd0a43c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92dd528a-84ad-44f9-847d-bd20db2a96e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3982ed5e-7d0c-416e-b787-0312161676ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "52981f9f-82b0-455f-b019-12540a3a1529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0835aedc-8600-48f8-8237-239c357be259",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7ac4d27-de88-4a71-85d8-fb32062d19d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b3a2542-e41c-430d-88bc-832f9323bca4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b2ea8e5-3a42-4452-b7ff-ac9f0fb1e8f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7e96597-5fd7-4bf8-9a11-929dcd8ee0da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "027fdedd-38d8-4922-b891-73eff552134b",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e15eb1a0-1f5b-40bc-9ca6-87852cd3c1cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7efae365-8167-4672-b51c-e02f00eb54f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3ed6ea1-8ac8-41b3-b265-975a1751f72e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fed6c4c6-7e14-40da-bd38-3af924f835d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2579e024-e934-4686-b2dc-5a19c5dc9475",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57c8fa80-3487-4fd9-91f9-33825e21c0d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69161081-e99e-4401-9a7b-9533d22ae1ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6391232b-a7eb-497b-b65e-4e804d797fda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5795398-037b-4b5b-8004-e9692ba95c96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7842d8f-68c8-46b8-a34d-a31b8a4d74be",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5521080-f20e-4d84-b95a-ea556c66e2cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89d7daf6-8bb6-4eaa-ac25-24957564c6d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5038ed05-fe1b-4d53-9aea-19ad562591dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5725e03e-1a92-4133-9c20-c48ab57b8083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51db4c49-4731-40b1-91fd-d2bc0d7ca67d",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32316859-d759-446f-937a-442afbacd222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4586477e-1694-43fe-9fd0-91aca48f07ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7032218-608b-4fe7-bd70-2623096ffc0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "63151cf7-39db-49e8-a6e1-b7f07de2a06f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de760cca-5127-4930-b539-c8c5e297ae63",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d794ea89-718e-4ed5-b160-e85d16967fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e275e2f-0225-41ea-8fe8-04d45ebd1903"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "277843a4-b0ce-4fdd-a017-2edd6f379602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "305178f3-e5ff-4d6d-9aab-0d111ef494d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4d30e27-4535-47f8-8b7c-e73a8e3c3bee",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1fda21c-e246-40d3-88cd-979dd9d085b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b837be6-a794-43b5-b37c-fb7c253e03dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "798fe174-7447-4baa-ad1c-b52d5d646c7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0fe0303-b350-431a-b935-cd07b388a194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca256e85-f9ab-494a-a431-a4a80aefe162",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ceb0278-07a7-441d-a0c7-8f0389997fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebe114d9-fe49-41b5-a511-e6d44450c4f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39104531-d6ae-4f02-821b-f30abbaf4c0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b2b88b9-a6cc-4a0a-b975-a22ae0fbd5a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70ff067b-a73d-4ec2-a55c-a48b39fda013",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0120f277-86ea-440e-bc44-0deebf9bebab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70e6ce07-b809-41fc-9710-3607d620b3b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ade256a3-2a3f-435a-8326-26c7b26c1b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "afa84e57-2676-4ec1-b8be-74653a474236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e787a7-62e8-43bf-a512-a3190cb9352b",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a4999f0-46ed-4369-8913-6972d288f822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9755a19-6a57-4998-b1f6-62fcb5a13f7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6369b2c7-51e0-4ff7-9f5f-da34dae3a7a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5fd1aa4c-1805-4809-917f-614cf278e9c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0de36b23-b6fd-4488-8659-bbc043aaf834",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee27bf70-dabe-4c5f-9d53-6bd46784d9ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16183402-c411-47f6-b5e3-b22c26d128e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc22005b-7ecb-4b08-8c7a-03e65ceda2f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e30bde8-cd42-4fbd-8b99-63a59202988b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12997957-7d16-43b2-9dee-834c3e278016",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce2f467a-9d98-4851-be45-61b3ff7a368d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4482694-d749-47e6-9024-5822ce820220"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f82d48f-9653-45f4-a381-e97ac59a4c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "78c213f8-e6ce-4748-9161-d74a9cefa16d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec5cc67a-3124-403d-88ed-205b71a9edd1",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "791fc27f-3e2f-474a-b3a4-2f27555a1a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f9c7858-f560-451e-b58a-e6c8f0051668"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecce1143-c59c-4bac-923a-3aa6bc797807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "756ea99c-a5bd-4042-aad6-90d825d4dd00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c66ef5c6-2b47-479f-a823-1d98bd7f7a5e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e78aec1-3e70-40d2-aa3f-4475035b0f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "963e3f29-1bee-43cf-8e54-ac011638d5f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7f0c9a2-8f8e-4bfe-944f-2969d19262a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf45b4d9-79e6-44e2-9888-8a7223f19170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d61f298e-f571-4152-a6d5-4a906550f984",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a4cad95-f65b-4146-b384-0f12ac3dbf67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "010e1bde-8a6f-4f4c-a2fa-4f1d31b49628"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "602d7579-722e-4a5a-b1c6-331c56c810f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "edd82033-7f4e-4292-bbea-15ee428f2fc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b7c9a50-0ddb-4959-ba3e-ded9edf0c981",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da53e24d-8e1f-4588-92ad-bee4b2d3edf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "269b9958-d9b5-4236-9465-36c033027255"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a47bd80f-2673-4fe8-813e-d79442558851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8bcb9807-1746-4d10-9f66-e978bbfc581a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "29012c82-ed89-4438-abd0-991546037cde",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2b127ca0-2720-48f5-86f5-c08f9ef85c8f",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce0843e7-f845-472e-8b78-33e16c2f489b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b36dd373-c5f0-4536-ab07-b863f2b5d555"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcccdffe-fbc0-46cf-b0fd-5b7997ea6a46",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e06ef7cc-3221-4863-bc47-7f9d1cc139da"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6cff6c92-fe51-47cd-844d-97723a0213b9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e25e7ed8-6df4-4dc0-9445-4717a202b7cd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bc52820f-82ee-426b-96ea-9578db081070",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8cdcbd24-e315-4685-a08d-81823bfbadb6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "171eafd6-3eb3-4958-99d4-efd6ea8fe06a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e3695f6c-e85d-4fb4-a2d4-e2519b2a84a7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "193268d8-3313-4748-b133-8a364ea2bf54",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a3178ece-731e-47cf-9b52-aa2bfda44d12"
                }
              }
            ]
          },
          {
            "id": "7862bad1-ee85-4000-8bb6-b2ecc477c7ce",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a735b401-1c3f-42f3-9dae-04e865cfd250",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a86e7337-adac-456c-b74a-be252a6032c4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dabc7126-35b4-4b1d-b1c1-9f6a4284c0d2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "05ac50a2-37ce-41dc-8f02-4725543b4bc3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9e11e2a0-feb2-4fe3-b4ab-072ccb1c243c"
                    }
                  }
                ]
              },
              {
                "id": "2e12b223-9c89-46a6-84ed-769e5ddc6dc5",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c06701fd-89bd-4539-af86-ef24b0fbe91c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "61d0c630-b874-488c-8289-f8bf8626c3e1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f7e76cb8-2c48-4628-b8d0-92911cb63f02",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "554494ee-eba9-4d82-a720-6f72302a0793"
                    }
                  }
                ]
              },
              {
                "id": "70020a63-09d7-45ab-b803-b8703e5947b9",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "da70ea3a-f143-4f84-a39e-aa81288f4d05",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4c861537-1218-4813-9c76-0b2493752847"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "39fa58ec-bb6d-4213-900a-b4492095957e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "177c6b5e-7290-4e35-ad39-93cf879718a6"
                    }
                  }
                ]
              },
              {
                "id": "10948549-9e8c-4828-8028-cb712e651021",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "80208403-941f-4735-8fed-159108755ac7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3fdd07aa-151a-481b-aecd-da2ea39d938b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a43737f9-7d3d-46d5-8897-a7660976a03a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "4d152bf9-8214-452f-ab27-d271ef65d5a1"
                    }
                  }
                ]
              },
              {
                "id": "3bf02080-1045-4404-8eef-65005c572b21",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7b0200b1-534d-4668-b4a1-29fdf8894765",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "37dd1255-c321-459e-8466-d4985f2f0dd4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0e057e65-8354-4a46-a52c-252c541a6b12",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "9efa813d-193a-4969-99d5-0df304aff755"
                    }
                  }
                ]
              },
              {
                "id": "aeb0b46e-2e5e-4d7c-8acd-bbc6a1f26e9b",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ba6354e0-8b1e-4b36-ad77-7f8118d7de66",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1c02b38a-611d-445a-b65c-a2dae8826fb2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a288233d-932b-41ef-a74a-0fe2bb3bb0a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6a37948c-a2ce-4bfa-a7a7-805b6dd2dd7f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "59688acc-7b8a-42de-acc6-10497231ad5c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3aacf8bc-4443-4b1a-8438-827b6dc555a8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4dfcc08c-b5b8-485d-abae-ac7812670dfd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f1cb0a58-4ae8-43cd-be0a-a8b48796dccb"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "45c2effa-e495-4940-beb0-4cc17c4bc4ec",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "67a668f1-0599-4bd3-9e2b-ffc7d540e2eb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a4affbf7-c425-4177-9287-918eb10ca8d4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "64f58b1d-6f55-42c1-a98e-f7170cac9b1e"
            }
          }
        ]
      },
      {
        "id": "7d18f3d3-c00d-4ee0-ad7e-9df9b3d69bff",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "cb8f03a5-aa6c-461c-8277-5c302d1120ee",
            "name": "Negative Testing",
            "item": [
              {
                "id": "42db4dcc-339d-4769-968d-27f238de4426",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "44d5f413-f985-4f5f-9350-29ed7d1df60b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f90937c2-f4e3-4bc4-9b40-baee3b78bd34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7edf8a4c-c109-417e-8475-8116155bcb49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1441f604-c01f-4a1f-bccc-5b06cd312ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "9aee54b4-d382-4820-981d-a81a1247dac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2c7ca2c-64f3-4aad-8327-cc3d9601d5aa",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1218e4bf-114f-4847-bfc6-9bcae53375f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "330d4489-cc25-484e-b282-d3f4e69f3d14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36a1c81b-1f8b-4fd2-a15f-acccd378b507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "38b8029f-e46c-4872-ad64-9948e33d19b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad937b00-ba8b-4622-ac47-fe04aa25dab4",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c1cad7a-a51e-4994-b695-3f123648310d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c102ec19-8ed7-4e48-bd65-066075296e7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1983a086-0ba2-4225-8f82-c9badf66f5ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "abee43ae-df31-4e46-831e-e8c25b91ae8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62cb9b00-2fb1-497f-8bb5-aadae8a5e5b3",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd0211ea-d5cd-42e8-aa34-18ba4958669a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27c481ce-0ca4-4d29-bbf4-35104accfc24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddb67702-c4d1-4264-b8c8-d2ceddb61843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9261fc0a-8f92-4612-a089-fd61149f8f4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91f5bf98-e8b9-4ecf-ab6b-03138d23082a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecc51494-c5c8-4f8c-9200-dfd8d7a221e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bb04ee7-b5be-4b20-bf53-76b0f499e2ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faae6363-c6e8-4f7a-96a8-f52ba05e982c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "62f28d9f-6b0d-4de9-ae62-e8e984f2f0c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b2e460-d138-4210-b486-02c5f737b514",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79c4c30a-8edf-43dc-a5c3-d3904d3a8ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51ec920b-0eb3-4644-bc22-e6f54528d0ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf97810c-4afb-495c-9399-6ab9be6a527e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1af6a83a-2521-427c-9fee-36adf355eb82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a52d229-84dc-4e92-bb6e-284c7d428c08",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00e8bc3f-5d47-44f2-8eb9-8af37e716c98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c81b278a-9c29-4a80-8adc-66a6a143fb5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2a532d8-dbf6-4ab1-9907-4135efd4862e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd50a20e-4174-4236-bc18-51b79e8b4cbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "267ba31a-4c22-43ac-a784-5cfc205ad420",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9e0e702-767c-469f-926f-8db8b2b8ab93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24a4806e-9e3e-4a74-ba3e-1c3f3b09922a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28a04a5b-17e2-49cb-844a-ebadf3eaeeae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2675e48a-0c8a-4442-b3fd-f6ae0a261eb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b92371a-f82b-494d-a17b-6c60e17b1b05",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "058fc833-0612-4a71-a9bd-922d8fdca1c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7c668f5-793a-41ce-a475-1254556d62c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5773fecd-c864-4cdc-9433-74b7f5447f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "45cfad70-aa64-4b9e-9636-6054a4d5abfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ce64773-a8ab-4b80-b13d-36b8878b2c26",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6d358c0-718e-43d4-b1f2-da9c4ccd18ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "853edcf7-4afe-4006-b8a7-8a89c3129f58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f378e84-6d2d-416a-874f-bdd4bb014d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc5fac7a-b7cb-4e42-96fc-079d951c23b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6c5926d-b60e-4f10-8dba-03cb921f6f0b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c703cf4e-ba9e-4096-9f5f-8e183f91a73f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "910d1b0b-65d0-45f4-beff-861fa30b128b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff83ba16-549d-463b-9940-3d5783c2de4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "851af271-d089-4270-a551-8ba803e953da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76bfa88b-3d03-47ca-8b44-24a1d4cee0d2",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a305bf9-1d58-41da-92d7-fafcb11b5608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4982b0b-5ff6-4e46-b36f-7a43e3d20cc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6747004-dfd2-4eaf-beba-c76065a37995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0d124072-df69-4aa3-b6fa-0f38be28e392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4c3b53c-bcb6-4c4c-a603-3272f35260a7",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "515c251a-a2b9-4fc4-bd2b-5bbfd4472779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39d8741b-7bd9-4b49-90db-bae461b3275f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2afaf75c-6b39-49e6-b051-70eb042f59e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4762a219-0453-4399-b0b1-c41685f873af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3799bfe-154e-4946-ae49-84dcfa0d428a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68ac539f-1fe7-4024-9174-73efe9fc3c65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c662b3ba-be14-43f1-bfd0-cc92d911fbe2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfb13945-549d-49b8-b96a-81f00a12e81c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "406e762c-e9af-4254-aa7b-1bc375e308fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b81aff3a-78c9-4e2b-ae0c-18f8d2f64f7b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d266b7ba-85ad-4dbc-ba9a-435eccd4c9c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "737fa091-1c51-484a-b842-9db4c0e7a23d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "769b8d95-39ce-41b4-a07d-fbab18b80922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "11627c49-17e3-4743-a1ef-80a1dc0af2b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d579e97-09d6-4bd3-a422-bf345e43e1b8",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8360e67-8967-4bae-abd2-27b91ab230dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86201d15-e0fa-4e84-a550-969145bc8df4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18eb6ed8-fad4-45e4-9c0d-0071dc8198cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "98f1a2e7-bb89-4f8a-b402-635c52c0721f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "912518fb-9077-46c4-8950-dc23f17c2ace",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e42533c-5587-4961-8711-9143055e0b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b7305c4-eaee-4d67-bef7-c0421771383b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a37780b8-a906-49a1-81f2-45005167aa09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f110cb01-e5a5-4d5e-9a1e-7ea745f123db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dedad2bd-85f6-46b4-a518-5bf8c86d8e7d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "058ae1a1-c0d3-475a-89b9-c7d3037b30dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dfd895b-7845-46ad-8b72-67b5f46ab7b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46fed369-e374-44c2-8bd6-70248f3ef024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5a4b893-ab29-44fe-87d1-291502fa1b07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8c9668e-768d-4e52-8a02-bd1ef7f8c0b9",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bae0bb0e-edeb-49c7-9e58-3367c530352f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b46aa40-1f99-4e0a-af0a-f515bec7f6fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9444d0b-c275-4a95-a3c2-bd2d2c40a9ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1b5e96a-03e0-4a56-b76c-436cdb13caf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e00809b7-c941-4dcb-ae9b-a653f18e7bb4",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17914b52-13c0-4253-b3d9-5fdca0e9bbe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef37d3e9-60ef-47de-aa67-f55efb9b0a64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cef8a08-806d-4426-a743-41665659489f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a5ed1e6-52c0-4151-98c0-8c9ae42df233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf9a5ed2-113c-4ce0-9e8d-f4315d4d5f2b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d557cb7-25f7-464b-b49b-1abaa7a480fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a311076-8863-416c-adab-1f7597dd5cf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea361b0e-2647-4a79-a72c-fb6b454a8dd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "283b0fe1-2388-4ef5-86b5-ce378a9178d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e108937-6815-45b4-b566-26d4f107f0f9",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "262f0a75-90e3-4d01-bea8-e1f2729e703a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95a825f5-3704-42ea-855e-ad36f7de9860"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c13074a-99f6-4c50-9dda-7697372e651e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89044084-7b7b-47dc-8068-fccb83d60718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e130a55-3b26-4dfc-b502-e8905c87a5c8",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f05dcbe-98ab-4dc3-9fb1-e12b1dba12e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ea5e43f-9550-44cb-9afc-8ac1a79eba58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67e42654-1d6a-47ff-a878-7ddcd2b05cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fd0b056-ded0-41d5-9736-c9c4eb8e7fa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93dc521f-a0a4-4bbc-947e-bb179031ff5d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3809ec5-a814-4a8d-a591-618889e372dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89e4d980-a279-4f48-9595-3993dd238c33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "427c613d-657f-4377-b53b-2a785c80aa31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01b198f5-8440-4640-94da-ef10aa21c98c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "972b8224-e914-41e8-8f58-7f700b704e68",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96293444-39e6-45b4-b45f-501b8e1878f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7c3e6c0-9b4c-4d2a-b8b2-fb27cc5cfb95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a2a2d29-8069-40c9-8e31-cf439f33c0e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec71cd02-d262-45ca-b6e6-bd4defe6f2a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72c7123a-ba8d-4015-a530-6bbf8de08e59",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dc15f09-03ab-436b-9282-81fa0a5cd899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26a401ee-4c5d-4068-a8e1-18a078cdb695"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c7e37c5-1812-49ff-b7ba-f3dfad8a7c1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4cf2815-4980-4a59-b86b-4f991f9d54f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ce807db-1309-400c-8057-de5609778d76",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5682c1aa-d298-4291-850d-210d1acfc584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc4196f9-5fc4-432e-8758-cc6baa507858"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9698e77e-d980-49ef-9201-633122d9af7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9592e58-7b1b-48f6-a12a-ea437c7f338a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f25b6f5a-bc89-4441-9ab6-83b274c9a946",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b71c8074-b6e5-46b4-a3db-4e44ec7c3471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d565278-157a-472c-92e4-5c46a8b89073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ff66bd5-33ea-42a8-9c81-3d8d10c4eaa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49504c7e-400a-44cf-8f33-0c385c34e983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2af45d3d-25bd-48b5-b527-2c3beb4773ac",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df295673-30d2-4f80-bbbd-63113f78cd55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e737b33-f8b5-4836-abce-71f5df65d148"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e0ae322-d07c-4b52-a187-c5b3bce57d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7967a3c-6921-4719-94fe-6dfe049dc844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46b17cce-aa59-436c-97f5-cb9a9b04e5e6",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70b4898d-409c-4f8f-9319-1df570ccd03b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c9c2da9-0fb0-4f64-946d-1d5c9c249684"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddbbac8e-4ecc-4ffd-afac-23b2219e999c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38eb60cf-9c39-46d2-a8f0-0e634538e8f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22d9ccb8-8bc0-46ba-b287-28c477bf2979",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a96e84-05a5-4d63-b509-75e177b32521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbb07ede-cafd-4ad7-b81c-9db2954e58bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98d777a0-60f8-4e89-8420-caa7416225fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6bd611b-dc54-493e-b6a5-5ac8567f854b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50c61611-5e4e-4374-a284-0d8465d2485b",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41fdbc4c-760e-4264-8a98-fb413330974a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "480dcfd1-0884-41d9-8947-76ee1a738aee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99235f98-74ad-4954-9d08-83c8b0af1362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0562eae-e13b-49e9-98bd-74a58e6ca731"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e8b2ded2-273e-40d4-8b9a-17373675b0bb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ced680bc-7c4b-4a1d-81d3-567ff5227e82",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acf3fbe1-deba-4baa-acda-5c1b5a8ebffe",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3e6017a4-025d-4b86-a4ed-f259392015ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acdce1ac-e1c1-4afc-bd90-2e48a242a2d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e55f62f1-6da7-45af-9b72-aacd0fc5d278"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3b4128c0-2dc5-45f3-8104-129b35ab668e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "54011301-7b08-477a-bc00-133f90a050ec"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "619fe7da-ccd6-4170-8a45-7220e8423f99",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7c6556da-3622-483a-bc60-8fcd3d9c1228"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9588151f-286b-4447-aa13-8b9285a77c5c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2df79c19-d610-4c6b-8d56-048ae4211ceb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b55f05f3-1b5a-423a-8cc7-411271f556a1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b533e490-b8cc-49a4-833f-cd957ae47539"
            }
          }
        ]
      },
      {
        "id": "3345bec8-0fec-430b-9a53-08ada4c10d47",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "8ad59037-c52b-4cdb-ba96-42472d8fbb2f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "af20ad64-0346-4050-a9ee-f14bb84e81a4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d1714197-6841-412b-b429-14da7aca691b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "578e98c8-0f02-4cb8-988c-9cb10cc4b258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9fc6593-215b-4b3b-9bda-d892dd323382"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db8e6bf8-dc2b-4e14-9614-5d896699c289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ddf101b7-ea26-42dd-ba01-437e9672e04a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e8aae05-c6bb-4a04-9bf7-f831800a073b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd3207c2-73b4-49dd-ad7d-be5fdda1de1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc7df393-0e4d-4222-8d77-e097500c5ed6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdfb8316-b50e-4410-be01-7754ee4e4f8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6f19c32-255f-480d-9ea6-b2abdbc3724d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "768d4fdd-eabc-4630-8edd-62758ffcc6c4",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5ec5a3c-1a6f-4774-9c20-e43a2f598599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2efbb669-102b-4ff8-a055-f3044026de48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5059079c-9ab4-4e78-becc-5c9b7debd9dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "69fe033f-7c8c-45d4-b92c-a64b4f182859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb8ce75f-16e5-4f62-98c0-3ecae4c17b7e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e1b1c8b-0f78-4614-a339-1d93f0118a00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22a174fe-28f3-4388-b83c-3e2670249a6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75ac49cb-18ff-4961-867f-e737b51bc575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebc8762c-31d7-4dc4-9c5e-7b8ee79d006d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fa82ea7-ec33-4c99-b604-fd63667238a5",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9102f75f-a8c9-45c8-af3b-f447864c47a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bffcb9fb-2096-4d9e-9fb3-54e41dbbfbdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a2ce9c1-dcfd-4a98-b548-ab273ff0638a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "da94828e-6642-4d35-a0a2-59922c6f57dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b3989a8-4cb3-4ab7-8891-fad144308bdf",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e743c045-c0b9-4533-b684-dcda625e1c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9e66aec-d4e7-4528-a0b9-06e3a13514b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7caccf7d-5b20-444a-a976-3375f5bf9131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bdf11ee2-7af0-4e09-876e-6c4fc3d86ed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfeda1a1-9646-46ef-a471-1d4cd8dd6323",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f79ae0d8-1108-4ea4-b443-460a505f6b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b45afb9f-d4f6-44f0-b877-e7bfca99bec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53607e8d-b425-4341-9ff9-b18369d476e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "16d4c9c4-2def-4816-a328-3f58655ac17e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b13c335f-e2fa-4d30-827d-aec34cedc381",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf61e3b-6b6c-472b-b103-227a9b4d4cf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab366a3c-709e-4fab-b00c-bacde73855b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92bf24b5-8c52-4129-affa-18ec062057cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a326c1c-9afb-41ba-abe9-dd303e63ed48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e80c0f8f-af79-4eb4-a2e7-dd62729e88b6",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b46615d4-ace2-476e-b4c4-c2f024a0a765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf31c1cf-da61-4512-8484-ced8507d3079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60f539b8-a19a-492b-9006-2dce55aacab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9416ec76-f47d-428b-8328-1fa463eac244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f979e6e2-b91c-4612-b79c-819b62df69b5",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21b1d41f-d5e8-437f-9f42-d874378009c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c111dde-79d5-46bd-b468-1c261585d225"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4baa7aad-868a-45d8-b818-52c4f0017423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "722bff80-4099-44c4-b471-fb87a1901435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccfc2679-e480-444a-ae8e-6a4e5b7b5553",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc7a608d-b5cd-4c4a-995f-52984557a4ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "647cc6d8-a618-4b56-9f3d-0e78c68cf6f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92e1d7eb-0b72-40e7-93c7-6cf1d3223921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "04e19632-0ede-4fe1-b1ce-b4d5f2b57674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0afcf6aa-eb2d-4a41-8b57-bc4bb600dcdb",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cb3da01-d2fe-4d4b-8a60-95d97dbdd458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d7e2c9c-6d29-4cf3-80af-3e8a82359578"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a672c607-32b4-40b1-a02a-f08391cf96fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a67563f1-3953-4712-a625-f28880c390dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a30c7ad2-2815-44b6-8439-a005fbf7a13f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8f4179d-744a-4cf5-a62e-8658a56eac65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2d99996-e3b5-490b-8cf2-238071fbaae3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f957ed-9104-4382-89ba-295b83ebda2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d136cc9-c2bf-42b8-b4f1-14749a1b4def"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7af27af4-af06-471d-865f-12295f9160ac",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9de89a00-8458-422b-8487-5f08695e22be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3669079e-ad24-4c68-8985-b2e74913da36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86610037-d2e2-405b-9664-8c082bef6b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0911d5d5-b09f-45b6-b59b-80fd2ccaa761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae45b1e3-1d3b-4074-b239-c4ecdabbb31d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd4ade6b-3504-4ee3-a002-6f576846634e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a1ec50d-cb68-42c5-a13d-bcae402ce6dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ac07592-af68-4a69-8683-87be76efbb3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ab575f2-51fe-447f-a051-daa9e0cec054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "952b2067-2d14-4dfa-8b98-2fb0981cbd13",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8795a230-5c07-4dfa-ace8-670067037d58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f88853a9-dba8-4c24-9158-ffa04fa40cfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "036ec457-93ad-47e0-b05e-c14925711355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "63900b3d-4dda-48dd-a581-e9f64d7b91a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2df90ff-6b0a-4aa0-b757-b12774b079b9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb019a91-7e0a-4e79-a214-2e42b3db7591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38ad9716-970b-49eb-b334-b29f66be920b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0107399-d02f-4500-a0c8-fe909168424f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "63399a07-4533-4c4b-97d5-3b171434dcdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f79b2a6b-fa52-4e07-a7eb-72743d897df3",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7a2ee7e-f0b7-4594-95b3-7d5013c64465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f8035ad-700c-420f-a658-d7edbcbfe8b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c9ef6e8-1fb6-4bad-a105-7b5dd9bd54d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2f7bcef-1e16-415d-aa20-63dc556e3186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0110ebca-72de-4995-8289-961bc45c2efa",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cdec09a-9347-417a-b6d5-155f51f77e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb4565d2-2ad8-4017-98f9-1d70af22ddc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee20c4d2-66ce-4629-a898-e3e9dcf0e027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b10b5a6-fafc-49b4-8b06-554a59e387ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02dc4796-9128-414d-9897-db595bba2719",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "452f20e2-7d83-47fe-8520-096077a368f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fc0a859-b353-438d-aa09-eefa54a7303f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c732379-bdbc-4d5e-8cca-145afff520f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb40cb9d-55fb-4379-af13-0beaec97b863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8481e7a-d5df-4115-aa1b-24e640fb9b34",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df41adfe-0fd8-4327-98f7-1ba095f7c846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "179a2874-7f0c-42e0-b71f-5026c5d212bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb71345b-c9dc-437d-91c7-ba6b663e3e7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c416bbca-cc47-469c-b1b3-730a76e2f39a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a1bb112-a27f-4d5f-8402-3327e50aa649",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4027a888-e2b4-4924-9801-53c1007bd089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f1c2862-1623-4cb2-99b9-332fbc6f688c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac5cfe23-646a-4d49-97ab-86eb33fe0fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af5c9eb1-011c-44d9-9f69-f7b986a29c4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16f04345-557a-4e04-8bab-2bb6dce8a876",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "206d6129-6d1b-4484-bef3-20481b62e347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f6569ec-9e01-4ca6-8556-a30d842e7765"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a9eed0-589d-46a7-a645-6e6d8513784c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "85ce1b28-179f-4266-9c1a-e382c18318cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fd4954c-d0cf-4be1-a74a-7f751e7c8b89",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0d3a4d9-b824-4cd4-a8f6-5beb5d5c8ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9feb5549-85bc-47ef-a1b6-00f93c6669f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd4b9e78-404c-49b7-a334-97d214c34187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e866a9e-ad75-4ba0-9098-9a597e8cf709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6201a9d4-ec61-4134-8494-58bcb69a61b7",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7758f613-61fc-499c-94a2-5aa23e6a8fc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e945846-db16-4b2a-ba3a-bc632e789ef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b718ae6e-d91c-4f2b-b1a8-5357059fe602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f67baf9f-9b9b-4df6-ae91-59ad7a4676c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92881cdb-24bc-41cc-b389-4724465ee670",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b87bf3b1-d269-4684-906f-b801404b15c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acdce481-4d74-4891-a34e-7018b82abbd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85514b6c-6a07-458a-bbbd-51b0e1496c44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "facb627f-cefe-4136-86af-889d1c64c904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c20d4e3-eb6f-4850-b35b-7121bd7ca24b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ff0bb94-4693-4d8f-b5f9-c5609dc3e5c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e850302a-a258-40eb-8943-5e598cc794e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20679f14-79c0-4798-aeb2-a74e911a9045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48fd653e-c8df-4138-8130-b3a369720333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b75b550-2173-4e1d-a1a8-9fc7b7afc5ea",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "957aeee3-22c5-46de-826c-365b8f025946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2998df5d-b3d1-4d42-81bd-cf4c4c6d7cd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b3a84aa-067d-45ad-b64a-4724b124961d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c33b2f53-5f00-4561-a8f4-9103d3da6e68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85292d7c-d288-4d47-991d-6deb5098a46c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c95055ed-4fce-4b38-9a2c-f3ad32c6d066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0b11d7b-7734-4ab6-ba73-c5f3f207b3c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd7d834b-0316-405b-aa4d-612652165650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c03e48e-c3ca-4b3b-a2c2-47ac11776a93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdf344af-9911-40d9-b602-f0863f943309",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e2280b9-3512-455c-8223-0e9afe46ee43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bef70cc-ed95-4b81-a41a-caf6e4eb8848"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13023205-2078-4561-8d43-cd2c9e695fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "690694a5-b0a6-41fa-9d16-e6a996c9e83a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2f3ece8-e76f-410d-a513-5fb1d7fd78c4",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8347807c-4da9-4b44-a830-9d31519b4e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f51ee221-89ac-4a9a-8081-bfb09702be91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f549c45-db42-41aa-b5f3-56d99ed12e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "52e83b6e-4399-46aa-ac0a-d2ee68c9da99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d34f457-aa05-49c5-814b-5d529ae8ff09",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "382d0f19-a98e-4775-923e-bf7e989a137d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "963c7186-2096-44cb-a545-5063b8714b0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f53f3a1b-8292-44e1-b07f-a803c6514370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e17c8768-ab3a-4303-9e69-e2d1dabc60f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbeabfbb-8701-43eb-bb03-f645ab03a00c",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00c2aaed-e644-40b6-9957-7b8e3a26a501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f01b2b99-3533-4858-a5cc-ce246383b79b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c090cf9-f81d-4ee5-bcaa-375d7e583110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7798642c-d6e2-4df2-b122-61f933630c61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03c0357d-9e82-4ce6-b564-f7491cd0876c",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fb6ce2e-9881-4012-b694-6a7ac5bfe6d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dccf284c-de81-4014-b430-2fd9ec63f318"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1679187e-2d62-4428-917a-85737747d34c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48cf59cf-7e5c-4573-94b1-6d2b8339464f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6f77a3f-6189-4451-8491-90c0c2605b3b",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "703465c7-fac7-42de-9332-964bc607e70a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "483ba29b-15f3-49f1-b630-ae39bb72ed6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b41af92f-e60f-49b4-92d4-318f9d08d2da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8edae50-db18-4fad-b81c-fde57192e40b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d949ac16-8ce0-4532-aec8-ce688764a193",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58116f00-26fd-4afb-978e-69f34ac8d720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6f555a3-da06-4642-a78c-5b349c96309e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "077bda52-74b2-45e6-9424-29efdb097b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc568c55-b60c-4d7f-884a-98c4ad153b97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc6e4a8d-61c4-4327-ad87-c4c643701e81",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e29883ea-29ba-4e66-afba-3231d9ea7791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfba38e4-d6a3-4693-96db-cc822f15f43d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0f552ee-c0dd-4d6a-b36b-892490fd5119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bad20bc4-fe05-425c-a08d-91e734bd680e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0f4a499a-d661-4e22-b30d-4eaadf9c3f00",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "09b60dcd-f856-4558-a307-d7de78e1bc07",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "602cbf19-5033-4242-a96e-dfa4090ddbb6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "40dca55f-9699-41dd-be83-daca697bf003"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc3fd84b-4848-418a-a798-17c7b0da3cb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eb1f6de9-53ea-4ece-b3b4-96e44179ee4f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f617e6df-148c-4182-bfae-7f59b2bcb0fe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "54f3bc6e-6843-4000-b2b7-2a6431a134fd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bdc19cdb-b743-42b5-a815-011c0f72235b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1f74b31e-c9ad-4b8b-a3ed-d35bd0d5b99d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "91abc00a-72d0-49cf-8974-de5a3876cb6d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bfc5b9f8-6949-4615-917f-3dd98bd749fd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a31cfd32-bdd6-49fd-afa9-91ad17f3d4b5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0fd2a037-c464-44e7-9257-074f58f8a860"
            }
          }
        ]
      },
      {
        "id": "27a37ea1-2a4a-4fb9-93ef-96e048407aed",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "3276dfc8-44f3-405a-a9bf-5b2a76b320b1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f2098dd4-acd4-41b5-a10c-c3ea2f75f654",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1a72c18a-5c8c-4729-9512-e23e7f600438",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81199d01-fff3-4171-8495-1f3e0c821466",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3460d7a1-2899-4de1-b940-7389e081cc73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd9af4ad-4f17-484d-8f42-8546945d991d",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1bb4c51-9afa-4064-9af3-827dd634166c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "130e1d70-4b75-4293-994b-faf8f64f33b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d381423-4e2c-4a4d-8577-c188bd8b1823",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1746352c-073e-40db-914e-de357d28d95e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd44a012-975f-4689-ac5e-7cdf2b1da9f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fe5ce69-6245-4427-9a71-8e736618e2c1",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "678bd823-4600-4609-9874-03bd7b243086",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ca70c04-b9de-424a-965b-67dda3be5d25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82a6a5bf-dd4e-4ea9-b8f6-6ce59c4b01b7",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56546315-0fda-4d84-b997-e60c11280b89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aba35c2f-01df-4df5-bd45-6da8090d8729"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f7d332a-0326-451d-9d06-8aceb7e7c8bf",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a95e8f0-fb0b-41a8-95fb-7db594ab646e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edca27b7-8f50-497f-8bfe-6d7cdcdeebb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20d98eef-2c51-4c9b-8f49-482c8f010083",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee92429e-b09e-4c48-848e-117b88e9731e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91af9f25-23e7-440f-96f2-31b2f832ed9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e53f8c7-54a8-45ff-89a6-c5189c2629a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "427b88c2-74d1-4dfd-9ccc-d454d8c09992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "427fcdf1-406d-46fc-89dd-3e0f38522a0a",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29ffe66f-2be0-4912-b14f-3f0225ec9705",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "157b2438-1993-47e4-bea4-4b2356f5b739"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27faf240-68e4-45d5-8667-69f629cefd02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffad460f-9516-450a-a027-f5f0791334eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a06a8ea-88dd-4333-8314-9e42520bb1c5",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ca8a233-f205-43a2-b437-c79d9dc5b4e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "533502ee-2a8e-4bef-a0dc-ee8671081a1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b401ed3-f91f-4428-b597-4dc599fe1144",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b27c9ae0-6abb-4ac3-a4cb-5ad6b4bcf6ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8c20111-7040-4c23-a105-ad230e107ba2",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31dc2886-34ae-4622-84f5-fe0c54beede6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6534e60d-40a5-4d6a-8b61-811cfa2a11ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e4b64b1-cdd5-4cbc-9db7-42f386ea332a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "875ad2db-7fef-4864-ac10-3c2f0140a383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c2abb07-b36b-4c45-b846-912368405b15",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f5843c3-c933-4184-a072-69d9aee7b13f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c71f9b2b-0800-40ee-ba70-56bd407b9cff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "996b8701-6306-42e0-991c-4958bab9956d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa380176-93ff-4ca1-a2a6-a84e9ec67a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b243918-f199-4e35-9038-ce599b25c774",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6cd5c63-f1d7-49f4-93e1-c025abf10b8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc3a4a1a-5730-4c04-8883-66655f0d23a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0b83d2c-e456-446d-89ae-ab910adea1f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56385f3a-17c4-4a1f-aa1d-7dca035921fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91ab8aea-d209-476d-af96-7105b2f73fc3",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e854e45-5a72-4da5-8084-edb6fcdf027d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f348a839-6525-4570-b93f-8402b66ac79f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a108bdd5-b9b3-4121-8cca-a8df6a6df294",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14800fd0-6752-4c54-b66f-e134921869fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bdc1e79-e841-43ba-97bd-b4e82bd4f616",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ff19cec-16a3-4f1e-a87b-0a99f67c0cbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6ae2b15-284f-484b-abd2-bb3c9940e737"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d7ec97-c54f-4fb1-a725-7dbce83c3b8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdce5743-1b7a-42bc-99fe-bb57f22b49bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eed62e0b-b29a-4e9f-8750-5f84306bc9c7",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8e80b01-bccb-491a-9f1a-161df5bada76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d11df3e9-28e9-4073-98b7-02a965b3e59e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4286a54b-8d41-414a-9dfc-e3affc09df89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08d63f44-8aaa-472c-9ccd-a40441dba31b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa6c0b57-dcbc-4069-acbd-06f2e95efbc3",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ba9312b-0ec8-4336-8452-358cae7c864a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e216b1ef-13ba-4eac-bd86-70b3da15dec9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f49e7ad9-3f97-46a7-a81a-54f723779e96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeccef2d-6d1e-45f9-99f5-89143797d71d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fa961f8-7334-4ed6-967d-c7edf25a450f",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9e655fc-fb3f-43f1-b6e6-ba94a978739c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c994bd5d-888b-492b-a7a3-2d146cf590a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "313d0c9f-a90d-4fa9-ad97-02fe762915f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f14ef38-d194-434d-a201-e8c5de0864fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc000c0b-2ad5-4cac-9564-854efa7e57eb",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e535a148-a574-454a-bebb-c95ee4b92aa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e323d678-758a-49bd-98be-ccdf6381d870"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c43f16bb-9840-414a-9290-9e28ee3b0b45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3133cc2c-bbda-4fa3-9770-00f8052a907f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06419738-a3ed-44d4-be7a-4259f12e5028",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a7e00fa-b809-4dbe-ab49-6783b01d298e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb724f5c-f633-4b1d-97b1-f9ff4726ad71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68085c31-2b10-42c6-9a5c-2a5404eed260",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07202c39-8739-405a-9169-995d7c36398e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "873c4400-044a-42cf-ae9f-a7e1db3d43b1",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4610d668-bd92-48a6-8abe-c92e823c49a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2d7c0fa-2c6d-4c9c-b64c-680929a80a5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f2730a0-a3a8-4619-9281-fe1ccdbefb4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48d08bb7-c362-44e7-8baf-1e04ec728f55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eec11f4-d1d2-4d0e-8a43-33cd4b50118a",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7c518f9-7120-4be4-9c8c-ad67abf457ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfc02cde-c61b-450b-a1e6-627b27be3339"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed94fcc6-39d0-44fe-87c2-2fa67aea33eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a054198-e76c-42c3-a7e3-26348495166a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2cc9ecb-7499-4abc-8168-da803eb78de1",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc80a03e-946c-4513-af82-2f83d05054dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0c825cb-80f5-444a-b5cb-664d42dd3ebc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ded24a0d-67e5-4f37-8c8f-4746559733db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "612a26c2-68d1-47bd-8fd4-c2fca78c1862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2cfe1b3-8ab0-4d45-839c-c6ac169383c4",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8433a58-b9ec-4ec2-99d7-16ef208c2aad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de866a6f-3647-422d-81eb-da5d4713c57d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f698014-1a24-4545-9491-98dc7967ea36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e37fe68c-d4ff-4917-acd9-ce380915fab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c5ccf0-9fc2-40f3-be61-390954b5376a",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db3a4732-f274-4490-977f-b9dcfd2c7d5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47e65ac6-3894-4e05-9f34-073cfd966c25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7af3b18-bc9f-41f7-b9e2-00db6c0e64b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d39def57-3f0c-44a4-a4b2-3486941a10f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92e0d151-c0f7-4160-8b67-75660302f7bd",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6629999-3499-4fcd-9c99-1f8ce07b788f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20a631cb-7073-4c7e-ab5c-8e4c7333eee9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a692ce7-0782-40cf-a182-be1e259e38af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c87067ee-8ed5-4dee-b8a1-611185675abe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17336e80-5cbf-4fee-bc53-fd77e7232660",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fade161-2eae-485c-a98c-7ad7398ba446",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4a045c1-2042-4abd-8539-70b6f0367612"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee6af9e2-a567-4362-93b0-10391232d031",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bcfa7cf-8840-4a2d-8005-e4f84877c81f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39123d23-20cf-4f99-bc08-60a22f27aae3",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6c8f9b3-8cac-4741-beaa-0d5f826f4ee3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f62fc01d-4be8-40d1-8857-265c8579006e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23ff2bdf-f489-409b-a5da-1054eee3239b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72891353-e850-458b-b16a-d5d6fc176e54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccbc9f7a-bbbc-497d-b8ec-4cbfd7f1a7ea",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99c6aa3e-9e93-4198-8ae5-6a7c90d31900",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5136986c-5685-455a-bfca-2453d636566c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c2d65ce-b9fd-4cb9-b9a4-38e11511c027",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a27d9ec-9de8-4ccf-ab87-609ba8426519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e732c3ed-6227-4c74-91e4-585d6e9d5582",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f080ff1f-8fe2-4237-b075-f7a771b7aa4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "749d1c44-1aed-4979-91c4-84c4d0d401e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b36623e6-d10c-4b5c-87e1-f79670c47abb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b851b3ea-849e-4124-9190-eedd45e3c8fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15659885-9c22-4d0f-bdc8-e3b6d53ab948",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "698e2238-e60d-425c-8a82-ab6a366fd468",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25240118-d89f-4ac2-9f47-88d57a0fe0ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be4363cc-27d9-4ba5-89cd-2933904c08ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47c4bb23-606d-436c-88db-201674e3c299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90c96a48-0034-4222-a946-c230a3f5c3a7",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6523637a-dc60-40d3-a098-431bcb0bc99a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd51a07d-e186-4b52-8495-285bf1e975fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45feedb9-2142-499b-89bf-dbe76b37dd6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0702387c-badd-4703-a3fb-f76649fca179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae95e758-bcd6-4be6-a0ce-a12af5defdbc",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b699ad82-ea63-449a-9999-4cff797e1cfb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6df189f5-b3cd-436c-b288-20ce31af09ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "857baf33-446d-4589-b84c-2c65f59efbd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e53e0eec-e2ff-4b48-ac09-031a2e17ea24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78bc9f41-3c0c-4157-a8d5-03e814f1d13e",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb1c322e-4b5d-40c8-96ac-7e09c0f69357",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c3646cf-f595-4ed6-90b9-806581b149f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "144b4b9e-e3a0-439b-ae37-1e233c1bac2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e171701d-59f3-4163-bb2f-91c7ca876f86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51681dfb-a4d7-4274-8a3d-1633d363310a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0e7ed91-a9bf-4205-8c2f-8c2ab4b4906c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9a56b8b-78a1-4123-8b6f-c5245047dac4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d5d3157-9134-4c1d-9e5d-ab4c0ddc57c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e36939b-f552-41f3-95a2-6503a191a1c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7cb8ae2-1ff0-446e-a90c-e50af0a2acc4",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97804b5b-5e28-4cf4-815d-dfe68fbec632",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f3aadf7-b2bf-469d-b2d1-2798e8b3a7ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b30acb2d-1b1e-4fe7-9c4f-71cc250057e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e264985-2caf-4427-9b26-e6ff8c6618bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb5949bd-f5e7-4f98-a933-9dbf75345947",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50a18b37-8c69-4560-b40a-02b5c64d83f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ba79412-a5c3-453c-b9c5-f223cc1cd1f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10555b9f-0053-4c31-b5bb-5ae1df997202",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "988fbbff-22b8-4277-aaf5-29dc8a10e458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf2a2be3-2872-4022-a380-c4c955b13e9b",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c3b49f1-6213-4cf3-8bfb-654495ba7f7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3256d615-6ce0-4d80-af77-477d3c859dcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2fcdaf5-9159-4268-a2d6-a151d34e8ee7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8c9881d-051f-44f9-8f34-40ee2fc800bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df1364f4-8d88-44e8-bf86-918166415b08",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25e074d3-460f-47b5-a7ca-234c0c4d62af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "608b7130-d4fe-4b54-81c2-a5815510cc7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "906d30bb-c7b8-4944-8ac4-0c55656d08f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a777538-54a0-4584-a120-7acbe3032e1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c2d5609-f6af-40f2-b84f-8bbba27b754a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44cce416-84de-454a-a791-2e2750ce4ea5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b6f45dc-2f2f-4a1d-8f5a-cf11cccf3815"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69c2a07c-4525-4e11-b20f-3c1bdfee9919",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94b84086-bae4-4b6b-aaf6-13fc9d1b9fae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daafed5f-c5f0-4aea-94f2-4683e616016f",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0969306f-8b5c-4863-8aad-e201b1c7fdb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a36aabe6-8e2a-4518-83bd-dd0b9e973fae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52c1346f-aaa8-43dd-907a-32e6f6f74ce5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13950ade-e088-42a0-9ce4-7a93ca158753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "094f2a37-7ad3-44f4-887f-fffa957709bd",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bca37ea-3160-4d0e-a5d2-493a82ee9d6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "515c3f31-4cef-4d8b-bda5-812d7950b175"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dfd78dd-f9f7-49c5-848f-03df92565b63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "263f47ba-4e8d-4cdf-b028-3fc2405940b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "950708cd-282e-4837-8cd2-4d03daf4c5f7",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ff34062-0d5f-460a-b8f1-13fab9074ebb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ec16ba3-dbcb-46d8-bfe3-1ef849303cb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd37cb24-6baa-44a4-abbb-2e055a97221a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9776f54c-a7db-4014-aa95-fcb50a2bb43d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bed692c-fe7c-44fb-be70-0b7a8ec584cf",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82730b14-132e-46f0-89e5-4a6e7b2f0add",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ac5a6b5-e1c5-4ce3-9fce-611bdcd9aac5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dbd193b-cd89-4972-b733-35c6f74a0ce8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41730036-f567-4d35-a480-d5b613bb4acc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50fd530b-ea9f-4efd-b6ea-c065715924cd",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe9ba73c-f62a-47fb-945a-3c5e019bf88a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52fbd934-cf94-4264-a48f-0c56246f55fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ec2b881-b142-4f1f-90b2-2f655a67cac1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57873f31-2f1d-48ec-a548-446859498ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "851132a0-5ed1-45d8-8025-376f563dd020",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0420439-5700-46cc-80f5-90f4fe788719",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91d5d8a0-1669-4721-88aa-370248034aad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "250cb32a-7b4a-41d2-9b45-28148bc9f090",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99dedae3-c057-44ca-8d37-700e360a6bc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2372842-c767-4fb9-981e-5ac7150abd74",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1302fb0e-4030-46cd-9932-fa3f92e37afd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d41e5e4-4c13-43b4-a5c8-daed425fedcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef44de72-4c0a-4c7d-af98-5eb13f3485e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f88e1afe-1014-4184-ace6-3824ca00fd05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad3d8d1a-0dec-4c5b-b35c-8e1e9f3085c2",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22c153b8-fdac-4a44-8858-8aa2341595fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77850309-9703-4f10-919e-42b8682581e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59f52e41-0e41-4150-9927-f7a7c5205ac4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61f41fa2-e133-4c96-baf2-0c27acebeef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5531b26d-2793-4031-89e6-63c0decf5af7",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecdd1f64-1903-4ef6-ae95-39b85d6189d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34e3e976-3be8-46f2-ba91-191b4ea1c302"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "622cd873-75b4-400b-9abd-2ef7ecc4dbc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5db847b-25f6-48c8-b415-8ad3ed48c5b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b99773a9-1efd-46b1-a1f0-83f2a44995f2",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9d83479-9ddb-4c46-bdd2-023ae8f17799",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67ba3d4f-ca05-4cb4-94e5-ec8dbf3ea2ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff98311a-d9cd-46a5-a02d-55346e2e6c5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe5dfb10-0f6c-4266-86e5-34d4277db05f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0284883b-02c4-4116-b794-47ef021729c7",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51e71801-4558-4df8-9111-fedb6aabf9f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60e922ba-175d-42be-814b-a63ccb8c9e7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c8ff138-1f1d-4c63-8cc3-4278a6b02295",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a4d3eaa-8526-42ef-9cbf-4b0192c852e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab91a903-697a-4442-909a-57b286495163",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a894e9d-66bc-4da1-9e3c-47168ca12dd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9adb47a-fe36-497c-a646-683a896de5ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d00c8581-1d84-490c-ae84-b5cd538a6356",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d316e542-b0c1-4341-bb98-6d173e612d6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "831ffd60-95ce-4276-ad6f-58f68c396382",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aec28340-c6a2-4ec1-ae0d-e782d0a8c340",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95019a8c-da9d-4f36-84f3-cb98705f4fbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9c05ad9-070a-477e-922a-760a503a53e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc51e896-ba6f-4e52-8591-15deafaa1b6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46e7714c-a39a-4ea4-9f62-7764604598a6",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4f4b615-8c59-464f-8e39-634f22b3cbb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdc346ee-90c1-47a5-ab8b-6ff1f2bcc5f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd13ef83-b3fa-4188-9436-537be3b66a45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e49b9e9-1e6b-414b-aedd-baf20c62b90b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c2547e-0cca-4e94-8175-c833f5bfa957",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "470e4a14-596c-431c-829b-3e93ee484be2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19d06820-1bcb-41de-9b81-75aa945efc60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad8bd25-409e-42f6-b6e8-c8f2f5d09dce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37324c80-c471-4b85-8f29-2436c90db716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bd8b26d-6603-4cd5-80ae-29a439d352db",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7480352b-95cc-47cd-9916-1dd74087dc92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f85d9558-b9ce-4b2e-83ad-af470b7e5c1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f71fee9-1595-483a-9d66-ae122589455a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4acd5a1-9f46-4c33-8135-b18bcd7e7827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8630f0ed-677a-4937-9842-505be1863a62",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a44aa16-8311-4d2f-b5b3-9a1a3d37ea61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "113f69f5-fe4c-4aec-8044-8b15af349167"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6314b304-509c-4431-8014-09c246206d50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21ad31ed-f087-419d-8c05-8346c404bccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "727fbae8-18d5-4aa0-8d78-3f4063b24088",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa1999e1-4645-4e50-a463-c00a51899236",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71c4e1b0-1253-417b-8391-4cbcff357792"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bba5343-e397-4fbd-9bfe-2507cc1acbbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aed59b55-46f1-4f81-974f-dbc6ed1a4a21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47c90cf2-6fd8-4641-9b79-544954515c46",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5739112d-fb72-49c4-8a9b-96f1d57c1d3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4f43aeb-4b8b-4e3c-977c-51996e9dc7fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b36b8203-9cda-4bfa-b9f6-8b0f5309eb45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b041dde-9ec7-488f-9436-4e380ec47a8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56586d14-b28c-44fa-875a-79e114992a51",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "279531c7-bdad-4648-877a-893bdc0b0bf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab48d1d4-0e8f-45ba-958a-931c14eaa5eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "723e3c75-52b6-43a0-82e3-acd4040851c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fedb52f9-1a15-4e1b-be76-f770c9db30fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73f0f88a-255f-43d1-b301-381b6263a1d7",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6fe0303-bc19-4095-b6d5-257489e916e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e0d50c2-3312-44ac-85ea-8a31bf6e2a3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6635088f-3a39-4a8f-bc63-1ff26a9d610a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ae6d820-203d-49a3-8dd9-2b4bafdefcc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf933f3c-4a9a-4e9d-b426-cea0eb194625",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "560153c1-2200-44bd-bc4f-f16a671d4753",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a85ab14-e1fd-4112-ac07-14f8558eda36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c88fb6be-a6be-41ae-a111-f13c50c0b802",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "563f43b2-5fae-49d8-a1b4-a944382b9fc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ced2b02-d65e-48b1-a881-8feef954e578",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56cd2838-1e58-4744-9ba2-1a889c5db45d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56ba60fd-43e9-429c-9e0b-70e50113f86c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f2f30e2-486c-4576-ab22-7c1127d8e04c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab798dc1-cdb6-420e-91a4-dc4dcd004d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9622f87c-3c78-4565-8386-39ed203c788d",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0db4973-f7c3-4b86-b7ed-917a5307ed8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24f41ae8-99cf-4d1e-a9a2-d50a2ea8a748"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79937860-0ad8-4256-a3ca-805b996c55ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99634cae-ead6-443f-bc8f-316e71a94c79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b79e532-de05-4878-ba25-0d57c392beaf",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b52a81f7-b050-4b33-94d6-fa9783fee129",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "824db18a-54a5-4ea1-9dd7-a7b6753feedc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b3ba01-2b53-4efb-8076-82556a3ee284",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d5b334f-da07-43da-b616-dc3ab03bed40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fea7b17e-5293-42c1-8551-7ff3523b877d",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30173642-3c3a-4723-91d1-3aba52016f62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f11a45a6-2437-452d-a045-0fe4d15aabae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b50fba4-b3be-445a-a87f-8a950b57f833",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "824a8fae-16a6-4a1a-b61b-70c617e66570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f14b1ca2-a985-4d9e-bd0c-1ae2f7f20fa1",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8707b0e-b2ef-4c24-947a-190af2d270b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1075662-bcc7-43a3-933e-3b661bf913c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "635796dd-7a29-44f7-bf5e-1cfccdf891d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd097288-a50b-425a-8f58-5a981d7ce781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcab018d-9b66-4f3e-9c8d-e664700ab0a5",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c0d3460-7e1c-4a46-aaae-7d1e0580e5b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08228451-34a7-4cbb-b56b-7b6587626754"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf7b786f-0506-4f53-b3f4-90d75606e97f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7da3ae0d-6481-4718-aedb-b03dd442af1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9273910-5108-4d7e-bdd4-6d21cd61333d",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81ba43c5-9983-49da-9f80-f6ba7f69ce98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26604ba9-4326-4950-b2f5-85e537609472"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47dc5418-02e8-4a11-bfc1-a898aeae788c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6583ac7b-da7b-49da-bbb9-fde6a786de86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26620346-dabb-492b-bf0b-c11c99b051e0",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c93df0ae-fcfb-43b4-8840-79cc89eee59b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25e20e78-ec65-4012-937b-270a4906f076"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76a4b8ce-64d1-4ac5-b707-c02e99277642",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73b0b833-4cbd-4344-b491-28c0ccf641a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13b79192-7f77-4311-aa2a-3bf63df55e2c",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2ff1b28-b9d9-4dae-9d35-52cb329e3dd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3fab9c2-a700-4410-8243-6be4740b5a96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a0eed4b-801b-406a-ad96-62c288bdb03e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "136d8287-3185-4c03-86f9-9f73b1627d2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2da8f266-7ae2-4a39-839e-b27566d16f09",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b49f3be-0a0a-4e88-a4e9-3221f13d7b22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42d66a7f-762d-49a3-bc77-d91a4adf580e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f71887e-4c97-47a7-8dbf-2d2254d30810",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f11f2204-d9fa-4602-a063-975280999629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4432449b-3274-446d-9029-db9c70f4efb3",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9142f20-f851-4646-83fc-324a31d63887",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6b20e87-6eed-4cb7-b63e-d9bded21d962"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a62082ed-9822-47fd-80af-68bf49dd4581",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05261eeb-0d0f-42af-a47a-fc957fa4b700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "361d8e5b-891b-4417-8652-1ac92f1b64a6",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "431821eb-4687-47b8-a9bd-9b647e674d4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "088d09a7-8552-4a23-9024-1a5cb737f052"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f337039-c5a4-45ca-a156-e8da48010eb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4690ed0-979d-4380-9614-f33e21c99c4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14af8db5-1468-4635-a9df-a2d13afdb594",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96e4d59b-b4ac-4c50-ab07-d8a4f21414aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85997826-221a-4364-a33d-d4bd18160424"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "570ed6bd-8bf0-4186-a2d1-a846b809cecf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef9f189e-d63a-4a4f-9634-ae2f91dfc20a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2c865db-6a5d-4d5e-9795-ab3046e2285c",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2841a3ec-7e41-4ae6-89d3-eeefb5dc430e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21f2f8c4-f972-4015-9ff8-28cd4453b40a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ef16309-89d0-4c80-b48e-9e56421c2a49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "393fbc30-64ea-46ec-9cb0-ee2f1f4fab3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22437686-a717-46c5-bf80-594d0f9b68f1",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f68280f6-460a-4966-a864-6e9305130034",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "305ca42d-351d-415e-8559-9a86324fa8bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4ba25c1-15e3-4307-aafd-139b6b044323",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f1c342a-8b58-4f81-a9bb-fc4e3161479e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6e2779e-fb3b-450f-9e1c-4a0442a5cf44",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7874fcca-f12b-46c4-81e2-8118a673520d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbd8fc63-41f6-489d-85d2-db451b248e8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfc0f0b5-8158-4138-9715-8a95629f05e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "954cde38-9898-4918-ab8b-faf48b2430d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e6c543b-6cba-42aa-8328-671a12a55175",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6929894b-8277-448a-b7b7-6544298de5d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98a2f707-bb6f-48b4-8c3c-2b78efedc819"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48fa7a60-44b4-4346-9045-e152672b30b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3706ce21-2d1f-4442-a647-fcc68ac290a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9e4f412-a655-4f8b-8774-15449b026865",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4230a2c8-f15a-4a64-9ef6-79b8050027dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1df95bc3-a2f8-424b-9d44-05ddc4f524a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08217607-d17d-4ff8-bde2-41b8fc8b5173",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccd2c168-0977-41f4-9955-faa637969b46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f3fa2d6-7e00-4bc1-96aa-7bd5c9176d0c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd9a04ee-4511-4c46-87e1-d9f89ec9d55b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7802522c-84bf-451e-a4be-68e144d0bfb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4737c8e1-6bfe-40cd-96af-b8c917fc1d6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e8045ca-4711-4854-a110-b9bbf3cb6747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6947e77-05f5-4834-86ca-f4ed1312610c",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6304d40f-0b43-446c-a5f9-0791592623e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed40a4ba-192c-493d-9624-6d2fa09044b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d891def-7d11-4ff0-8eb3-3eb86032545d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f6ed4be-6389-4854-b726-b7de95c61158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f4f1693-edc8-4e24-b34a-e99b9ba3e767",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "798b2f3a-b985-4bb5-bebb-064ed4ca8594",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f93a801b-9bcc-42aa-ba04-79997ca43cc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de155505-86b7-4fda-8819-85412f98018c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09200371-f2dd-45e1-a801-009908eedca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "772fc80e-64b3-49f8-8f09-66b16c8ba5ac",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e63273-8e23-49d4-83b1-ab2fbeb99385",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8045192d-b522-49dd-89e4-09873eef3155"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd092067-2987-463d-9d34-2ed5ce6f90f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc2133a4-8a2b-4236-8ccc-6a3eba087a64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "995ad350-2829-4485-a877-b4d91fcf5054",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d725c0bc-eee7-4b01-832a-612146e3bf5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfb7be8c-f7bd-49a2-b9ea-79f397481638"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "693ee56a-3dca-4505-9ebc-7a6ae5566cd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bc75cf9-f1c1-48c5-819a-27b08601be76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c85dbed0-d34c-414b-a9dd-4d5a8e4001ad",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f33a97b-6d27-4d6c-ae89-4b59d80a0f6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0419113-fb82-411c-ac56-4a839cfcea6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "554b1e09-84b3-44f6-8bef-a03428b75e8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6e1968e-8c95-4b45-b343-44a531902c3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fadb98e-83ac-44c3-8161-3a355f8ba62c",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11095510-6d9d-4ac4-ada2-b0fdef8c5f73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04169fbd-e591-442a-893b-fb3d1ecdbaef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1ad96a7-08fe-4918-ab8c-1cb35c898ff5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d7113b7-1d9f-415f-ac78-cf7f74802291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e8c7c5b-669c-4048-b8a9-1410e867f26e",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74a31b57-d6ba-4c14-beb5-95aa0e2ec1dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06d17d09-3db1-4884-b7e1-88524586a32b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb9a7ef8-6d17-4621-9215-5d7b589de4e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01231ebe-366f-42fa-b60b-ec35d6bc9ec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a7cb8a6-db60-4e7a-ae84-07f7da7c0902",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4464794-c31d-4590-bb7d-275b6ba071e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fe7be06-0d06-4c29-8c5c-bd6337c0a97c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c6e595f-9dbc-4a74-8c03-b2846240e6ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca43d992-415f-406f-94d3-80663997fc11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24141f66-e453-44fc-8ab7-de4fec5e4671",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46d914d9-758b-43be-9f5a-f7468cebda54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5c5e48f-e255-4a0b-9a71-6163a584dbdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c7ad812-977c-4afd-ab3c-c5017b619b42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fefdb0bf-2f9b-4583-a016-cb87e4dc08f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54e51bb5-d9e1-424e-bbb3-3ee93e790d40",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47a3ad8d-5828-4819-ba71-cb9b9a149edf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6c7ebb3-0112-4013-8bff-ffb35b743913"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f27f7c23-64cd-4d0f-a8ed-f3ac97f3a9bb",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dace75b0-b4db-4fba-9ff1-76e1dcb6bbdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc9ea6de-3f3b-4f0b-8a09-2b2e66b40c8b",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e65e2b44-f8b5-4721-94fa-6159aa2dd372",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc68ab3b-1907-47b7-a5a8-81a0a711b0fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d32d61f1-e3b9-42cd-9906-fd804e006be1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "036809fe-6015-4736-81c0-899dd20a8f70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b710c836-0786-4084-9bcf-69913fff784f",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f9c7923-3fb1-4827-9072-e824fbb3c97d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0dcfb04f-7e34-48a7-983e-2b0615308f48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "101d2b8a-a4a6-43be-979e-f0bbf80226cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48357bda-08e7-4bdd-b4f4-8313655a7d8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58d9cba4-85ea-428d-90fd-76d1bd7a1ce0",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d6cf491-bcfd-4821-849a-d61d80101cb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c1a805f-0930-4ec0-846d-620a145a5d78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6993d07-ff35-4f40-af82-9aece9e98b0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "152c66e1-3887-40e3-b7ce-7959aa759b7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aafd4823-5f5e-4088-93ae-5c383f2edd1d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8423fd5-755d-446c-81ba-5dc228bf8746",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3bc283f8-3108-4d78-b30c-9c3eaea0ac56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e50ffa3-c2b9-475d-a42a-837650b69133",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c46cec7-5eba-4397-9448-f032477f2342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d12dc47d-a47e-41aa-81e4-7788fe8dc2f3",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b28a571-8c31-4d6d-ba4e-99b932704429",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c56ce8f7-2ae0-4b17-af9b-470a2e3540ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb86c18c-457f-4053-aca9-d9686192586b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f16d36a-1fb9-4277-a430-4664ea209370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc9583d5-d89d-4225-91ca-43ae043869d6",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0817485-6753-4016-8a39-6d7860cd80a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2247ac73-960b-4459-966d-fcbe16c6578a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92ad3504-cb6e-4eea-ac0d-a53596ecd08a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fb939d5-14e5-41d4-aee0-b96f1a8d181d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7bf5f64-e7e8-465f-ac09-1e45805b0f49",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5d3c13e-c761-459e-99dc-d62e6ed48e4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8501ba13-5c94-41ae-8284-e231948eb172"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c366a0-ca24-4362-9918-b07cc95a2b9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29ea0295-faaa-47d5-85cd-928ea91ba0ed"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8051538f-b28c-4843-9493-aef7556588bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0cf6f576-5907-405e-b1fe-f19e177bb5d9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a942cf2-a4e2-4079-9104-e69ae74e0a23",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c3fac969-7b11-4688-ac6d-3dce2e32ca89"
                    }
                  }
                ]
              },
              {
                "id": "0a8ed810-63ad-4055-822b-a70404aec2a1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "353b70e9-38fc-4283-af9c-f7dedea2fef3",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf142498-53ca-4476-88da-2922d96f8c1d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "2a8a693d-1bc1-4f7b-b808-e7851e7d4cde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d650192c-8086-4ebf-aa0a-68152d1aa079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "72ce9c00-c5b8-4e46-941f-ef9e99487093"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "45488660-da59-4deb-b7c4-c2702cfbf2f2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "80b00cfb-980e-4046-9e59-b65eeafecae1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "572dfaea-e81f-4817-8f35-6c7720e5eb52",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0e2a779e-e558-4bac-93d0-9afc4de0bd06"
                    }
                  }
                ]
              },
              {
                "id": "d91c90e0-82fe-4c44-bd13-a20f99aaa5a6",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "40877bb8-6e71-4f5b-9fac-b46a33b548eb",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8179f83c-9128-4848-8795-5320db6f481a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "1583ef3a-b1cf-4da5-b7d5-51dbc54a532a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a196fea-cc31-42ed-9188-be15e0cd788f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e01cc70-3547-4116-982b-ce3f499b60e9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "005b1ebd-925d-43fc-a565-139bafd3afae",
            "name": "Positive Testing",
            "item": [
              {
                "id": "91a9a1b7-66c3-477e-8472-8880207c2680",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "785a587f-db49-497b-b49f-708c16c027fe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b44223c0-3988-4e0f-8cbd-611e34e2f128"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3b3408f3-000f-4afd-9dbb-d6ad70958ddf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "00b57524-beba-4c8d-b5e1-4edef5cd6a83"
                    }
                  }
                ]
              },
              {
                "id": "656cee8a-dea1-4f59-a18b-1ce78975d42c",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "31af1dd7-8e9f-403c-b3fe-fc551e6891ff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f0a39be2-7d4b-4074-9858-1790fbea6a56"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "873b7549-7553-42af-af4e-c718a36da4ce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1c6477bd-0439-4daf-b663-80739ace30cb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "99ffbe81-4e59-4b23-952a-a9a29d75894a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "24b0611d-7583-40a5-a7d0-e6938fb54859"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b697de61-5db9-4716-a02a-b4929745041e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "381accf7-c5d8-445f-aced-72adf6afc403"
            }
          }
        ]
      },
      {
        "id": "822ce521-64c1-4cd1-978e-338f1293c569",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "c0c3d6e4-106b-47af-8737-32babc2dc6f4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "144a0b20-afe1-48e4-a44d-b263b39de2b1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ddc7d9f1-d6f0-48b8-a7c7-e0b795b2e738",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5a2d67e-1f60-4814-a327-aff8894d5ed5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1d724912-d22d-4ef3-800e-87b795f824f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2810698e-1174-47d7-bc6a-49a4b0c88eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "967b21fa-ae26-432d-961d-7d89d639b3ea"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "47dc44fc-1e1b-48ef-81e2-c1101369be9f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0b051482-c8ce-4daa-882d-4eb3c7ca4e0e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "94bb66b3-b02d-4b88-a7e4-a2e0a4874dab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ea75fa36-c682-48ae-ba24-3c099c1abd5b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f54fd3fe-ebca-4cb8-9cc4-3ea2276873c6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "43e81fc0-778c-4b54-8567-2b9d4965e5f4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d752d6f6-636a-4113-9452-7a730a1179a3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "05567c3a-e941-4fc1-8c24-19cf52670a32"
            }
          }
        ]
      },
      {
        "id": "a24d3a49-c0f5-476e-a318-0025b151eaea",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "c766c695-ea3d-4578-938e-6fad27dd1055",
            "name": "Negative Testing",
            "item": [
              {
                "id": "367aa899-fcaf-4ae0-a738-0fbc31d82e9b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "27556c73-3e94-47d5-876b-6b0f6c173f2e",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bec7895-cc9d-4827-846e-3878c87979d8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f5c1690-ce23-460d-9e6e-96f5027484b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed02c843-3d69-4be3-830b-62f4ba0ac4e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b2db7a14-c3a2-4810-9d50-d64c09fbaba9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1d65ce6c-807c-40a0-bccc-8aaa17513fee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "891ba43b-27a2-4621-8601-53293effe953"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0d283145-751f-4da4-9ffd-bad41d8f4a02",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2aee7137-6a9c-4913-bc40-a2ce85546316"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ceed48ce-c733-40c5-9706-9849e882271c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a1bfb5db-24f4-489e-936d-ce6901f11735"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6038a3ba-90e8-4317-8c1f-af81b3a63a58",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f9a8e544-0d46-41a8-aa95-dafdf66362e7"
            }
          }
        ]
      },
      {
        "id": "0fe12a37-a0f6-417f-becf-8861ece7a7a3",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c82751e8-ddca-4b0d-bfe7-d1b4b92223ef",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0c104579-eb3f-46e9-874c-619ebffb7751",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "19e72df8-80a6-47ae-aab3-2b93952ee9d6",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfd4c3be-4197-4764-b1d4-8dae06b69f76",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b98979a-cdda-4e8a-a083-410e8a1d3bbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bb23ca6-019a-4bf8-9fe2-3771f0cd9567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1fc39a22-7d45-4bcc-8c43-38879e11eeb7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a152c365-4f49-458d-ad1a-631b8e58e4ea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "878debf8-c201-4262-88e5-d680aadb152d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0950aed5-28f8-4d3e-b8de-7c0e0de07e77",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ff69003a-bb23-453f-8495-d5383f7e71a4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "be66ca76-b5a0-4567-b1d5-4744485137e7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e3b0c723-ce9c-435a-8b37-1c2f9ddacf9e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "96e76fe0-aa80-412a-9d9e-1ccd67304f00",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5ced0f0e-c989-43d3-92ed-6392179ad988"
            }
          }
        ]
      },
      {
        "id": "c568806d-6426-4a7c-b807-308d9221ca79",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "00ee92d4-0b0a-487c-8ba4-9fca20679ad3",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "55e1c99a-32d3-42e6-b5cc-4387d7d85097",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "23553f94-2fc0-4b41-b0f4-0208598e08fa",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "52fcebad-a1e4-4850-ba30-1339c5dc1e9b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d0984e30-5d62-4050-a062-2f0cd57a91b0",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 9.144366197183098,
      "responseMin": 3,
      "responseMax": 310,
      "responseSd": 23.438342922751406,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1695169993706,
      "completed": 1695170008164
    },
    "executions": [
      {
        "id": "16e0879b-f0b7-4775-a18f-342bea6acb2a",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a556d172-8128-4730-aab9-0e97ca2e40f4",
          "httpRequestId": "48b45131-35b2-4b3c-bc7a-e399896cdd56"
        },
        "item": {
          "id": "16e0879b-f0b7-4775-a18f-342bea6acb2a",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "bafc1e70-20ab-4bd3-9ee5-6d2777d1bb24",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 0
        }
      },
      {
        "id": "afb8065b-a5d1-4865-9795-fcee543535c9",
        "cursor": {
          "ref": "86ede93a-9c7b-4500-b0a6-31ce49fb8838",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3e9458e5-fd16-4d58-91c8-df9b0ca3a665"
        },
        "item": {
          "id": "afb8065b-a5d1-4865-9795-fcee543535c9",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "8cedd3b0-cb52-4586-92c3-416a1a5b0f26",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "75148e48-0156-436f-ae2b-6f2962d96579",
        "cursor": {
          "ref": "4373232a-7b9b-45b8-b316-fac130f75845",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "5cbb62a4-64b0-425d-ae2d-513e9d613e5e"
        },
        "item": {
          "id": "75148e48-0156-436f-ae2b-6f2962d96579",
          "name": "did_json"
        },
        "response": {
          "id": "b96a7b0b-2185-4e7f-a648-93af1248e54e",
          "status": "OK",
          "code": 200,
          "responseTime": 190,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cf065fc-64f6-43f2-90a6-57f3db96cacd",
        "cursor": {
          "ref": "b9b3237b-bf49-4a5b-ab50-a4aa22c5d638",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c543062e-d296-47d5-bc08-b3b9e9d55f21"
        },
        "item": {
          "id": "0cf065fc-64f6-43f2-90a6-57f3db96cacd",
          "name": "did:invalid"
        },
        "response": {
          "id": "04029200-3177-41a7-b5c8-7a6493e75db1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cf065fc-64f6-43f2-90a6-57f3db96cacd",
        "cursor": {
          "ref": "b9b3237b-bf49-4a5b-ab50-a4aa22c5d638",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c543062e-d296-47d5-bc08-b3b9e9d55f21"
        },
        "item": {
          "id": "0cf065fc-64f6-43f2-90a6-57f3db96cacd",
          "name": "did:invalid"
        },
        "response": {
          "id": "04029200-3177-41a7-b5c8-7a6493e75db1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "885fa139-1392-458a-ab51-e3459a811db2",
        "cursor": {
          "ref": "33d698c2-3d60-4ed9-b743-cab11356241c",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "4d01f17a-8c6f-4bf5-88e4-b2ea4775a1fb"
        },
        "item": {
          "id": "885fa139-1392-458a-ab51-e3459a811db2",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "a40a51a4-39c3-4e1e-b2ea-fe8d7e5fde28",
          "status": "Not Found",
          "code": 404,
          "responseTime": 109,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c3a11b0-29d6-4153-b619-3536c8b04884",
        "cursor": {
          "ref": "b08b8320-b789-4acd-b901-4c211b56e378",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "2fce4e2b-9844-48de-946a-8af280f10c75"
        },
        "item": {
          "id": "7c3a11b0-29d6-4153-b619-3536c8b04884",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "706ac674-e12f-41b1-b6c5-816ab3947874",
          "status": "Not Found",
          "code": 404,
          "responseTime": 5,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40787bd8-3de2-48e0-a422-82182f9fe4ed",
        "cursor": {
          "ref": "7319998d-0751-4021-9f89-726f4133486f",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "1ae608e5-1ead-4106-afa0-72609ff14681"
        },
        "item": {
          "id": "40787bd8-3de2-48e0-a422-82182f9fe4ed",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "a61cfaa1-39ff-41c0-838b-43e1e7005ca2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2accf596-1be0-48fb-a189-eaeac4ad6d54",
        "cursor": {
          "ref": "4d1ee645-9519-46af-ac47-9740450a9bf6",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "35d6b0e3-e5d1-4f3c-bca9-87f8249f7961"
        },
        "item": {
          "id": "2accf596-1be0-48fb-a189-eaeac4ad6d54",
          "name": "identifiers"
        },
        "response": {
          "id": "b9ee8c41-3f93-45a7-9e31-a11df701211c",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "946924af-c7e9-4bcf-8ebd-e538dcd4e312",
        "cursor": {
          "ref": "078083a7-3aa9-4b5b-a96e-3981d46f13c2",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "c31de2d6-0ad4-4499-98be-13cf8b5bda8d"
        },
        "item": {
          "id": "946924af-c7e9-4bcf-8ebd-e538dcd4e312",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b3338c1c-8ed5-4464-8cd1-e44b956d64e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37b85175-b8a0-4bfe-81fc-210669397f5a",
        "cursor": {
          "ref": "d3f4ff30-2bdf-4dfa-8dfe-b0b6542f608e",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "6a0a6c9e-9227-42e4-a9c8-324a4aa9cb88"
        },
        "item": {
          "id": "37b85175-b8a0-4bfe-81fc-210669397f5a",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "e4037dc3-b459-4c46-bf14-da2d69018f4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bfafd0c-88d6-4377-b2e5-3da113e497bd",
        "cursor": {
          "ref": "0d700406-9baf-4df1-8700-fddd014a0ecb",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "58afec73-0e26-4c7a-9cd6-5b2091a1b5a8"
        },
        "item": {
          "id": "4bfafd0c-88d6-4377-b2e5-3da113e497bd",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "abe5fc06-ae5c-4b45-9219-d25c28282a7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "767941c4-ebdc-434a-9007-921b6e043926",
        "cursor": {
          "ref": "9506b23f-1094-4c8a-9ca0-e96fbd297879",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "708a3b89-9bbb-4913-ba93-da2c255d8cef"
        },
        "item": {
          "id": "767941c4-ebdc-434a-9007-921b6e043926",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "ca9fd125-f743-4ed1-af69-c29323d65a14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bc35ae1-0a2f-4a4b-9a3d-d8d0b8b16656",
        "cursor": {
          "ref": "f4d6ac91-b9d3-4804-b513-2e36c7439cf2",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "befe2e7a-ae0a-4045-bac5-af78355acc10"
        },
        "item": {
          "id": "8bc35ae1-0a2f-4a4b-9a3d-d8d0b8b16656",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "3480acf2-e74e-4a83-a52f-cd4ae221ed18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a0c6197-844e-4023-a1cc-52ccea69ce63",
        "cursor": {
          "ref": "11cf1d58-56c6-4437-a8b1-6e577e8576e1",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "68e70735-0705-4137-b362-d79f155141b5"
        },
        "item": {
          "id": "0a0c6197-844e-4023-a1cc-52ccea69ce63",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "c0731048-2f3b-4667-be6c-b8029b39d9bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "373a3118-6ba6-47dd-beea-46bbedd5ae7c",
        "cursor": {
          "ref": "385808d5-7022-44a2-abc2-9f52a47e1ce5",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "ff987fd2-ee6b-45ed-8790-33fcbd7629ff"
        },
        "item": {
          "id": "373a3118-6ba6-47dd-beea-46bbedd5ae7c",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "c05971f5-a935-40b5-a3a7-715ae9ee6831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f309b83-3ef1-4caf-a2c9-c0833f014b03",
        "cursor": {
          "ref": "256f9d52-92c6-4719-a288-2185586858af",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "ee07473c-5a7f-4b2b-aead-6f9bde5ac71a"
        },
        "item": {
          "id": "8f309b83-3ef1-4caf-a2c9-c0833f014b03",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "ca77e503-e567-49bc-ae99-82cd078cd145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b96fb6b0-67c5-49c7-861d-19beca70ef1a",
        "cursor": {
          "ref": "ecc906cc-5809-4c55-b081-6c87d4f517da",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "d2d5e18e-36f8-48c7-8152-0649f2d30b71"
        },
        "item": {
          "id": "b96fb6b0-67c5-49c7-861d-19beca70ef1a",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "dc98c1b2-ddf4-4801-a0d4-cfabe1b35db7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "782b4483-9550-416f-bc9e-b61827bb8d70",
        "cursor": {
          "ref": "f9f32c5b-7213-404a-b621-10dac7c39a44",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "e3762b46-6f78-401c-bb0a-881c74d9afa8"
        },
        "item": {
          "id": "782b4483-9550-416f-bc9e-b61827bb8d70",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "dec59730-0ce9-477f-a7d5-278d43a28950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d91688-0a6c-49fa-9206-b7a8abedb2f1",
        "cursor": {
          "ref": "d03acd87-3644-4c8d-88eb-70b3c12b1698",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "0e445383-e75d-47f0-abec-50f464ce1a54"
        },
        "item": {
          "id": "47d91688-0a6c-49fa-9206-b7a8abedb2f1",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "4aa6d6fe-9895-45ee-9fbd-3905546aaad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9ee61ea-146e-4433-bf7d-19290beb1aa1",
        "cursor": {
          "ref": "a7b63dc0-cdcc-4159-be43-3ffce995aaed",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "521f6baa-20d9-476f-8ea4-4d0023c813d7"
        },
        "item": {
          "id": "e9ee61ea-146e-4433-bf7d-19290beb1aa1",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "3629379a-654e-408a-b513-536bb1e7f9af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a511564b-427d-4498-b375-4631061caae8",
        "cursor": {
          "ref": "332c2cee-815a-4b13-a5ec-32382f647757",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "25af6f49-af85-4c4b-a216-f56636b6cc40"
        },
        "item": {
          "id": "a511564b-427d-4498-b375-4631061caae8",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "9704ad95-f37b-4560-99b0-868716e8777e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4519eb15-9092-4b52-98b8-cc68e844ef10",
        "cursor": {
          "ref": "0b661c0e-3446-4577-96ea-8aea2eb6bac6",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ae16749a-7e9d-468a-8d9a-aaa4feb95f9a"
        },
        "item": {
          "id": "4519eb15-9092-4b52-98b8-cc68e844ef10",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "f05b44c3-ccc1-478d-96b4-a4770932bda7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08421902-18c9-49b6-9575-1ced0d3c8245",
        "cursor": {
          "ref": "dac53378-7a41-489e-a3f9-ae7b13267b1e",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "70774fb1-5974-4cd2-ac1d-2a06e2c0b218"
        },
        "item": {
          "id": "08421902-18c9-49b6-9575-1ced0d3c8245",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "78665f61-0d70-499e-bbc4-f426ec524cb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b53c92c1-2947-4a62-b9f0-305a058ab770",
        "cursor": {
          "ref": "da4417c4-0e32-4403-bbf8-d279e09c431a",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "77d0f169-61f1-41fd-a1a9-a5ba9fcb671b"
        },
        "item": {
          "id": "b53c92c1-2947-4a62-b9f0-305a058ab770",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "4c3ecf45-cdf8-4f74-9a32-18aa42f42631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "046bf1eb-c194-4721-aa55-88eb798c942c",
        "cursor": {
          "ref": "ca370120-8855-471c-9281-0cb4b93856a8",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e51187f5-37e6-4207-baa7-4c6bed608fe9"
        },
        "item": {
          "id": "046bf1eb-c194-4721-aa55-88eb798c942c",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "6319434b-c828-43e4-9013-a65530cbd97a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8642e54c-dbb2-4d76-8a6a-1459a513bc82",
        "cursor": {
          "ref": "004f0c74-420a-4977-aabd-c4e4b11fbd02",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "85226b29-1f11-4d41-b80f-ddfc1bf71fc2"
        },
        "item": {
          "id": "8642e54c-dbb2-4d76-8a6a-1459a513bc82",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "4908656e-1245-454d-9c33-96b69f29c08b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cc09662-149b-44f2-ab35-155c789642d7",
        "cursor": {
          "ref": "207c32c6-4da9-4b13-9697-ea6c3dc58d6b",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "07777382-5f41-4d2e-9416-168cee8cef89"
        },
        "item": {
          "id": "6cc09662-149b-44f2-ab35-155c789642d7",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "2ed00a00-92cf-403d-a834-021624db7ef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e2eb5e6-e384-46c9-aaec-b4ccac958963",
        "cursor": {
          "ref": "5f3acc77-5ce5-49ab-ac48-0fecdc6ab87f",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "7456137b-683d-4adf-9b11-42ef1721941e"
        },
        "item": {
          "id": "6e2eb5e6-e384-46c9-aaec-b4ccac958963",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "80804a99-5ea3-43ae-89f1-fa7f618d83dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a18c705b-45c0-4e28-ae63-ceabf0012d5f",
        "cursor": {
          "ref": "fc8e5b06-4026-47e1-9f67-02fdf8c87c95",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "591987b1-324a-45cc-bae7-819413caf119"
        },
        "item": {
          "id": "a18c705b-45c0-4e28-ae63-ceabf0012d5f",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "0648c95f-4fe7-481f-ab62-8667adb51c13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "453f6f22-c9af-467e-b838-ccdf2686fc15",
        "cursor": {
          "ref": "6afac254-5de6-427b-8260-1b9f521d4c61",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "e7f0630c-c809-493d-90bd-fffad0111fd1"
        },
        "item": {
          "id": "453f6f22-c9af-467e-b838-ccdf2686fc15",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "801977ca-c2af-44b4-8804-e00ad216dd80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a77ee687-bef5-41b1-b454-9fa036431174",
        "cursor": {
          "ref": "8c594ada-bae9-40b6-9d83-3c85e8ed3cd4",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "014d3004-8b83-43da-bb1f-292e4758b5a7"
        },
        "item": {
          "id": "a77ee687-bef5-41b1-b454-9fa036431174",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "7042d51d-79eb-4fc9-a2f2-2e98fb4fc0f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9126922-1f08-4d71-b7e2-89f32f75bf6c",
        "cursor": {
          "ref": "c08acdfc-907d-42dc-97af-269a20dbfd93",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "507dbd5a-b237-4f30-8f5e-3cb649c21390"
        },
        "item": {
          "id": "a9126922-1f08-4d71-b7e2-89f32f75bf6c",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "6eb73aa5-f6e4-45dc-8f22-aaecd56dfc03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bad3b1a4-8cc6-4210-88fe-ecb6a60b44bd",
        "cursor": {
          "ref": "2ee5fa85-ce26-4654-92eb-b66b3fbad0a5",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "3b7a17a8-7d8a-4382-bc98-30739bff3e37"
        },
        "item": {
          "id": "bad3b1a4-8cc6-4210-88fe-ecb6a60b44bd",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "29eaeeeb-d9fa-4272-a495-859a5f0b61e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e525e27-f7a7-40fa-b1ac-38d3e052f322",
        "cursor": {
          "ref": "8b2724f8-345a-43ef-8d64-56ea59538666",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "b69e8310-9830-4cd3-99f6-030f8a890ab2"
        },
        "item": {
          "id": "7e525e27-f7a7-40fa-b1ac-38d3e052f322",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "381a1ec9-ddae-422f-a47e-9f8bb4f0e2f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f4ba68e-75e2-443e-98f8-6a036915f9bf",
        "cursor": {
          "ref": "9cf6ec47-919a-4f30-b1bf-06171f295150",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f580830e-1b1a-4270-ad52-d00f9fb0ec72"
        },
        "item": {
          "id": "2f4ba68e-75e2-443e-98f8-6a036915f9bf",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "84cad729-4d05-4e01-8e23-7a07399149bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a59200fe-2b7a-450d-8af1-c5e1049ef36a",
        "cursor": {
          "ref": "e374321b-8be4-4abc-9454-f363bff1fd77",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "fa0c8e2b-0a37-4dda-961a-59025fadb7c0"
        },
        "item": {
          "id": "a59200fe-2b7a-450d-8af1-c5e1049ef36a",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "1696d8f2-6579-4e2d-8a5f-449cb79593b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "113b0fcc-c686-4aa9-b51d-9a7a2759ff78",
        "cursor": {
          "ref": "b8f840f4-2bbc-4afa-9be4-b38194acd1db",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "5c4538f0-43e4-4fc9-a2fa-aaf92a3564bf"
        },
        "item": {
          "id": "113b0fcc-c686-4aa9-b51d-9a7a2759ff78",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "c53e730e-da68-42f1-bf6d-f0e5b6638932",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0250135c-061c-4487-9468-9e7c7b3e2a5d",
        "cursor": {
          "ref": "5afb091a-b32f-4853-b6d6-26091c2bcd0d",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "9e3a995f-6eff-48bf-bbac-f96026e3cbf1"
        },
        "item": {
          "id": "0250135c-061c-4487-9468-9e7c7b3e2a5d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f955bdd8-d2e1-4dee-9ca4-a9237ef27764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3609f819-badf-45f6-9485-7214e7372666",
        "cursor": {
          "ref": "ac67dc1b-d288-4f82-a495-22dd98b50afb",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "0ee4e886-b7dc-4c04-82cf-22b7b0a30cf2"
        },
        "item": {
          "id": "3609f819-badf-45f6-9485-7214e7372666",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "3105b2f7-2bf5-4248-a49a-988672d1cf05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71455544-1740-429b-b84b-4b041c801fa2",
        "cursor": {
          "ref": "086f4d6a-c32f-467c-bd56-e536fab5d4ca",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "ab25115a-1b8d-4eeb-bd24-bd97fa124c6a"
        },
        "item": {
          "id": "71455544-1740-429b-b84b-4b041c801fa2",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "d85a66be-55f6-495d-b10e-66a54996b62a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97edfe79-2a44-4638-b8c4-2a2a98a8314c",
        "cursor": {
          "ref": "b034069c-1c47-496c-812f-e1cf5ae4746b",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "5d020c8a-71b9-44e6-bee3-05999c5daff4"
        },
        "item": {
          "id": "97edfe79-2a44-4638-b8c4-2a2a98a8314c",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "f12adbf7-ff43-4c49-b37c-cd042733848d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eeea6c8-73ad-4bcf-bbef-a57d346d27bd",
        "cursor": {
          "ref": "3ce5a6f4-c8a2-49a9-a6d0-9c44e9efd57a",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "04453d3a-05bf-4674-a02a-e70e76c9297d"
        },
        "item": {
          "id": "7eeea6c8-73ad-4bcf-bbef-a57d346d27bd",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "fd0dee78-431d-4dd4-a689-8f01b771e745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb380716-de3e-48d2-853c-096840a90fd6",
        "cursor": {
          "ref": "408c20de-5200-4d0a-ae6b-c82ebd858204",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "fb15a378-4afc-401f-9fea-65cb65f7358a"
        },
        "item": {
          "id": "eb380716-de3e-48d2-853c-096840a90fd6",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "39285489-a990-4fdb-b02c-d35238ca36fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abed1afc-1a6e-4c70-94ee-22a47b097b43",
        "cursor": {
          "ref": "76ba8156-b8df-4a97-babb-ea123f391dbf",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "798935b4-f083-4d03-a4f7-e30e6f143077"
        },
        "item": {
          "id": "abed1afc-1a6e-4c70-94ee-22a47b097b43",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "ee2df175-c843-48f4-926e-c8dc7f71025d",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 35,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "385eda3c-b53a-4f9a-be92-1af74f0c82e0",
        "cursor": {
          "ref": "7b17e76e-a2a1-4cdb-8511-1e8c501b4f94",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "05d488ff-69e2-4e0e-bf10-baecaca0b518"
        },
        "item": {
          "id": "385eda3c-b53a-4f9a-be92-1af74f0c82e0",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "aaeba5a5-7ded-4af9-9630-30484db470a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cf077f6-b0f9-4004-a2af-4d1542e025e6",
        "cursor": {
          "ref": "34df8589-e917-4fbc-a5d7-435ac0a393bd",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "4fec07e2-6b13-44a2-b590-d6a14174043b"
        },
        "item": {
          "id": "4cf077f6-b0f9-4004-a2af-4d1542e025e6",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "13f1d666-5e7c-4959-b440-7ad769f67652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bab649aa-5b5a-4567-a27e-743017e2f0a5",
        "cursor": {
          "ref": "e478d2cd-da90-431d-8822-02a30ece2c29",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "61e71818-0782-40b6-9f5a-3ab8e26b6335"
        },
        "item": {
          "id": "bab649aa-5b5a-4567-a27e-743017e2f0a5",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "a575593c-9ff0-468b-9fda-2a0903315200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86e376ce-7b58-4b52-9261-a926d0d71450",
        "cursor": {
          "ref": "b8602aee-d514-4ef8-a84d-a52b81d591bf",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "62d86857-2aef-4224-820c-9d2994a90ae8"
        },
        "item": {
          "id": "86e376ce-7b58-4b52-9261-a926d0d71450",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "b5aef6d4-c3a4-432f-be3a-7e40c7e00346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ef9cdd-3aac-4502-b136-1c156b8c3801",
        "cursor": {
          "ref": "96e08905-0e6f-4179-ae1c-280bc1fcadc6",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "efc3d34c-4b7b-451b-b42a-cc4c8520f04e"
        },
        "item": {
          "id": "84ef9cdd-3aac-4502-b136-1c156b8c3801",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "1a39d3bf-1661-4893-8a35-1353608c1d79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b8c3098-3cfa-4b8b-a3ea-1cbddf173eaa",
        "cursor": {
          "ref": "fcda5ed9-0daa-4c62-bf92-ca726f78391a",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "70aa55f0-af2f-4546-8e29-b4254dd488b6"
        },
        "item": {
          "id": "3b8c3098-3cfa-4b8b-a3ea-1cbddf173eaa",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "82d34e68-665b-4628-9b62-7a5e4e861001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9f058fe-49e9-46ee-ba6a-e3065438523c",
        "cursor": {
          "ref": "7229b6d6-996b-484d-8ce8-876c17738cc3",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "0d257b01-4399-4193-91ca-71262bf6fa35"
        },
        "item": {
          "id": "c9f058fe-49e9-46ee-ba6a-e3065438523c",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "68b4d6bd-70f3-4b96-80df-367c0852401d",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 25,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73699b83-523a-4efa-803f-0616f6109964",
        "cursor": {
          "ref": "be1927fc-f643-4530-a5b1-0bccd0631f89",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "09952206-00b7-45a4-91df-1c1e2cc57950"
        },
        "item": {
          "id": "73699b83-523a-4efa-803f-0616f6109964",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "56972a4b-1786-42bc-b3d2-aa3e6262eb44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92a6cb96-5c10-4976-b2f1-77c187e87e7d",
        "cursor": {
          "ref": "be9301dc-462b-4e9b-a4ba-0e29d79d1281",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "20cd6849-0417-414b-b2e1-d5ee97815f39"
        },
        "item": {
          "id": "92a6cb96-5c10-4976-b2f1-77c187e87e7d",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d9eef5b1-2e26-4d57-93ce-ed7e9afb01a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d1b0489-8380-41d8-aa9e-d1a1a8973e27",
        "cursor": {
          "ref": "45b25459-f2ca-4dcd-8c7e-9368d786835a",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "86c865f1-3dbc-4fe7-9f36-eed2ba0e73af"
        },
        "item": {
          "id": "9d1b0489-8380-41d8-aa9e-d1a1a8973e27",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e51da97d-a67f-4ef5-9e27-a79815bd2ba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "622fe284-2f53-4ee3-9930-d3b908e59adb",
        "cursor": {
          "ref": "4b2a5ca3-c039-41a4-9c5f-9dc5a658fcbe",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "224327c3-e51c-4890-b3c6-4b094ed95eff"
        },
        "item": {
          "id": "622fe284-2f53-4ee3-9930-d3b908e59adb",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "7ae3d825-b296-41fe-9993-0d753d817c75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "027fdd26-2f8d-433f-8068-d6145b44d01f",
        "cursor": {
          "ref": "2c1fb00c-67d4-401c-b848-efc255083c24",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "6a7bfd75-edde-41f2-b5a0-8e8d05b5500a"
        },
        "item": {
          "id": "027fdd26-2f8d-433f-8068-d6145b44d01f",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "75481e85-5351-44ac-b04f-93a2d7364067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef49eb83-e85b-4ed0-b3df-624a7d9d8230",
        "cursor": {
          "ref": "3b700480-57d7-4558-8a51-ea48f527b5ae",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "af3e9f5a-e54c-48a4-9c2b-221e4eec4288"
        },
        "item": {
          "id": "ef49eb83-e85b-4ed0-b3df-624a7d9d8230",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "daa099e8-0fea-4eee-8aa3-cbae3303b4f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ed1420-1d73-4969-a9ff-0220227108fb",
        "cursor": {
          "ref": "6a69a3c4-3d8c-43cb-8028-212efeeecb47",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "992f3ac1-b1ac-4acd-bd8a-8ac511a6660e"
        },
        "item": {
          "id": "13ed1420-1d73-4969-a9ff-0220227108fb",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "72ee8a22-39d9-4231-bde5-dc7abd094603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36859059-3035-4a06-b329-6025c67bcb0b",
        "cursor": {
          "ref": "a364e8f7-cd33-49ad-ab6b-a02d7484179e",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "4b5b9968-790e-4035-8cfa-7e532f066986"
        },
        "item": {
          "id": "36859059-3035-4a06-b329-6025c67bcb0b",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b8b3e54f-09e0-4d67-b3ed-0f9690769c22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0285ca55-2377-4234-81e3-d5159fc22a38",
        "cursor": {
          "ref": "5196da46-83fa-40dc-863a-7c824749aaa8",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "1b86aa75-78a6-4966-b214-22e4d503b16e"
        },
        "item": {
          "id": "0285ca55-2377-4234-81e3-d5159fc22a38",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "52477d86-8d2f-4e72-a3b9-17fa5150c5a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "709b58f9-691f-4316-9068-b62c1c624c92",
        "cursor": {
          "ref": "ab4af320-4c8c-4ad7-90a6-d9a64254669d",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "db3e28a7-6b68-49ef-a0cf-d4a94e1ae4ed"
        },
        "item": {
          "id": "709b58f9-691f-4316-9068-b62c1c624c92",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "805469ff-9e83-4e5f-835f-a1daf499cbe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cb2562f-581a-4ba7-87e5-901ceb7eb924",
        "cursor": {
          "ref": "1ae7e545-f1ca-4c81-8184-024fab6ee80a",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "018fb6b0-0d72-4485-a344-a67814738dfb"
        },
        "item": {
          "id": "2cb2562f-581a-4ba7-87e5-901ceb7eb924",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "bd29c023-b2cc-4d10-b2ca-932e15cde4c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "358db32e-27d5-4c0a-a1a0-ee6b685169c7",
        "cursor": {
          "ref": "633335e1-0c4a-4daf-8cdd-569a01c35871",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "9c03aedc-f74d-4c60-9e40-ace856ae95cc"
        },
        "item": {
          "id": "358db32e-27d5-4c0a-a1a0-ee6b685169c7",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "29c9ce6e-de28-4209-bfa6-87a1c96678ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71791c0c-2d21-4601-b2c5-56b3aaad0ce7",
        "cursor": {
          "ref": "f5535936-4e8d-41e0-93fa-54779b73e8f4",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "e9b8c056-3007-4024-bab1-384d8a0e4d63"
        },
        "item": {
          "id": "71791c0c-2d21-4601-b2c5-56b3aaad0ce7",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "7c513485-f0ab-4f56-a648-7684748a2fc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "750b0b5c-f702-4c49-9c07-6ad6b0f6fdb5",
        "cursor": {
          "ref": "eda43fad-adc5-4278-be3f-5d5ee787156a",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "d9c0fa40-e904-47d9-b360-3b5ed6c2bb53"
        },
        "item": {
          "id": "750b0b5c-f702-4c49-9c07-6ad6b0f6fdb5",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "6cb78a8a-3056-49e6-a6d8-da523a991095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd662e44-ad95-4237-b8da-ec83132ba851",
        "cursor": {
          "ref": "b80ca4d2-8dd3-4e0f-92fb-38a0c30ab4ed",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "860dd28b-2f36-4dbd-8bd9-af668ade3c05"
        },
        "item": {
          "id": "cd662e44-ad95-4237-b8da-ec83132ba851",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "9e734d90-8b30-4373-9d3c-0e5176b9969d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cb412fd-377e-42f9-aa59-9031732bb1f8",
        "cursor": {
          "ref": "473de497-7a6f-4d99-834c-e2035ce1074c",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "be54bc83-51c0-427c-9a43-f2d36f5c2008"
        },
        "item": {
          "id": "4cb412fd-377e-42f9-aa59-9031732bb1f8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "3d80e72e-30ab-46a1-89a7-88421bef4bde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "144db0c5-5071-4b7d-abcb-fb400250efbf",
        "cursor": {
          "ref": "38c4588c-d03e-49ec-85a8-0b1e064220e0",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "c31f8130-8d65-44bd-8736-91f7669e0162"
        },
        "item": {
          "id": "144db0c5-5071-4b7d-abcb-fb400250efbf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "3b6f07cd-6118-45ae-8538-efff02c91548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e0c1dc2-03c8-4e1f-baff-f29d52f30b8e",
        "cursor": {
          "ref": "92b36379-9a07-4552-9f17-62badf07f69b",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "cc4968d7-387c-43b6-9e14-aaec51f563c2"
        },
        "item": {
          "id": "6e0c1dc2-03c8-4e1f-baff-f29d52f30b8e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "7879778a-13d3-4f7b-ba22-4946d472855c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc9d0c0-5fe0-456b-898e-bc8789dd82ff",
        "cursor": {
          "ref": "589ed563-7efc-4ce1-ad01-b48e0dc184c5",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "c9182751-07fe-4c18-91fe-b4d5aa316d0e"
        },
        "item": {
          "id": "8fc9d0c0-5fe0-456b-898e-bc8789dd82ff",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "7537a166-fac4-42c6-8666-9ea8aef5de68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c73712c-e782-4227-bfae-c5e1eee5f4d0",
        "cursor": {
          "ref": "cb0b53c1-2cc6-466b-aaf9-e34900d95367",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "0bf861dc-1ca1-439a-ad3d-d0d74192e1f4"
        },
        "item": {
          "id": "7c73712c-e782-4227-bfae-c5e1eee5f4d0",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "5b2df4cc-4a6d-441b-a0f5-75c24aac282c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "048e633c-9281-4b30-9dbe-8764aa839f87",
        "cursor": {
          "ref": "3e879d1e-81e1-4af9-93de-5616bcfefdda",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e1f6ba98-f509-409f-876b-c85c075b4b80"
        },
        "item": {
          "id": "048e633c-9281-4b30-9dbe-8764aa839f87",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "16b41db6-6ad4-43b3-8778-d471b989badf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed42a02a-2f93-43d9-b536-b31c8c33313a",
        "cursor": {
          "ref": "6a72188c-e553-4201-b147-50ec3386924e",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "9a40ae9a-c14b-4a9e-8a54-d90a17704762"
        },
        "item": {
          "id": "ed42a02a-2f93-43d9-b536-b31c8c33313a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "30ae156a-a91b-4892-81a9-917c78add18f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f15050bb-a275-41e6-b913-9198bb6dfb23",
        "cursor": {
          "ref": "47e1b0ba-c630-4e83-b58d-24d198d3e3bb",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "4b69001d-2ef7-4df3-b674-ed5438ef164b"
        },
        "item": {
          "id": "f15050bb-a275-41e6-b913-9198bb6dfb23",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "a92bd808-d198-4815-aa2f-9ff34ae20d9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e72ece0d-af1c-4264-b37a-5d326c3ce568",
        "cursor": {
          "ref": "85dfc9ae-525a-4c39-aaa3-0376de5df309",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "7153a8d4-fb50-4650-a5c4-a9392e9f7195"
        },
        "item": {
          "id": "e72ece0d-af1c-4264-b37a-5d326c3ce568",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "57a8a2ff-0dcd-4cf8-9ca8-77be01f76dce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e022750d-6152-49c5-afd9-b0a1b5928a4a",
        "cursor": {
          "ref": "130d7241-a4b8-4be3-866d-6601d30e3b10",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "fb10b64b-b54f-4c17-b92b-e277620fa0ab"
        },
        "item": {
          "id": "e022750d-6152-49c5-afd9-b0a1b5928a4a",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "66cb065f-348d-48b3-a859-3fdbc1b36162",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8552fdd6-0b8d-46f9-82cb-bb511838f555",
        "cursor": {
          "ref": "41fcd41d-d531-4672-a70a-97ed35972d72",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "6a3656e4-f488-404c-a90a-fc26c5aa1a84"
        },
        "item": {
          "id": "8552fdd6-0b8d-46f9-82cb-bb511838f555",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "bd254951-88ad-439a-8b7b-58b9250c77d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ff56b13-4806-4e89-aa49-fd447340a7f8",
        "cursor": {
          "ref": "e318602f-913a-4bbf-b3c3-205a0c2fc0e5",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "7458237c-8325-4221-a55f-0fd1bd6b02d1"
        },
        "item": {
          "id": "4ff56b13-4806-4e89-aa49-fd447340a7f8",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "6be54416-ebe5-4640-b718-2ee12824e18a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2281c772-868c-48ef-9f18-4aca91672424",
        "cursor": {
          "ref": "9d86141b-2542-4f45-8122-627001b9fc48",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "86c900c3-a33f-4493-9ab3-ae50faca30f7"
        },
        "item": {
          "id": "2281c772-868c-48ef-9f18-4aca91672424",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "eecb26dd-9ee2-4030-9d88-5d9dab96907c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6a542ef-9b81-4def-b071-fbc7d246d267",
        "cursor": {
          "ref": "6b13c1f7-adaa-41b2-be1f-10f29e071fbc",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "de57d0a0-3d6f-4bdb-9414-312df82391ef"
        },
        "item": {
          "id": "d6a542ef-9b81-4def-b071-fbc7d246d267",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "6cdd0ca9-543d-41c6-b9e2-b4fd16c3864e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86212cba-e67b-4463-a308-26a74adefd26",
        "cursor": {
          "ref": "4c331db0-bde4-4976-a31a-dc52797574b0",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "a3c29287-694b-4e2a-b00a-988dda751bfd"
        },
        "item": {
          "id": "86212cba-e67b-4463-a308-26a74adefd26",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "75ad8053-d229-469a-9d72-716b082e6061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "734f22dc-d31e-40ca-8488-cd3bf97028c2",
        "cursor": {
          "ref": "f01f561a-5a05-40e7-b0e4-622ffd8c9f60",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "97d60f59-487a-493e-944a-c2d5a601573a"
        },
        "item": {
          "id": "734f22dc-d31e-40ca-8488-cd3bf97028c2",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "0cf4eac1-ee3b-491e-95aa-d623a19f5224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "135f1f68-b902-4d7b-b10d-9fd1f0433842",
        "cursor": {
          "ref": "fe9d2ae1-960b-477e-8ebc-b145dfe222ee",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "b4ec959d-87da-4df1-9f20-9c9fd4ef1f1e"
        },
        "item": {
          "id": "135f1f68-b902-4d7b-b10d-9fd1f0433842",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "054a66c9-1f5e-4ae2-b066-10ef48117059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27fb7502-5f88-4e77-a2cb-af9beaa13f2e",
        "cursor": {
          "ref": "bf11d10b-78d4-4dd2-945d-c40d1f281559",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "94cd828f-86e9-4497-848e-ab8182b1f854"
        },
        "item": {
          "id": "27fb7502-5f88-4e77-a2cb-af9beaa13f2e",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "7ed7c9c4-c434-40d9-9054-9b49b467fed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0835aedc-8600-48f8-8237-239c357be259",
        "cursor": {
          "ref": "bb4301c4-04bf-4f94-9e7e-f0749f23b925",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "0e8b8ca5-05a9-4690-94ba-3677ea9d7f6c"
        },
        "item": {
          "id": "0835aedc-8600-48f8-8237-239c357be259",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "5ae87c1a-c9fb-4f73-bb9b-7f47e22002a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "027fdedd-38d8-4922-b891-73eff552134b",
        "cursor": {
          "ref": "7b923b7f-c6d2-46de-8573-497b5d90391f",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "b19b5950-7ddf-4430-8047-1adeeb24c917"
        },
        "item": {
          "id": "027fdedd-38d8-4922-b891-73eff552134b",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "28902aa2-23bf-4fbe-95b9-8021be994d43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2579e024-e934-4686-b2dc-5a19c5dc9475",
        "cursor": {
          "ref": "3c657df4-59ae-475c-bbc2-a5f955bfca6d",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "3d7f96be-3d98-44db-a696-0af093450a8c"
        },
        "item": {
          "id": "2579e024-e934-4686-b2dc-5a19c5dc9475",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "df7342e2-c626-4851-a54e-3fe6cd60f6e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7842d8f-68c8-46b8-a34d-a31b8a4d74be",
        "cursor": {
          "ref": "78519c0b-89a3-4652-b53d-62492242e2ef",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "c1254c82-393d-4e32-9d8c-f341fd6c830a"
        },
        "item": {
          "id": "e7842d8f-68c8-46b8-a34d-a31b8a4d74be",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "f65b0060-8192-4be7-8972-88efc65296c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51db4c49-4731-40b1-91fd-d2bc0d7ca67d",
        "cursor": {
          "ref": "08e89881-72f0-4502-90fa-ab735233e27b",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "9b1ead61-2749-43c8-8108-3ffcf1b214a3"
        },
        "item": {
          "id": "51db4c49-4731-40b1-91fd-d2bc0d7ca67d",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "e6966677-4dc9-4e84-9669-f935aedd3d3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de760cca-5127-4930-b539-c8c5e297ae63",
        "cursor": {
          "ref": "46ec013e-0324-4eb9-a5e5-7730476e3aee",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "9aa1ba32-a4b0-456e-ac6e-d9164aac8c0c"
        },
        "item": {
          "id": "de760cca-5127-4930-b539-c8c5e297ae63",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "32ad2b97-7c52-4679-86b1-d56b0161ee87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4d30e27-4535-47f8-8b7c-e73a8e3c3bee",
        "cursor": {
          "ref": "a1f01091-be44-4331-82bc-1ae743c8e780",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "5a1674b4-ad80-4a2b-a724-785f23e42a3d"
        },
        "item": {
          "id": "d4d30e27-4535-47f8-8b7c-e73a8e3c3bee",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "470b92c0-a89d-46ff-92a3-5e195c7fe65e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca256e85-f9ab-494a-a431-a4a80aefe162",
        "cursor": {
          "ref": "a74bc141-39a9-4519-aeec-7c078643d171",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "19a96610-06ca-4807-8727-c2ff86c972e2"
        },
        "item": {
          "id": "ca256e85-f9ab-494a-a431-a4a80aefe162",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "19eb9eba-4901-4728-9ffe-384d36d08b32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70ff067b-a73d-4ec2-a55c-a48b39fda013",
        "cursor": {
          "ref": "fd44eead-96e5-4e09-94ff-2fcc7a5e5357",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b6dc9cff-9a14-46e9-a819-61813492b3eb"
        },
        "item": {
          "id": "70ff067b-a73d-4ec2-a55c-a48b39fda013",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "26f90fc4-076b-4dfe-ac94-2d99ad1cd188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e787a7-62e8-43bf-a512-a3190cb9352b",
        "cursor": {
          "ref": "4c56178b-755a-4aeb-bfe1-c89093c92cb7",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "6bb10058-fabf-4849-bd3f-bb3778408b2a"
        },
        "item": {
          "id": "16e787a7-62e8-43bf-a512-a3190cb9352b",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "c5b28f7b-88a4-4620-9682-864f532e370e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de36b23-b6fd-4488-8659-bbc043aaf834",
        "cursor": {
          "ref": "fc995efd-5672-496d-804f-e933ae79448f",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "1f365b3f-c9a0-4384-b8f1-9563822506f3"
        },
        "item": {
          "id": "0de36b23-b6fd-4488-8659-bbc043aaf834",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "cc892a3e-0334-41e6-ba1f-8ed915e44e63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12997957-7d16-43b2-9dee-834c3e278016",
        "cursor": {
          "ref": "09303d1d-9232-459d-a68d-8783c73f8cc8",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f0c3f574-d5f4-41cf-9fe9-33bf5aa1c5be"
        },
        "item": {
          "id": "12997957-7d16-43b2-9dee-834c3e278016",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "bba6ab53-e25e-47a2-9b6f-931d3d57b66e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec5cc67a-3124-403d-88ed-205b71a9edd1",
        "cursor": {
          "ref": "3bcd7088-967e-4f97-b281-74b66d5b0a1b",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "d654251e-2270-45eb-b412-247b8b0f6922"
        },
        "item": {
          "id": "ec5cc67a-3124-403d-88ed-205b71a9edd1",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ad2a73d4-fa9a-4229-a13f-7a44b59d411e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c66ef5c6-2b47-479f-a823-1d98bd7f7a5e",
        "cursor": {
          "ref": "348d54b7-8a3e-4d2e-ab1a-ee6920adc0d4",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "9a517b94-6ec0-43df-a509-ef220db2e8aa"
        },
        "item": {
          "id": "c66ef5c6-2b47-479f-a823-1d98bd7f7a5e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "51da1b28-326e-449a-a783-6e289fbcc89e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d61f298e-f571-4152-a6d5-4a906550f984",
        "cursor": {
          "ref": "4199b2e2-068b-4094-b1f9-b0eda22c55aa",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "cc17df44-733b-4942-a497-176681d5b5bc"
        },
        "item": {
          "id": "d61f298e-f571-4152-a6d5-4a906550f984",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "685691a4-0b4b-465a-a6f7-1fe503a01814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b7c9a50-0ddb-4959-ba3e-ded9edf0c981",
        "cursor": {
          "ref": "e44a9e1d-fb72-40ac-84f6-110f1b200c22",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "9a70ad4b-9ede-4e1f-b324-4f27e4b06c29"
        },
        "item": {
          "id": "1b7c9a50-0ddb-4959-ba3e-ded9edf0c981",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "f05118e0-7f74-431a-8d59-02df7cad0d46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b127ca0-2720-48f5-86f5-c08f9ef85c8f",
        "cursor": {
          "ref": "1712967f-d16e-437a-95a2-71e31903138d",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "d0971834-3914-474e-8307-be4a139a93a8"
        },
        "item": {
          "id": "2b127ca0-2720-48f5-86f5-c08f9ef85c8f",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "2df3ca2d-2ae1-440f-a4a1-9b21243b341e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a735b401-1c3f-42f3-9dae-04e865cfd250",
        "cursor": {
          "ref": "32c8e88e-5385-41a6-8faa-bd9ecbf7e7e7",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "685b5d9b-9c49-498f-8d06-1dbae08a9be0"
        },
        "item": {
          "id": "a735b401-1c3f-42f3-9dae-04e865cfd250",
          "name": "credentials_issue"
        },
        "response": {
          "id": "8d8bfaf3-e795-4e4f-84ec-3892cd88ed59",
          "status": "Created",
          "code": 201,
          "responseTime": 37,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e12b223-9c89-46a6-84ed-769e5ddc6dc5",
        "cursor": {
          "ref": "d67d5130-a41b-48bb-9b17-d733b4581012",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "b380066b-728a-4765-b535-5a036efa26df"
        },
        "item": {
          "id": "2e12b223-9c89-46a6-84ed-769e5ddc6dc5",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "a89e6960-7bd6-46ec-aec7-8ee864a4dc1f",
          "status": "Created",
          "code": 201,
          "responseTime": 62,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "70020a63-09d7-45ab-b803-b8703e5947b9",
        "cursor": {
          "ref": "b11492aa-eee1-4458-a1df-bbdb3c758f90",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "c4a611f8-28ec-4dc3-9d95-ff33ac704901"
        },
        "item": {
          "id": "70020a63-09d7-45ab-b803-b8703e5947b9",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "0b07c213-684d-4126-9d83-dc984ec1e0e9",
          "status": "Created",
          "code": 201,
          "responseTime": 80,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "10948549-9e8c-4828-8028-cb712e651021",
        "cursor": {
          "ref": "304b780d-e0c1-4986-8d65-57275f973059",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "f515c7c7-e4ed-47a3-b2e4-d2826e92a10f"
        },
        "item": {
          "id": "10948549-9e8c-4828-8028-cb712e651021",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "1f4300fa-5dc2-491b-ba38-47f1b90a5e91",
          "status": "Created",
          "code": 201,
          "responseTime": 29,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bf02080-1045-4404-8eef-65005c572b21",
        "cursor": {
          "ref": "c3e04093-55ff-4fb8-96fa-dcf99cd465e9",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "4b7c0384-6361-4611-a677-526511735f1e"
        },
        "item": {
          "id": "3bf02080-1045-4404-8eef-65005c572b21",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "61929531-4cf0-458a-8c7f-f4480f16681a",
          "status": "Created",
          "code": 201,
          "responseTime": 30,
          "responseSize": 907
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeb0b46e-2e5e-4d7c-8acd-bbc6a1f26e9b",
        "cursor": {
          "ref": "4da1032f-dc51-410a-b484-bc2dae692252",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "b85a9e93-30fe-4518-8461-0b55b1e38b56"
        },
        "item": {
          "id": "aeb0b46e-2e5e-4d7c-8acd-bbc6a1f26e9b",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "e706712e-66f2-4d7b-aee8-8b04f3ebdb9f",
          "status": "Created",
          "code": 201,
          "responseTime": 30,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44d5f413-f985-4f5f-9350-29ed7d1df60b",
        "cursor": {
          "ref": "456fc279-a115-4ba4-82fb-bd71b9fc6c7a",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "a1bb985d-e9d3-4771-8e8b-ec4e592fe173"
        },
        "item": {
          "id": "44d5f413-f985-4f5f-9350-29ed7d1df60b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2e34c2b9-a409-4432-8cf7-7de6fac53bd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2c7ca2c-64f3-4aad-8327-cc3d9601d5aa",
        "cursor": {
          "ref": "c9c6fd83-3880-45d3-a0ac-38bcde124602",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "e5ba99ea-5dea-41ff-ab58-dcb38a69cc6c"
        },
        "item": {
          "id": "e2c7ca2c-64f3-4aad-8327-cc3d9601d5aa",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "dead43c7-5a42-4a0e-a5eb-7738096463b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad937b00-ba8b-4622-ac47-fe04aa25dab4",
        "cursor": {
          "ref": "871b6781-f04e-4256-a092-383fb5135297",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "412ef62a-1161-4d17-a379-cfb709b064ee"
        },
        "item": {
          "id": "ad937b00-ba8b-4622-ac47-fe04aa25dab4",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "23a4ef0a-af04-4b1a-9963-9d4843ef1912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62cb9b00-2fb1-497f-8bb5-aadae8a5e5b3",
        "cursor": {
          "ref": "64207335-e04d-4c50-830d-e165958985e3",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "2988cea2-caf8-457c-9398-c2e0e748b0b3"
        },
        "item": {
          "id": "62cb9b00-2fb1-497f-8bb5-aadae8a5e5b3",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1f92e856-ae18-4e6c-a612-6763acede344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91f5bf98-e8b9-4ecf-ab6b-03138d23082a",
        "cursor": {
          "ref": "07691963-f0c6-4fb2-8817-fbf2b2f4f4f6",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "00481f07-c2fb-47a3-90fa-055d0dcf2b94"
        },
        "item": {
          "id": "91f5bf98-e8b9-4ecf-ab6b-03138d23082a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "2e777df0-23b5-45ae-96d1-4c944be1fcbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b2e460-d138-4210-b486-02c5f737b514",
        "cursor": {
          "ref": "2b0045d1-383e-4d18-988b-7f287c52b260",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "a3eb20d4-5fd7-46cc-8214-1426516c722a"
        },
        "item": {
          "id": "d1b2e460-d138-4210-b486-02c5f737b514",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "157e3bd5-dc57-40d7-af3a-ff76bf03445e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a52d229-84dc-4e92-bb6e-284c7d428c08",
        "cursor": {
          "ref": "41c47dc2-70fc-4c3e-86ba-97386a1b9e16",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "972abe63-4325-402d-9f38-d7ed343586af"
        },
        "item": {
          "id": "1a52d229-84dc-4e92-bb6e-284c7d428c08",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "cfff042b-3d6b-4fdc-bd42-98aacf700830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "267ba31a-4c22-43ac-a784-5cfc205ad420",
        "cursor": {
          "ref": "1ab6a152-7bd6-41be-b10f-041d029f4dab",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "29dd239a-9b5a-4d5b-8873-0f8cd4c0e73f"
        },
        "item": {
          "id": "267ba31a-4c22-43ac-a784-5cfc205ad420",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "dd9bc0f9-b58c-451c-b02e-3750a1531291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b92371a-f82b-494d-a17b-6c60e17b1b05",
        "cursor": {
          "ref": "b393ef95-dba4-4e76-88a1-7600710eaf0c",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "2f8b302d-0378-485b-9cdc-3b3100dd55c7"
        },
        "item": {
          "id": "4b92371a-f82b-494d-a17b-6c60e17b1b05",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "71e3f098-62d3-4ca1-9635-b915e5052a2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce64773-a8ab-4b80-b13d-36b8878b2c26",
        "cursor": {
          "ref": "d97ac932-2bf9-4623-b8bf-5eb8a7410291",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "f3c2979e-ca7e-4612-a19e-8a60d96886d9"
        },
        "item": {
          "id": "5ce64773-a8ab-4b80-b13d-36b8878b2c26",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a55b46ca-f082-447e-9f37-a3fe7371b088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6c5926d-b60e-4f10-8dba-03cb921f6f0b",
        "cursor": {
          "ref": "a4125443-fa8f-482b-a040-351b8bb58369",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "92f5390c-9bf8-41d0-aced-d3bb3df20395"
        },
        "item": {
          "id": "d6c5926d-b60e-4f10-8dba-03cb921f6f0b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "dd0f541f-775f-4d9d-872a-1d4722fde470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76bfa88b-3d03-47ca-8b44-24a1d4cee0d2",
        "cursor": {
          "ref": "c62ed29f-3eb1-4281-b102-cd4ba49bd113",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "73a22eb4-ddb3-426a-b650-674974da1d75"
        },
        "item": {
          "id": "76bfa88b-3d03-47ca-8b44-24a1d4cee0d2",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "10571b66-6e11-4602-aebd-53b35afd30e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4c3b53c-bcb6-4c4c-a603-3272f35260a7",
        "cursor": {
          "ref": "7b3aef69-dfba-44ff-a8ce-10e354c93560",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "e4f87c3a-c2e4-436b-b977-2a9f10b73417"
        },
        "item": {
          "id": "d4c3b53c-bcb6-4c4c-a603-3272f35260a7",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ec2c6055-f4ca-4ba7-a9d5-df0fd47b80b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3799bfe-154e-4946-ae49-84dcfa0d428a",
        "cursor": {
          "ref": "ee370d78-a40d-4b73-a6e1-0b3465805992",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "cfee0f02-94d7-45c7-85fb-c7505d33dacb"
        },
        "item": {
          "id": "e3799bfe-154e-4946-ae49-84dcfa0d428a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d54fcdda-b92d-4ccb-8adb-8de8bac3bbe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b81aff3a-78c9-4e2b-ae0c-18f8d2f64f7b",
        "cursor": {
          "ref": "2d49da4e-3a40-4cdb-b44a-f7cde2ff5423",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "0a0913ae-9a67-4d82-a69c-0d59b812005b"
        },
        "item": {
          "id": "b81aff3a-78c9-4e2b-ae0c-18f8d2f64f7b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "436c0085-5b30-433b-80b0-db9d001502dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d579e97-09d6-4bd3-a422-bf345e43e1b8",
        "cursor": {
          "ref": "3a667604-befe-41b7-9836-ca19df4c98cc",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "70aa1520-1362-4ba9-a50e-d1b426ab73bd"
        },
        "item": {
          "id": "9d579e97-09d6-4bd3-a422-bf345e43e1b8",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "cc67f499-69b5-4bb5-a492-c32186ea9321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "912518fb-9077-46c4-8950-dc23f17c2ace",
        "cursor": {
          "ref": "55e8d66e-173c-498a-afed-62e8feb07e68",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "d7531755-f34b-444c-a3a6-db991eb7faf0"
        },
        "item": {
          "id": "912518fb-9077-46c4-8950-dc23f17c2ace",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "81ec7f24-4f17-4b8e-b4a5-80a4ec88b53f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dedad2bd-85f6-46b4-a518-5bf8c86d8e7d",
        "cursor": {
          "ref": "77d213a0-f407-4042-aab4-2ddc044be331",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "7ab4fdc0-efd0-4efb-84b7-1f6b0c152c4c"
        },
        "item": {
          "id": "dedad2bd-85f6-46b4-a518-5bf8c86d8e7d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "1d1eadc4-0176-4b70-ad35-302173309c8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8c9668e-768d-4e52-8a02-bd1ef7f8c0b9",
        "cursor": {
          "ref": "917b6aaf-c304-4fe6-a641-38a88cfb8d03",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "10bb00f9-cb47-4b03-9cec-c085245961d1"
        },
        "item": {
          "id": "a8c9668e-768d-4e52-8a02-bd1ef7f8c0b9",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "778bfa5f-09e8-445c-917c-66e5bf04097c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e00809b7-c941-4dcb-ae9b-a653f18e7bb4",
        "cursor": {
          "ref": "c6e626c9-6de1-4d88-97f7-6761e31fe6c7",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "1429faa3-da56-4356-a142-9d4c16580233"
        },
        "item": {
          "id": "e00809b7-c941-4dcb-ae9b-a653f18e7bb4",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6f0cd754-45fb-4e98-ab90-4c584778ddaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf9a5ed2-113c-4ce0-9e8d-f4315d4d5f2b",
        "cursor": {
          "ref": "908133fe-179d-4a52-b6bc-e611805c0d32",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "7ae4cb6b-10e5-4a70-9d9d-3b1667590979"
        },
        "item": {
          "id": "bf9a5ed2-113c-4ce0-9e8d-f4315d4d5f2b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "73865470-63ce-45ea-bea9-4d85fdcaead6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e108937-6815-45b4-b566-26d4f107f0f9",
        "cursor": {
          "ref": "e7e8b747-4fcf-4aa5-b6b6-56e23143f8ff",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "d9dd7ca0-d1c2-4ba8-a831-5d88c7fdca33"
        },
        "item": {
          "id": "7e108937-6815-45b4-b566-26d4f107f0f9",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4a2d21d4-e41a-4ab1-a433-70c3f0373b9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e130a55-3b26-4dfc-b502-e8905c87a5c8",
        "cursor": {
          "ref": "67ab664b-14d6-476c-90e1-f359f343a1d6",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "0e86d31b-81f5-4ee8-a7e7-f94d7b3129fa"
        },
        "item": {
          "id": "1e130a55-3b26-4dfc-b502-e8905c87a5c8",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "4d08bc28-7297-493a-809f-ecf1a6a5b014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93dc521f-a0a4-4bbc-947e-bb179031ff5d",
        "cursor": {
          "ref": "16d0d343-02df-4110-ae07-cdbf694c0e04",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "ca03b1d1-3d2b-4297-bfb0-c449d7e92c94"
        },
        "item": {
          "id": "93dc521f-a0a4-4bbc-947e-bb179031ff5d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a16b2fa4-9025-4028-8471-79e663346fec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "972b8224-e914-41e8-8f58-7f700b704e68",
        "cursor": {
          "ref": "3a2b0f6a-d807-4eb6-b246-a8332700dc35",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "d905eaa2-0886-46d7-960d-71aac5f672d4"
        },
        "item": {
          "id": "972b8224-e914-41e8-8f58-7f700b704e68",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c8b3acee-f96b-42a4-88d7-ea6119ff190d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72c7123a-ba8d-4015-a530-6bbf8de08e59",
        "cursor": {
          "ref": "368a8321-8600-4dc6-b14e-345b6c54f9c9",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "2b039e54-fcd5-4ab3-805d-bfa0058754a4"
        },
        "item": {
          "id": "72c7123a-ba8d-4015-a530-6bbf8de08e59",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "3657490b-228f-4fd6-954b-fc95a70b815f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ce807db-1309-400c-8057-de5609778d76",
        "cursor": {
          "ref": "3e41f983-1470-4844-a539-a81bf58fd5c0",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "6514666a-26bb-4f43-b8e2-7623d04a36de"
        },
        "item": {
          "id": "0ce807db-1309-400c-8057-de5609778d76",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "bde09b6e-8255-428e-ac18-b135e8a73683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f25b6f5a-bc89-4441-9ab6-83b274c9a946",
        "cursor": {
          "ref": "8f73a1b1-404e-4f8c-b7d3-0d7899de9a2f",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "4eeeb69d-c6ee-4aa4-a0ac-472e50a22077"
        },
        "item": {
          "id": "f25b6f5a-bc89-4441-9ab6-83b274c9a946",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "dab100f4-cef3-4216-ac58-ca4883107633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af45d3d-25bd-48b5-b527-2c3beb4773ac",
        "cursor": {
          "ref": "6a8ccd86-7e03-45d7-9d0f-52c40fd0372e",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "80292cf8-79c9-4c37-82ee-902ceee590d9"
        },
        "item": {
          "id": "2af45d3d-25bd-48b5-b527-2c3beb4773ac",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "14ad5db0-83e3-4884-9082-351300bba8fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46b17cce-aa59-436c-97f5-cb9a9b04e5e6",
        "cursor": {
          "ref": "8dcdfc44-1d64-4712-b892-8bcfff24d4b4",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "82462ca8-6b1a-47c0-ae7a-43412ac423fb"
        },
        "item": {
          "id": "46b17cce-aa59-436c-97f5-cb9a9b04e5e6",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a292991f-c4e2-4c5d-9112-0778ad895cc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22d9ccb8-8bc0-46ba-b287-28c477bf2979",
        "cursor": {
          "ref": "cf3c877e-e712-43f7-8c55-08607645c0b7",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "ba42c2ba-d471-487e-a638-ea2e5bbae67c"
        },
        "item": {
          "id": "22d9ccb8-8bc0-46ba-b287-28c477bf2979",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f59b38b0-3b04-4cdb-bfe0-b38712139190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50c61611-5e4e-4374-a284-0d8465d2485b",
        "cursor": {
          "ref": "3fc1a187-e10d-44e6-8fe0-268efb3ac75c",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "cf7ebd64-5b7f-41ea-8ddf-5dd5c85b0a71"
        },
        "item": {
          "id": "50c61611-5e4e-4374-a284-0d8465d2485b",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "fa3888fa-fc46-4577-8a20-046f6f5d60df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ced680bc-7c4b-4a1d-81d3-567ff5227e82",
        "cursor": {
          "ref": "c04070b0-9d09-466e-9546-09d645985713",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "0842fab9-a177-49b3-b091-e77e035eee1c"
        },
        "item": {
          "id": "ced680bc-7c4b-4a1d-81d3-567ff5227e82",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7e4a5bf5-3083-4059-853e-aa80d382df1b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1714197-6841-412b-b429-14da7aca691b",
        "cursor": {
          "ref": "9d43ca40-1549-489e-86ce-617bc391d2bc",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "1eb42263-e49e-45dd-9116-942501c2eb7a"
        },
        "item": {
          "id": "d1714197-6841-412b-b429-14da7aca691b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b743d0c3-658a-408e-a811-d182896e15c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e8aae05-c6bb-4a04-9bf7-f831800a073b",
        "cursor": {
          "ref": "eba2e92b-279f-478f-8d71-ff48dad78f6f",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "cf95e8a9-4c60-4f57-81e5-697a10b756fe"
        },
        "item": {
          "id": "2e8aae05-c6bb-4a04-9bf7-f831800a073b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "889cb1c2-36f4-4230-8517-46aff4f09297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "768d4fdd-eabc-4630-8edd-62758ffcc6c4",
        "cursor": {
          "ref": "c8355853-54c9-4206-b900-aee6be5959fd",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "05d71780-d192-4b25-9643-fb97ae60d05d"
        },
        "item": {
          "id": "768d4fdd-eabc-4630-8edd-62758ffcc6c4",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "dee3980d-5a71-494a-b425-66958373c03b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb8ce75f-16e5-4f62-98c0-3ecae4c17b7e",
        "cursor": {
          "ref": "69cf112c-8852-4484-a3b2-f0a7a788eb08",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "2784051b-831a-4889-9f50-4cba5967e646"
        },
        "item": {
          "id": "eb8ce75f-16e5-4f62-98c0-3ecae4c17b7e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "0cad37ae-eb69-4886-a34d-26e1c7116da2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa82ea7-ec33-4c99-b604-fd63667238a5",
        "cursor": {
          "ref": "1e14ddef-d5ad-45c8-bd41-00468f9baa10",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "3912c44e-0449-4c34-8db5-9afca5b1feb6"
        },
        "item": {
          "id": "6fa82ea7-ec33-4c99-b604-fd63667238a5",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "8e2c4265-d974-4c19-a785-8896037cae99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b3989a8-4cb3-4ab7-8891-fad144308bdf",
        "cursor": {
          "ref": "1f78799d-7fd3-44d7-b41d-dc59da25d865",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "a1ce2816-5982-46dc-b0a6-dda89e132347"
        },
        "item": {
          "id": "0b3989a8-4cb3-4ab7-8891-fad144308bdf",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "2d8ab8b2-4e76-415b-9c97-2f982465d60b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfeda1a1-9646-46ef-a471-1d4cd8dd6323",
        "cursor": {
          "ref": "f2bb6f98-d246-47a3-8f21-6e23568a0bc3",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "b87cb212-8412-407c-a76c-1f2ba632c6c0"
        },
        "item": {
          "id": "dfeda1a1-9646-46ef-a471-1d4cd8dd6323",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ff6be97d-db9c-4b79-b47f-294b79790cbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b13c335f-e2fa-4d30-827d-aec34cedc381",
        "cursor": {
          "ref": "cc624637-9644-4295-a04b-4fe461cd07a8",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "07504828-af23-4edd-94f7-9e8747c34063"
        },
        "item": {
          "id": "b13c335f-e2fa-4d30-827d-aec34cedc381",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0551730b-05e3-465f-9e26-3972577d946e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e80c0f8f-af79-4eb4-a2e7-dd62729e88b6",
        "cursor": {
          "ref": "de1409c9-f9e4-407f-8b0e-3e45fe4ae2dc",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "cdc399d7-d871-41c3-a629-b7ab5657694f"
        },
        "item": {
          "id": "e80c0f8f-af79-4eb4-a2e7-dd62729e88b6",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "96844147-c776-4459-b0d0-9899f9d3f8de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f979e6e2-b91c-4612-b79c-819b62df69b5",
        "cursor": {
          "ref": "b487b9e4-7bcc-4df0-a1c1-07d2df506b9b",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "c50fc1d6-933d-467a-8c30-72f38d0045c1"
        },
        "item": {
          "id": "f979e6e2-b91c-4612-b79c-819b62df69b5",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "1939572e-8b61-43f5-8171-b31510295ed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccfc2679-e480-444a-ae8e-6a4e5b7b5553",
        "cursor": {
          "ref": "204f1682-7118-4122-97ad-e85f65441dd3",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "a7a519de-6c93-418b-add2-3c4a8a707687"
        },
        "item": {
          "id": "ccfc2679-e480-444a-ae8e-6a4e5b7b5553",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "95c6ce71-1d0a-4b46-9278-b94e901f4570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0afcf6aa-eb2d-4a41-8b57-bc4bb600dcdb",
        "cursor": {
          "ref": "1acf306d-a228-4baf-95be-8caa31a0f58a",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "101090a9-d0c7-407f-8453-29defde5d9ee"
        },
        "item": {
          "id": "0afcf6aa-eb2d-4a41-8b57-bc4bb600dcdb",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c54e3b8f-e79c-4d11-914b-d02e0f749b79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a30c7ad2-2815-44b6-8439-a005fbf7a13f",
        "cursor": {
          "ref": "1e4a260e-bdbc-48be-b7cf-4e806fe520a5",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "a26a9c93-7696-473d-a860-70b4873c1c5e"
        },
        "item": {
          "id": "a30c7ad2-2815-44b6-8439-a005fbf7a13f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c7959bc1-2c58-4b19-a0cd-d75bcde3c2d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7af27af4-af06-471d-865f-12295f9160ac",
        "cursor": {
          "ref": "76687573-8f54-4281-ac6a-394cd9d236e8",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "c745059c-1ddb-4a58-9502-7f87046f8427"
        },
        "item": {
          "id": "7af27af4-af06-471d-865f-12295f9160ac",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "119e0a7a-2e70-42c3-a3c7-f6b5e6806989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae45b1e3-1d3b-4074-b239-c4ecdabbb31d",
        "cursor": {
          "ref": "ccded4a0-9436-4ff7-80d2-bf66d0609aca",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "a217639a-8744-43f7-a028-5b0328703677"
        },
        "item": {
          "id": "ae45b1e3-1d3b-4074-b239-c4ecdabbb31d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8604646c-a6fb-4cc6-89e9-848fdaf51a41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "952b2067-2d14-4dfa-8b98-2fb0981cbd13",
        "cursor": {
          "ref": "41fa6505-e355-4137-8118-5b490cacc7f4",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "2f4de9c8-8789-421f-912b-8058f39d5fb7"
        },
        "item": {
          "id": "952b2067-2d14-4dfa-8b98-2fb0981cbd13",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "04b176db-8fbf-4b76-93d0-b4c7cadb8a02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2df90ff-6b0a-4aa0-b757-b12774b079b9",
        "cursor": {
          "ref": "97772978-39fe-4235-a47d-788a834a9a20",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "42e78b6a-c56a-47fd-905b-1c83d9e364d0"
        },
        "item": {
          "id": "b2df90ff-6b0a-4aa0-b757-b12774b079b9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "df8172fe-4bec-47ee-b130-fb7a9871177f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f79b2a6b-fa52-4e07-a7eb-72743d897df3",
        "cursor": {
          "ref": "efa9f25b-5bfe-4ccd-9b47-fa70437645cc",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "0e3cdbe5-776b-4c0a-af56-575920c5e1ba"
        },
        "item": {
          "id": "f79b2a6b-fa52-4e07-a7eb-72743d897df3",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "68c164f0-a7ce-4713-8316-4dc9d2b8dd9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0110ebca-72de-4995-8289-961bc45c2efa",
        "cursor": {
          "ref": "4b5c424f-ea25-4f24-a67d-837ff7726465",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "2fa43ac0-a4d7-4bab-a8f4-7e57097c30f4"
        },
        "item": {
          "id": "0110ebca-72de-4995-8289-961bc45c2efa",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "0e30ad92-d537-42b6-adec-d1e8e4f471b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02dc4796-9128-414d-9897-db595bba2719",
        "cursor": {
          "ref": "a3ac424b-70a6-422e-9d33-b862ee647c5d",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "ab0a65af-5bed-461d-9c9c-8e47f08b8958"
        },
        "item": {
          "id": "02dc4796-9128-414d-9897-db595bba2719",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "fe0c5d0b-e5b5-49c4-a9b6-e0fcb456f7ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8481e7a-d5df-4115-aa1b-24e640fb9b34",
        "cursor": {
          "ref": "a1b602ee-1293-47b5-9040-aa531805a5cb",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "6ce0eea4-91a8-4d69-9e44-22c4a8e464f0"
        },
        "item": {
          "id": "a8481e7a-d5df-4115-aa1b-24e640fb9b34",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ce6a8699-3cd4-4208-afda-c19b4cfc1142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a1bb112-a27f-4d5f-8402-3327e50aa649",
        "cursor": {
          "ref": "36685060-c050-495c-bd9b-fb6a48139f08",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "a3fa8efa-14e3-4ca4-9049-47481a0ca5c4"
        },
        "item": {
          "id": "1a1bb112-a27f-4d5f-8402-3327e50aa649",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f9d2a635-3143-44ef-b609-4029d300757f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16f04345-557a-4e04-8bab-2bb6dce8a876",
        "cursor": {
          "ref": "98e977cd-941e-44d8-bce9-5a1323c72007",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "ba65c54d-1c64-42fe-8c68-a7d73b7400ab"
        },
        "item": {
          "id": "16f04345-557a-4e04-8bab-2bb6dce8a876",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9dd581b5-5d35-40e1-9184-8b537e3e6bd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd4954c-d0cf-4be1-a74a-7f751e7c8b89",
        "cursor": {
          "ref": "024a9ad9-32f5-48b7-91b4-d1ff6b5ed81e",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "1fd6a3b3-8721-4e64-9e1f-87a7499cd97d"
        },
        "item": {
          "id": "2fd4954c-d0cf-4be1-a74a-7f751e7c8b89",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "efb28587-b205-4855-bd07-fe99d0837bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6201a9d4-ec61-4134-8494-58bcb69a61b7",
        "cursor": {
          "ref": "7e009384-e6b7-4385-aa0c-89494c0b1007",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "7572858d-6f9d-4c24-bcef-96bb575a46e4"
        },
        "item": {
          "id": "6201a9d4-ec61-4134-8494-58bcb69a61b7",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "4ce40c5e-772e-4153-b040-bf562c7c31d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92881cdb-24bc-41cc-b389-4724465ee670",
        "cursor": {
          "ref": "41e77aeb-b445-4ce0-8732-25effe54cbd0",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "11020a29-626a-4fba-90ac-ef2d77a628fb"
        },
        "item": {
          "id": "92881cdb-24bc-41cc-b389-4724465ee670",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c8414280-432b-4b04-939a-f2da3e5649a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c20d4e3-eb6f-4850-b35b-7121bd7ca24b",
        "cursor": {
          "ref": "ba4e6b15-dc5c-4fb7-87b2-710a283c5f6f",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "a277e0e2-4cc5-4d4a-8385-e053ac2d552e"
        },
        "item": {
          "id": "2c20d4e3-eb6f-4850-b35b-7121bd7ca24b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e0a03977-2c0a-4ccd-95ca-089a115db6fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b75b550-2173-4e1d-a1a8-9fc7b7afc5ea",
        "cursor": {
          "ref": "50cd0c78-d6de-4ebb-bde8-c66a51d55e9e",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "17419a44-b423-4392-a05a-594661a9f5aa"
        },
        "item": {
          "id": "9b75b550-2173-4e1d-a1a8-9fc7b7afc5ea",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "4c5df9ff-6f75-4242-b427-62120be5f562",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85292d7c-d288-4d47-991d-6deb5098a46c",
        "cursor": {
          "ref": "34382049-d75a-4794-a327-6a6cf0603932",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "404548f0-e982-4c5f-9ec0-d974588cf0b0"
        },
        "item": {
          "id": "85292d7c-d288-4d47-991d-6deb5098a46c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "77da12f3-a0df-4ea7-bbd2-a48b09956a6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdf344af-9911-40d9-b602-f0863f943309",
        "cursor": {
          "ref": "372c950a-0f53-4ba8-ace5-96b4b3ceb26f",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "1e318625-27d5-4eaf-83e2-653ee4010237"
        },
        "item": {
          "id": "fdf344af-9911-40d9-b602-f0863f943309",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e74b4d81-ede2-4c75-8af0-02f1a5c377fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2f3ece8-e76f-410d-a513-5fb1d7fd78c4",
        "cursor": {
          "ref": "35b63655-74f5-4947-b300-1500ef57e4aa",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "8854fa01-2266-4389-825e-e73a7fa04e32"
        },
        "item": {
          "id": "a2f3ece8-e76f-410d-a513-5fb1d7fd78c4",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "cd844d60-69fe-494d-8fc8-46efa5ba30d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d34f457-aa05-49c5-814b-5d529ae8ff09",
        "cursor": {
          "ref": "a1f0eed0-85ea-46db-881b-b8ca3dc684f4",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "7d1cb62f-6e53-47b3-936d-1cb238a61536"
        },
        "item": {
          "id": "7d34f457-aa05-49c5-814b-5d529ae8ff09",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "39c6cc8d-2d1a-4483-8783-88d94461d0bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbeabfbb-8701-43eb-bb03-f645ab03a00c",
        "cursor": {
          "ref": "1ed94976-2b90-44de-a96f-fdc446be8fd5",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "27a256d4-8cad-444e-9202-5004093d086d"
        },
        "item": {
          "id": "dbeabfbb-8701-43eb-bb03-f645ab03a00c",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "d7e1c003-e84e-4ceb-b871-fd2af720cc76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03c0357d-9e82-4ce6-b564-f7491cd0876c",
        "cursor": {
          "ref": "267e0d49-7bca-48a5-a4ef-155dccd89add",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "c382566a-8079-4048-ab18-fa8c7c746183"
        },
        "item": {
          "id": "03c0357d-9e82-4ce6-b564-f7491cd0876c",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "a084a79f-06d5-4577-9371-1d15cc036bac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6f77a3f-6189-4451-8491-90c0c2605b3b",
        "cursor": {
          "ref": "86e5e4ce-19e8-4250-9946-e6e889d201ce",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "6a9f7110-7918-4ade-84da-db3fb3331760"
        },
        "item": {
          "id": "e6f77a3f-6189-4451-8491-90c0c2605b3b",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "ab6df6e3-6188-4021-b17e-dfe51f524138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d949ac16-8ce0-4532-aec8-ce688764a193",
        "cursor": {
          "ref": "2027ee2a-ad45-4078-93c6-13a333cb1953",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "e72bac6c-ede9-43e1-9f19-48d18b4dd00c"
        },
        "item": {
          "id": "d949ac16-8ce0-4532-aec8-ce688764a193",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "7fd3ac04-410a-4ae2-b0fc-3a5a55617db2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc6e4a8d-61c4-4327-ad87-c4c643701e81",
        "cursor": {
          "ref": "71532fb7-8ae3-45aa-995e-c2720e00faf7",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f697c45f-f6d3-4afd-9e31-b75e69d9ab7a"
        },
        "item": {
          "id": "cc6e4a8d-61c4-4327-ad87-c4c643701e81",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "46854eb7-15a3-4082-85c0-ba7d6917169b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09b60dcd-f856-4558-a307-d7de78e1bc07",
        "cursor": {
          "ref": "c212251f-2be6-43cb-906a-4a643659b9b0",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "76c772a1-2080-4127-98ec-a9b2db2f9942"
        },
        "item": {
          "id": "09b60dcd-f856-4558-a307-d7de78e1bc07",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "ecb934db-c1ac-4364-a67c-9be9109288d5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a72c18a-5c8c-4729-9512-e23e7f600438",
        "cursor": {
          "ref": "e3e105e0-f111-47b9-aefb-3512c0b93237",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "19ffb1f9-9cf6-48f4-8d01-1f28b5937658"
        },
        "item": {
          "id": "1a72c18a-5c8c-4729-9512-e23e7f600438",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "a9ea18cb-dc50-4957-8081-2c01b628e273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd9af4ad-4f17-484d-8f42-8546945d991d",
        "cursor": {
          "ref": "52f14ff9-5f1a-4eca-a69c-013519ff1739",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "0fed000d-dd4b-4c8e-9714-0eba7ecb522a"
        },
        "item": {
          "id": "cd9af4ad-4f17-484d-8f42-8546945d991d",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "8e15e768-cf67-4041-bab6-25d54a43d146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d381423-4e2c-4a4d-8577-c188bd8b1823",
        "cursor": {
          "ref": "7e0c4557-d624-474d-afff-2d23afb29784",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "0fd8289c-088e-4433-be92-3b8a591b558e"
        },
        "item": {
          "id": "4d381423-4e2c-4a4d-8577-c188bd8b1823",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "95f60702-4966-4bc9-a84a-83e2774a6f89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fe5ce69-6245-4427-9a71-8e736618e2c1",
        "cursor": {
          "ref": "7a10b546-27fb-421a-b66a-0ad86bf04d2f",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "091fe10b-b6e7-44da-85a4-96cdbb5ec9ee"
        },
        "item": {
          "id": "0fe5ce69-6245-4427-9a71-8e736618e2c1",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "6ccbb59a-080e-4e27-9f6a-0af4f0f21596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a6a5bf-dd4e-4ea9-b8f6-6ce59c4b01b7",
        "cursor": {
          "ref": "48316b5c-24b5-4d64-bf71-78f36b06d9af",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "9a52d24d-7d66-484a-8d23-b16b85bf989a"
        },
        "item": {
          "id": "82a6a5bf-dd4e-4ea9-b8f6-6ce59c4b01b7",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "0466ac3f-d48f-4353-8830-63110b237b3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f7d332a-0326-451d-9d06-8aceb7e7c8bf",
        "cursor": {
          "ref": "5def569e-f987-4826-bcb5-64f1194135d2",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "b6ecf1d9-c969-4c12-aee0-b9ebddc77ce7"
        },
        "item": {
          "id": "8f7d332a-0326-451d-9d06-8aceb7e7c8bf",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "4031584d-0328-4c4d-b493-6ea6271376a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20d98eef-2c51-4c9b-8f49-482c8f010083",
        "cursor": {
          "ref": "baa40e15-d574-4b1a-8a6a-3bfdc149b857",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "43feb468-42f7-489b-9137-48e1179d7d54"
        },
        "item": {
          "id": "20d98eef-2c51-4c9b-8f49-482c8f010083",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "3bd076b4-662e-4915-a4b0-55d14da115ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "427fcdf1-406d-46fc-89dd-3e0f38522a0a",
        "cursor": {
          "ref": "fb3cce50-65c6-4a90-8beb-3ecb303061b8",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "5f9b012a-44e6-4e0d-b2cd-6071f80debbb"
        },
        "item": {
          "id": "427fcdf1-406d-46fc-89dd-3e0f38522a0a",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "b0f6be3e-1e94-4d94-8860-bc397d710aa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a06a8ea-88dd-4333-8314-9e42520bb1c5",
        "cursor": {
          "ref": "1e0e09b6-af8d-424f-8967-0f6cb0a2e1cd",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "419736ce-cbf6-416c-9be8-fbe92d8e897b"
        },
        "item": {
          "id": "0a06a8ea-88dd-4333-8314-9e42520bb1c5",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "9d770f70-c0cb-481f-9132-a38fe43975cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8c20111-7040-4c23-a105-ad230e107ba2",
        "cursor": {
          "ref": "116a3edf-c047-4622-a26e-8d450222f3c0",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "60842d76-0119-450f-b7d1-b86ce88f571b"
        },
        "item": {
          "id": "b8c20111-7040-4c23-a105-ad230e107ba2",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "03cc7d73-b27d-4456-893b-e8464ae6a978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c2abb07-b36b-4c45-b846-912368405b15",
        "cursor": {
          "ref": "620167e9-cfe0-4f12-bf90-248dbc64ee08",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "d1f4f87d-7b76-43bb-86e1-56073bb863ac"
        },
        "item": {
          "id": "6c2abb07-b36b-4c45-b846-912368405b15",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "6e494af5-ebf4-424f-9b03-1311636a60ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b243918-f199-4e35-9038-ce599b25c774",
        "cursor": {
          "ref": "cdbdf32c-21d3-4de6-9d90-ce5bf103b6b3",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "d57fef36-2ca9-4968-8717-d4ba6b7a6326"
        },
        "item": {
          "id": "4b243918-f199-4e35-9038-ce599b25c774",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "be6daa87-978e-4b57-822f-49089da94d61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91ab8aea-d209-476d-af96-7105b2f73fc3",
        "cursor": {
          "ref": "dc44af9a-5b70-463c-a2b8-812c2de8822c",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "e3a3ef54-6d57-4db5-b3ea-665073437361"
        },
        "item": {
          "id": "91ab8aea-d209-476d-af96-7105b2f73fc3",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "0b4e5dac-ef03-4e96-b883-e5dcc563c3d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bdc1e79-e841-43ba-97bd-b4e82bd4f616",
        "cursor": {
          "ref": "dbd2219b-8658-4237-9b83-b5c8ae9cf479",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "0fab9e30-af6e-465a-836f-5dd8b6fd9927"
        },
        "item": {
          "id": "3bdc1e79-e841-43ba-97bd-b4e82bd4f616",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "417c8899-939b-458d-95b9-ed55462ae3b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eed62e0b-b29a-4e9f-8750-5f84306bc9c7",
        "cursor": {
          "ref": "f861fdfb-fb2a-4943-a42f-0477b0ceecbc",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "2088edaf-a630-4d67-ab0d-366eab328359"
        },
        "item": {
          "id": "eed62e0b-b29a-4e9f-8750-5f84306bc9c7",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "386be092-cc1d-4d2c-9de9-0cb5fd36a59a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa6c0b57-dcbc-4069-acbd-06f2e95efbc3",
        "cursor": {
          "ref": "a74a6719-374b-4a02-b26b-65d099a12c7b",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "6762459c-7ec4-491a-bb5c-892474e60b46"
        },
        "item": {
          "id": "fa6c0b57-dcbc-4069-acbd-06f2e95efbc3",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "e01a12f8-c0fd-495e-90bf-2483e458856f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fa961f8-7334-4ed6-967d-c7edf25a450f",
        "cursor": {
          "ref": "5210b314-0fa1-42ea-95ff-f396a2cf0bec",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "a02c2aa9-fdfe-4f40-a5a6-5fc1931b306e"
        },
        "item": {
          "id": "3fa961f8-7334-4ed6-967d-c7edf25a450f",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "b6a69179-592a-4fa9-b205-2b407210870e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc000c0b-2ad5-4cac-9564-854efa7e57eb",
        "cursor": {
          "ref": "6c07a618-79d6-44c3-8903-8212a784f435",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "68cf395d-02df-4763-9db7-76012fcc7736"
        },
        "item": {
          "id": "bc000c0b-2ad5-4cac-9564-854efa7e57eb",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "f19d5da7-cf71-43d8-a705-b95da6fe3757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06419738-a3ed-44d4-be7a-4259f12e5028",
        "cursor": {
          "ref": "0bd56936-1966-4f94-acea-36248a4c8ca5",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "96537a9e-c010-4052-9fc7-85312fbf3a79"
        },
        "item": {
          "id": "06419738-a3ed-44d4-be7a-4259f12e5028",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "188d99a4-63dc-4189-b56a-36d6343c4d11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "873c4400-044a-42cf-ae9f-a7e1db3d43b1",
        "cursor": {
          "ref": "ed746029-9248-436f-9a0c-cdb3e40acb2b",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "2736aa2c-c590-423c-a37b-195452f67e64"
        },
        "item": {
          "id": "873c4400-044a-42cf-ae9f-a7e1db3d43b1",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "05c9de51-c657-4885-b69f-c0734743d94d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eec11f4-d1d2-4d0e-8a43-33cd4b50118a",
        "cursor": {
          "ref": "7b428661-154c-4b96-9667-f5c4086d5732",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "a1d96433-1bd9-481e-bb3f-7bff383f83a5"
        },
        "item": {
          "id": "5eec11f4-d1d2-4d0e-8a43-33cd4b50118a",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "242c54b7-ea7d-4262-b48a-47fecf83f337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2cc9ecb-7499-4abc-8168-da803eb78de1",
        "cursor": {
          "ref": "155c6636-f01c-4212-9afc-f0cfea3d14e6",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "56dacaa7-7a8b-4648-b562-9a9988f87ffb"
        },
        "item": {
          "id": "a2cc9ecb-7499-4abc-8168-da803eb78de1",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "5a8f1f97-e882-4916-82e7-afb4312dca2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2cfe1b3-8ab0-4d45-839c-c6ac169383c4",
        "cursor": {
          "ref": "e8fa3c5f-a1a8-4f46-8196-024d6efde565",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "d540f0cf-9651-4121-86df-f0923f95631c"
        },
        "item": {
          "id": "a2cfe1b3-8ab0-4d45-839c-c6ac169383c4",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "529fff17-73ba-416b-854e-3aecbb5c4d3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c5ccf0-9fc2-40f3-be61-390954b5376a",
        "cursor": {
          "ref": "2c5acf61-ade5-48ef-91e5-85b515008a5e",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "2a0902f6-a941-44a7-92d3-e15bdda5b9ec"
        },
        "item": {
          "id": "17c5ccf0-9fc2-40f3-be61-390954b5376a",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "f3523174-08db-4d0a-8ffe-f704a881fc74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92e0d151-c0f7-4160-8b67-75660302f7bd",
        "cursor": {
          "ref": "77b32661-1201-48ef-984f-32c2143a2ca3",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "5e636c14-f10e-47db-b352-eb6e164c060a"
        },
        "item": {
          "id": "92e0d151-c0f7-4160-8b67-75660302f7bd",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "26cf29e7-f488-48ac-a2c5-8c097af13239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17336e80-5cbf-4fee-bc53-fd77e7232660",
        "cursor": {
          "ref": "6640f9e2-8323-4365-8702-6ecb454aa01a",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "e216e4ff-c602-4835-ac8c-545ddd961126"
        },
        "item": {
          "id": "17336e80-5cbf-4fee-bc53-fd77e7232660",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "6e743c36-5297-4297-a95e-97f2474c0b45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39123d23-20cf-4f99-bc08-60a22f27aae3",
        "cursor": {
          "ref": "780d2d9c-d9a1-45d4-8006-a23e493b8978",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "520001d4-78fb-4ae1-866d-c536129eac03"
        },
        "item": {
          "id": "39123d23-20cf-4f99-bc08-60a22f27aae3",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "19faa825-feaa-4aa2-84b2-3441123ca7e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccbc9f7a-bbbc-497d-b8ec-4cbfd7f1a7ea",
        "cursor": {
          "ref": "8b50adec-e78d-40d8-824e-f84625808c8e",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "f3526b25-4a7c-49d1-9f64-86378a61f2eb"
        },
        "item": {
          "id": "ccbc9f7a-bbbc-497d-b8ec-4cbfd7f1a7ea",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b2a8dac0-4f5e-437e-8587-ac231be0cea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e732c3ed-6227-4c74-91e4-585d6e9d5582",
        "cursor": {
          "ref": "e11fbc21-8be5-4215-8a12-37800bd7ed4b",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "59566ee7-4afe-499d-8a6c-4a50f1ff6b1f"
        },
        "item": {
          "id": "e732c3ed-6227-4c74-91e4-585d6e9d5582",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "d5c87bde-089c-4dca-8771-f0e6e4a9b595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15659885-9c22-4d0f-bdc8-e3b6d53ab948",
        "cursor": {
          "ref": "5a23d8d7-dffb-4e3a-946e-3f6beaaeedec",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "619bb79a-e9fb-4127-8ea6-38e6e78a49f3"
        },
        "item": {
          "id": "15659885-9c22-4d0f-bdc8-e3b6d53ab948",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "e096d94e-8f30-42f6-88ab-c15efc190ea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c96a48-0034-4222-a946-c230a3f5c3a7",
        "cursor": {
          "ref": "bcc21bae-5c76-464b-84e8-812effe25dfb",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "9001576f-4bda-4249-b60f-5fad05061ecf"
        },
        "item": {
          "id": "90c96a48-0034-4222-a946-c230a3f5c3a7",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "d74c7710-aa1a-4c71-bc45-d7fa5a0be5a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae95e758-bcd6-4be6-a0ce-a12af5defdbc",
        "cursor": {
          "ref": "28e474b6-139c-4396-a56a-15aed38b7a00",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "75d08f61-efc1-4690-ab02-eea5a87744b3"
        },
        "item": {
          "id": "ae95e758-bcd6-4be6-a0ce-a12af5defdbc",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "9e578640-5899-4b7e-bb90-56f1238d09ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78bc9f41-3c0c-4157-a8d5-03e814f1d13e",
        "cursor": {
          "ref": "afcb0aaa-7e3f-4fe7-8096-e6c442dd0140",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "4372a299-c8e7-40ea-9011-c7a5c168464a"
        },
        "item": {
          "id": "78bc9f41-3c0c-4157-a8d5-03e814f1d13e",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "e553cbb8-3d93-42ac-a65c-94bab3e8a040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51681dfb-a4d7-4274-8a3d-1633d363310a",
        "cursor": {
          "ref": "f06b7f52-d3eb-4429-80a2-b47ef56e1ec2",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ef90efbe-cdc8-41fc-b8d8-7ddb0c414d8d"
        },
        "item": {
          "id": "51681dfb-a4d7-4274-8a3d-1633d363310a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "88b3ca64-536b-4801-b3a7-1c2d0bd9afcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7cb8ae2-1ff0-446e-a90c-e50af0a2acc4",
        "cursor": {
          "ref": "e9be2f44-2579-4ca3-be2b-a3d5c0198c93",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "752447a5-4e42-47c0-8d28-96af885d2448"
        },
        "item": {
          "id": "a7cb8ae2-1ff0-446e-a90c-e50af0a2acc4",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "233802c4-e7f2-4f5a-9211-07a54b22cef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb5949bd-f5e7-4f98-a933-9dbf75345947",
        "cursor": {
          "ref": "4f6d8459-6ec0-41fd-88b1-d6305319c375",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "660a8f63-2f76-42ce-973d-68020ed6bbda"
        },
        "item": {
          "id": "fb5949bd-f5e7-4f98-a933-9dbf75345947",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "9ad6e202-fb90-4243-88c8-34beaacac2ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf2a2be3-2872-4022-a380-c4c955b13e9b",
        "cursor": {
          "ref": "1f7477a7-5537-4693-954b-9a7c0e669279",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "1b6f6391-4634-44eb-8f70-4dfce2cae93a"
        },
        "item": {
          "id": "cf2a2be3-2872-4022-a380-c4c955b13e9b",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "e63224fe-7698-4bb9-aecf-3936ab074f90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df1364f4-8d88-44e8-bf86-918166415b08",
        "cursor": {
          "ref": "eafea007-152f-4735-b9ec-9ce06a13345d",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "7be9fc05-cc72-486b-8903-60621522b2c8"
        },
        "item": {
          "id": "df1364f4-8d88-44e8-bf86-918166415b08",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "4142ecf8-18d8-4b7b-af6a-c493a82790ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c2d5609-f6af-40f2-b84f-8bbba27b754a",
        "cursor": {
          "ref": "3d49416b-0366-4d21-8b3f-cfecc5da2306",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "b8ebfea6-93cd-4676-a5a4-d1aff6473fdd"
        },
        "item": {
          "id": "3c2d5609-f6af-40f2-b84f-8bbba27b754a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "ca4db89f-3053-4ff2-885b-dcee83c2e93c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daafed5f-c5f0-4aea-94f2-4683e616016f",
        "cursor": {
          "ref": "a3385db1-e70a-4267-a9f3-b77ecc9ecd54",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "b189cf03-f1f8-48a4-a0f5-d2f0383bb735"
        },
        "item": {
          "id": "daafed5f-c5f0-4aea-94f2-4683e616016f",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "58b761c1-e1df-462b-b1e5-b5aee1f1f3e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "094f2a37-7ad3-44f4-887f-fffa957709bd",
        "cursor": {
          "ref": "c30b071f-8879-4574-8168-8c0b9dd83e47",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "3400347a-14fc-4374-ada3-593cb0439e84"
        },
        "item": {
          "id": "094f2a37-7ad3-44f4-887f-fffa957709bd",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "e292e6e1-2057-43cf-9855-048bab7d39e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "950708cd-282e-4837-8cd2-4d03daf4c5f7",
        "cursor": {
          "ref": "2eb27c20-1623-41f4-a592-c714bb6e9cc1",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "b37b5e97-210a-449b-bf9e-fc1723a2f3a1"
        },
        "item": {
          "id": "950708cd-282e-4837-8cd2-4d03daf4c5f7",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "66d0b309-d6e7-41cc-b125-2328c559fb40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bed692c-fe7c-44fb-be70-0b7a8ec584cf",
        "cursor": {
          "ref": "903e0e37-05ec-4060-b57f-974961ffbc59",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "a3b34653-44dc-4815-a313-6f8e06ad64ea"
        },
        "item": {
          "id": "2bed692c-fe7c-44fb-be70-0b7a8ec584cf",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "f2745045-4359-4156-8c0d-3fec52ebf07e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50fd530b-ea9f-4efd-b6ea-c065715924cd",
        "cursor": {
          "ref": "94e94adf-a01e-4d89-9966-ea068fc577f6",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "de481bae-284d-4c08-9711-47e63dd08564"
        },
        "item": {
          "id": "50fd530b-ea9f-4efd-b6ea-c065715924cd",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "c2aa7052-f447-4e82-a41c-fc0de17974ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "851132a0-5ed1-45d8-8025-376f563dd020",
        "cursor": {
          "ref": "fe35b91f-cbb1-4c99-a19a-b2911891b074",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "64a311aa-8d7b-4399-9f7f-678e273bc494"
        },
        "item": {
          "id": "851132a0-5ed1-45d8-8025-376f563dd020",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "7d14c490-4f5b-411d-b77f-f09522ee8834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2372842-c767-4fb9-981e-5ac7150abd74",
        "cursor": {
          "ref": "211980e9-8172-4f45-bd3e-a9d6723c5786",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "54495c8c-8137-4cd8-b79e-6716935ee874"
        },
        "item": {
          "id": "f2372842-c767-4fb9-981e-5ac7150abd74",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "17fb7587-19c9-4dcd-a24a-2e9652c07ae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad3d8d1a-0dec-4c5b-b35c-8e1e9f3085c2",
        "cursor": {
          "ref": "e1608fa7-83cb-438d-9934-dc2729e41765",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "66ed78cc-e777-45ac-9927-2200a5951dfd"
        },
        "item": {
          "id": "ad3d8d1a-0dec-4c5b-b35c-8e1e9f3085c2",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "56adff1c-c823-4cb3-87dd-0b1a40dc8ea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5531b26d-2793-4031-89e6-63c0decf5af7",
        "cursor": {
          "ref": "eebfd8f6-9a3f-48a6-9048-c4110b18dbd4",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "6c0d8c02-795a-473a-ab48-e053ba4eaa9f"
        },
        "item": {
          "id": "5531b26d-2793-4031-89e6-63c0decf5af7",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "448ed366-52ab-4a35-9eb4-3316e0804ce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b99773a9-1efd-46b1-a1f0-83f2a44995f2",
        "cursor": {
          "ref": "e076715c-cfc2-4618-82e2-ffad61a432e2",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a9518a3e-97d3-4f97-9740-4a7499812b15"
        },
        "item": {
          "id": "b99773a9-1efd-46b1-a1f0-83f2a44995f2",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "53ece84e-e820-4d66-bec4-0dd39c7117d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0284883b-02c4-4116-b794-47ef021729c7",
        "cursor": {
          "ref": "75b19f79-82d7-40b4-940b-30fb93238d70",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "45e306de-d551-4e93-9905-8aa8c6fb9a62"
        },
        "item": {
          "id": "0284883b-02c4-4116-b794-47ef021729c7",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b09099ad-ca1d-4042-b9a4-a68a57058e0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab91a903-697a-4442-909a-57b286495163",
        "cursor": {
          "ref": "db8185b9-f399-434b-bd99-345bdb0161ed",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "cdbaef07-093b-4187-b616-360ddd2b48dc"
        },
        "item": {
          "id": "ab91a903-697a-4442-909a-57b286495163",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "56e04c90-5f54-4020-a037-7cd831562730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "831ffd60-95ce-4276-ad6f-58f68c396382",
        "cursor": {
          "ref": "80df7ae7-6d66-4085-90c4-94b4ffc75be6",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "f6d31fef-4725-4813-bccd-90a91f4639ad"
        },
        "item": {
          "id": "831ffd60-95ce-4276-ad6f-58f68c396382",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "a8f2d861-0f1f-49e0-a600-a43885f4872d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46e7714c-a39a-4ea4-9f62-7764604598a6",
        "cursor": {
          "ref": "c92b9bc2-df5a-4f40-9917-e0fe7045bb94",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "906c7d6b-6d1f-4a3f-919f-4d0ce022fdcb"
        },
        "item": {
          "id": "46e7714c-a39a-4ea4-9f62-7764604598a6",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "ac06a468-05ed-4edc-97be-4138ddffa30a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c2547e-0cca-4e94-8175-c833f5bfa957",
        "cursor": {
          "ref": "7ea2814e-8a86-4c19-9117-bdd751fa6377",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "4868c552-fc6b-4dd8-aa97-a7fd941e5268"
        },
        "item": {
          "id": "92c2547e-0cca-4e94-8175-c833f5bfa957",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "8b48f7dc-7c1f-46f9-8ead-be1e957aa9b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bd8b26d-6603-4cd5-80ae-29a439d352db",
        "cursor": {
          "ref": "588c193a-7d72-4659-9cc5-b9bbb06d6649",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "afeccf01-564c-4590-b4d0-a015e522e980"
        },
        "item": {
          "id": "0bd8b26d-6603-4cd5-80ae-29a439d352db",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c50355dd-8332-4796-828e-40c0f3fde204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8630f0ed-677a-4937-9842-505be1863a62",
        "cursor": {
          "ref": "3e623638-0dba-4189-8c76-c6053c3b8aee",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "d47f94ad-c834-4f25-b327-c2fb8ed95cfd"
        },
        "item": {
          "id": "8630f0ed-677a-4937-9842-505be1863a62",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "3193543c-e767-465d-baa2-3bcef8cc0924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "727fbae8-18d5-4aa0-8d78-3f4063b24088",
        "cursor": {
          "ref": "ad4f2bb8-0f95-48cc-a278-2c6de599e237",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "0455a859-11c2-4234-9891-0676a323a007"
        },
        "item": {
          "id": "727fbae8-18d5-4aa0-8d78-3f4063b24088",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "dffc4497-aac2-4530-9b71-81eacc797141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47c90cf2-6fd8-4641-9b79-544954515c46",
        "cursor": {
          "ref": "060c170e-d84f-4f67-82f5-94e1f17ae960",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c2f07a47-56bc-49c9-9d57-4cce518b1837"
        },
        "item": {
          "id": "47c90cf2-6fd8-4641-9b79-544954515c46",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "9e819036-ac4c-4020-950c-f8f861796102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56586d14-b28c-44fa-875a-79e114992a51",
        "cursor": {
          "ref": "43afb063-53ab-4502-879a-e85c2aa49fe2",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "464d6b24-1b7f-476d-9321-aa25b18e7a5c"
        },
        "item": {
          "id": "56586d14-b28c-44fa-875a-79e114992a51",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b12078ee-d7e8-418f-b99f-287c1ae25260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73f0f88a-255f-43d1-b301-381b6263a1d7",
        "cursor": {
          "ref": "e857b3ae-a64c-4e09-b2db-0c2e35b58839",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "c5cf9038-fa24-49cf-a798-b9144634a205"
        },
        "item": {
          "id": "73f0f88a-255f-43d1-b301-381b6263a1d7",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "009018cb-4b05-4089-a25f-967070647f10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf933f3c-4a9a-4e9d-b426-cea0eb194625",
        "cursor": {
          "ref": "b6d056fb-20e9-4ae2-a514-1585f70aea7b",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "45a0fd07-563d-4481-8d3f-5246f8b986ef"
        },
        "item": {
          "id": "bf933f3c-4a9a-4e9d-b426-cea0eb194625",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "538a6e34-ecfe-4c49-93c7-5349a108239e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ced2b02-d65e-48b1-a881-8feef954e578",
        "cursor": {
          "ref": "08c60d52-50b1-45a0-a860-fb7b9bb28efd",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "db4e6c3d-f221-4cb6-b436-a6483e7505aa"
        },
        "item": {
          "id": "8ced2b02-d65e-48b1-a881-8feef954e578",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b4876715-9423-459b-8156-eaa5847afbfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9622f87c-3c78-4565-8386-39ed203c788d",
        "cursor": {
          "ref": "2a687cc0-e582-406f-bed9-a8046eb5e58e",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "3a6f4e6a-2d83-496f-ac3f-ff707b633719"
        },
        "item": {
          "id": "9622f87c-3c78-4565-8386-39ed203c788d",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "92aa9843-70d0-4d4a-9fbc-cd9dafe07290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b79e532-de05-4878-ba25-0d57c392beaf",
        "cursor": {
          "ref": "4a830c88-b4ba-4f6e-9a92-f5afd17c9540",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "187b8915-b6e9-48f0-977f-1f8aa0539f64"
        },
        "item": {
          "id": "5b79e532-de05-4878-ba25-0d57c392beaf",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "232ebdca-a757-4a01-9b04-69ab0a50aa73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fea7b17e-5293-42c1-8551-7ff3523b877d",
        "cursor": {
          "ref": "c209ab9f-9af5-422f-a6cc-7051d14cd756",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "cf0a0cea-d22c-4964-962e-da952c41d764"
        },
        "item": {
          "id": "fea7b17e-5293-42c1-8551-7ff3523b877d",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "5bb9da3b-cb30-40c9-a075-468d33d6773e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f14b1ca2-a985-4d9e-bd0c-1ae2f7f20fa1",
        "cursor": {
          "ref": "1d904eda-9fc2-46de-852d-b61b73c0ddcf",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "df9be41b-cc3c-45a6-b1aa-0a160ebee4d8"
        },
        "item": {
          "id": "f14b1ca2-a985-4d9e-bd0c-1ae2f7f20fa1",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "b01de978-b372-4ffa-9997-2b8fc172f22c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcab018d-9b66-4f3e-9c8d-e664700ab0a5",
        "cursor": {
          "ref": "6c045885-d2b1-4b57-9949-449fcce5e78a",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "b5b748ae-9b0c-450c-a6d5-fa46e5dca544"
        },
        "item": {
          "id": "dcab018d-9b66-4f3e-9c8d-e664700ab0a5",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "656257b5-f3a3-49b4-bc5f-b01302bc5a3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9273910-5108-4d7e-bdd4-6d21cd61333d",
        "cursor": {
          "ref": "7366581c-977a-49a1-963f-24676ca1e5c4",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "ce206207-46fd-43c1-a9d7-5d785dea8c21"
        },
        "item": {
          "id": "e9273910-5108-4d7e-bdd4-6d21cd61333d",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "eb07027e-578d-46c0-ae42-cdd0e1bf11f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26620346-dabb-492b-bf0b-c11c99b051e0",
        "cursor": {
          "ref": "7ea48255-d208-49a8-ba74-8b3e87a302b8",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "3a6e9333-9cbe-459b-9be9-32557084d752"
        },
        "item": {
          "id": "26620346-dabb-492b-bf0b-c11c99b051e0",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "a18db9ac-299e-4810-9ece-b868bee8fe7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13b79192-7f77-4311-aa2a-3bf63df55e2c",
        "cursor": {
          "ref": "a693d99c-c7a7-4dff-bd2f-ac90db93643b",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "a8a75ae5-d806-4423-900b-dab9f4defffe"
        },
        "item": {
          "id": "13b79192-7f77-4311-aa2a-3bf63df55e2c",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "cf1011d2-2ef9-4c7f-b07b-131ff664292b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2da8f266-7ae2-4a39-839e-b27566d16f09",
        "cursor": {
          "ref": "2db548eb-6df5-4cd2-81eb-5eb46cca7db9",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "2ae5d0ff-fbed-4048-930b-109b33b41155"
        },
        "item": {
          "id": "2da8f266-7ae2-4a39-839e-b27566d16f09",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "0124f862-90ee-411d-8c18-8c7f048f7768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4432449b-3274-446d-9029-db9c70f4efb3",
        "cursor": {
          "ref": "868627a8-2cfe-4b92-98b6-4c5d98a87271",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "52acbdfd-3729-48cb-9966-021d49c1a74e"
        },
        "item": {
          "id": "4432449b-3274-446d-9029-db9c70f4efb3",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "148fa30b-7c13-432d-8e1c-d93d7f40c775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "361d8e5b-891b-4417-8652-1ac92f1b64a6",
        "cursor": {
          "ref": "f87305e4-a4a1-451e-8331-73f1f8262728",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "b6139c2f-9033-4b8e-800d-783f971a6c46"
        },
        "item": {
          "id": "361d8e5b-891b-4417-8652-1ac92f1b64a6",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "c1f5bede-7e59-4fea-93f8-3841396e4bf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14af8db5-1468-4635-a9df-a2d13afdb594",
        "cursor": {
          "ref": "e2de9b41-2dd2-4e26-b8c6-7cd68db9e106",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "a5c66a40-922e-43ef-9fba-79f99708c9b9"
        },
        "item": {
          "id": "14af8db5-1468-4635-a9df-a2d13afdb594",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e6dba2da-6fc3-4b99-bab8-d254486f3204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c865db-6a5d-4d5e-9795-ab3046e2285c",
        "cursor": {
          "ref": "a3c8f055-c54b-48a1-8ce4-6517e248950c",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "a6bf0b2f-7936-498f-af8d-5e839135ceac"
        },
        "item": {
          "id": "d2c865db-6a5d-4d5e-9795-ab3046e2285c",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "6cb16821-6c5c-4b4b-8a93-8aa9adc7140e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22437686-a717-46c5-bf80-594d0f9b68f1",
        "cursor": {
          "ref": "771aa895-4a70-49ce-b0e5-db355c2e7864",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "5df7d8d7-5ff1-4bdc-a8f5-16e8f02d8d39"
        },
        "item": {
          "id": "22437686-a717-46c5-bf80-594d0f9b68f1",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "4636f578-3997-42ff-a60b-dc93dbec5523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6e2779e-fb3b-450f-9e1c-4a0442a5cf44",
        "cursor": {
          "ref": "fa64dbe9-a24b-434b-b465-3c50d119c637",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "d3cb943a-5533-4732-9141-e27d9c5e7a3d"
        },
        "item": {
          "id": "e6e2779e-fb3b-450f-9e1c-4a0442a5cf44",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "72480d2e-5d49-40c1-a628-4af8193f5c25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e6c543b-6cba-42aa-8328-671a12a55175",
        "cursor": {
          "ref": "3b5c6da2-996c-4c1d-96b6-97918ae0c479",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "db95357d-b23f-4c80-b6f1-58a93463db86"
        },
        "item": {
          "id": "5e6c543b-6cba-42aa-8328-671a12a55175",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "10b3975d-3e63-4340-827d-50a64af512b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9e4f412-a655-4f8b-8774-15449b026865",
        "cursor": {
          "ref": "336e9d8c-0b3f-424b-852d-545a517db745",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "b45bdfe3-f676-43ba-a283-0eb45842c9bd"
        },
        "item": {
          "id": "a9e4f412-a655-4f8b-8774-15449b026865",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "bdf3220b-618d-47ae-99c9-2eff9418b04c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f3fa2d6-7e00-4bc1-96aa-7bd5c9176d0c",
        "cursor": {
          "ref": "a71cff71-d65c-481a-9aba-bed51942e4ca",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "0a1d0c0c-c94b-49b7-ae6a-100cd662b82f"
        },
        "item": {
          "id": "3f3fa2d6-7e00-4bc1-96aa-7bd5c9176d0c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e1faead3-68e3-4ec9-9f9f-563de779a6a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6947e77-05f5-4834-86ca-f4ed1312610c",
        "cursor": {
          "ref": "2501c738-0f27-4c30-ac1c-6741203efaa9",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "cf411564-a6b8-4e54-b677-71974ac1cbd1"
        },
        "item": {
          "id": "b6947e77-05f5-4834-86ca-f4ed1312610c",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "0b694902-36e1-4d8d-81eb-2d316d85d91d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f4f1693-edc8-4e24-b34a-e99b9ba3e767",
        "cursor": {
          "ref": "1be58097-3ca0-4017-9b8f-a2278939d6f8",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "43f3d02b-c097-4675-b493-81aedb401bbb"
        },
        "item": {
          "id": "1f4f1693-edc8-4e24-b34a-e99b9ba3e767",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "0ab08751-1e3a-4e1a-81f7-1ef33844e646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "772fc80e-64b3-49f8-8f09-66b16c8ba5ac",
        "cursor": {
          "ref": "3c79c0f0-5226-4e15-978d-5197467dd93e",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "cb43ccb2-5e8a-49d9-9c58-338b5ce6b246"
        },
        "item": {
          "id": "772fc80e-64b3-49f8-8f09-66b16c8ba5ac",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "73b7e944-52d5-4177-9172-947394ab2dc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "995ad350-2829-4485-a877-b4d91fcf5054",
        "cursor": {
          "ref": "289c67ba-3932-49ed-90cf-1bf085730c16",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "13b1ee88-aeaf-4435-b400-5e4f707e1954"
        },
        "item": {
          "id": "995ad350-2829-4485-a877-b4d91fcf5054",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "b97c54b7-4d14-4ad0-883e-38461d25be03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c85dbed0-d34c-414b-a9dd-4d5a8e4001ad",
        "cursor": {
          "ref": "af928a95-0967-4cbc-8031-aa354216c41b",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "91c87518-ac75-47dc-bec3-8dc2f65ada51"
        },
        "item": {
          "id": "c85dbed0-d34c-414b-a9dd-4d5a8e4001ad",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "60d8a319-7974-4941-a9d5-002e565e0941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fadb98e-83ac-44c3-8161-3a355f8ba62c",
        "cursor": {
          "ref": "4ee17436-9ad4-43b7-b220-4598ed4ccf02",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "60b46873-fa41-4a4e-8e33-fbb72ac407d1"
        },
        "item": {
          "id": "2fadb98e-83ac-44c3-8161-3a355f8ba62c",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "ce2508e2-fefc-4046-8bf5-496a942a97fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e8c7c5b-669c-4048-b8a9-1410e867f26e",
        "cursor": {
          "ref": "8cfe2d3b-120e-4d48-a9d7-6cfe7a47dede",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "d1843023-75c8-4455-8e15-2785816501b4"
        },
        "item": {
          "id": "9e8c7c5b-669c-4048-b8a9-1410e867f26e",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "b8067a1f-5a44-49fa-a5a0-acf74f32c769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a7cb8a6-db60-4e7a-ae84-07f7da7c0902",
        "cursor": {
          "ref": "bc51e5a8-a536-4c8e-bf49-87b036d830b3",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "b3c86cdf-20bf-4c07-9886-32451e9d66f9"
        },
        "item": {
          "id": "2a7cb8a6-db60-4e7a-ae84-07f7da7c0902",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "089e38dc-674f-42ae-9b48-d86e6416bc46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24141f66-e453-44fc-8ab7-de4fec5e4671",
        "cursor": {
          "ref": "cc5985cf-5698-405a-9d48-59e4f32b4765",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "943b1ff6-cb8f-452c-9f36-b9c56b0ae864"
        },
        "item": {
          "id": "24141f66-e453-44fc-8ab7-de4fec5e4671",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "7090e8b6-7f2a-4186-9dbd-68e37b7b9c5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54e51bb5-d9e1-424e-bbb3-3ee93e790d40",
        "cursor": {
          "ref": "331c9e42-c7b5-4843-9730-3a4c0e046ec0",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "12a2175e-2d10-48d2-8485-3f992f4741cf"
        },
        "item": {
          "id": "54e51bb5-d9e1-424e-bbb3-3ee93e790d40",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "20299b48-7502-411c-a620-ed80c7ea3cbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc9ea6de-3f3b-4f0b-8a09-2b2e66b40c8b",
        "cursor": {
          "ref": "518140ef-4f20-4d62-aaf4-7c82442de711",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "1d033196-dff4-491b-a3ff-2e6765942315"
        },
        "item": {
          "id": "dc9ea6de-3f3b-4f0b-8a09-2b2e66b40c8b",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "87544777-e146-4bb1-9719-4833e0631777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b710c836-0786-4084-9bcf-69913fff784f",
        "cursor": {
          "ref": "beb3c994-7ae6-4410-8195-08f0f5143dd4",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "a0113e30-061d-4a9a-90f4-e8792a0f02e5"
        },
        "item": {
          "id": "b710c836-0786-4084-9bcf-69913fff784f",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "1c618ff4-8410-4450-92fe-2bac3efd560d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58d9cba4-85ea-428d-90fd-76d1bd7a1ce0",
        "cursor": {
          "ref": "7a1dd011-af53-4aef-b383-37bd5d00f174",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "32073cd3-fad2-420f-b441-b7ac765cff22"
        },
        "item": {
          "id": "58d9cba4-85ea-428d-90fd-76d1bd7a1ce0",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "1d8d57df-5dc9-4ab0-b426-c1e4c4306dc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aafd4823-5f5e-4088-93ae-5c383f2edd1d",
        "cursor": {
          "ref": "0f59774c-9a1d-42ee-b73f-4aebba3c1c00",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "89ff74c9-ce27-4184-9400-cd3af78fd302"
        },
        "item": {
          "id": "aafd4823-5f5e-4088-93ae-5c383f2edd1d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "4fabc37a-104d-4c27-8738-1ea3c0ab97f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d12dc47d-a47e-41aa-81e4-7788fe8dc2f3",
        "cursor": {
          "ref": "1e5e95a4-a910-49df-b720-1f840de1beb9",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "d94fbd10-6109-427f-966c-29e5b2b8943b"
        },
        "item": {
          "id": "d12dc47d-a47e-41aa-81e4-7788fe8dc2f3",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "692b5643-bce1-4781-abda-c9b6a6a3e7cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc9583d5-d89d-4225-91ca-43ae043869d6",
        "cursor": {
          "ref": "1f0fb102-9627-4f8f-9d41-8c4e68abe2c4",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "7f00ff24-6fb1-4af3-834a-5d6f16f2e2e7"
        },
        "item": {
          "id": "dc9583d5-d89d-4225-91ca-43ae043869d6",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "912f9544-2f2e-4102-9fab-b661b82272c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7bf5f64-e7e8-465f-ac09-1e45805b0f49",
        "cursor": {
          "ref": "ccb8905b-2c88-4040-a22c-a84efd39e4ac",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "5d518c0f-f716-45d4-9eaf-9392db359eee"
        },
        "item": {
          "id": "e7bf5f64-e7e8-465f-ac09-1e45805b0f49",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "ff04d783-b9c9-4619-ae74-23150214de25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "353b70e9-38fc-4283-af9c-f7dedea2fef3",
        "cursor": {
          "ref": "6581ac18-7763-471e-bf09-990db48f8d04",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "504c35ba-514c-41e3-80c9-e41a1caf30a4"
        },
        "item": {
          "id": "353b70e9-38fc-4283-af9c-f7dedea2fef3",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "1b13a7ec-8e08-4f82-8497-25c19e95f806",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40877bb8-6e71-4f5b-9fac-b46a33b548eb",
        "cursor": {
          "ref": "1db775c2-96cc-43e3-adf0-31bf3d46b7d3",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "34e633d5-3061-4e7a-b451-f5228fac489e"
        },
        "item": {
          "id": "40877bb8-6e71-4f5b-9fac-b46a33b548eb",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "140902ec-64f1-4dad-8529-ad01078a5585",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "91a9a1b7-66c3-477e-8472-8880207c2680",
        "cursor": {
          "ref": "9b686293-af2f-4b62-8014-1d460b83c3a1",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "11572b91-3f7b-4791-9376-1c6175eaf9bd"
        },
        "item": {
          "id": "91a9a1b7-66c3-477e-8472-8880207c2680",
          "name": "credentials_verify"
        },
        "response": {
          "id": "a84cdbf2-6864-4cf8-8c4c-c18eacebe933",
          "status": "OK",
          "code": 200,
          "responseTime": 22,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "656cee8a-dea1-4f59-a18b-1ce78975d42c",
        "cursor": {
          "ref": "a77160c8-2c6e-4d8e-b521-b52ad86253b3",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "1bc3aee4-0320-4930-bab2-2ad6f92c8474"
        },
        "item": {
          "id": "656cee8a-dea1-4f59-a18b-1ce78975d42c",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "014ceba2-0c2a-4321-8d4e-fa62c4fb98d4",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddc7d9f1-d6f0-48b8-a7c7-e0b795b2e738",
        "cursor": {
          "ref": "84536dbb-913c-42a4-a15b-4578a7599113",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "e52c1c37-e2d3-4dc1-809d-8b021490d6c5"
        },
        "item": {
          "id": "ddc7d9f1-d6f0-48b8-a7c7-e0b795b2e738",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a947c653-05d5-4cee-9a66-672562bce52a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddc7d9f1-d6f0-48b8-a7c7-e0b795b2e738",
        "cursor": {
          "ref": "84536dbb-913c-42a4-a15b-4578a7599113",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "e52c1c37-e2d3-4dc1-809d-8b021490d6c5"
        },
        "item": {
          "id": "ddc7d9f1-d6f0-48b8-a7c7-e0b795b2e738",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a947c653-05d5-4cee-9a66-672562bce52a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27556c73-3e94-47d5-876b-6b0f6c173f2e",
        "cursor": {
          "ref": "463dd3f6-08f6-412f-a53d-5c0c584d93fc",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "1d7c992c-8940-4147-b268-a2e66241c2d0"
        },
        "item": {
          "id": "27556c73-3e94-47d5-876b-6b0f6c173f2e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "a7174b18-cdd1-4fc6-98e9-e05c6e0a3c2a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19e72df8-80a6-47ae-aab3-2b93952ee9d6",
        "cursor": {
          "ref": "6c254475-2d0c-45c8-b5b6-a36f485b317e",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "51c6384a-8232-44e0-a023-ed566243dd6f"
        },
        "item": {
          "id": "19e72df8-80a6-47ae-aab3-2b93952ee9d6",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "66728eea-d8ce-4478-9eec-7ed57dc9322a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}